"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["98556"],{755075:function(e,n,s){s.r(n),s.d(n,{default:()=>l});var r=s(552676),a=s(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",h3:"h3",p:"p",strong:"strong",h4:"h4",pre:"pre",code:"code",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"31云数据库快速上手",children:["31.云数据库快速上手",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31云数据库快速上手",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"52-云数据库快速上手",children:["5.2 云数据库快速上手",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#52-云数据库快速上手",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"521-权限的设置",children:["5.2.1 权限的设置",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#521-权限的设置",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["在集合创建之后，我们",(0,r.jsx)(n.strong,{children:"首先需要"}),"在云开发控制台-数据库-集合的权限设置标签对数据库进行",(0,r.jsx)(n.strong,{children:"权限设置"}),"。数据库的权限分为小程序端和服务端（云函数、云开发控制台的高级操作）。服务端拥有读写所有数据的读写权限，所以这里的权限设置只是在设置小程序端的用户对数据库的操作权限。"]}),"\n",(0,r.jsxs)(n.h4,{id:"1简易权限控制与安全规则",children:["1、简易权限控制与安全规则",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1简易权限控制与安全规则",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["权限控制我们可以采用简易权限控制或自定义权限（也就是安全规则），",(0,r.jsx)(n.strong,{children:"建议开发者用安全规则取代简易的权限控制"}),"，也就是我们在配置集合的权限时，不再选择简易的权限控制，而是建议使用",(0,r.jsx)(n.strong,{children:"自定义权限"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:["使用简易权限配置和使用安全规则，在用法上有比较大的差异，这个在后面的学习里我们都会详细说明。要使用自定义权限来取代简易的权限控制，我们需要了解",(0,r.jsx)(n.strong,{children:"4个简易的权限控制"}),"所表示的意思，以及安全规则应该如何一一取代它们，填写与之对应的json规则即可。"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"所有用户可读，仅创建者可读写"})}),"\n",(0,r.jsxs)(n.p,{children:["比如用户发的帖子、评论、文章，这里的",(0,r.jsx)(n.strong,{children:"创建者是指小程序端的用户"}),"，也就是",(0,r.jsx)(n.strong,{children:"存储UGC"}),"（用户产生内容）的集合要设置为这个权限；"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "read": true,\n  "write": "doc._openid == auth.openid"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"仅创建者可读写"})}),"\n",(0,r.jsxs)(n.p,{children:["比如私密相册，用户的个人信息、订单，也就是只能",(0,r.jsx)(n.strong,{children:"用户自己读与写"}),"，",(0,r.jsx)(n.strong,{children:"其他人不可读写"}),"的数据集合；"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "read": "doc._openid == auth.openid",\n  "write": "doc._openid == auth.openid"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"所有人可读"})}),"\n",(0,r.jsxs)(n.p,{children:["比如资讯文章、商品信息、产品数据等你想让",(0,r.jsx)(n.strong,{children:"所有人可以看到，但是不能修改"}),"的内容；"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "read": true,\n  "write": false\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"所有用户不可读写"})}),"\n",(0,r.jsxs)(n.p,{children:["如后台用的不暴露的数据，",(0,r.jsx)(n.strong,{children:"只能在云开发控制台或云函数进行读写"}),"；"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  "read": false,\n  "write": false\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"2服务端获取不了用户登录态",children:["2、服务端获取不了用户登录态",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2服务端获取不了用户登录态",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"注意，这里的创建者指的不是管理者，也不是开发者（或者你本人），而是用户里的一个角色。云开发控制台是无法获取用户的登录态的，所以如果集合里的数据是通过云开发控制台创建或导入的，那么就没有用户是这些数据的创建者。"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"管理者指的是可以登录控制台和使用云函数的虚拟角色。你如果只是在小程序端请求数据库，你的角色就是用户；如果作为用户的你在小程序端创建了记录，那么你就这条记录的创建者；只有你通过控制台和云函数进行操作时，此时的你才能称之为管理者。你到底是什么角色，取决于你操作数据库的方式，不要混淆。"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["而在云开发控制台新建的集合，默认的权限为“",(0,r.jsx)(n.strong,{children:"仅创建者可读写"}),"”，而这个权限设置会限制小程序端用户对数据库的调用，如果你不把集合的权限修改为“",(0,r.jsx)(n.strong,{children:"所有用户可读，仅创建者可读写"}),"”，不然在云函数服务端可以调用（权限设置对服务端无效），但是在小程序端是调用不了的哦，在小程序端查询时明明数据库里有数据，但是返回的却是空数组。"]}),"\n",(0,r.jsx)(n.p,{children:"那如果数据是在小程序端创建的，数据库又是怎么区分这条数据是由哪个用户创建的呢？"}),"\n",(0,r.jsxs)(n.h4,{id:"3_openid与集合权限",children:["3、_openid与集合权限",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3_openid与集合权限",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["使用云开发控制台新建一个集合，比如user集合，此时user集合默认的权限为“",(0,r.jsx)(n.strong,{children:"仅创建者可读写"}),"”。我们再在开发者工具的Console里输入以下代码来新建一个简单的记录:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"wx.cloud.database().collection('user').add({\n  data:{\n    name:\"李东bbsky\"\n    }\n  }).then(res=>console.log(res))\n"})}),"\n",(0,r.jsx)(n.p,{children:"我们在云开发控制台可以看到这条记录，发现和导入的数据或使用高级操作不同的是，在小程序端新增记录，都会自动添加一个_openid的字段，它的值就是用户的openid，而这个用户才是这个记录的创建者。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  _id:"5efaaa445ee987d2000069bf6dbec068",\n  _openid:"oUL-m5FuRmuVmxvbYOGuXbuEDsn8",\n  name:"李东bbsky"\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"522-小程序端调用数据库",children:["5.2.2 小程序端调用数据库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#522-小程序端调用数据库",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在小程序端调用数据库的方式很简单，我们可以把下面的代码写到一个事件处理函数里，然后点击组件触发事件处理函数来调用；也可以直接写到页面的生命周期函数里面；还可以把它写到app.js小程序的生命周期函数里面。"}),"\n",(0,r.jsxs)(n.p,{children:["使用开发者工具，新建一个dbtest的页面，然后再在dbtest.js的页面生命周期函数OnLoad里输入以下代码，先使用",(0,r.jsx)(n.code,{children:"wx.cloud.database()"})," 获取数据库的引用（相当于连接数据库）;再使用",(0,r.jsx)(n.code,{children:"db.collection()"}),"获取集合的引用；再通过Collection.get来获取集合里的记录:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const db = wx.cloud.database() //申明一个变量，简化后面的写法\ndb.collection('zhihu_daily')\n  .get()\n  .then(res => {\n    console.log(res.data)\n  })\n  .catch(err => {\n    console.error(err)\n  })\n"})}),"\n",(0,r.jsx)(n.p,{children:"编译之后，就能在控制台看到调用的20条数据库记录了，res.data是一个数组。注意，小程序端最多只能get 20条记录。"}),"\n",(0,r.jsxs)(n.h3,{id:"523云函数端调用数据库",children:["5.2.3、云函数端调用数据库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#523云函数端调用数据库",children:"#"})]}),"\n",(0,r.jsxs)(n.h4,{id:"1云函数端调用数据库",children:["1、云函数端调用数据库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1云函数端调用数据库",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["使用云函数也可以调用数据库，使用开发者工具",(0,r.jsx)(n.strong,{children:"右键点击"}),"云函数根目录也就是cloudfunctions文件夹，选择",(0,r.jsx)(n.strong,{children:"新建Node.js云函数"}),"，云函数的名称命名为zhihu_daily，然后打开index.js，输入以下代码："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV\n})\nconst db = cloud.database()  //注意这里不是wx.cloud.database()\nexports.main = async (event, context) => {\n  const result = await db.collection('zhihu_daily')\n    .get()\n  return result\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["然后右键点击index.js，选择",(0,r.jsx)(n.strong,{children:"云函数增量上传：更新文件"}),"，我们既可以使用云函数的本地调试（要本地调试需要使用npm install安装wx-server-sdk依赖），也可以使用",(0,r.jsx)(n.strong,{children:"云端测试"}),"来了解云函数调用数据库的情况。"]}),"\n",(0,r.jsxs)(n.h4,{id:"2将云函数获取到的数据返回到小程序端",children:["2、将云函数获取到的数据返回到小程序端",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2将云函数获取到的数据返回到小程序端",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"使用开发者工具在login.wxml里输入以下代码，也就是我们通用点击按钮触发事件处理函数："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<button bindtap="getDaily">获取日报数据</button>\n'})}),"\n",(0,r.jsx)(n.p,{children:"再在事件处理函数里调用云函数，在login.js里输入getDaily事件处理函数来调用zhihu_daily云函数："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"getDaily() {\n  wx.cloud.callFunction({\n    name: 'zhihu_daily',\n    success: res => {\n      console.log(\"云函数返回的数据\",res.result.data)\n    },\n    fail: err => {\n      console.error('云函数调用失败：', err)\n    }\n  })\n},\n"})}),"\n",(0,r.jsxs)(n.p,{children:["在模拟器里点击",(0,r.jsx)(n.strong,{children:"获取日报数据"}),"的button按钮，就能在控制台里看到云函数返回的查询到的结果，大家可以通过setData的方式将查询的结果渲染到小程序页面，这里就不介绍啦。"]}),"\n",(0,r.jsxs)(n.h3,{id:"524-获取数据的写法",children:["5.2.4 获取数据的写法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#524-获取数据的写法",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"怎么将从数据库里获取到的数据赋值给一个变量呢？这里有几个写法可以参考一下，比如常见的有："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const db = wx.cloud.database() \ndb.collection('zhihu_daily')\n  .get()\n  .then(res => {\n    console.log(res.data)  //数据在res.data里\n    this.setData({\n      daily:res.data   //在小程序端将数据赋值给Page里的data对象的daily\n    })\n    const daily = res.data //在回调里将数据赋值给变量\n  })\n  .catch(err => {\n    console.error(err)\n  })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["我们还可以直接将数据赋值给一个变量，值得注意的是如果不使用async/await，因为异步问题，result的值返回的会是一个Promise对象，也就是说如果你要将数据库请求的结果赋值给一个变量，要么使用",(0,r.jsx)(n.code,{children:"then...catch"}),"这种回调的方式，要么采用同步的方式，建议用async/await："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const db = wx.cloud.database() \nasync getData(){\n  //注意，因为数据是在get请求对象的data里，所以写法如下\n  const daily = (await db.collection('zhihu_daily').get()).data\n  //我们也可以分两次写，注意await 是在async函数里\n  const result = await db.collection('zhihu_daily').get()\n  const daily = result.data\n  console.log(daily)\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["尽管我们还可以使用Callback的形式，但是Callback只支持小程序端，不支持云函数端，为了统一，建议不要使用Callback的写法，而使用",(0,r.jsx)(n.code,{children:"then...catch"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"//数据库查询请求get的Callback写法\n.get({\n  success: console.log,\n  fail: console.error\n})\n//相应的链式写法如下：\n.get()\n.then(res=>{console.log(res)})\n.catch(err=>{console.log(err)})\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}let l=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F31.%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.md"]={toc:[{text:"5.2 云数据库快速上手",id:"52-云数据库快速上手",depth:2},{text:"5.2.1 权限的设置",id:"521-权限的设置",depth:3},{text:"1、简易权限控制与安全规则",id:"1简易权限控制与安全规则",depth:4},{text:"2、服务端获取不了用户登录态",id:"2服务端获取不了用户登录态",depth:4},{text:"3、_openid与集合权限",id:"3_openid与集合权限",depth:4},{text:"5.2.2 小程序端调用数据库",id:"522-小程序端调用数据库",depth:3},{text:"5.2.3、云函数端调用数据库",id:"523云函数端调用数据库",depth:3},{text:"1、云函数端调用数据库",id:"1云函数端调用数据库",depth:4},{text:"2、将云函数获取到的数据返回到小程序端",id:"2将云函数获取到的数据返回到小程序端",depth:4},{text:"5.2.4 获取数据的写法",id:"524-获取数据的写法",depth:3}],title:"31.云数据库快速上手",headingTitle:"31.云数据库快速上手",frontmatter:{}}}}]);