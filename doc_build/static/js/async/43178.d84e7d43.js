"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43178"],{242884:function(e,n,d){d.r(n),d.d(n,{default:()=>i});var h=d(552676),r=d(740453);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h3:"h3",code:"code",h2:"h2"},(0,r.ah)(),e.components);return(0,h.jsxs)(h.Fragment,{children:[(0,h.jsxs)(n.h1,{id:"2服务器端组件框架的选择与介绍",children:["2服务器端组件框架的选择与介绍",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2服务器端组件框架的选择与介绍",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"本小册的目标在于搭建一款简洁、高效，并能快速部署及上手的 App 后端服务器。"}),"\n",(0,h.jsx)(n.p,{children:"在编程语言的选择上，我们选择了 Python 3.6.2，这也是本小册对读者的基本要求，从 HTTP 服务器，到数据库操作及逻辑分析处理，将全部使用 Python 语言。"}),"\n",(0,h.jsx)(n.p,{children:"前两节的介绍中讲到，我们使用 HTTP 协议来定义 App 客户端与服务器端之间的通信。我们不可能自己写一个 HTTP 服务器来响应客户端的 HTTP 请求，所以在 App 服务器端开发中，我们工作的重中之重，就是要寻找到一款合适的、支持高并发、易扩展并真正能阐释代码简洁美的框架。在调研了众多的 HTTP 服务器框架之后（如 Django、Pyramid），笔者最终选择了 Tornado。从多年前第一次遇到 Tornado 开始，笔者就爱上了它：简洁高效，易扩展，高并发。著名的知乎也是建立在 Tornado 之上。好好利用这把利剑，必定能在平时的生活工作中，助你更上一层楼。"}),"\n",(0,h.jsx)(n.p,{children:"除了编程语言和 HTTP 服务器框架外，我们还要选择操作系统及数据库。本小册中将使用 CentOS 7.2 x64 作为操作系统，MySQL 作为数据库，操作数据库使用 ORM（Object Relational Mapping）的方式。服务器端的整体框架如下图所示。"}),"\n",(0,h.jsx)(n.p,{children:(0,h.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/2/1628374240e888c0?w=646&h=380&f=png&s=19648",alt:""})}),"\n",(0,h.jsxs)(n.h3,{id:"centos",children:["CentOS",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#centos",children:"#"})]}),"\n",(0,h.jsxs)(n.p,{children:["CentOS 是大名鼎鼎的 Red Hat 的开源版本，由 Red Hat 公司维护测试，并在 Linux 内核稳定分支上进行开发，系统相对稳定。 Red Hat 一早就在中国布局，市面上书籍众多，网上资料丰富，很多公司，第一版优先支持的版本也是 CentOS，这也是我们选择 CentOS 的原因，当出现疑难杂症时，能第一时间找到解决方案。在本次服务器端开发中，我们并不需要精通 CentOS，只需要会简单地使用 Linux 的命令即可，如 ",(0,h.jsx)(n.code,{children:"yum install <module name>"}),"。"]}),"\n",(0,h.jsxs)(n.h3,{id:"mysql",children:["MySQL",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#mysql",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"MySQL 是最流行的关系型数据库管理系统，在 Web 应用方面是最好的关系型数据库管理系统软件之一， 也是最早一批被国内用户熟知的数据库软件之一。 同样，当出现疑难杂症时，丰富的图书及网络资源能帮助我们尽快找到解决方案。"}),"\n",(0,h.jsxs)(n.h3,{id:"sqlalchemy",children:["SQLAlchemy",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sqlalchemy",children:"#"})]}),"\n",(0,h.jsxs)(n.p,{children:["在操作数据（如 MySQL）的过程中，我们可以使用原生的 MySQL 语句（如",(0,h.jsx)(n.code,{children:"insert"}),"、",(0,h.jsx)(n.code,{children:"update"}),"、",(0,h.jsx)(n.code,{children:"delete"}),"），也可以使用 ORM（Object Relational Mapping）的方式。简单来说，可以使用第三方软件来操作数据库，使用第三方的好处是很多底层 MySQL 的命令被封装成简单的API暴露给用户，并提供强大的整合功能。当然坏处也有，如相对于原生命令效率低些，学习成本高些。而选择 SQLAlchemy 的原因是其使用 Pythonic 的代码风格，在本小册中不会给读者增加太多学习成本，另外，SQLAlchemy 全面的 API 参考文档也是我们选择它的原因之一。"]}),"\n",(0,h.jsxs)(n.h3,{id:"tornado",children:["Tornado",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tornado",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"Tornado 作为我们选用的 HTTP 服务器框架，在后续的章节中，我们将作详尽的诠释。"}),"\n",(0,h.jsxs)(n.h2,{id:"小结",children:["小结",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"本小节简单介绍了整个服务器端的组件框架，从下一节开始，我们将进入环境搭建并开始真正的代码编写。"})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,h.jsx)(n,{...e,children:(0,h.jsx)(a,{...e})}):a(e)}let i=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Python%20%E8%BD%BB%E6%9D%BE%E8%87%AA%E5%BB%BA%20App%20%E6%9C%8D%E5%8A%A1%E5%99%A8%2F2%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%BB%84%E4%BB%B6%E6%A1%86%E6%9E%B6%E7%9A%84%E9%80%89%E6%8B%A9%E4%B8%8E%E4%BB%8B%E7%BB%8D.md"]={toc:[{text:"CentOS",id:"centos",depth:3},{text:"MySQL",id:"mysql",depth:3},{text:"SQLAlchemy",id:"sqlalchemy",depth:3},{text:"Tornado",id:"tornado",depth:3},{text:"小结",id:"小结",depth:2}],title:"2服务器端组件框架的选择与介绍",headingTitle:"2服务器端组件框架的选择与介绍",frontmatter:{}}}}]);