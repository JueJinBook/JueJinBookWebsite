"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["57398"],{312398:function(n,e,s){s.r(e),s.d(e,{default:()=>i});var r=s(552676),c=s(740453);function h(n){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",img:"img",pre:"pre",blockquote:"blockquote",strong:"strong",h3:"h3",hr:"hr"},(0,c.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"6进阶篇-03实现-npm-script-命令自动补全",children:["6进阶篇 03：实现 npm script 命令自动补全",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#6进阶篇-03实现-npm-script-命令自动补全",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"当 npm script 里面积累的命令越来越多时，重度命令行用户肯定会好奇，能不能实现类似 bash、zsh 里面的命令自动补全？答案是肯定的，下面来逐一介绍。"}),"\n",(0,r.jsxs)(e.h2,{id:"使用-npm-run-直接列出",children:["使用 npm run 直接列出",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-npm-run-直接列出",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"前面章节有过介绍，不带任何参数运行 npm run 能列出 scripts 对象中定义的所有命令，再结合管道操作符、less 命令（这里的 less 不是 css 领域的 less，而是 linux 里面的工具），即使 scripts 子命令很多我们也能移动自如。"}),"\n",(0,r.jsxs)(e.p,{children:["比如，我们在项目中执行：",(0,r.jsx)(e.code,{children:"npm run | less"}),"，得到如下结果，注意截图左下方的红框，按空格能翻页："]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcdae64f00ea?w=1094&h=715&f=png&s=101307",alt:""})}),"\n",(0,r.jsxs)(e.p,{children:["在这个结果里面，我们可以进行类似于 Vim 中的搜索，先按 ",(0,r.jsx)(e.code,{children:"/"})," 进入搜索模式，然后输入 ",(0,r.jsx)(e.code,{children:"markdown"}),"，搜索结果如下图："]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcdd6b736441?w=1100&h=399&f=png&s=59941",alt:""})}),"\n",(0,r.jsxs)(e.h2,{id:"把-npm-completion-集成到-shell-中",children:["把 npm completion 集成到 shell 中",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#把-npm-completion-集成到-shell-中",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:["npm 自身提供了自动完成工具 ",(0,r.jsx)(e.a,{href:"https://docs.npmjs.com/cli/completion",target:"_blank",rel:"noopener noreferrer",children:"completion"}),"，将其集成到 ",(0,r.jsx)(e.a,{href:"https://www.gnu.org/software/bash",target:"_blank",rel:"noopener noreferrer",children:"bash"})," 或者 ",(0,r.jsx)(e.a,{href:"https://github.com/robbyrussell/oh-my-zsh",target:"_blank",rel:"noopener noreferrer",children:"zsh"})," 里也非常容易（顺便说一句，早期我是 bash 的忠实用户，两年前切换到 zsh，就再也没回头）。"]}),"\n",(0,r.jsx)(e.p,{children:"官方文档里面的集成方法如下："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npm completion >> ~/.bashrc\nnpm completion >> ~/.zshrc\n"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"TIP#10"}),"：如果你好奇上面的命令究竟做了什么，尝试直接运行 ",(0,r.jsx)(e.code,{children:"npm completion"}),"，就能看到它其实在你的配置文件中追加了一大坨 shell。上面命令中的 ",(0,r.jsx)(e.code,{children:">>"})," 意思是把前面命令的输出追加到后面的文件中。"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"如果你也有代码洁癖，为了保持 .zshrc 或者 .bashrc 文件的整洁，可以用下面的方法："}),"\n",(0,r.jsx)(e.p,{children:"第 1 步，把 npm completion 产生的那坨命令放在单独的文件中："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npm completion >> ~/.npm-completion.bash\n"})}),"\n",(0,r.jsx)(e.p,{children:"第 2 步，在 .bashrc 或者 .zshrc 中引入这个文件："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'echo "[ -f ~/.npm-completion.bash ] && source ~/.npm-completion.bash;" >> ~/.bashrc\necho "[ -f ~/.npm-completion.bash ] && source ~/.npm-completion.bash;" >> ~/.zshrc\n'})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"TIP#11"}),"：执行完上面的命令一定要记得 ",(0,r.jsx)(e.code,{children:"source ~/.zshrc"})," 或者 ",(0,r.jsx)(e.code,{children:"source ~/.bashrc"}),"，来让自动完成生效。"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["接下来我们就可以尽情享受自动完成带来的便利了，尝试在命令行中输入 npm run，",(0,r.jsx)(e.strong,{children:"然后键入空格（空格很重要）"}),"，然后键入 tab 键，发现命令行有什么反应了么？在列出备选项之后，继续按 tab，就能在不同的选项之间切换，找到自己想要的，直接回车就能完成命令补全。多练习几次，你的手指和大脑就能熟练掌握这个过程。"]}),"\n",(0,r.jsxs)(e.p,{children:["在我们的项目目录里面键入 ",(0,r.jsx)(e.code,{children:"npm run cov"})," 再键入 tab 键，命令行又有什么反应？"]}),"\n",(0,r.jsxs)(e.p,{children:["需要单独说明的是，npm completion 能实现的自动完成不仅仅是 scripts 里面的子自命令，npm 的子命令也是可以的，可以依次输入 ",(0,r.jsx)(e.code,{children:"npm"}),"、空格、tab，看看命令行的反应。"]}),"\n",(0,r.jsxs)(e.h2,{id:"更高级的自动完成",children:["更高级的自动完成",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#更高级的自动完成",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"人类对于效率的追求是永无止境的，工程师更是如此，npm 命令补全到目前为止显然还不够高效，能不能补全 package.json 里面的依赖名称？能不能在补全 npm script 的时候列出这个命令是干啥的？"}),"\n",(0,r.jsxs)(e.p,{children:["有人已经帮我们解决了这个痛点，还写成了 zsh 插件（bash 的同学无福消受了）：",(0,r.jsx)(e.a,{href:"https://github.com/lukechilds/zsh-better-npm-completion",target:"_blank",rel:"noopener noreferrer",children:"zsh-better-npm-completion"}),"，它有以下几个让人无法拒绝的便利："]}),"\n",(0,r.jsxs)(e.h3,{id:"1-在-npm-install-时自动根据历史安装过的包给出补全建议",children:["1. 在 npm install 时自动根据历史安装过的包给出补全建议",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-在-npm-install-时自动根据历史安装过的包给出补全建议",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bce81ef5dac6?w=1267&h=249&f=png&s=65352",alt:""})}),"\n",(0,r.jsxs)(e.h3,{id:"2-在-npm-uninstall-时候根据-packagejson-里面的声明给出补全建议",children:["2. 在 npm uninstall 时候根据 package.json 里面的声明给出补全建议",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-在-npm-uninstall-时候根据-packagejson-里面的声明给出补全建议",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcec1c11549f?w=1263&h=114&f=png&s=26712",alt:""})}),"\n",(0,r.jsxs)(e.h3,{id:"3-在-npm-run-时补全建议中列出命令细节",children:["3. 在 npm run 时补全建议中列出命令细节",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-在-npm-run-时补全建议中列出命令细节",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcf08dc06346?w=1256&h=331&f=png&s=78999",alt:""}),"\n",(0,r.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcf1e3a37f16?w=1263&h=222&f=png&s=49982",alt:""})]}),"\n",(0,r.jsxs)(e.p,{children:["看到这里，是不是心痒痒？具体的安装方法参照官方 ",(0,r.jsx)(e.a,{href:"https://github.com/lukechilds/zsh-better-npm-completion",target:"_blank",rel:"noopener noreferrer",children:"README.md"})," 文件就好，我就不在这里啰嗦了。"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"TIP#12"}),"：如果你要使用 zsh-better-npm-completion 插件，需要把 .bashrc、.zshrc 文件里面 npm completion 部分的配置删掉，避免冲突。"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"好了，本小节没有代码，读到这里，你动手做了几个？"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.h2,{id:"20171206-增补如何实现-yarn-的命令自动补全",children:["20171206 增补：如何实现 yarn 的命令自动补全？",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#20171206-增补如何实现-yarn-的命令自动补全",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:["已经有人帮我们做好了 ",(0,r.jsx)(e.a,{href:"https://github.com/mklabs/yarn-completions",target:"_blank",rel:"noopener noreferrer",children:"yarn-completions"}),"，能实现类似于 zsh-better-npm-completion 的命令补全，参照官方 README.md 安装即可。"]})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,c.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["%E7%94%A8%20npm%20script%20%E6%89%93%E9%80%A0%E8%B6%85%E6%BA%9C%E7%9A%84%E5%89%8D%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%B5%81%2F6%E8%BF%9B%E9%98%B6%E7%AF%87%2003%EF%BC%9A%E5%AE%9E%E7%8E%B0%20npm%20script%20%E5%91%BD%E4%BB%A4%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8.md"]={toc:[{text:"使用 npm run 直接列出",id:"使用-npm-run-直接列出",depth:2},{text:"把 npm completion 集成到 shell 中",id:"把-npm-completion-集成到-shell-中",depth:2},{text:"更高级的自动完成",id:"更高级的自动完成",depth:2},{text:"1. 在 npm install 时自动根据历史安装过的包给出补全建议",id:"1-在-npm-install-时自动根据历史安装过的包给出补全建议",depth:3},{text:"2. 在 npm uninstall 时候根据 package.json 里面的声明给出补全建议",id:"2-在-npm-uninstall-时候根据-packagejson-里面的声明给出补全建议",depth:3},{text:"3. 在 npm run 时补全建议中列出命令细节",id:"3-在-npm-run-时补全建议中列出命令细节",depth:3},{text:"20171206 增补：如何实现 yarn 的命令自动补全？",id:"20171206-增补如何实现-yarn-的命令自动补全",depth:2}],title:"6进阶篇 03：实现 npm script 命令自动补全",headingTitle:"6进阶篇 03：实现 npm script 命令自动补全",frontmatter:{}}}}]);