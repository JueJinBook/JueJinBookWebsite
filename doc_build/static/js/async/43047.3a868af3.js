"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43047"],{811196:function(e,n,l){l.r(n),l.d(n,{default:()=>A});var r=l(552676),c=l(740453);let s=l.p+"static/image/a285f049f81d69dd464d2a4974022450.9214d91a.webp",a=l.p+"static/image/8a57c38054d0762070423c2934587f88.f2856e8f.webp",t=l.p+"static/image/5e790129b6a6a44c6d850dfbe7775ff0.6e596d9e.webp",d=l.p+"static/image/b8d5dc44f823527f6047b62be6b0bdda.a50b32a8.webp",i=l.p+"static/image/5aecf85fb375c6dd819e1a0966d9e5e4.f2eb4db7.webp",o=l.p+"static/image/63db516c07d733d8a18629bec207ac57.8d06afc0.webp",h=l.p+"static/image/15b136992b3065b9c3baac7dd83c120c.8841b475.webp",p=l.p+"static/image/a6b14547228300cda5d4bca7bf57e5e3.0f7984e9.webp",x=l.p+"static/image/ad4434d6d0113db729a1ac52f9a161a9.800a96a8.webp",b=l.p+"static/image/3c4d10afc2905539d4bea21e815756eb.430570db.webp",j=l.p+"static/image/786ed5ed10edc85086fb8da0f914e4ed.61678c32.webp",f=l.p+"static/image/f44d8ab0169eac99147a6e916982dd02.7d81c34d.webp",m=l.p+"static/image/a5d6bf6086921504f7b57a0c1325ed7b.f91f0da7.webp",g=l.p+"static/image/2e28043786d86ba21e521c69241f8909.9fcc65a7.webp",w=l.p+"static/image/578b3c71e627c4899c94fa6700e991c8.504dfc9f.webp",k=l.p+"static/image/c2bb029c719ce6d6118cd98aaade1bf9.66b2080d.gif",u=l.p+"static/image/3371d39e05b3491f91a179625fb55a7d.51d9d0e7.webp",y=l.p+"static/image/9edbd69053007d5f1760cce9e3b29b45.e0e2a173.webp",E=l.p+"static/image/5b2f709a5ac40b6838b5e39b845cb4ea.b035a54c.webp",v=l.p+"static/image/738224ce575f89957f170662654472c3.9f7de304.webp",B=l.p+"static/image/89cae8b03ceb59b6b800d869bf9663ff.10a8fd6b.webp";function D(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,c.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"105-实现-excel-导入导出",children:["105. 实现 Excel 导入导出",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#105-实现-excel-导入导出",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Excel 是常用的办公软件，我们会用它来做数据的整理。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"后台管理系统一般都会支持从 Excel 导入数据，或者导出数据到 Excel 文件："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:B,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"那这种功能是如何实现的呢？"}),"\n",(0,r.jsx)(n.p,{children:"在 Node 和浏览器里，如何解析、生成 Excel 文件呢？"}),"\n",(0,r.jsxs)(n.p,{children:["一般我们会用 ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/exceljs",target:"_blank",rel:"noopener noreferrer",children:"exceljs"})," 这个包来做。"]}),"\n",(0,r.jsx)(n.p,{children:"在 npm 官网可以看到，这个包每周有 30w+ 的下载量，用的还是很多的："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"我们具体写代码试试："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mkdir exceljs-test\ncd exceljs-test\nnpm init -y\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:E,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"安装 exceljs："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install --save exceljs\n"})}),"\n",(0,r.jsx)(n.p,{children:"把刚才这个 excel 文件复制过来："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"我们在代码里读取出来看看："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { Workbook } = require('exceljs');\n\nasync function main(){\n    const workbook = new Workbook();\n\n    const workbook2 = await workbook.xlsx.readFile('./data.xlsx');\n\n    workbook2.eachSheet((sheet, index1) => {\n        console.log('工作表' + index1);\n\n        sheet.eachRow((row, index2) => {\n            const rowData = [];\n    \n            row.eachCell((cell, index3) => {\n                rowData.push(cell.value);\n            });\n\n            console.log('行' + index2, rowData);\n        })\n    })\n}\n\nmain();\n"})}),"\n",(0,r.jsx)(n.p,{children:"工作表就是这个东西："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:k,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"每个工作表下都是独立的表格。"}),"\n",(0,r.jsx)(n.p,{children:"也就是 workbook（工作簿） > worksheet（工作表） > row（行） > cell（列）这样的层级关系。"}),"\n",(0,r.jsx)(n.p,{children:"每一层都可以遍历："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"所以我们遍历 sheet、row、cell 这几层，就能拿到所有的数据。"}),"\n",(0,r.jsx)(n.p,{children:"跑下看看："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"确实都拿到了。"}),"\n",(0,r.jsx)(n.p,{children:"这样就是数据导入，我们从 excel 文件里解析出数据，然后存入数据库。"}),"\n",(0,r.jsx)(n.p,{children:"exceljs 还提供了简便的方法，可以直接调用 worksheet 的 getSheetValues 来拿到表格数据，不用自己遍历："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"解析 excel 文件还是很简单的。"}),"\n",(0,r.jsx)(n.p,{children:"导入数据的时候，按照格式从中解析数据然后存入数据库就行。"}),"\n",(0,r.jsx)(n.p,{children:"有同学可能会说，那如果 excel 的格式不符合要求呢？"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"一般我们都会提供一个 excel 模版，用这个模版来填数据，然后再导入。"}),"\n",(0,r.jsx)(n.p,{children:"excel 解析我们会了，再来看下 excel 的生成："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { Workbook } = require('exceljs');\n\nasync function main(){\n    const workbook = new Workbook();\n\n    const worksheet = workbook.addWorksheet('guang111');\n\n    worksheet.columns = [\n        { header: 'ID', key: 'id', width: 20 },\n        { header: '姓名', key: 'name', width: 30 },\n        { header: '出生日期', key: 'birthday', width: 30},\n        { header: '手机号', key: 'phone', width: 50 }\n    ];\n\n    const data = [\n        { id: 1, name: '光光', birthday: new Date('1994-07-07'), phone: '13255555555' },\n        { id: 2, name: '东东', birthday: new Date('1994-04-14'), phone: '13222222222' },\n        { id: 3, name: '小刚', birthday: new Date('1995-08-08'), phone: '13211111111' }\n    ]\n    worksheet.addRows(data);\n\n    workbook.xlsx.writeFile('./data2.xlsx');    \n}\n\nmain();\n"})}),"\n",(0,r.jsx)(n.p,{children:"相当简单，也是按照层次结构，先 addWorkSheet、然后 addRows，之后写入文件。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以看到 worksheet 的名字，还有每行的数据都是对的。"}),"\n",(0,r.jsx)(n.p,{children:"右边手机号那一列最宽，因为我们设置了 width 是 50。"}),"\n",(0,r.jsx)(n.p,{children:"excel 是可以设置格式的，比如字体、背景色等，在代码里同样可以。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"就是遍历 row、cell，根据行数设置 style 就好了："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"worksheet.eachRow((row, rowIndex) => {\n    row.eachCell(cell => {\n        if(rowIndex === 1) {\n            cell.style = {\n                font: {\n                    size: 10,\n                    bold: true,\n                    color: { argb: 'ffffff' }\n                },\n                alignment: { vertical: 'middle', horizontal: 'center' },\n                fill: {\n                    type: 'pattern',\n                    pattern: 'solid',\n                    fgColor: { argb: '000000' }\n                },\n                border: {\n                    top: { style: 'dashed', color: { argb: '0000ff' } },\n                    left: { style: 'dashed', color: { argb: '0000ff' } },\n                    bottom: { style: 'dashed', color: { argb: '0000ff' } },\n                    right: { style: 'dashed', color: { argb: '0000ff' } }\n                }\n            }\n        } else {\n            cell.style = {\n                font: {\n                    size: 10,\n                    bold: true,\n                },\n                alignment: { vertical: 'middle', horizontal: 'left' },\n                border: {\n                    top: { style: 'dashed', color: { argb: '0000ff' } },\n                    left: { style: 'dashed', color: { argb: '0000ff' } },\n                    bottom: { style: 'dashed', color: { argb: '0000ff' } },\n                    right: { style: 'dashed', color: { argb: '0000ff' } }\n                }\n            }\n        }\n    })\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"style 可以设置 font、fill、border、alignment 这些。"}),"\n",(0,r.jsx)(n.p,{children:"跑下看看："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这样，就完成了数据的导出。"}),"\n",(0,r.jsx)(n.p,{children:"而且，exceljs 这个库可以直接在浏览器里用。"}),"\n",(0,r.jsx)(n.p,{children:"我们试试："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"创建 index.html，引入 exceljs 包。"}),"\n",(0,r.jsx)(n.p,{children:"添加一个 file 类型的 input，onchange 的时候解析其中的内容，解析逻辑和之前一样，只是从 readFile 换成 load。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <script src="https://unpkg.com/exceljs@4.4.0/dist/exceljs.min.js"><\/script>\n</head>\n<body>\n    <input id="fileInput" type="file"/>\n    <script>\n        const fileInput = document.getElementById(\'fileInput\');\n        fileInput.onchange = async () => {\n            const file = fileInput.files[0];\n\n            const { Workbook } = ExcelJS;\n\n            const workbook = new Workbook();\n\n            const workbook2 = await workbook.xlsx.load(file);\n\n            workbook2.eachSheet((sheet, index1) => {\n                console.log(\'工作表\' + index1);\n\n                const value = sheet.getSheetValues();\n\n                console.log(value);\n            })\n        }\n    <\/script>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.p,{children:"起个静态服务："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npx http-server .\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"浏览器访问下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以看到，同样解析出了 excel 的内容。"}),"\n",(0,r.jsx)(n.p,{children:"然后再试试生成 excel："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:i,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"前面的逻辑一样，只是把 writeFile 换成了 writeBuffer。"}),"\n",(0,r.jsx)(n.p,{children:"这里我创建了一个 10M 的 ArrayBuffer 来写入数据，之后再读取。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://unpkg.com/exceljs@4.4.0/dist/exceljs.min.js\"><\/script>\n</head>\n<body>\n    <script>\n        const { Workbook } = ExcelJS;\n\n        async function main(){\n            const workbook = new Workbook();\n\n            const worksheet = workbook.addWorksheet('guang111');\n\n            worksheet.columns = [\n                { header: 'ID', key: 'id', width: 20 },\n                { header: '姓名', key: 'name', width: 30 },\n                { header: '出生日期', key: 'birthday', width: 30},\n                { header: '手机号', key: 'phone', width: 50 }\n            ];\n\n            const data = [\n                { id: 1, name: '光光', birthday: new Date('1994-07-07'), phone: '13255555555' },\n                { id: 2, name: '东东', birthday: new Date('1994-04-14'), phone: '13222222222' },\n                { id: 3, name: '小刚', birthday: new Date('1995-08-08'), phone: '13211111111' }\n            ]\n            worksheet.addRows(data);\n\n            worksheet.eachRow((row, rowIndex) => {\n                row.eachCell(cell => {\n                    if(rowIndex === 1) {\n                        cell.style = {\n                            font: {\n                                size: 10,\n                                bold: true,\n                                color: { argb: 'ffffff' }\n                            },\n                            alignment: { vertical: 'middle', horizontal: 'center' },\n                            fill: {\n                                type: 'pattern',\n                                pattern: 'solid',\n                                fgColor: { argb: '000000' }\n                            },\n                            border: {\n                                top: { style: 'dashed', color: { argb: '0000ff' } },\n                                left: { style: 'dashed', color: { argb: '0000ff' } },\n                                bottom: { style: 'dashed', color: { argb: '0000ff' } },\n                                right: { style: 'dashed', color: { argb: '0000ff' } }\n                            }\n                        }\n                    } else {\n                        cell.style = {\n                            font: {\n                                size: 10,\n                                bold: true,\n                            },\n                            alignment: { vertical: 'middle', horizontal: 'left' },\n                            border: {\n                                top: { style: 'dashed', color: { argb: '0000ff' } },\n                                left: { style: 'dashed', color: { argb: '0000ff' } },\n                                bottom: { style: 'dashed', color: { argb: '0000ff' } },\n                                right: { style: 'dashed', color: { argb: '0000ff' } }\n                            }\n                        }\n                    }\n                })\n            })\n\n            const arraybuffer = new ArrayBuffer(10 * 1024 * 1024);\n            const res = await workbook.xlsx.writeBuffer(arraybuffer);\n\n            console.log(res.buffer);\n        }\n\n        main();\n    <\/script>\n</body>\n</html>\n"})}),"\n",(0,r.jsx)(n.p,{children:"跑下试试："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:d,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以看到，确实有数据了。"}),"\n",(0,r.jsx)(n.p,{children:"那有了 arraybuffer 的数据，如何触发下载呢？"}),"\n",(0,r.jsx)(n.p,{children:"创建一个 a 标签，设置 download 属性，然后触发点击就可以了。"}),"\n",(0,r.jsx)(n.p,{children:"也就是这样："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function download(arrayBuffer) {\n    const link = document.createElement('a');\n\n    const blob = new Blob([arrayBuffer]);\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n    link.download = 'guang.xlsx';\n\n    document.body.appendChild(link);\n\n    link.click();\n    link.addEventListener('click', () => {\n        link.remove();\n    });\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"跑一下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以看到，生成了 excel 并且触发了下载。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:s,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"打开文件，可以看到和 node 里生成的一样。"}),"\n",(0,r.jsxs)(n.p,{children:["案例代码上传了 github：",(0,r.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exceljs-test",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exceljs-test"})]}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:["总结",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Excel 的导入导出是后台管理系统的常见功能，我们一般用 exceljs 来实现。"}),"\n",(0,r.jsx)(n.p,{children:"excel 文件分为 workbook、worksheet、row、cell 这 4 层，解析和生成都是按照这个层次结构来。"}),"\n",(0,r.jsx)(n.p,{children:"解析就是 readFile 之后，遍历 worksheet、row，拿到 cell 中的数据 。"}),"\n",(0,r.jsx)(n.p,{children:"生成就是 addWorkSheet、addRow 添加数据，然后 writeFile 来写入文件。"}),"\n",(0,r.jsx)(n.p,{children:"如果是在浏览器里，就把 readFile 换成 load，把 writeFile 换成 writeBuffer 就好了。"}),"\n",(0,r.jsx)(n.p,{children:"浏览器里生成 excel 之后，可以通过 a 标签触发下载，设置 download 属性之后，触发点击就好了。"}),"\n",(0,r.jsx)(n.p,{children:"这样，我们就分别在 node 和浏览器里完成了 excel 的解析和生成。"})]})}function _(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(D,{...e})}):D(e)}let A=_;_.__RSPRESS_PAGE_META={},_.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F105.%20%E5%AE%9E%E7%8E%B0%20Excel%20%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"105. 实现 Excel 导入导出",headingTitle:"105. 实现 Excel 导入导出",frontmatter:{}}}}]);