"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["38513"],{464053:function(e,n,r){r.r(n),r.d(n,{default:()=>L});var s=r(552676),a=r(740453);let t=r.p+"static/image/883acd02fce6d2b3186afbb109404330.3562f56f.webp",i=r.p+"static/image/b8c39eef32cbd76effb9d0f6a2d72f41.c26be35b.webp",c=r.p+"static/image/6cf0b54e2aa4279aba174bf79e2f923e.3d98b6da.webp",l=r.p+"static/image/20aebf75ef59b9ccf5e831d46185d3cf.7527ae93.webp",d=r.p+"static/image/2172cacf8ca8c6d7f8ab83414a6684d0.9634ed0d.webp",h=r.p+"static/image/fa461ba8992bddbd294433f58dd921ab.d18f04f7.webp",o=r.p+"static/image/d92f73390598ba561317c6737f8dd7f3.8ab0f8a0.webp",p=r.p+"static/image/07695b77d021dcab8cb1e8f0d20a9a7d.3397a4bb.webp",x=r.p+"static/image/7c48959fb80795eb6f4d961c338a4507.89a47728.webp",j=r.p+"static/image/c90add9d60689b89c1c8fc6a131c01b3.c1ebb73d.webp",m=r.p+"static/image/edffe51a245dd610f32a899f345d9503.c8a95d0e.webp",g=r.p+"static/image/625f8dffbfeaed1269cd1295d8be75ca.cd05a3fa.webp",f=r.p+"static/image/7e6aeeb10ad2cb3052fefae1fb1562dc.c6ddedf7.webp",b=r.p+"static/image/209538d6d34f1de7165c76a7165bd790.31d3a4e0.webp",u=r.p+"static/image/68d80b1c6f92dfff2bc6a89d2ca5a8d9.47ec1cb2.webp",w=r.p+"static/image/6e502b944fc1572facfdb92dabccfb64.853ee0e4.webp",v=r.p+"static/image/e081a58a1cbdd17348d16422524ac4ea.100fcccb.webp",P=r.p+"static/image/bcd26c357d15748a9fb5c672e4f1bb11.c82a9c83.webp",k=r.p+"static/image/4204cddf6359349c0f784d52a94d0c15.5fed34f6.webp",N=r.p+"static/image/6c8fe067ce8d1bf8d9d32b2485f3143f.19ad0fa9.webp",y=r.p+"static/image/2bc3849528f4205d8d8037d2e0af0ac4.6cfd6fd1.webp",_=r.p+"static/image/70d4972b4a7dee7c8c409a35f8d3baad.4c6b7b32.webp",E=r.p+"static/image/cc3dc2dddf7eb0bd63d794cfe6d26f80.8f4c4196.webp",W=r.p+"static/image/610a392641af777f3656c591d0586cca.b6c61a34.webp",C=r.p+"static/image/03f30d18a4ee106351676a77efad36ec.3e3ca559.webp",A=r.p+"static/image/72cef9545161003f7e7c64ebbc59cab3.4ba68504.webp",S=r.p+"static/image/3eb5de87d0eb83f7b811a885ea33ebff.94d7ea65.webp";function V(e){let n=Object.assign({h2:"h2",a:"a",p:"p",code:"code",pre:"pre",img:"img",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h4:"h4",ol:"ol",li:"li",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"前言",children:["前言",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"本篇讲解如何对 Next.js 应用的性能进行监控。"}),"\n",(0,s.jsxs)(n.h2,{id:"bundle-analyzer",children:["Bundle Analyzer",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#bundle-analyzer",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["首先是 bundle 包的管理。Next.js 提供了 ",(0,s.jsx)(n.code,{children:"@next/bundle-analyzer"})," 插件，它会生成每个模块大小及其依赖的可视化报告。你可以据此删除较大的依赖项或者拆分代码从而减少客户端 bundle 的大小。"]}),"\n",(0,s.jsx)(n.p,{children:"安装插件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i @next/bundle-analyzer\n"})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"next.config.mjs"}),"，代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { withContentlayer } from 'next-contentlayer'\nimport bundleAnalyzer from '@next/bundle-analyzer'\n\nconst withBundleAnalyzer = bundleAnalyzer({\n  enabled: process.env.ANALYZE === 'true',\n})\n\nexport default withBundleAnalyzer(withContentlayer({}))\n"})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"package.json"}),"，添加脚本命令："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n  // ...\n  "scripts": {\n    "analyze": "ANALYZE=true next build"\n  },\n  // ...\n}\n\n'})}),"\n",(0,s.jsxs)(n.p,{children:["命令行运行 ",(0,s.jsx)(n.code,{children:"npm run analyze"}),"，它会陆续生成 3 个 HTML 文件，并同时为你打开浏览器展示文件："]}),"\n",(0,s.jsxs)(n.p,{children:["一个是 ",(0,s.jsx)(n.code,{children:"nodejs.html"}),"，展示 nodejs server bundle："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:"截屏2024-05-15 22.10.32.png"})}),"\n",(0,s.jsxs)(n.p,{children:["一个是 ",(0,s.jsx)(n.code,{children:"edge.html"}),"，展示 edge server bundle："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:"截屏2024-05-15 22.11.22.png"})}),"\n",(0,s.jsxs)(n.p,{children:["一个是 ",(0,s.jsx)(n.code,{children:"client.html"}),"，展示客户端浏览器 js bundle："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:"截屏2024-05-15 22.11.57.png"})}),"\n",(0,s.jsxs)(n.h2,{id:"性能测量",children:["性能测量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#性能测量",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"如果你只是要在上线前，测一下应用的性能，看看有哪些性能优化工作要做，履行一下前端的“职责”，那你可以："}),"\n",(0,s.jsxs)(n.h3,{id:"1-chrome-lighthouse-插件",children:["1. Chrome Lighthouse 插件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-chrome-lighthouse-插件",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["安装 ",(0,s.jsx)(n.a,{href:"https://chromewebstore.google.com/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:"Chrome Lighthouse"})," 插件，安装完成后，开发者工具会有一个 lighthouse 选型，用于测量页面性能。以掘金为例："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:W,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"lighthouse 会列出需要具体改善的点，参照建议完善即可。"}),"\n",(0,s.jsxs)(n.h3,{id:"2-pagespeed-insights",children:["2. PageSpeed Insights",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-pagespeed-insights",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"PageSpeed Insights 是一款由 Google 开发的网页性能评估工具，可以帮助开发者评估网页的性能，并提供优化建议。"}),"\n",(0,s.jsxs)(n.p,{children:["打开 ",(0,s.jsx)(n.a,{href:"https://pagespeed.web.dev/",target:"_blank",rel:"noopener noreferrer",children:"https://pagespeed.web.dev/"}),"，输入网址查看页面测试结果即可："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h3,{id:"3-其他性能测试网站",children:["3. 其他性能测试网站",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-其他性能测试网站",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["当然这种性能测试网站还是蛮多的，比如 ",(0,s.jsx)(n.a,{href:"https://www.webpagetest.org/",target:"_blank",rel:"noopener noreferrer",children:"https://www.webpagetest.org/"}),"、",(0,s.jsx)(n.a,{href:"https://tools.pingdom.com/",target:"_blank",rel:"noopener noreferrer",children:"https://tools.pingdom.com/"})," 等等"]}),"\n",(0,s.jsxs)(n.h2,{id:"web-vitals-analytics",children:["Web Vitals Analytics",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#web-vitals-analytics",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"但是这种上线前测试一下性能的做法问题也很明显，样本有限导致数据不够准确，而且无法准确反应真实用户的体验。"}),"\n",(0,s.jsx)(n.p,{children:"如果真的要解决这个问题的话，就需要在页面实现测量和上报性能相关的数据。可是要测量哪些性能相关的数据呢？性能相关的数据又该如何上报、搜集、分析、输出图标呢？"}),"\n",(0,s.jsx)(n.p,{children:"这里的解决方案有很多种，我提供一种 Prometheus + Grafana 的方式，这套技术选型也是常见的用于数据采集、分析的解决方案。我们且慢慢说来。"}),"\n",(0,s.jsxs)(n.h3,{id:"1-性能测量",children:["1. 性能测量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-性能测量",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["其实 Next.js 支持对性能进行测量和上报。Next.js 提供了 ",(0,s.jsx)(n.code,{children:"useReportWebVitals"})," hook 自行管理数据。"]}),"\n",(0,s.jsxs)(n.p,{children:["新建 ",(0,s.jsx)(n.code,{children:"components/WebVitals.js"}),"，代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n \nimport { useReportWebVitals } from 'next/web-vitals'\n \nexport function WebVitals() {\n  useReportWebVitals((metric) => {\n    console.log(metric)\n  })\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"next-blog/app/[lng]/layout.js"}),"，添加代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// ...\nimport { WebVitals } from '@/components/WebVitals.js'\n// ...\n\nexport default function RootLayout({ children, params: { lng } }) {\n  return (\n    <html lang={lng} dir={dir(lng)} suppressHydrationWarning>\n      <body>\n        <WebVitals />\n        <ThemeProviders>\n          <header className=\"flex justify-end\">\n            <ThemeSwitch />\n            <LangSwitch />\n          </header>\n          {children}\n        </ThemeProviders>\n      </body>\n    </html>\n  );\n}\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:["访问页面如 ",(0,s.jsx)(n.a,{href:"http://localhost:3000/posts/first",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/posts/first"}),"，打印效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"这 6 个指标就是 Web Vitals（网页指标），它是 Google 的一项计划，旨在针对网页质量信号提供统一指南，这些信号对于提供出色的网页用户体验至关重要。它的目标是简化各种可用的性能测量工具，并帮助网站所有者专注于最重要的指标。"}),"\n",(0,s.jsx)(n.p,{children:"注：其实业界尝试过非常多用于衡量性能和体验的指标，但很多指标由于难以测量、逻辑复杂等原因逐渐消亡。Web Vitals 背靠 Google，算是大浪淘沙，经过时间的检验。但这些指标也会随着时间的推移而演变，目前是这 6 个指标。"}),"\n",(0,s.jsx)(n.p,{children:"为了更直观的展示这些指标，我为大家总结了一个表格："}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{}),"\n",(0,s.jsx)(n.th,{children:"指标"}),"\n",(0,s.jsx)(n.th,{children:"中文名"}),"\n",(0,s.jsx)(n.th,{children:"目的"}),"\n",(0,s.jsx)(n.th,{children:"标准"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{}),"\n",(0,s.jsx)(n.td,{children:"LCP（Largest Contentful Paint）"}),"\n",(0,s.jsx)(n.td,{children:"最大内容绘制"}),"\n",(0,s.jsx)(n.td,{children:"衡量加载性能"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:y,alt:"image.png"})}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsxs)(n.td,{children:["Core Web Vitals ","这组指标侧重于用户体验的三个方面：加载、互动和视觉稳定性"]}),"\n",(0,s.jsx)(n.td,{children:"INP（Interaction to Next Paint）"}),"\n",(0,s.jsx)(n.td,{children:"交互到绘制延迟"}),"\n",(0,s.jsx)(n.td,{children:"衡量互动"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:N,alt:"image.png"})}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{}),"\n",(0,s.jsx)(n.td,{children:"CLS（Cumulative Layout Shift)"}),"\n",(0,s.jsx)(n.td,{children:"累积布局偏移"}),"\n",(0,s.jsx)(n.td,{children:"衡量视觉稳定性"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:k,alt:"image.png"})}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{}),"\n",(0,s.jsx)(n.td,{children:"FCP（First Contentful Paint）"}),"\n",(0,s.jsx)(n.td,{children:"首次内容绘制"}),"\n",(0,s.jsx)(n.td,{children:"衡量加载体验，有助于诊断 LCP 问题（服务器响应时间过长或阻塞渲染的资源）"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:P,alt:"image.png"})}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsxs)(n.td,{children:["Core Web Vitals 的代理或补充指标 ","这组指标有助于捕获更广泛的体验或诊断特定问题"]}),"\n",(0,s.jsx)(n.td,{children:"FID（First Input Delay）"}),"\n",(0,s.jsx)(n.td,{children:"首次输入延迟"}),"\n",(0,s.jsx)(n.td,{children:"衡量互动，未来可能完全被 INP 替代"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:v,alt:"image.png"})}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{}),"\n",(0,s.jsx)(n.td,{children:"TTFB（Time to First Byte）"}),"\n",(0,s.jsx)(n.td,{children:"第一字节时间"}),"\n",(0,s.jsx)(n.td,{children:"衡量加载体验，有助于诊断 LCP 问题"}),"\n",(0,s.jsx)(n.td,{children:(0,s.jsx)("img",{src:w,alt:"image.png"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"那如何测量这些指标呢？"}),"\n",(0,s.jsxs)(n.p,{children:["Chrome 团队提供了 ",(0,s.jsx)(n.a,{href:"https://github.com/GoogleChrome/web-vitals",target:"_blank",rel:"noopener noreferrer",children:"web-vitals"})," 开源工具库，它基于统一的浏览器 Performance API 获取标准化的用户体验数据。"]}),"\n",(0,s.jsx)(n.p,{children:"Next.js 提供的 useReportWebVitals hook 背后也是用这个库来实现的。"}),"\n",(0,s.jsxs)(n.h3,{id:"2-性能上报",children:["2. 性能上报",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-性能上报",children:"#"})]}),"\n",(0,s.jsxs)(n.h4,{id:"11-prometheus-介绍",children:["1.1. Prometheus 介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-prometheus-介绍",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"采集到了数据，数据该如何上报并可视化呢？"}),"\n",(0,s.jsx)(n.p,{children:"我们的技术方案是用 Prometheus 和 Grafana。我们先来介绍一下这两个技术选型："}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://prometheus.io/",target:"_blank",rel:"noopener noreferrer",children:"Prometheus"}),"（普罗米修斯）是一个用于监控和报警的开源系统，它自带一个基于时间序列的数据库。"]}),"\n",(0,s.jsx)(n.p,{children:"它的架构设计如下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"看到这个架构图先不要害怕，其实很简单。简单来说，Prometheus 由这几部分组成："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Prometheus Server 负责收集数据，将数据存放到数据库中"}),"\n",(0,s.jsxs)(n.li,{children:["数据怎么发给 Prometheus Server 呢？有两种方式上报数据：","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"一种是 pull 模式，待监控的服务暴露指标接口，由 Prometheus server 定期拉取采集。"}),"\n",(0,s.jsx)(n.li,{children:"另一种是 push 模式，待监控的服务直接将数据推给  Prometheus server（通常会借助 Pushgateway 待监控服务推给 Pushgateway，Prometheus Server pull Pushgateway）"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Alertmanager 负责监控指标进行报警，使用 email 等方式通知"}),"\n",(0,s.jsx)(n.li,{children:"PromQL（Prometheus Query Language）是 Prometheus 内置的数据查询语言，可以结合 Grafana 等数据可视化工具将数据更好的展现出来"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"关于本篇我们采用的方式："}),"\n",(0,s.jsx)(n.p,{children:"我们会使用 Express 自建一个服务，用于处理 Next.js Web Vitals 数据的上报。然后由 Prometheus Server 定期拉取指标数据，最后结合 Grafana 做数据可视化。"}),"\n",(0,s.jsxs)(n.h4,{id:"12-grafana-介绍",children:["1.2. Grafana 介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12-grafana-介绍",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://grafana.com/",target:"_blank",rel:"noopener noreferrer",children:"Grafana"})," 是一款开源的数据可视化工具，使用它是因为："]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"与 Prometheus 兼容良好"}),"\n",(0,s.jsx)(n.li,{children:"可视化模板多，界面高大上"}),"\n",(0,s.jsx)(n.li,{children:"可免费私有部署"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h4,{id:"13-express-server",children:["1.3. Express Server",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#13-express-server",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"让我们运行："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 56.实战篇 _ 博客 _ 性能分析\nmkdir node-monitor && cd node-monitor\n# 初始化\nnpm init\n# 安装依赖项，其中 prom-client 是 Prometheus 的 Node 客户端\nnpm i express cors prom-client\n"})}),"\n",(0,s.jsxs)(n.p,{children:["新建 ",(0,s.jsx)(n.code,{children:"app.js"}),"，代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import express from 'express';\nimport client, { collectDefaultMetrics } from 'prom-client';\nimport cors from 'cors';\n\nconst register = new client.Registry();\ncollectDefaultMetrics({ register });\n\nconst app = express();\n\napp.use(express.text())\napp.use(cors())\n\napp.get('/metrics', async (_req, res) => {\n  try {\n    res.set('Content-Type', register.contentType);\n    res.end(await register.metrics());\n  } catch (err) {\n    res.status(500).end(err);\n  }\n});\n\napp.post('/report', function (req, res) {\n  const { name, rating} = JSON.parse(req.body);\n  let counter = register.getSingleMetric(name);\n  if (!counter) {\n    counter = new client.Counter({\n      name,\n      help: req.body,\n      registers: [register],\n      labelNames: ['rating'],\n    });\n  }\n  counter.inc({\n    rating\n  }, 1);\n  res.status(200).json({ success: true });\n});\n\napp.listen(4001, '0.0.0.0');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在这段代码中，我们提供了一个 ",(0,s.jsx)(n.code,{children:"/metrics"}),"接口用于 Prometheus Server 拉取数据，一个 ",(0,s.jsx)(n.code,{children:"/report"}),"接口用于 Next.js 应用上报数据。至于代码具体为什么这样写，参考 ",(0,s.jsx)(n.a,{href:"https://github.com/siimon/prom-client",target:"_blank",rel:"noopener noreferrer",children:"prom-client"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"package.json"}),"，添加代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n  // ...\n  "type": "module",\n  "scripts": {\n    "start": "node app.js"\n  },\n  // ...\n}\n\n'})}),"\n",(0,s.jsxs)(n.p,{children:["运行 ",(0,s.jsx)(n.code,{children:"npm start"}),"，打开 ",(0,s.jsx)(n.a,{href:"http://localhost:4001/metrics",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:4001/metrics"}),"，效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"数据看不懂？没有关系，这些是 Node 应用相关的数据，可用于监控 Node 性能。我们真正要监控和记录的是 Web Vitals 相关的数据。"}),"\n",(0,s.jsxs)(n.p,{children:["修改我们的 Next.js 应用 ",(0,s.jsx)(n.code,{children:"components/WebVitals.js"}),"：完整代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n \nimport { useReportWebVitals } from 'next/web-vitals'\n \nexport function WebVitals() {\n  useReportWebVitals((metric) => {\n    console.log(metric)\n\n    const body = JSON.stringify(metric)\n    const url = 'http://localhost:4001/report'\n   \n    // Use `navigator.sendBeacon()` if available, falling back to `fetch()`.\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, body)\n    } else {\n      fetch(url, { body, method: 'POST', keepalive: true })\n    }\n    \n  })\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["关于 ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon",target:"_blank",rel:"noopener noreferrer",children:"navigator.sendBeacon"}),"："]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"navigator.sendBeacon() 方法可用于通过 HTTP POST 将少量数据 异步 传输到 Web 服务器。\n它主要用于将统计数据发送到 Web 服务器，同时避免了用传统技术（如：XMLHttpRequest）发送分析数据的一些问题。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["我们刷新一下 Next.js 的页面，上报一些数据，再查看 ",(0,s.jsx)(n.a,{href:"http://localhost:4001/metrics",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:4001/metrics"}),"，可以看到产生了一批 Web Vitals 相关的数据指标："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"这说明我们的 Next.js 应用（3000 端口）和 Express 应用（4001 端口）已经打通了！"}),"\n",(0,s.jsxs)(n.h4,{id:"14-docker",children:["1.4. Docker",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#14-docker",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"为了方便起见，我们使用 Docker 来开启 Prometheus 和 Grafana。"}),"\n",(0,s.jsxs)(n.p,{children:["在 node-monitor 项目下新建 ",(0,s.jsx)(n.code,{children:"prometheus.yml"}),"文件（当然放在其他地方也是可以的），用于 Prometheus 的配置文件，代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'global:\n  scrape_interval: 5s\nscrape_configs:\n  - job_name: "next-app"\n    static_configs:\n      - targets: ["docker.for.mac.host.internal:4001"]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["配置文件告诉 Prometheus 每 5 秒抓取一次所有目标。目标在 scrape_configs 下定义。在 Mac 上，需要使用 ",(0,s.jsx)(n.code,{children:"docker.for.mac.host.internal"})," 作为主机，以便 Prometheus Docker 容器可以抓取本地 Node.js HTTP 服务器的指标。在 Windows 上，使用 ",(0,s.jsx)(n.code,{children:"docker.for.win.localhost"}),"；在 Linux 上，使用 ",(0,s.jsx)(n.code,{children:"localhost"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"然后运行："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"docker run --rm -p 9090:9090 \\\n  -v `pwd`/prometheus.yml:/etc/prometheus/prometheus.yml \\\n  prom/prometheus\n"})}),"\n",(0,s.jsx)(n.p,{children:"Windows 用户需要将 pwd 替换为当前工作目录的路径。"}),"\n",(0,s.jsx)(n.p,{children:"注：这里我们将端口开发了默认的 9090 端口，如果你开了 Clash，可能会产生端口冲突。关掉 Clash 或者修改 Clash 的配置文件，将其更改到其他端口。"}),"\n",(0,s.jsxs)(n.p,{children:["如果正常开启，此时访问 ",(0,s.jsx)(n.a,{href:"http://localhost:9090/",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:9090/"}),"，可以看到："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["对于 Prometheus 的初学者，可以通过访问 ",(0,s.jsx)(n.a,{href:"http://localhost:9090/api/v1/label/__name__/values",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)(n.a,{href:"http://localhost:9090/api/v1/label/**name**/values",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:9090/api/v1/label/**name**/values"})})," 来查看有哪些数据指标："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["我们输入 ",(0,s.jsx)(n.code,{children:"FCP"}),"，点击 ",(0,s.jsx)(n.code,{children:"Execute"})," 按钮，如果能查询到数据就说明 Prometheus 应用（开在 9090 端口）与我们的 Express 应用（开在 4001 端口）连接成功："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"接下来开启 Grafana，运行："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"docker run -d --name=grafana -p 3001:3000 grafana/grafana\n"})}),"\n",(0,s.jsxs)(n.p,{children:["正常 Grafana 开启在 3000 端口，但跟我们的 Next.js 应用冲突了，所以开在了 3001 端口。如果正常开启，访问 ",(0,s.jsx)(n.a,{href:"http://localhost:3001/",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3001/"}),"，会跳转到登录页面："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"账号和密码都是 admin，登录后："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"截屏2024-05-17 22.19.56.png"})}),"\n",(0,s.jsxs)(n.p,{children:["选择 ",(0,s.jsx)(n.code,{children:"Prometheus"}),"，然后点击 ",(0,s.jsx)(n.code,{children:"Add new data source"}),"按钮，添加 Prometheus 作为数据源，进入设置页面："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"截屏2024-05-17 22.22.13.png"})}),"\n",(0,s.jsxs)(n.p,{children:["Prometheus server URL 这里填写 ",(0,s.jsx)(n.a,{href:"http://host.docker.internal:9090",target:"_blank",rel:"noopener noreferrer",children:"http://host.docker.internal:9090"}),"，这是因为 Prometheus 和 Grafana 都是通过 Docker 开启，环境与本机有隔离，所以无法通过 localhost 直接访问。如果这个地址不行，填写 ",(0,s.jsx)(n.code,{children:"http://prometheus:9090"})," 试试。"]}),"\n",(0,s.jsx)(n.p,{children:"如果能够配置成功，此时我们的各个应用就算联调成功了。一共涉及 4 个应用，Next.js 应用是我们开发的博客项目，博客页面会上报 Web Vitals 数据，Express 应用会接收上报的 Web Vitals，并提供 /metrics 接口供 Prometheus 应用拉取采集数据。最后 Grafana 应用会连接 Prometheus，用可视化的图表代替 Prometheus 的 PromQL 语句查询。"}),"\n",(0,s.jsxs)(n.h4,{id:"15-grafana-图表",children:["1.5. Grafana 图表",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#15-grafana-图表",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"接下来我们开始建立一个 Grafana 图表："}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("img",{src:d,alt:"截屏2024-05-17 22.30.38.png"}),"\n",(0,s.jsx)("img",{src:l,alt:"截屏2024-05-17 22.31.46.png"}),(0,s.jsx)("img",{src:c,alt:"截屏2024-05-17 22.32.21.png"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:"截屏2024-05-17 22.34.37.png"})}),"\n",(0,s.jsx)(n.p,{children:"这样我们就建立了一个 FCP 评分占比的饼图："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"可以看到评分为 poor 的有多少个，评分为 good 的有多少个。（数据量太少了，所以没有 need improvement)"}),"\n",(0,s.jsx)(n.p,{children:"接下来我们就可以根据自己的需要自定义需要的图表。"}),"\n",(0,s.jsxs)(n.h2,{id:"最后",children:["最后",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#最后",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"目前整体的打通非常简陋，比如 Prometheus 和 Grafana 都没有做数据持久化，一旦重启，数据就会丢失。只监控了自定义的 Web Vitals 指标，Node 性能相关的指标没有做自定义上报。Grafana 也只实现了简单的百分比，而没有实现各种高大上的图表。"}),"\n",(0,s.jsx)(n.p,{children:"Prometheus 和 Grafana 其实内容非常多，碍于作者能力有限，只能为大家简单介绍下这套技术方案，更多的内容还需要大家自己去探索。"}),"\n",(0,s.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://web.dev/articles/vitals?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:"https://web.dev/articles/vitals?hl=zh-cn"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://web.dev/articles/fcp?hl=en",target:"_blank",rel:"noopener noreferrer",children:"https://web.dev/articles/fcp?hl=en"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://codersociety.com/blog/articles/nodejs-application-monitoring-with-prometheus-and-grafana",target:"_blank",rel:"noopener noreferrer",children:"https://codersociety.com/blog/articles/nodejs-application-monitoring-with-prometheus-and-grafana"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer",children:"https://brew.sh/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/vercel/next.js/discussions/16205",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/vercel/next.js/discussions/16205"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/prom/prometheus",target:"_blank",rel:"noopener noreferrer",children:"https://hub.docker.com/r/prom/prometheus"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/grafana/grafana/issues/46434",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/grafana/grafana/issues/46434"})}),"\n"]})]})}function G(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(V,{...e})}):V(e)}let L=G;G.__RSPRESS_PAGE_META={},G.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F56.%E5%AE%9E%E6%88%98%E7%AF%87%20_%20%E5%8D%9A%E5%AE%A2%20_%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"Bundle Analyzer",id:"bundle-analyzer",depth:2},{text:"性能测量",id:"性能测量",depth:2},{text:"1. Chrome Lighthouse 插件",id:"1-chrome-lighthouse-插件",depth:3},{text:"2. PageSpeed Insights",id:"2-pagespeed-insights",depth:3},{text:"3. 其他性能测试网站",id:"3-其他性能测试网站",depth:3},{text:"Web Vitals Analytics",id:"web-vitals-analytics",depth:2},{text:"1. 性能测量",id:"1-性能测量",depth:3},{text:"2. 性能上报",id:"2-性能上报",depth:3},{text:"1.1. Prometheus 介绍",id:"11-prometheus-介绍",depth:4},{text:"1.2. Grafana 介绍",id:"12-grafana-介绍",depth:4},{text:"1.3. Express Server",id:"13-express-server",depth:4},{text:"1.4. Docker",id:"14-docker",depth:4},{text:"1.5. Grafana 图表",id:"15-grafana-图表",depth:4},{text:"最后",id:"最后",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"",headingTitle:"",frontmatter:{}}}}]);