"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["37144"],{711578:function(n,e,r){n.exports=r.p+"static/image/47c53f872a54bf36d140f95f334b25cd.ef103836.webp"},155926:function(n,e,r){r.r(e),r.d(e,{default:()=>N});var a=r(552676),s=r(740453);let i=r.p+"static/image/93eb95444c0d3f5215f58c433334c8bf.5233367c.gif",t=r.p+"static/image/8dd6a8bc491b668c1488ef2a85bfe253.bbb6b6ce.webp",c=r.p+"static/image/71589c99e3be89401391dce7f978ad69.2949d003.webp",d=r.p+"static/image/669b4c314e7104d94ac3cf8e5bc4a317.fa5c1f9b.webp",l=r.p+"static/image/20d0f39a3684c8937c351f20b2175d8f.4435c9cd.webp",o=r.p+"static/image/d931b46d4ce87fdf2b1dc77074df4181.691822a7.gif",p=r.p+"static/image/65aded5395b4f49fd507e7db307d3eed.66900460.webp",m=r.p+"static/image/c6da504b9f729f74baf8442173083505.0912a295.webp",h=r.p+"static/image/af0f4e9ea31b57f1c71d9cc9e75f3c62.3af6df5b.webp",u=r.p+"static/image/0ab0d5f083b3955e1ca8e0d236d4b1b4.bf66f747.webp",x=r.p+"static/image/7d2b74fdb7496f50009a276bc009a344.5df430d2.webp",f=r.p+"static/image/849776c8e8ec309673d2228ecbb09f29.6cf9e56b.webp",j=r.p+"static/image/875b97d80955c97a32b7920842c8a10c.4bc8a892.gif";var g=r(711578);let b=r.p+"static/image/799ccb9873a836533ee80420c512ad7c.9314f720.webp",v=r.p+"static/image/61dc985b0d839762dd211bca27353c40.c66d2513.webp",F=r.p+"static/image/fd091d3967ea174e75bf6b7036b8e673.b5f2737f.webp",y=r.p+"static/image/caba498460fefec9c608b7d2452f627f.8bf28d36.webp";function k(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,s.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"185-聊天室好友群聊列表页面",children:["185. 聊天室：好友∕群聊列表页面",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#185-聊天室好友群聊列表页面",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"这节来实现下好友/群聊页面："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:f,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:y,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:F,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"现在首页是这样的："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:v,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"需要在 / 下添加一个二级路由："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:b,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"{\n  path: '/',\n  element: <Menu/>,\n  children: [\n    {\n      path: '/',\n      element: <Friendship/>\n    },\n    {\n      path: '/group',\n      element: <Group/>\n    },\n    {\n      path: 'chat',\n      element: <Chat/>\n    },\n    {\n      path: 'collection',\n      element: <Collection/>\n    },\n    {\n      path: 'notification',\n      element: <Notification/>\n    }\n  ]\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"然后分别实现这几个组件："}),"\n",(0,a.jsx)(e.p,{children:"src/pages/Menu/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"import { Outlet, useLocation } from \"react-router-dom\";\nimport { Menu as AntdMenu, MenuProps } from 'antd';\nimport './menu.css';\nimport { MenuClickEventHandler } from \"rc-menu/lib/interface\";\nimport { router } from \"../../main\";\n\nconst items: MenuProps['items'] = [\n    {\n        key: '1',\n        label: \"好友\"\n    },\n    {\n        key: '2',\n        label: \"群聊\"\n    },\n    {\n        key: '3',\n        label: \"聊天\"\n    },\n    {\n        key: '4',\n        label: \"收藏\"\n    },\n    {\n        key: '5',\n        label: \"通知\"\n    }\n];\n\nconst handleMenuItemClick: MenuClickEventHandler = (info) => {\n    let path = '';\n    switch(info.key) {\n        case '1':\n            path = '/';\n            break;\n        case '2':\n            path = '/group';\n            break;\n        case '3':\n            path = '/chat';\n            break;\n        case '4':\n            path = '/collection';\n            break;\n        case '5':\n            path = '/notification';\n            break;      \n    }\n    router.navigate(path);\n}\n\n\nexport function Menu() {\n\n    const location = useLocation();\n\n    function getSelectedKeys() {\n        if(location.pathname === '/group') {\n            return ['2']\n        } else if(location.pathname === '/chat') {\n            return ['3']\n        } else if(location.pathname === '/collection') {\n            return ['4']\n        } else if(location.pathname === '/notification') {\n            return ['5']\n        } else {\n            return ['1']\n        }\n    }\n\n    return <div id=\"menu-container\">\n        <div className=\"menu-area\">\n            <AntdMenu\n                defaultSelectedKeys={getSelectedKeys()}\n                items={items}\n                onClick={handleMenuItemClick}\n            />\n        </div>\n        <div className=\"content-area\">\n            <Outlet></Outlet>\n        </div>\n    </div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"引入 antd 的 Menu 实现菜单。"}),"\n",(0,a.jsx)(e.p,{children:"渲染的时候根据 useLocation 拿到的 pathname 来设置选中的菜单项。"}),"\n",(0,a.jsx)(e.p,{children:"点击菜单项的时候用 router.push 修改路径。"}),"\n",(0,a.jsx)(e.p,{children:"这里用到的 router 需要在 index.tsx 导出："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:g,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"menu.css 如下："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-css",children:"#menu-container {\n    display: flex;\n    flex-direction: row;\n}\n#menu-container .menu-area {\n    width: 200px;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"然后创建 src/pages/Friendship/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export function Friendship() {\n    return <div>Friendship</div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"src/pages/Group/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export function Group() {\n    return <div>Group</div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"src/pages/Chat/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export function Chat() {\n    return <div>Chat</div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"src/pages/Collection/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export function Collection() {\n    return <div>Collection</div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"src/pages/Notification/index.tsx"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export function Notification() {\n    return <div>Notification</div>\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"在 index.tsx 里导入这些组件后，我们跑起来看看："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"npm run dev\n"})}),"\n",(0,a.jsx)(e.p,{children:"点击菜单项的路由切换，以及刷新选中对应菜单项，都没问题。"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:j,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后来写下好友页面："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:f,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Badge, Button, Form, Input, Popconfirm, Table, message } from "antd";\nimport { useCallback, useEffect, useMemo, useState } from "react";\nimport \'./index.css\';\nimport { ColumnsType } from "antd/es/table";\nimport { useForm } from "antd/es/form/Form";\n\ninterface SearchFriend {\n    name: string;\n}\n\ninterface FriendshipSearchResult {\n    id: number;\n    username: string;\n    nickName: string;\n    headPic: string;\n    email: string;\n}\n\nexport function Friendship() {\n    const [friendshipResult, setFriendshipResult] = useState<Array<FriendshipSearchResult>>([]);\n\n    const columns: ColumnsType<FriendshipSearchResult> = useMemo(() => [\n        {\n            title: \'昵称\',\n            dataIndex: \'nickName\'\n        },\n        {\n            title: \'头像\',\n            dataIndex: \'headPic\',\n            render: (_, record) => (\n                <div>\n                    <img src={record.headPic}/>\n                </div>\n            )\n        },\n        {\n            title: \'邮箱\',\n            dataIndex: \'email\'\n        },\n        {\n            title: \'操作\',\n            render: (_, record) => (\n                <div>\n                    <a href="#">聊天</a>\n                </div>\n            )\n        }\n    ], []);\n\n    const searchFriend = async (values: SearchFriend) => {\n        \n    };\n\n    const [form ]  = useForm();\n\n    useEffect(() => {\n        searchFriend({\n            name: form.getFieldValue(\'name\')\n        });\n    }, []);\n\n\n    return <div id="friendship-container">\n        <div className="friendship-form">\n            <Form\n                form={form}\n                onFinish={searchFriend}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="名称" name="name">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=" ">\n                    <Button type="primary" htmlType="submit">\n                        搜索\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="friendship-table">\n            <Table columns={columns} dataSource={friendshipResult} style={{width: \'1000px\'}}/>\n        </div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"上面是 form、下面是 table。"}),"\n",(0,a.jsx)(e.p,{children:"调用搜索接口来搜索列表数据，然后设置到 table 的 dataSource。"}),"\n",(0,a.jsx)(e.p,{children:"css 部分如下："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-css",children:"#friendship-container {\n    padding: 20px;\n}\n#friendship-container .friendship-form {\n    margin-bottom: 30px;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"看下效果："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:x,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后我们对接下后端接口："}),"\n",(0,a.jsx)(e.p,{children:"当时我们的好友列表接口没支持按照昵称搜索，加一下："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:u,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:h,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"return res.filter((item: User) => item.nickName.includes(name))\n"})}),"\n",(0,a.jsx)(e.p,{children:"试下效果："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:m,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:p,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,a.jsx)(e.p,{children:"然后在前端页面调用下："}),"\n",(0,a.jsx)(e.p,{children:"在 interfaces 调用下 list 接口："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export async function friendshipList(name?: string) {\n    return axiosInstance.get(`/friendship/list?name=${name || ''}`);\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"组件里调用下："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"const searchFriend = async (values: SearchFriend) => {\n    try{\n        const res = await friendshipList(values.name || '');\n\n        if(res.status === 201 || res.status === 200) {\n            setFriendshipResult(res.data.map((item: FriendshipSearchResult) => {\n                return {\n                    ...item,\n                    key: item.id\n                }\n            }));\n        }\n    } catch(e: any){\n        message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n    }\n};\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:o,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,a.jsx)(e.p,{children:"然后我们同样的方式写下 Group 组件："}),"\n",(0,a.jsx)(e.p,{children:"之前的 /chatroom/list 接口也没支持 name 参数，加一下："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:l,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"测试下："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:c,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:t,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"在 interfaces 加一下："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export async function chatroomList(name: string) {\n    return axiosInstance.get(`/chatroom/list?name=${name}`);\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"写下 Group 组件："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Badge, Button, Form, Input, Popconfirm, Table, message } from "antd";\nimport { useCallback, useEffect, useMemo, useState } from "react";\nimport \'./index.css\';\nimport { ColumnsType } from "antd/es/table";\nimport { useForm } from "antd/es/form/Form";\nimport { chatroomList } from "../../interfaces";\n\ninterface SearchGroup {\n    name: string;\n}\n\ninterface GroupSearchResult {\n    id: number;\n    name: string;\n    createTime: Date;\n}\n\nexport function Group() {\n    const [groupResult, setGroupResult] = useState<Array<GroupSearchResult>>([]);\n\n    const columns: ColumnsType<GroupSearchResult> = useMemo(() => [\n        {\n            title: \'名称\',\n            dataIndex: \'name\'\n        },\n        {\n            title: \'创建时间\',\n            dataIndex: \'createTime\'\n        },\n        {\n            title: \'操作\',\n            render: (_, record) => (\n                <div>\n                    <a href="#">聊天</a>\n                </div>\n            )\n        }\n    ], []);\n\n    const searchGroup = async (values: SearchGroup) => {\n        try{\n            const res = await chatroomList(values.name || \'\');\n\n            if(res.status === 201 || res.status === 200) {\n                setGroupResult(res.data.map((item: GroupSearchResult) => {\n                    return {\n                        ...item,\n                        key: item.id\n                    }\n                }));\n            }\n        } catch(e: any){\n            message.error(e.response?.data?.message || \'系统繁忙，请稍后再试\');\n        }\n    };\n\n    const [form ]  = useForm();\n\n    useEffect(() => {\n        searchGroup({\n            name: form.getFieldValue(\'name\')\n        });\n    }, []);\n\n\n    return <div id="group-container">\n        <div className="group-form">\n            <Form\n                form={form}\n                onFinish={searchGroup}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="名称" name="name">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=" ">\n                    <Button type="primary" htmlType="submit">\n                        搜索\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="group-table">\n            <Table columns={columns} dataSource={groupResult} style={{width: \'1000px\'}}/>\n        </div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"还有 css"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-css",children:"#group-container {\n    padding: 20px;\n}\n#group-container .group-form {\n    margin-bottom: 30px;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"测试下："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:i,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-backend",target:"_blank",rel:"noopener noreferrer",children:"后端代码"})}),"\n",(0,a.jsxs)(e.h2,{id:"总结",children:["总结",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"这节我们实现了好友和群聊的列表和搜索。"}),"\n",(0,a.jsx)(e.p,{children:"首先我们添加了二级路由，通过 Menu 组件实现了菜单，点击切换不同页面。"}),"\n",(0,a.jsx)(e.p,{children:"然后实现了好友列表和群聊列表，搜索框输入内容，点击搜索调用 list 接口，返回的数据设置到 table。"}),"\n",(0,a.jsx)(e.p,{children:"这样，好友和群聊列表就完成了"})]})}function E(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(k,{...n})}):k(n)}let N=E;E.__RSPRESS_PAGE_META={},E.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F185.%20%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%9A%E5%A5%BD%E5%8F%8B%E2%88%95%E7%BE%A4%E8%81%8A%E5%88%97%E8%A1%A8%E9%A1%B5%E9%9D%A2.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"185. 聊天室：好友∕群聊列表页面",headingTitle:"185. 聊天室：好友∕群聊列表页面",frontmatter:{}}}}]);