"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["84574"],{370385:function(n,e,c){n.exports=c.p+"static/image/3a0c8d6a403cd2da8d37bbcb25921f4e.465555a5.webp"},855254:function(n,e,c){c.r(e),c.d(e,{default:()=>I});var s=c(552676),a=c(740453),i=c(370385);let r=c.p+"static/image/b16c7a633a43068be2f4799fe7c8fdb4.f25cf0ae.webp",t=c.p+"static/image/832f3ca5ff9db8594cb8e7ed1266b10f.2fc84c67.webp",l=c.p+"static/image/f699d7d7751e26840d5dfc3dc078383f.9c81b46d.webp",d=c.p+"static/image/941206b2980cd31defb5da6b96e8fbca.c03d61f1.webp",o=c.p+"static/image/404bcbd80cdafa49efc02ab0618f2528.a42262ca.webp",p=c.p+"static/image/d58918972e1818cef9ef1ff4e5827a48.1b2b07ba.webp",j=c.p+"static/image/2f4ea270e7d3fe33b58bab874b6b6ba7.021ac891.webp",x=c.p+"static/image/21a58b47467b81ef517a901029c03d90.802ce1b9.webp",h=c.p+"static/image/dbc10950fb48846f3ab9ad76db95a97e.0a3b8986.webp",g=c.p+"static/image/33170c92f67a914b18a03613dca42247.bdc79cb6.webp",b=c.p+"static/image/b25b9a081012862493587fee186245a2.5b437227.webp",m=c.p+"static/image/016f7d9c24e382af5691dc26dd5f503c.b32a2a6b.webp",f=c.p+"static/image/b8502ae6e39662bc2d8c496e5831e204.922992fc.webp",u=c.p+"static/image/9298832ea0f7438536626c15b37aa6aa.31c8c1ba.webp",w=c.p+"static/image/9161d1a4b78e337c7cf8e733501214a6.f8c4c58c.webp",E=c.p+"static/image/109fe082c01a7647a3a9fa9f03d2914e.3157ba55.gif",N=c.p+"static/image/ecceb101bb00b6818c9a542b1bad0cc0.fec62bd4.webp",v=c.p+"static/image/e6604af895dbcf763a921ad97ab7dd3c.798610e8.webp",A=c.p+"static/image/560720f93599f22ce4254ed2dbe1c692.67d6a677.webp",S=c.p+"static/image/835cd874b42e65681cec0d9056730235.de3308c9.webp",_=c.p+"static/image/8511030fe19715a15053e26572ca5bb3.0cd2d644.webp",C=c.p+"static/image/27f5f85af40de7aadc1a769be5d35c5d.4ca8f605.webp",U=c.p+"static/image/cf9cc8ff75cda1059837b80b6643ecde.7d5afe8e.webp",D=c.p+"static/image/f9b6f2aab11c2c0caf74bc1b1ad4d844.f52039db.webp";function P(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"144-用-nacos-实现微服务配置中心和注册中心",children:["144. 用 Nacos 实现微服务配置中心和注册中心",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#144-用-nacos-实现微服务配置中心和注册中心",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"前面学了用 etcd 做配置中心和注册中心，这节来学习用 nacos 来做。"}),"\n",(0,s.jsx)(e.p,{children:"首先，通过 docker 把 nacos 服务跑起来："}),"\n",(0,s.jsx)(e.p,{children:"搜索 nacos/nacos-server 的镜像："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"填一下启动参数："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"指定环境变量 MODE 为 standalone，也就是单机启动。"}),"\n",(0,s.jsx)(e.p,{children:"启动后可以看到打印的一个网页地址："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"把 ip 替换成 localhost 就可以访问了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"我们创建个 node 服务来连接 nacos："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"mkdir nacos-node-test\ncd ./nacos-node-test\nnpm init -y\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"进入项目，安装 nacos 的包："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npm install --save nacos\n"})}),"\n",(0,s.jsx)(e.p,{children:"创建 index.js"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import Nacos from 'nacos'\n\nconst client = new Nacos.NacosNamingClient({\n    serverList: ['127.0.0.1:8848'],\n    namespace: 'public',\n    logger: console\n})\n\nawait client.ready()\n\nconst aaaServiceName = 'aaaService'\n\nconst instance1 =  {\n    ip: '127.0.0.1',\n    port: 8080\n}\n\nclient.registerInstance(aaaServiceName, instance1)\n\nconst instance2 =  {\n    ip: '127.0.0.1',\n    port: 8081\n}\n\nclient.registerInstance(aaaServiceName, instance2)\n"})}),"\n",(0,s.jsx)(e.p,{children:"这里创建了 NacosNamingClient，就是注册中心的客户端。"}),"\n",(0,s.jsx)(e.p,{children:"连接上之后，registerInstance 注册 aaa 服务的两个实例。"}),"\n",(0,s.jsx)(e.p,{children:"改下 package.json"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"type 设置为 module，就是所有的 js 文件都是 es module 的。"}),"\n",(0,s.jsx)(e.p,{children:"这样就可以直接跑 es module 的代码了。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"node ./index.js\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后我们去 nacos 的控制台页面看一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"在服务列表可以看到，aaaService 有两个实例。"}),"\n",(0,s.jsx)(e.p,{children:"点开详情看下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"可以看到我们通过代码注册的两个实例。"}),"\n",(0,s.jsx)(e.p,{children:"可以注册，自然也可以取消注册"}),"\n",(0,s.jsx)(e.p,{children:"写下 index2.js"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import Nacos from 'nacos'\n\nconst client = new Nacos.NacosNamingClient({\n    serverList: ['127.0.0.1:8848'],\n    namespace: 'public',\n    logger: console\n})\n\nawait client.ready()\n\nconst aaaServiceName = 'aaaService'\n\nconst instance1 =  {\n    ip: '127.0.0.1',\n    port: 8080\n}\n\nclient.deregisterInstance(aaaServiceName, instance1)\n\nconst instance2 =  {\n    ip: '127.0.0.1',\n    port: 8081\n}\n\nclient.deregisterInstance(aaaServiceName, instance2)\n"})}),"\n",(0,s.jsx)(e.p,{children:"只是把 registerInstance 换成 deregisterInstance"}),"\n",(0,s.jsx)(e.p,{children:"跑一下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"node ./index2.js\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"现在 aaaService 就没有实例了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"除了新增、删除，当然也可以查询实例，以及监听实例变化："}),"\n",(0,s.jsx)(e.p,{children:"创建 index3.js"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import Nacos from 'nacos'\n\nconst client = new Nacos.NacosNamingClient({\n    serverList: ['127.0.0.1:8848'],\n    namespace: 'public',\n    logger: console\n})\n\nawait client.ready()\n\nconst instances = await client.getAllInstances('aaaService');\n\nconsole.log(instances);\n"})}),"\n",(0,s.jsx)(e.p,{children:"getAllInstances 就是查询 service 实例的方法。"}),"\n",(0,s.jsx)(e.p,{children:"先跑下 index.js 注册下，然后再跑下 index3.js 查询："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"node ./index.js\nnode ./index3.js\n"})}),"\n",(0,s.jsx)(e.p,{children:"可以看到，查到了 aaaService 的两个实例："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"此外，还可以监听 service 实例的变化："}),"\n",(0,s.jsx)(e.p,{children:"创建 index4.js"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import Nacos from 'nacos'\n\nconst client = new Nacos.NacosNamingClient({\n    serverList: ['127.0.0.1:8848'],\n    namespace: 'public',\n    logger: console\n})\n\nawait client.ready()\n\nclient.subscribe('aaaService', content => {\n    console.log(content);\n});\n"})}),"\n",(0,s.jsx)(e.p,{children:"跑一下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"node ./index4.js\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后另开一个 terminal 跑下 index.js 来注册实例："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"之后再跑 index2.js 去掉一个实例。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这时候在 index4.js 就监听到了这个变化："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"当实例改变的时候，就会调用回调函数，传入现在可用的实例。"}),"\n",(0,s.jsx)(e.p,{children:"在控制台页面也可以看到，确实只有一个实例了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样，服务注册、取消注册、服务发现、监听变化，我们就都过了一遍，平常用的也是这些功能。"}),"\n",(0,s.jsx)(e.p,{children:"接下来再看下 Nacos 作为配置中心的用法："}),"\n",(0,s.jsx)(e.p,{children:"新建 index5.js"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import { NacosConfigClient } from 'nacos'\n\nconst client = new NacosConfigClient({\n    serverAddr: 'localhost:8848',\n})\n\nconst content = await client.publishSingle('config', 'DEFAULT_GROUP', '{\"host\":\"127.0.0.1\",\"port\":8848}')\n\n// await client.remove('config', 'DEFAULT_GROUP')\n\n// const config = await client.getConfig('config', 'DEFAULT_GROUP')\n\n// console.log(config)\n\n// client.subscribe({ dataId: 'config', group: 'DEFAULT_GROUP', },\n//     content => {\n//         console.log(content)\n//     }\n// )\n"})}),"\n",(0,s.jsx)(e.p,{children:"分别调用了新增、删除、查询、监听的 api。"}),"\n",(0,s.jsx)(e.p,{children:"我们把下面的注释掉，先看新增："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"node index5.js\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"跑完之后可以在 nacos 控制台页面看到新增的这个配置："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后试下查询："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"再试下删除："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"最后试下监听变化："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import { NacosConfigClient } from 'nacos'\n\nconst client = new NacosConfigClient({\n    serverAddr: 'localhost:8848',\n})\n\nconst content = await client.publishSingle('config', 'DEFAULT_GROUP', '{\"host\":\"127.0.0.1\",\"port\":8848}')\n\nclient.subscribe({ dataId: 'config', group: 'DEFAULT_GROUP' },\n    content => {\n        console.log(content)\n    }\n)\n\nsetTimeout(() => {\n    client.publishSingle('config', 'DEFAULT_GROUP', '{\"host\":\"127.0.0.1\",\"port\":5000}')\n}, 3000)\n\n// await client.remove('config', 'DEFAULT_GROUP')\n\n// const config = await client.getConfig('config', 'DEFAULT_GROUP')\n\n// console.log(config)\n"})}),"\n",(0,s.jsx)(e.p,{children:"我们先 publishSingle  增加配置、然后 3s 后再 publishSingle 修改下这个配置。"}),"\n",(0,s.jsx)(e.p,{children:"可以看到 subscribe 监听到了配置变化，打印了最新配置。"}),"\n",(0,s.jsx)(e.p,{children:"这样，配置新增、删除、修改、查询、监听，我们就都过了一遍。"}),"\n",(0,s.jsxs)(e.p,{children:["案例代码上传了",(0,s.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/nacos-node-test",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,s.jsxs)(e.h2,{id:"总结",children:["总结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节我们学了 nacos 作为配置中心、注册中心的用法。"}),"\n",(0,s.jsx)(e.p,{children:"作为注册中心就是注册服务的实例，比如 aaaService 有多个服务实例的时候，可以分别用 registerService、deregisterInstance、getAllInstances、subscribe 实现新增、删除、查询、监听。"}),"\n",(0,s.jsx)(e.p,{children:"作为配置中心就是管理配置，可以分别用 publishSingle、remove、getConfig、subscribe 实现新增（修改）、删除、查询、监听。"}),"\n",(0,s.jsx)(e.p,{children:"nacos 相比 etcd，多了内置的控制台页面，比较方便。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"注册中心、配置中心用起来还是很简单的，但确是微服务架构必不可少的功能。"})]})}function F(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(P,{...n})}):P(n)}let I=F;F.__RSPRESS_PAGE_META={},F.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F144.%20%E7%94%A8%20Nacos%20%E5%AE%9E%E7%8E%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"144. 用 Nacos 实现微服务配置中心和注册中心",headingTitle:"144. 用 Nacos 实现微服务配置中心和注册中心",frontmatter:{}}}}]);