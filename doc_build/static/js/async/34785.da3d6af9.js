"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["34785"],{111009:function(e,n,i){i.r(n),i.d(n,{default:()=>p});var s=i(552676),l=i(740453);let c=i.p+"static/image/8c415d8263a5504bcec47df2c04aaace.1b98ff56.webp",a=i.p+"static/image/24c0aeac43bee82b5cc48bfbd5c62190.10ffd3f4.webp",r=i.p+"static/image/32052da0513a74ef698308b15fc56065.ff0db34e.webp",t=i.p+"static/image/0fc65433d4148d9b83fae7ca57c9d32b.56297913.webp",d=i.p+"static/image/9c78a0b419ccd2436769856f7a9f24dc.b0248f3d.webp";function h(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",code:"code",pre:"pre",strong:"strong",ul:"ul",li:"li",ol:"ol"},(0,l.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"15-实战5导航三我的页面开发",children:["15 实战5：导航三：我的页面开发",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#15-实战5导航三我的页面开发",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"本节主要讲头部 + 页面布局，讲解添加头部标题栏基础功能。"}),"\n",(0,s.jsxs)(n.h2,{id:"头部--页面布局",children:["头部 + 页面布局",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#头部--页面布局",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["从实战开发开始的两个页面都没有添加头部标题栏，只是把标题栏进行了取消。在项目的根目录下的 pages.json 文件，设置 app-plus 的 ",(0,s.jsx)(n.code,{children:"titleNView"})," 为 ",(0,s.jsx)(n.code,{children:"false"})," 即可；"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'/* pages.json */\n{\n	"path": "pages/mine/index",\n	"style": {\n		"navigationBarTitleText": "我的",\n		"app-plus":{\n			"titleNView": false\n		}\n	}\n},\n'})}),"\n",(0,s.jsx)(n.p,{children:"视频页实际头部效果："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这个页面的标题栏开发会相对容易一些，因此拿到这里来讲开发导航栏。"}),"\n",(0,s.jsx)(n.p,{children:"由于 h5 是运行在浏览器中的，我们并不能对标题栏进行样式设置，故在差异化下，H5 没有应用头部。但是在 app 我们是可以设置标题栏的，新版的小程序也开始支持标题栏的设置。我们的 Uniapp 项目并不是操作原生 app 组件，因此标题栏的设置可以说是 webview 的一个样式模拟。取消标题栏的是以手机状态栏（电池栏）开始自上而下排版的，这一块我们也要隔开。"}),"\n",(0,s.jsx)(n.p,{children:"看到开头的大图，图片上画的两个很明显的边框分为两块，头部与内容区。要想更接近 app 的原生效果，就要看页面的组成。我们在写页面的时候可以把导航栏固定，然后内容区用 scroll-view 组件撑开整个页面："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<view>\n	<view class="navbar">\n		\x3c!-- 这里是标题栏 --\x3e\n	</view>\n	<scroll-view scroll-y="true" class="page-content">\n		这里是内容区\n	</scroll-view>\n</view>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".navbar{\n	position: fixed;\n	top:0;\n	width:100%;\n	height:44px;\n}\n.page-content {\n	position: fixed;\n	top: 44px;   // 距离标题栏高度\n	left: 0;\n	right: 0;\n	bottom: 0px;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"这样就可以实现基本的页面布局，内容区铺满整个页面（除标题栏外和底部导航）。"}),"\n",(0,s.jsx)(n.p,{children:"在这里我们可以使用 Uniapp 官方的扩展组件 NavBar 导航栏。可以友好的处理左右边的事件，甚至可以以插槽的方式自定义功能复杂的标题栏。因此可以改造代码："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<view>\n	\x3c!-- #ifdef APP-PLUS || MP-WEIXIN --\x3e\n	<uni-nav-bar fixed :status-bar="true" title="我的音乐" @clickLeft="goCloud" @clickRight="goCloud">\n		<block slot="left"><image class="top-img left" src="/static/image/mine/l.png"></image></block>\n		\x3c!-- #ifdef APP-PLUS --\x3e\n		<block slot="right"><image class="top-img" src="/static/image/mine/r.png"></image></block>\n		\x3c!-- #endif --\x3e\n	</uni-nav-bar>\n	\x3c!-- #endif --\x3e\n	\x3c!-- #ifdef APP-PLUS || MP-WEIXIN --\x3e\n	<scroll-view scroll-y="true" class="page-content">\n	\x3c!-- #endif --\x3e\n		这里是内容区\n	\x3c!-- #ifdef APP-PLUS || MP-WEIXIN --\x3e\n	</scroll-view>\n	\x3c!-- #endif --\x3e\n</view>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["固定导航栏在 ",(0,s.jsx)(n.code,{children:"uni-nav-bar"})," 组件中添加 fixed，添加 ",(0,s.jsx)(n.code,{children:':status-bar="true"'})," 适配状态栏的高度下渲染，并添加左右触发事件回调。由于这一块仅在 app 中需要设置标题栏，因此代码进行了条件编译 ",(0,s.jsx)(n.code,{children:"\x3c!-- #ifdef APP-PLUS --\x3e"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"添加完头部标题栏的 APP 页面效果图："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"添加完头部标题栏的微信小程序页面效果图："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["小程序的载体是运营方 app，会有运营方的设计差异在。因此在设计整个项目之初，哪些功能是否适用的，是否可以在这个端使用的，都要做出评估。功能设计上也要有所取舍。如果产品经理设计一个功能需要在 H5 中调用用户的通讯录，就算程序员再优秀或者框架再实用，H5 也是做不到的调用通讯录的。",(0,s.jsx)(n.strong,{children:"开发之前要考虑他们所提供的 API 和性能能否满足产品需求"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"app小程序与-h5-的能力对比",children:["App、小程序与 H5 的能力对比",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#app小程序与-h5-的能力对比",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"App 能够承载更多产品功能，一些复杂的功能能够通过原生实现；"}),"\n",(0,s.jsx)(n.li,{children:"小程序可承载产品核心功能，较复杂的功能难以实现，优点是用完就走，缺点是需要在某个平台的 app 下打开，数据难以共享；"}),"\n",(0,s.jsx)(n.li,{children:"H5能够脱离生态下运行，打开即可。一个网站多终端匹配。但是数据难以持久化，网页关闭后需要重新加载。根据手机的性能用户体验各有差别，流畅度不够高。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"就比如这款 Uniapp Music 应用，我做一些取舍小改动，顶部右侧的功能图标不在小程序显示："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'\x3c!-- #ifdef APP-PLUS --\x3e\n\x3c!-- 条件编译后只在 app 显示 --\x3e\n<block slot="right"><image class="top-img" src="/static/image/mine/r.png"></image></block>\n\x3c!-- #endif --\x3e\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"通过这个头部的组件应用介绍，整个应用都可以改造成自定义的标题栏，在这里组件与插槽 slot 的优点就显露出来了。复用的同时又可以实现功能的自定义。下面我们看一下 slot 插槽的使用。"}),"\n",(0,s.jsxs)(n.h2,{id:"slot-插槽的使用场景",children:["slot 插槽的使用场景",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#slot-插槽的使用场景",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"父组件向子组件传递 dom 时会用到插槽。插槽，也就是 slot，是组件的一块模板，这块模板显示不显示、以及怎样显示由父组件来决定。比如头部代码的具名插槽："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<uni-nav-bar fixed :status-bar="true" title="我的音乐" @clickLeft="goCloud" @clickRight="goCloud">\n	<block slot="left"><image class="top-img left" src="/static/image/mine/l.png"></image></block>\n	<block slot="right"><image class="top-img" src="/static/image/mine/r.png"></image></block>\n</uni-nav-bar>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'\x3c!-- uni-nav-bar.vue 组成 --\x3e\n<view class="uni-navbar">\n	<slot name="left" /> \x3c!-- 我会被替换成 <image class="top-img left" src="/static/image/mine/l.png"></image> --\x3e\n	<view>标题</view>\n	<slot name="right" />\n</view>\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:'slot="left"'}),"，",(0,s.jsx)(n.code,{children:'slot="right"'}),"，这两个指定了名字，因此叫具名插槽，会在子组件指定的位置渲染。比如 ",(0,s.jsx)(n.code,{children:'slot="left"'})," 的这个元素会在组件 ",(0,s.jsx)(n.code,{children:"uni-nav-bar"})," 中 ",(0,s.jsx)(n.code,{children:'<slot name="left" />'})," 显示，相当于替换掉了。插槽显示的位置由子组件自身决定，slot 在子组件中的位置，决定了父组件传过来的显示模板的位置。"]}),"\n",(0,s.jsxs)(n.h2,{id:"导航栏-scroll-view",children:["导航栏 scroll-view",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#导航栏-scroll-view",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["页面的整个内容区由 scroll-view 组件包裹，当前页面的导航栏也是由 scroll-view 组件组成，内容区主要负责用户上下浏览设置 ",(0,s.jsx)(n.code,{children:"scroll-y"}),"，而导航栏负责左右浏览设置 ",(0,s.jsx)(n.code,{children:"scroll-x"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"注重整页的布局，尽可能的还原 app 浏览模式；"}),"\n",(0,s.jsx)(n.li,{children:"标题栏可以使用官方的扩展组件 uni-nav-bar；"}),"\n",(0,s.jsx)(n.li,{children:"插槽 slot 的使用可以在父级中自定义组件的功能，指定名称可以决定显示模板的位置；"}),"\n",(0,s.jsx)(n.li,{children:"开发应用之前要考虑不同 app 、小程序、H5所提供的 API 和性能能否满足产品需求，这是开发设计的首要考虑的地方。"}),"\n",(0,s.jsxs)(n.li,{children:["本章代码 ",(0,s.jsx)(n.a,{href:"https://github.com/front-end-class/uniapp-music-code/blob/master/uni-course-%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%E6%88%91%E7%9A%84%E9%A1%B5.zip",target:"_blank",rel:"noopener noreferrer",children:"uni-course-实战开发我的页"}),"。"]}),"\n"]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}let p=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["Uniapp%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6%2F15%20%E5%AE%9E%E6%88%985%EF%BC%9A%E5%AF%BC%E8%88%AA%E4%B8%89%EF%BC%9A%E6%88%91%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91.md"]={toc:[{text:"头部 + 页面布局",id:"头部--页面布局",depth:2},{text:"App、小程序与 H5 的能力对比",id:"app小程序与-h5-的能力对比",depth:2},{text:"slot 插槽的使用场景",id:"slot-插槽的使用场景",depth:2},{text:"导航栏 scroll-view",id:"导航栏-scroll-view",depth:2},{text:"小结",id:"小结",depth:2}],title:"15 实战5：导航三：我的页面开发",headingTitle:"15 实战5：导航三：我的页面开发",frontmatter:{}}}}]);