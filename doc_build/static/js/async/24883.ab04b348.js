"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["24883"],{590019:function(e,n,s){s.r(n),s.d(n,{default:()=>D});var r=s(552676),d=s(740453);let i=s.p+"static/image/20091984a3d63e937563ff65e26aeaca.486b5ca2.webp",a=s.p+"static/image/87e12bcc876fac4e8fee1be35a8da1cb.97748efb.webp",c=s.p+"static/image/b56c2fc3e43519d2299a54a4ad064b53.b20c6455.webp",t=s.p+"static/image/eb49e72c1bf66fba426701b34eaed658.d993bc0b.webp",l=s.p+"static/image/88083a99c05bb7da9c2018469a403927.c94552f3.webp",x=s.p+"static/image/51321a2c237ffc44ce88be05d3d3b7dc.f78cb9b4.webp",h=s.p+"static/image/71200560a9792ad38d6582a110cceaa1.7a3826a1.webp",j=s.p+"static/image/2df9eea047f9aa16e6053c49a2d054da.40777f15.webp",p=s.p+"static/image/cf75a8b148f31c22a329910b9824b1f8.9f646927.webp",m=s.p+"static/image/cd30634219420933add31cca0b82ffdd.9839d721.webp",o=s.p+"static/image/fff7b1a0ce0dd79c981a3978fd68ea8d.3cc07fe2.webp",u=s.p+"static/image/c352c5214fe284757a0201c8599692f6.e72ce9f5.webp",g=s.p+"static/image/412588148a7bc8c9d28ebf85a3e9de73.860328be.webp",b=s.p+"static/image/465850dbf02a99a710adbac4f8ec5133.cd8930a7.webp",f=s.p+"static/image/55e19f7fe0cd9e92d9d0869a987e8bba.336c3e90.webp",v=s.p+"static/image/b2fa4103af613a63fc53b6a51bcf222b.ac0b33d1.webp",I=s.p+"static/image/8b381f053369c261bf4871dffcbce949.af7d75b5.webp",E=s.p+"static/image/c3e961ef7d62b8b905a9238fde003469.a89a6f1d.webp",S=s.p+"static/image/631a0e203c846de0f9ad0af49402c4a8.e8941def.webp",w=s.p+"static/image/7cadd162e375d305653701b0aec0f9ce.2cefaf80.webp",N=s.p+"static/image/105ace5ba906d32cdffa1723bd3f4125.acdf00df.webp",T=s.p+"static/image/82107ac38150bf678853724b914b4bbf.6f7b2b40.webp",y=s.p+"static/image/12d00bb389e2f6ee1f8179cca3b822fe.a3ae7791.webp";function A(e){let n=Object.assign({h1:"h1",a:"a",p:"p",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",pre:"pre",code:"code",img:"img",h2:"h2"},(0,d.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"160-考试系统考试微服务",children:["160. 考试系统：考试微服务",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#160-考试系统考试微服务",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"这节我们来实现考试微服务的功能。"}),"\n",(0,r.jsx)(n.p,{children:"首先创建考试表："}),"\n",(0,r.jsxs)(n.table,{children:["\n",(0,r.jsxs)(n.thead,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.th,{children:"字段名"}),"\n",(0,r.jsx)(n.th,{children:"数据类型"}),"\n",(0,r.jsx)(n.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.tbody,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"id"}),"\n",(0,r.jsx)(n.td,{children:"INT"}),"\n",(0,r.jsx)(n.td,{children:"考试ID"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"createUserId"}),"\n",(0,r.jsx)(n.td,{children:"INT"}),"\n",(0,r.jsx)(n.td,{children:"创建者ID"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"name"}),"\n",(0,r.jsx)(n.td,{children:"VARCHAR(50)"}),"\n",(0,r.jsx)(n.td,{children:"考试名"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"isPublish"}),"\n",(0,r.jsx)(n.td,{children:"BOOLEAN"}),"\n",(0,r.jsx)(n.td,{children:"是否发布"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"isDelete"}),"\n",(0,r.jsx)(n.td,{children:"BOOLEAN"}),"\n",(0,r.jsx)(n.td,{children:"是否删除"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"content"}),"\n",(0,r.jsx)(n.td,{children:"TEXT"}),"\n",(0,r.jsx)(n.td,{children:"试卷内容 JSON"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"create_time"}),"\n",(0,r.jsx)(n.td,{children:"DATETIME"}),"\n",(0,r.jsx)(n.td,{children:"创建时间"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"update_time"}),"\n",(0,r.jsx)(n.td,{children:"DATETIME"}),"\n",(0,r.jsx)(n.td,{children:"更新时间"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"改下 prisma 的 shema 文件："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model User {\n  id  Int @id @default(autoincrement())\n  username String @db.VarChar(50) @unique\n  password String @db.VarChar(50)\n  email String @db.VarChar(50)\n  createTime DateTime @default(now())\n  updateTime DateTime @updatedAt\n\n  exams  Exam[]\n}\n\nmodel Exam {\n  id  Int @id @default(autoincrement())\n  name String @db.VarChar(50)\n  isPublish Boolean @default(false)\n  isDelete Boolean @default(false)\n  content String @db.Text \n  createTime DateTime @default(now())\n  updateTime DateTime @updatedAt\n\n  createUserId Int\n  createUser     User  @relation(fields: [createUserId], references: [id])\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"除了基本字段外，还要加一个多对一的关联："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"生成这个表："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npx prisma migrate dev --name exam\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:T,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:N,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:w,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"然后实现下 exam 的几个接口："}),"\n",(0,r.jsxs)(n.table,{children:["\n",(0,r.jsxs)(n.thead,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.th,{children:"接口路径"}),"\n",(0,r.jsx)(n.th,{children:"请求方式"}),"\n",(0,r.jsx)(n.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.tbody,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/add"}),"\n",(0,r.jsx)(n.td,{children:"POST"}),"\n",(0,r.jsx)(n.td,{children:"创建考试"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/delete"}),"\n",(0,r.jsx)(n.td,{children:"DELETE"}),"\n",(0,r.jsx)(n.td,{children:"删除考试"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/list"}),"\n",(0,r.jsx)(n.td,{children:"GET"}),"\n",(0,r.jsx)(n.td,{children:"考试列表"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/save"}),"\n",(0,r.jsx)(n.td,{children:"POST"}),"\n",(0,r.jsx)(n.td,{children:"保存试卷内容"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/publish"}),"\n",(0,r.jsx)(n.td,{children:"GET"}),"\n",(0,r.jsx)(n.td,{children:"发布考试"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"在 exam 微服务改一下 ExamController："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Post('add')\n@RequireLogin()\nasync add(@Body() dto: ExamAddDto, @UserInfo('userId') userId: number) {\n    return this.examService.add(dto, userId);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"创建考试需要关联用户，所以需要登录，拿到用户信息。"}),"\n",(0,r.jsx)(n.p,{children:"加一下全局的 Guard："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:S,alt:"image.png"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"{\n  provide: APP_Guard,\n  useClass: AuthGuard\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"创建用到的 dto："}),"\n",(0,r.jsx)(n.p,{children:"dto/exam-add.dto.ts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { IsNotEmpty } from \"class-validator\";\n\nexport class ExamAddDto {\n    @IsNotEmpty({ message: '考试名不能为空' })\n    name: string;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"还有  service："}),"\n",(0,r.jsxs)(n.p,{children:["引入 PrismaModule：\n",(0,r.jsx)("img",{src:E,alt:""})]}),"\n",(0,r.jsx)(n.p,{children:"注入 PrismaService，实现关联插入："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Inject, Injectable } from '@nestjs/common';\nimport { ExamAddDto } from './dto/exam-add.dto';\nimport { PrismaService } from '@app/prisma';\n\n@Injectable()\nexport class ExamService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  @Inject(PrismaService)\n  private prismaService: PrismaService;\n\n  async add(dto: ExamAddDto, userId: number) {\n\n    return this.prismaService.exam.create({\n      data: {\n        name: dto.name,\n        content: '',\n        createUser: {\n          connect: {\n              id: userId\n          }\n        }\n      }\n    })\n  }\n}\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"然后在 main.ts 加一下 ValidationPipe："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:I,alt:"image.png"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"app.useGlobalPipes(new ValidationPipe({ transform: true }));\n"})}),"\n",(0,r.jsx)(n.p,{children:"把 user 和 exam 服务跑起来："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm run start:dev user\nnpm run start:dev exam\n"})}),"\n",(0,r.jsx)(n.p,{children:"测试下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"它会提示你找不到 JwtService："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"我们之前在 UserModule 用的时候是引入了 JwtModule 所以才能找到："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"但每个微服务都引入 JwtService 明显不好。"}),"\n",(0,r.jsx)(n.p,{children:"在 CommonModule 里引入就好了："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"JwtModule.registerAsync({\n  global: true,\n  useFactory() {\n    return {\n      secret: 'guang',\n      signOptions: {\n        expiresIn: '30m' // 默认 30 分钟\n      }\n    }\n  }\n}),\n"})}),"\n",(0,r.jsx)(n.p,{children:"然后在 UserModule、ExamModule 里引入 CommonModule，自然也就引入了 JwtModule："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"再跑下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"带上 token 访问接口。"}),"\n",(0,r.jsx)(n.p,{children:"可以看到创建成功了。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"然后我们再实现下 list 接口："}),"\n",(0,r.jsx)(n.p,{children:"添加一个路由："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Get('list')\n@RequireLogin()\nasync list(@UserInfo('userId') userId: number) {\n    return this.examService.list(userId);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 service 实现 list 方法："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"async list(userId: number) {\n    return this.prismaService.exam.findMany({\n      where: {\n        createUserId: userId\n      }\n    })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"查询当前用户的所有考试。"}),"\n",(0,r.jsx)(n.p,{children:"测试下："}),"\n",(0,r.jsxs)(n.p,{children:["先创建一个：\n",(0,r.jsx)("img",{src:j,alt:""})]}),"\n",(0,r.jsxs)(n.p,{children:["查询下：\n",(0,r.jsx)("img",{src:h,alt:""})]}),"\n",(0,r.jsx)(n.p,{children:"没啥问题。"}),"\n",(0,r.jsx)(n.p,{children:"然后继续实现删除考试接口："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Delete('delete/:id')\n@RequireLogin()\nasync del(@UserInfo('userId') userId: number, @Param('id') id: string) {\n  return this.examService.delete(userId, +id);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 service 里实现下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"async delete(userId: number, id: number) {\n    return this.prismaService.exam.update({\n      where: {\n        id,\n        createUserId: userId\n      },\n      data: {\n        isDelete: true\n      }\n    })\n  }\n"})}),"\n",(0,r.jsx)(n.p,{children:"因为有回收站功能，所以这里只做逻辑删除，把 isDelete 设置为 true 就行。"}),"\n",(0,r.jsx)(n.p,{children:"试下效果："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"当然，这个 list 接口也得改下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Get('list')\n@RequireLogin()\nasync list(@UserInfo('userId') userId: number, @Query('bin') bin: string) {\n    return this.examService.list(userId, bin);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"只要传了 bin 参数，就查询回收站中的，否则返回正常的列表。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"async list(userId: number, bin: string) {\n    return this.prismaService.exam.findMany({\n      where: bin !== undefined ? {\n        createUserId: userId,\n        isDelete: true\n      } : {\n        createUserId: userId,\n      }\n    })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"接下里实现保存考试内容的功能。"}),"\n",(0,r.jsxs)(n.table,{children:["\n",(0,r.jsxs)(n.thead,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.th,{children:"接口路径"}),"\n",(0,r.jsx)(n.th,{children:"请求方式"}),"\n",(0,r.jsx)(n.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.tbody,{children:["\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/add"}),"\n",(0,r.jsx)(n.td,{children:"POST"}),"\n",(0,r.jsx)(n.td,{children:"创建考试"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/delete"}),"\n",(0,r.jsx)(n.td,{children:"DELETE"}),"\n",(0,r.jsx)(n.td,{children:"删除考试"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/list"}),"\n",(0,r.jsx)(n.td,{children:"GET"}),"\n",(0,r.jsx)(n.td,{children:"考试列表"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/save"}),"\n",(0,r.jsx)(n.td,{children:"POST"}),"\n",(0,r.jsx)(n.td,{children:"保存试卷内容"}),"\n"]}),"\n",(0,r.jsxs)(n.tr,{children:["\n",(0,r.jsx)(n.td,{children:"/exam/publish"}),"\n",(0,r.jsx)(n.td,{children:"GET"}),"\n",(0,r.jsx)(n.td,{children:"发布考试"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"这个就是修改 content："}),"\n",(0,r.jsx)(n.p,{children:"添加路由："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Post('save')\n@RequireLogin()\nasync save(@Body() dto: ExamSaveDto) {\n    return this.examService.save(dto);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"创建 dto：\ndto/exam-save.dto.ts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class ExamSaveDto {\n    @IsNotEmpty({ message: '考试 id 不能为空' })\n    id: number;\n\n    @IsString()\n    content: string;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"实现下 service："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"async save(dto: ExamSaveDto) {\n    return this.prismaService.exam.update({\n      where: {\n        id: dto.id\n      },\n      data: {\n        content: dto.content\n      }\n    })\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["测试下：\n",(0,r.jsx)("img",{src:a,alt:""})]}),"\n",(0,r.jsx)(n.p,{children:"保存成功。"}),"\n",(0,r.jsx)(n.p,{children:"最后再来实现发布方法："}),"\n",(0,r.jsx)(n.p,{children:"这个其实也是改个字段，把 exam 的 isPublish 改为 true 就好了："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Get('publish/:id')\n@RequireLogin()\nasync publish(@UserInfo('userId') userId: number, @Param('id') id: string) {\n    return this.examService.publish(userId, +id);\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"async publish(userId: number, id: number) {\n    return this.prismaService.exam.update({\n      where: {\n        id,\n        createUserId: userId\n      },\n      data: {\n        isPublish: true\n      }\n    })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"测试下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:i,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这样，考试微服务的接口就完成了。"}),"\n",(0,r.jsxs)(n.p,{children:["代码在",(0,r.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exam-system",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:["总结",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"这节我们实现了考试微服务的接口，包括考试列表、考试创建、考试删除、发布考试、保存试卷内容的接口。"}),"\n",(0,r.jsx)(n.p,{children:"当然，具体试卷内容的 JSON 格式还没定，等写前端代码的时候再说。"})]})}function P(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}let D=P;P.__RSPRESS_PAGE_META={},P.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F160.%20%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F%EF%BC%9A%E8%80%83%E8%AF%95%E5%BE%AE%E6%9C%8D%E5%8A%A1.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"160. 考试系统：考试微服务",headingTitle:"160. 考试系统：考试微服务",frontmatter:{}}}}]);