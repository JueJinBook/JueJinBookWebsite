"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["68753"],{935426:function(e,n,a){e.exports=a.p+"static/image/2aeb4b19f62d75477631101f34ccab95.f8b03cdb.gif"},235360:function(e,n,a){e.exports=a.p+"static/image/833523d80ddd17f9d9f387e911203cdb.0c323704.gif"},121927:function(e,n,a){a.r(n),a.d(n,{default:()=>N});var s=a(552676),r=a(740453),c=a(935426),i=a(235360);let d=a.p+"static/image/06d64f298370bf286c7eeef15e568ddf.14f3b12d.gif",t=a.p+"static/image/11dc73091589e4b39726430202bea014.1369fd4f.gif",o=a.p+"static/image/52e3b4504ca9d4de6ccf712f520cf34c.ac45163d.webp",h=a.p+"static/image/3c18aa93d79caad60d5a366a1993ee8e.1026093e.gif",l=a.p+"static/image/7ccf1e8736a53b95a9c2dcbc5142f72d.4d3083e6.gif",p=a.p+"static/image/13c73b2d7edda70c119300f334e0ce30.8751fbcc.gif",j=a.p+"static/image/509c33f8a797db05848d41e36bdad657.64a43e5e.webp",m=a.p+"static/image/324de0c3aea66505602b23587bd4783f.96d05d47.gif",x=a.p+"static/image/d16a1a15d42e892fd972867718af726d.bfa590dc.webp",f=a.p+"static/image/0eaa8470b1b77312921455ca45bd9d27.a4e09d7e.webp",g=a.p+"static/image/5c245aca6e37e71d4054c8bd1f0aa24b.bf7cf4a5.webp",u=a.p+"static/image/a6c4aa755c0126db31566d06e3e565be.8bec7279.webp",b=a.p+"static/image/592d0a415909908a65f5e4465673418f.b9b25045.webp",I=a.p+"static/image/ea7f1c71be355bd2f235c2fdf457de19.0a5d0a93.webp",w=a.p+"static/image/686c82d3f2b16264233edc88a9e66d4a.5ac12164.webp",E=a.p+"static/image/3be24de6eb6e3d9abaaf84adf81d6198.055ef61f.webp",v=a.p+"static/image/455519e0381a4336621c6dfc95fba9e8.52fb3fb0.webp",C=a.p+"static/image/4f7685c031aa26d4d384c8a2fbc03353.6e01f4e9.webp",A=a.p+"static/image/abdc741c1b7060fc2e34119d36b11345.59941489.webp";function _(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"189-聊天室一对一聊天",children:["189. 聊天室：一对一聊天",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#189-聊天室一对一聊天",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"上节实现了聊天界面，但是聊天室不是通过 UI 操作创建的，是我们之前通过接口创建的。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这节就来实现下进入聊天的入口。"}),"\n",(0,s.jsx)(n.p,{children:"也就是这两个："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点击聊天按钮的时候，要创建聊天室，或者查找已有的聊天室，然后带着 id 跳到聊天页面："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"聊天页面选中 id 对应的聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"给聊天按钮加一个点击事件，点击的时候传入对应用户的 id："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<a href="#" onClick={() => {\n    goToChat(record.id)\n}}>聊天</a>\n'})}),"\n",(0,s.jsx)(n.p,{children:"goToChat 能拿到两个用户的 id，自然就能查到对应的聊天室："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"现在没这个接口，我们加一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:I,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"@Get('findChatroom')\nasync findChatroom(@Query('userId1') userId1: string, @Query('userId2') userId2: string) {\n    if(!userId1 || !userId2) {\n      throw new BadRequestException('用户 id 不能为空');\n    }\n    return this.chatroomService.queryOneToOneChatroom(+userId1, +userId2);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"在 service 实现这个方法："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async queryOneToOneChatroom(userId1: number, userId2: number) {\n    const chatrooms = await this.prismaService.userChatroom.findMany({\n        where: {\n            userId: userId1\n        }\n    })\n    const chatrooms2 = await this.prismaService.userChatroom.findMany({\n        where: {\n            userId: userId2\n        }\n    })\n\n    let res;\n    for(let i = 0; i < chatrooms.length; i++) {\n        const chatroom = await this.prismaService.chatroom.findFirst({\n            where: {\n                id: chatrooms[i].chatroomId\n            }\n        })\n        if(chatroom.type === true) {\n            continue;\n        }\n\n        const found = chatrooms2.find(item2 => item2.chatroomId === chatroom.id)\n        if(found) {\n            res = found.chatroomId\n            break;\n        }\n    }\n\n    return res\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"因为我们没用外键关联，实现起来麻烦一些。"}),"\n",(0,s.jsx)(n.p,{children:"先查询 userId1 的所有 chatrooms，再查询 userId2 的所有 chatrooms2。"}),"\n",(0,s.jsx)(n.p,{children:"然后再查询 chatrooms 和 chatroom2 的交集，返回第一个 chatroomId"}),"\n",(0,s.jsx)(n.p,{children:"过程中要过滤掉类型为群聊的聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"这就是两个 user 都在的 1-1 聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"测试下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"现在只有这两个用户在一个聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"结果是对的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后在前端调用下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export async function findChatroom(userId1: number, userId2: number) {\n    return axiosInstance.get(`/chatroom/findChatroom`, {\n        params: {\n            userId1,\n            userId2\n        }\n    });\n}\n\nexport async function createOneToOne(friendId: number,) {\n    return axiosInstance.get(`/chatroom/create-one-to-one`, {\n        params: {\n            friendId,\n        }\n    });\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"在 interfaces 调用下查找聊天室和创建一对一聊天室的接口。"}),"\n",(0,s.jsx)(n.p,{children:"之前 create-one-to-one 接口没有返回聊天室 id，我们返回下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在组件里调用下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const navigate = useNavigate();\n\nasync function goToChat(friendId: number) {\n    const userId = getUserInfo().id;\n    try{\n        const res = await findChatroom(userId, friendId);\n\n        if(res.data) {\n            navigate('/chat', {\n                state: {\n                    chatroomId: res.data\n                }\n            });\n        } else {\n            const res2 = await createOneToOne(friendId);\n            navigate('/chat', {\n                state: {\n                    chatroomId: res2.data\n                }\n            });\n        }\n    } catch(e: any){\n        message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"在 Chat 组件里取出 state 里的数据："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"如果 state 里有 chatroomId，就选中对应的聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"并且选中的聊天室加上 selected 的 className。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const location = useLocation();\n\nuseEffect(() => {\n    setChatroomId(location.state?.chatroomId);\n}, [location.state?.chatroomId]);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"className={`chat-room-item ${item.id === roomId ? 'selected' : ''}`}\n"})}),"\n",(0,s.jsx)(n.p,{children:"测试下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"没啥问题，和小强聊过天，会选中已有的聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"和小红没有聊过天，会创建一个新聊天室然后选中。"}),"\n",(0,s.jsx)(n.p,{children:"只不过现在聊天室名字不大好。"}),"\n",(0,s.jsx)(n.p,{children:"一对一聊天室的名字之前是随机生成的，我们在查询聊天室列表的时候改一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"if(chatrooms[i].type === false) {\n    const user = await this.prismaService.user.findUnique({\n        where: {\n            id: userIds.filter(item => item.userId !== userId)[0].userId\n        }\n    })\n    chatrooms[i].name = user.nickName\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"返回聊天室列表的时候，如果是一对一聊天室，就查询下对方用户的信息，用他的名字替换聊天室名字。"}),"\n",(0,s.jsx)(n.p,{children:"刷新下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"现在，聊天室名字就和平时用的聊天软件一样了。"}),"\n",(0,s.jsx)(n.p,{children:"我们登录神说要有光账号聊聊天："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"没啥问题，这样和好友聊天的功能就完成了。"}),"\n",(0,s.jsx)(n.p,{children:"和前面的注册用户、添加好友、发起聊天连起来测试下："}),"\n",(0,s.jsx)(n.p,{children:"注册个账号："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"登录，添加光为好友："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"光这边可以看到这个好友请求，同意之后就可以在好友列表看到了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后回到小黄鸭这边："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到好友申请已经通过，可以在好友列表看到光，然后进入聊天："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"从加好友到聊天，整个流程都没问题。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-backend",target:"_blank",rel:"noopener noreferrer",children:"后端代码"})}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这节我们打通了一对一聊天的流程。"}),"\n",(0,s.jsx)(n.p,{children:"在好友列表点击聊天，会查询 userId 和 friendId 所在的一对一聊天室的 id（如果没查到，会创建一个），然后跳转到聊天页面，选中对应的聊天室。"}),"\n",(0,s.jsx)(n.p,{children:"接下来就可以在聊天室进行一对一聊天了。"}),"\n",(0,s.jsx)(n.p,{children:"我们测试了从注册用户、添加好友到聊天的流程，都没问题。"})]})}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}let N=y;y.__RSPRESS_PAGE_META={},y.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F189.%20%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%9A%E4%B8%80%E5%AF%B9%E4%B8%80%E8%81%8A%E5%A4%A9.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"189. 聊天室：一对一聊天",headingTitle:"189. 聊天室：一对一聊天",frontmatter:{}}}}]);