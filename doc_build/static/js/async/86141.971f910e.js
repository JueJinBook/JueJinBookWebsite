"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["86141"],{580170:function(e,c,r){r.r(c),r.d(c,{default:()=>l});var n=r(552676),d=r(740453);function h(e){let c=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",pre:"pre",img:"img",blockquote:"blockquote"},(0,d.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(c.h1,{id:"19高级-10branch-删过了才想起来有用",children:["19高级 10：branch 删过了才想起来有用？",(0,n.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#19高级-10branch-删过了才想起来有用",children:"#"})]}),"\n",(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.code,{children:"branch"}),"  用完就删是好习惯，但有的时候，不小心手残删了一个还有用的 ",(0,n.jsx)(c.code,{children:"branch"})," ，或者把一个 ",(0,n.jsx)(c.code,{children:"branch"})," 删掉了才想起来它还有用，怎么办？"]}),"\n",(0,n.jsxs)(c.h2,{id:"reflog-引用的-log",children:["reflog ：引用的 log",(0,n.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#reflog-引用的-log",children:"#"})]}),"\n",(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.code,{children:"reflog"}),' 是 "reference log" 的缩写，使用它可以查看 Git 仓库中的引用的移动记录。如果不指定引用，它会显示 ',(0,n.jsx)(c.code,{children:"HEAD"})," 的移动记录。假如你误删了 ",(0,n.jsx)(c.code,{children:"branch1"})," 这个 ",(0,n.jsx)(c.code,{children:"branch"}),"，那么你可以查看一下 ",(0,n.jsx)(c.code,{children:"HEAD"})," 的移动历史："]}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-shell",children:"git reflog\n"})}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe3de05468c613?w=602&h=78&f=jpeg&s=51327",alt:""})}),"\n",(0,n.jsxs)(c.p,{children:["从图中可以看出，",(0,n.jsx)(c.code,{children:"HEAD"})," 的最后一次移动行为是「从 ",(0,n.jsx)(c.code,{children:"branch1"})," 移动到 ",(0,n.jsx)(c.code,{children:"master"}),"」。而在这之后，",(0,n.jsx)(c.code,{children:"branch1"})," 就被删除了。所以它之前的那个 ",(0,n.jsx)(c.code,{children:"commit"})," 就是 ",(0,n.jsx)(c.code,{children:"branch1"})," 被删除之前的位置了，也就是第二行的 ",(0,n.jsx)(c.code,{children:"c08de9a"}),"。"]}),"\n",(0,n.jsxs)(c.p,{children:["所以现在就可以切换回 ",(0,n.jsx)(c.code,{children:"c08de9a"}),"，然后重新创建 ",(0,n.jsx)(c.code,{children:"branch1"})," ："]}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-shell",children:"git checkout c08de9a\ngit checkout -b branch1\n"})}),"\n",(0,n.jsxs)(c.p,{children:["这样，你刚删除的 ",(0,n.jsx)(c.code,{children:"branch1"})," 就找回来了。"]}),"\n",(0,n.jsxs)(c.blockquote,{children:["\n",(0,n.jsxs)(c.p,{children:["注意：不再被引用直接或间接指向的 ",(0,n.jsx)(c.code,{children:"commit"}),"s 会在一定时间后被 Git 回收，所以使用 ",(0,n.jsx)(c.code,{children:"reflog"})," 来找回删除的 ",(0,n.jsx)(c.code,{children:"branch"})," 的操作一定要及时，不然有可能会由于 ",(0,n.jsx)(c.code,{children:"commit"})," 被回收而再也找不回来。"]}),"\n"]}),"\n",(0,n.jsxs)(c.h2,{id:"查看其他引用的-reflog",children:["查看其他引用的 reflog",(0,n.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#查看其他引用的-reflog",children:"#"})]}),"\n",(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.code,{children:"reflog"})," 默认查看 ",(0,n.jsx)(c.code,{children:"HEAD"})," 的移动历史，除此之外，也可以手动加上名称来查看其他引用的移动历史，例如某个 ",(0,n.jsx)(c.code,{children:"branch"}),"："]}),"\n",(0,n.jsx)(c.pre,{children:(0,n.jsx)(c.code,{className:"language-shell",children:"git reflog master\n"})}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe3de0548714c7?w=629&h=98&f=jpeg&s=63093",alt:""})})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,d.ah)(),e.components);return c?(0,n.jsx)(c,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}let l=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["Git%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97%2F19%E9%AB%98%E7%BA%A7%2010%EF%BC%9Abranch%20%E5%88%A0%E8%BF%87%E4%BA%86%E6%89%8D%E6%83%B3%E8%B5%B7%E6%9D%A5%E6%9C%89%E7%94%A8%EF%BC%9F.md"]={toc:[{text:"reflog ：引用的 log",id:"reflog-引用的-log",depth:2},{text:"查看其他引用的 reflog",id:"查看其他引用的-reflog",depth:2}],title:"19高级 10：branch 删过了才想起来有用？",headingTitle:"19高级 10：branch 删过了才想起来有用？",frontmatter:{}}}}]);