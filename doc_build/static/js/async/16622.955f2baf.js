"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["16622"],{720635:function(n,e,a){a.r(e),a.d(e,{default:()=>M});var t=a(552676),r=a(740453);let i=a.p+"static/image/8a7462d590db82c64ce9b3a3244ea042.e5bf59be.gif",o=a.p+"static/image/b99d083d84eac1d7082c609d64215855.fea21ec3.webp",s=a.p+"static/image/441d457106489f1b4387396581909f57.3f7ffadb.webp",m=a.p+"static/image/cdfc0cb41e8f348a6f0412f782ac83d3.9371e265.webp",c=a.p+"static/image/e4ce243e4e6f8f37c157e303c77a4fe7.9ecd845f.webp",d=a.p+"static/image/1828e8565461f8623f6b5139f6071ac9.86950b5b.webp",g=a.p+"static/image/90f67d23a8359ae6ade0691c0a4e4c68.fc952835.webp",l=a.p+"static/image/05db3ce806e86847bcf8d7922fce446b.e92dd4b0.webp",u=a.p+"static/image/a89d24d905c538b46c14cb7ad36b86e4.cd64f436.webp",p=a.p+"static/image/1755ceb0b19284bf25707774fa6e42d7.1d119dd9.webp",h=a.p+"static/image/841137b85f0d66468d29c7b0ad9f4f1a.8113c40a.webp",f=a.p+"static/image/4cd5ac204a1d32cd5b4ab6e495439a55.ad22a494.webp",b=a.p+"static/image/4e65677e56da2b3dc0fe25598296e079.2d562e64.webp",x=a.p+"static/image/245962a0fdd55db1004d02ed3f267cc9.3606b8d6.webp",j=a.p+"static/image/c6505d1147e7a13ed5c6f74e503f75da.6c014021.webp",S=a.p+"static/image/653d6a340d2452b65e51a4caac4455fb.b7f5c8d2.webp",k=a.p+"static/image/4140089b06d575270a44e2724acd17e2.e0e30c3b.webp",T=a.p+"static/image/25e6d357c418f0cc7b9dd28d6b719661.2fa888f3.webp",D=a.p+"static/image/22fe1d5ea5ba84c2a04a305e75f0efca.a303c40c.webp",R=a.p+"static/image/34f90ece91a280afa68362a60407d082.04f48119.webp",E=a.p+"static/image/33c5dfb2c21762ba4b9fa7361491667a.0c9a2b30.webp";function I(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,r.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"125-会议室预订系统预定管理模块-管理端前端开发",children:["125. 会议室预订系统：预定管理模块-管理端前端开发",(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#125-会议室预订系统预定管理模块-管理端前端开发",children:"#"})]}),"\n",(0,t.jsx)(e.p,{children:"这节写下预定管理模块管理端的前端部分："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:E,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"对应的路由我们前面写过了："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:R,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这节来填充下内容。"}),"\n",(0,t.jsx)(e.p,{children:"首先是 table 部分："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"import { Badge, Button, DatePicker, Form, Input, Popconfirm, Table, TimePicker, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { UserSearchResult } from \"../UserManage/UserManage\";\nimport { MeetingRoomSearchResult } from \"../MeetingRoomManage/MeetingRoomManage\";\nimport dayjs from \"dayjs\";\n\ninterface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    user: UserSearchResult,\n    room: MeetingRoomSearchResult\n}\n\nexport function BookingManage() {\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(10);\n    const [bookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n\n    const columns: ColumnsType<BookingSearchResult> = [\n        {\n            title: '会议室名称',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.name\n            }\n        },\n        {\n            title: '会议室位置',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.location\n            }\n        },\n        {\n            title: '预定人',\n            dataIndex: 'user',\n            render(_, record) {\n                return record.user.username\n            }\n        },\n        {\n            title: '开始时间',\n            dataIndex: 'startTime',\n            render(_, record) {\n                return dayjs(new Date(record.startTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'endTime',\n            render(_, record) {\n                return dayjs(new Date(record.endTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '审批状态',\n            dataIndex: 'status'\n        },\n        {\n            title: '预定时间',\n            dataIndex: 'createTime',\n            render(_, record) {\n                return dayjs(new Date(record.createTime)).format('YYYY-MM-DD hh:mm:ss')\n            }\n        },\n        {\n            title: '备注',\n            dataIndex: 'note'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description'\n        },\n        {\n            title: '操作',\n            render: (_, record) => (\n                <div>\n                </div>\n            )\n        }\n    ];\n\n\n    const changePage = function(pageNo: number, pageSize: number) {\n        setPageNo(pageNo);\n        setPageSize(pageSize);\n    }\n\n    return <div id=\"bookingManage-container\">\n        <div className=\"bookingManage-table\">\n            <Table columns={columns} dataSource={bookingSearchResult} pagination={ {\n                current: pageNo,\n                pageSize: pageSize,\n                onChange: changePage\n            }}/>\n        </div>\n    </div>\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"列表接口是这样的："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:D,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"根据这个指定表格列的定义，并且添加分页的处理。"}),"\n",(0,t.jsx)(e.p,{children:"其中涉及到的 User 和 Room 的类型从其他页面导入："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:T,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:k,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:S,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这里用到 dayjs 来格式化日期，安装下："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"npm install dayjs\n"})}),"\n",(0,t.jsx)(e.p,{children:"然后加上上面的表单："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"import { Button, DatePicker, Form, Input, Popconfirm, Table, TimePicker, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useForm } from \"antd/es/form/Form\";\nimport './booking_manage.css';\nimport { UserSearchResult } from \"../UserManage/UserManage\";\nimport { MeetingRoomSearchResult } from \"../MeetingRoomManage/MeetingRoomManage\";\nimport dayjs from \"dayjs\";\n\nexport interface SearchBooking {\n    username: string;\n    meetingRoomName: string;\n    meetingRoomPosition: string;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n}\n\ninterface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    user: UserSearchResult,\n    room: MeetingRoomSearchResult\n}\n\nexport function BookingManage() {\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(10);\n    const [bookingSearchResult, setBookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n    const [num, setNum] = useState(0);\n\n    const columns: ColumnsType<BookingSearchResult> = [\n        {\n            title: '会议室名称',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.name\n            }\n        },\n        {\n            title: '会议室位置',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.location\n            }\n        },\n        {\n            title: '预定人',\n            dataIndex: 'user',\n            render(_, record) {\n                return record.user.username\n            }\n        },\n        {\n            title: '开始时间',\n            dataIndex: 'startTime',\n            render(_, record) {\n                return dayjs(new Date(record.startTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'endTime',\n            render(_, record) {\n                return dayjs(new Date(record.endTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '审批状态',\n            dataIndex: 'status'\n        },\n        {\n            title: '预定时间',\n            dataIndex: 'createTime',\n            render(_, record) {\n                return dayjs(new Date(record.createTime)).format('YYYY-MM-DD hh:mm:ss')\n            }\n        },\n        {\n            title: '备注',\n            dataIndex: 'note'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description'\n        },\n        {\n            title: '操作',\n            render: (_, record) => (\n                <div>\n                </div>\n            )\n        }\n    ];\n\n    const searchBooking = async (values: SearchBooking) => {\n\n    }\n\n    const [form ]  = useForm();\n\n    useEffect(() => {\n        searchBooking({\n            username: form.getFieldValue('username'),\n            meetingRoomName: form.getFieldValue('meetingRoomName'),\n            meetingRoomPosition: form.getFieldValue('meetingRoomPosition'),\n            rangeStartDate: form.getFieldValue('rangeStartDate'),\n            rangeStartTime: form.getFieldValue('rangeStartTime'),\n            rangeEndDate: form.getFieldValue('rangeEndDate'),\n            rangeEndTime: form.getFieldValue('rangeEndTime')\n        });\n    }, [pageNo, pageSize, num]);\n\n    const changePage = function(pageNo: number, pageSize: number) {\n        setPageNo(pageNo);\n        setPageSize(pageSize);\n    }\n\n    return <div id=\"bookingManage-container\">\n        <div className=\"bookingManage-form\">\n            <Form\n                form={form}\n                onFinish={searchBooking}\n                name=\"search\"\n                layout='inline'\n                colon={false}\n            >\n                <Form.Item label=\"预定人\" name=\"username\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"会议室名称\" name=\"meetingRoomName\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"预定开始日期\" name=\"rangeStartDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定开始时间\" name=\"rangeStartTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束日期\" name=\"rangeEndDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束时间\" name=\"rangeEndTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"位置\" name=\"meetingRoomPosition\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\" \">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        搜索预定申请\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className=\"bookingManage-table\">\n            <Table columns={columns} dataSource={bookingSearchResult} pagination={ {\n                current: pageNo,\n                pageSize: pageSize,\n                onChange: changePage\n            }}/>\n        </div>\n    </div>\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"涉及到的 css 如下："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-css",children:"#bookingManage-container {\n    padding: 20px;\n}\n#bookingManage-container .bookingManage-form {\n    margin-bottom: 40px;\n}\n#bookingManage-container .ant-form-item {\n    margin: 10px;\n}\n\n"})}),"\n",(0,t.jsx)(e.p,{children:"渲染出来是这样的："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:j,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这里要注意的是日期和时间分别要用 DatePicker 和 TimePicker，所以分为 2 个字段。"}),"\n",(0,t.jsx)(e.p,{children:"接下来实现下用到的接口，改下 interfaces.ts"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"export async function bookingList(searchBooking: SearchBooking, pageNo: number, pageSize: number) {\n\n    let bookingTimeRangeStart;\n    let bookingTimeRangeEnd;\n    \n    if(searchBooking.rangeStartDate && searchBooking.rangeStartTime) {\n        const rangeStartDateStr = dayjs(searchBooking.rangeStartDate).format('YYYY-MM-DD');\n        const rangeStartTimeStr = dayjs(searchBooking.rangeStartTime).format('HH:mm');\n        bookingTimeRangeStart = dayjs(rangeStartDateStr + ' ' + rangeStartTimeStr).valueOf()\n    }\n\n    if(searchBooking.rangeEndDate && searchBooking.rangeEndTime) {\n        const rangeEndDateStr = dayjs(searchBooking.rangeEndDate).format('YYYY-MM-DD');\n        const rangeEndTimeStr = dayjs(searchBooking.rangeEndTime).format('HH:mm');\n        bookingTimeRangeEnd = dayjs(rangeEndDateStr + ' ' + rangeEndTimeStr).valueOf()\n    }\n\n    return await axiosInstance.get('/booking/list', {\n        params: {\n            username: searchBooking.username,\n            meetingRoomName: searchBooking.meetingRoomName,\n            meetingRoomPosition: searchBooking.meetingRoomPosition,\n            bookingTimeRangeStart,\n            bookingTimeRangeEnd,\n            pageNo: pageNo,\n            pageSize: pageSize\n        }\n    });\n}\n\nexport async function apply(id: number) {\n    return await axiosInstance.get('/booking/apply/' + id);\n}\n\nexport async function reject(id: number) {\n    return await axiosInstance.get('/booking/reject/' + id);\n}\n\nexport async function unbind(id: number) {\n    return await axiosInstance.get('/booking/unbind/' + id);\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"apply、reject、unbind 接口比较简单，列表接口相对麻烦一些。"}),"\n",(0,t.jsx)(e.p,{children:"因为现在日期和时间分为了 2 个字段，而接口只接收一个字段，所以要把它们合并。"}),"\n",(0,t.jsx)(e.p,{children:"用 dayjs 分别把日期和时间 format 成 YYYY-MM-DD 和 HH:mm 的格式。"}),"\n",(0,t.jsx)(e.p,{children:"然后拼接成一个字符串之后，再创建 dayjs 实例，这样时间就合并成一个了。"}),"\n",(0,t.jsx)(e.p,{children:"在页面里调用下列表接口："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:x,alt:""})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"import { Button, DatePicker, Form, Input, Popconfirm, Table, TimePicker, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useForm } from \"antd/es/form/Form\";\nimport { apply, bookingList, reject, unbind } from \"../../interfaces/interfaces\";\nimport './booking_manage.css';\nimport { UserSearchResult } from \"../UserManage/UserManage\";\nimport { MeetingRoomSearchResult } from \"../MeetingRoomManage/MeetingRoomManage\";\nimport dayjs from \"dayjs\";\n\nexport interface SearchBooking {\n    username: string;\n    meetingRoomName: string;\n    meetingRoomPosition: string;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n}\n\ninterface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    user: UserSearchResult,\n    room: MeetingRoomSearchResult\n}\n\nexport function BookingManage() {\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(10);\n    const [bookingSearchResult, setBookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n    const [num, setNum] = useState(0);\n\n    const columns: ColumnsType<BookingSearchResult> = [\n        {\n            title: '会议室名称',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.name\n            }\n        },\n        {\n            title: '会议室位置',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.location\n            }\n        },\n        {\n            title: '预定人',\n            dataIndex: 'user',\n            render(_, record) {\n                return record.user.username\n            }\n        },\n        {\n            title: '开始时间',\n            dataIndex: 'startTime',\n            render(_, record) {\n                return dayjs(new Date(record.startTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'endTime',\n            render(_, record) {\n                return dayjs(new Date(record.endTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '审批状态',\n            dataIndex: 'status',\n        },\n        {\n            title: '预定时间',\n            dataIndex: 'createTime',\n            render(_, record) {\n                return dayjs(new Date(record.createTime)).format('YYYY-MM-DD hh:mm:ss')\n            }\n        },\n        {\n            title: '备注',\n            dataIndex: 'note'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description'\n        },\n        {\n            title: '操作',\n            render: (_, record) => (\n                <div>\n                    \n                </div>\n            )\n        }\n    ];\n\n    const searchBooking = async (values: SearchBooking) => {\n        const res = await bookingList(values, pageNo, pageSize);\n\n        const { data } = res.data;\n        if(res.status === 201 || res.status === 200) {\n            setBookingSearchResult(data.bookings.map((item: BookingSearchResult) => {\n                return {\n                    key: item.id,\n                    ...item\n                }\n            }))\n        } else {\n            message.error(data || '系统繁忙，请稍后再试');\n        }\n    }\n\n    const [form ]  = useForm();\n\n    useEffect(() => {\n        searchBooking({\n            username: form.getFieldValue('username'),\n            meetingRoomName: form.getFieldValue('meetingRoomName'),\n            meetingRoomPosition: form.getFieldValue('meetingRoomPosition'),\n            rangeStartDate: form.getFieldValue('rangeStartDate'),\n            rangeStartTime: form.getFieldValue('rangeStartTime'),\n            rangeEndDate: form.getFieldValue('rangeEndDate'),\n            rangeEndTime: form.getFieldValue('rangeEndTime')\n        });\n    }, [pageNo, pageSize, num]);\n\n    const changePage = function(pageNo: number, pageSize: number) {\n        setPageNo(pageNo);\n        setPageSize(pageSize);\n    }\n\n    return <div id=\"bookingManage-container\">\n        <div className=\"bookingManage-form\">\n            <Form\n                form={form}\n                onFinish={searchBooking}\n                name=\"search\"\n                layout='inline'\n                colon={false}\n            >\n                <Form.Item label=\"预定人\" name=\"username\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"会议室名称\" name=\"meetingRoomName\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"预定开始日期\" name=\"rangeStartDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定开始时间\" name=\"rangeStartTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束日期\" name=\"rangeEndDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束时间\" name=\"rangeEndTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"位置\" name=\"meetingRoomPosition\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\" \">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        搜索预定申请\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className=\"bookingManage-table\">\n            <Table columns={columns} dataSource={bookingSearchResult} pagination={ {\n                current: pageNo,\n                pageSize: pageSize,\n                onChange: changePage\n            }}/>\n        </div>\n    </div>\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"没带参数的搜索没问题："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:b,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"数据库里就这 4 条记录："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:f,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"然后带上参数搜索下："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:h,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:p,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:u,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"开始时间在 2023-9-29 的 10 点到 11 点的预定有 3 条："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:l,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"11 点到 12 点的有 1 条："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:g,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这样，列表功能就完成了。"}),"\n",(0,t.jsx)(e.p,{children:"可以再加上个按照状态过滤，这个是 antd 的功能："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:d,alt:""})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"{\n    title: '审批状态',\n    dataIndex: 'status',\n    onFilter: (value, record) => record.status.startsWith(value as string),\n    filters: [\n        {\n          text: '审批通过',\n          value: '审批通过',\n        },\n        {\n          text: '审批驳回',\n          value: '审批驳回',\n        },\n        {\n            text: '申请中',\n            value: '申请中',\n        },\n        {\n            text: '已解除',\n            value: '已解除'\n        },\n      ],\n},\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:c,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:m,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"然后加上右边的按钮："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:s,alt:""})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'{\n    title: \'操作\',\n    render: (_, record) => (\n        <div>\n            <Popconfirm\n                title="通过申请"\n                description="确认通过吗？"\n                onConfirm={() => changeStatus(record.id, \'apply\')}\n                okText="Yes"\n                cancelText="No"\n            >  \n                <a href="#">通过</a>\n            </Popconfirm>\n            <br/>\n            <Popconfirm\n                title="驳回申请"\n                description="确认驳回吗？"\n                onConfirm={() => changeStatus(record.id, \'reject\')}\n                okText="Yes"\n                cancelText="No"\n            >  \n                <a href="#">驳回</a>\n            </Popconfirm>\n            <br/>\n            <Popconfirm\n                title="解除申请"\n                description="确认解除吗？"\n                onConfirm={() => changeStatus(record.id, \'unbind\')}\n                okText="Yes"\n                cancelText="No"\n            >  \n                <a href="#">解除</a>\n            </Popconfirm>\n            <br/>\n        </div>\n    )\n}\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"async function changeStatus(id: number, status: 'apply' | 'reject' | 'unbind') {\n    const methods = {\n        apply,\n        reject,\n        unbind\n    }\n    const res = await methods[status](id);\n\n    if(res.status === 201 || res.status === 200) {\n        message.success('状态更新成功');\n        setNum(Math.random());\n    } else {\n        message.error(res.data.data);\n    }\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"更新完状态之后要触发列表的重新渲染，所以这里用 setNum 触发："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:o,alt:""})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:i,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这样，预定管理的功能就完成了。"}),"\n",(0,t.jsxs)(e.p,{children:["案例代码上传了",(0,t.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_frontend_admin",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,t.jsxs)(e.h2,{id:"总结",children:["总结",(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,t.jsx)(e.p,{children:"这节我们实现了预订管理的管理端的前端页面，主要是列表和修改状态的接口。"}),"\n",(0,t.jsx)(e.p,{children:"要注意的是时间相关的处理，antd 只有 DatePicker 和 TimePicker，我们要添加 2 个字段接收，然后调用接口的时候把它们合并成一个字段。"}),"\n",(0,t.jsx)(e.p,{children:"下节我们来写用户端的部分。"})]})}function F(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(I,{...n})}):I(n)}let M=F;F.__RSPRESS_PAGE_META={},F.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F125.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E9%A2%84%E5%AE%9A%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97-%E7%AE%A1%E7%90%86%E7%AB%AF%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"125. 会议室预订系统：预定管理模块-管理端前端开发",headingTitle:"125. 会议室预订系统：预定管理模块-管理端前端开发",frontmatter:{}}}}]);