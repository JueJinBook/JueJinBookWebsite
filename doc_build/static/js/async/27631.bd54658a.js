"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["27631"],{808258:function(e,n,c){c.r(n),c.d(n,{default:()=>Q});var s=c(552676),t=c(740453);let a=c.p+"static/image/0f7a344d6804c9aab97a49a3f18f7c28.788e889a.webp",r=c.p+"static/image/292a06e099eed9db53cef8847fc4ccfa.68e867f0.webp",i=c.p+"static/image/d5481b5c91d37bf29d6b892264713de0.95a045a4.webp",d=c.p+"static/image/1cba0be598214304a14ff4f9d1c30934.6752ffc7.webp",p=c.p+"static/image/9abe0251ed187d8cb5295027be096f76.4ba64d33.webp",l=c.p+"static/image/0fa48cb390446a31a3b6e8bbabeeee57.411ecf23.webp",m=c.p+"static/image/7b01cba9c8244cf90998dec98b41c2d3.7ce83b6c.webp",h=c.p+"static/image/bfbcc23e4745a359f9692c1a25436b7d.6e43facc.webp",o=c.p+"static/image/55c8291df9662e86caeed6cea19d76cc.5e13c360.webp",j=c.p+"static/image/bc567d52fa8389ccbeb3bcba98c63302.8148938d.webp",g=c.p+"static/image/a06df27fbd64f9960401f2c179d82f9a.7d9158d9.webp",x=c.p+"static/image/ccfc873f9bad7b6ec0651ed82e6c6dd2.f5a7a059.webp",b=c.p+"static/image/6149e7ca4e82e3de4eb726248b6e31f2.f8c85078.webp",u=c.p+"static/image/1af60c9db5926235cb33cce00c25f534.8c5173df.gif",f=c.p+"static/image/b842237359970631af98746cc669b12b.9857e20e.webp",w=c.p+"static/image/f9849919351eceace6b40845c0b00065.7408f40e.webp",k=c.p+"static/image/bede5fc4dc564caa3262a3d201e978a1.c1a0487f.webp",E=c.p+"static/image/0f79e49048c77659b6193fdb51431690.2e113337.webp",A=c.p+"static/image/ac1e311ac72382330b5fd9866da76445.5ebbbe7f.webp",y=c.p+"static/image/b9a6568c626f6ea8a0af9352ade6a83d.68d6b1fe.webp",B=c.p+"static/image/6a45a7bbe071bc943d235f8b9e761340.c1143537.webp",D=c.p+"static/image/4d89d57acdfe170608c307f293b71337.aea15b09.webp",R=c.p+"static/image/f890b0087bd7554ae163d025883c2c0f.d271d101.webp",_=c.p+"static/image/3aaf913b4f12ab86314b85abc16af67a.eb98dca9.webp",v=c.p+"static/image/2fc6002bb3af53a0ad8723cbcd860521.570b7f3f.webp",F=c.p+"static/image/3846abaecae732349ff4a2682a78a915.53b6d899.webp",C=c.p+"static/image/46883e9f96843e8950e6335cee2bc139.e04cab07.webp",P=c.p+"static/image/479b668c01a00663b33b7da6b96e5d64.d03d4d5e.webp",T=c.p+"static/image/be8f2124b4f79a0729b9daecbb085f63.4b7881de.webp",G=c.p+"static/image/eb501eb620fe8fc168da076eb392ee00.bc6c74e5.webp";function O(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"第41章组件库实战构建umd产物通过unpkg访问",children:["第41章—组件库实战：构建umd产物，通过unpkg访问",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第41章组件库实战构建umd产物通过unpkg访问",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"\uFEFF上节做了 esm 和 commonjs、scss 代码的编译，并发布到 npm，在项目里使用没啥问题。"}),"\n",(0,s.jsx)(n.p,{children:"绝大多数情况下，这样就足够了。"}),"\n",(0,s.jsx)(n.p,{children:"umd 的打包做不做都行。"}),"\n",(0,s.jsx)(n.p,{children:"想一下，你是否用过 antd 的 umd 格式的代码？"}),"\n",(0,s.jsx)(n.p,{children:"是不是没用过？"}),"\n",(0,s.jsx)(n.p,{children:"但如果你做一个开源组件库，那还是要支持的。"}),"\n",(0,s.jsx)(n.p,{children:"这节我们就来做下 umd 的打包："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"前面分析过，大多数组件库都用 webpack 来打包的。"}),"\n",(0,s.jsx)(n.p,{children:"我们先用下 antd 的 umd 的代码。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mkdir antd-umd-test\ncd antd-umd-test\nnpm init -y\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:G,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"新建 index.html"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <script src="https://unpkg.com/react@18.3.1/umd/react.production.min.js"><\/script>\n    <script src="https://unpkg.com/react-dom@18.3.1/umd/react-dom.production.min.js"><\/script>\n    <script src="https://unpkg.com/dayjs@1.11.11/dayjs.min.js"><\/script>\n    <script src="https://unpkg.com/antd@5.19.0/dist/antd.min.js"><\/script>\n</head>\n<body>\n    \n</body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"antd 依赖的 react、react-dom、dayjs 包也得用 umd 引入。"}),"\n",(0,s.jsx)(n.p,{children:"跑个静态服务："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npx http-server .\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:T,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"浏览器访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"通过全局变量 antd 来访问各种组件。"}),"\n",(0,s.jsx)(n.p,{children:"我们渲染个 Table 组件试一下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://unpkg.com/react@18.3.1/umd/react.production.min.js\"><\/script>\n    <script src=\"https://unpkg.com/react-dom@18.3.1/umd/react-dom.production.min.js\"><\/script>\n    <script src=\"https://unpkg.com/dayjs@1.11.11/dayjs.min.js\"><\/script>\n    <script src=\"https://unpkg.com/antd@5.19.0/dist/antd.min.js\"><\/script>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script>\n        const dataSource = [\n            {\n                key: '1',\n                name: '胡彦斌',\n                age: 32,\n                address: '西湖区湖底公园1号',\n            },\n            {\n                key: '2',\n                name: '胡彦祖',\n                age: 42,\n                address: '西湖区湖底公园1号',\n            },\n            ];\n\n            const columns = [\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age',\n            },\n            {\n                title: '住址',\n                dataIndex: 'address',\n                key: 'address',\n            },\n            ];\n\n            const container = document.getElementById('root');\n            const root = ReactDOM.createRoot(container);\n\n            root.render(React.createElement(antd.Table, { dataSource: dataSource, columns: columns }));\n    <\/script>\n</body>\n</html>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这里不能直接写 jsx，需要用 babel 或者 tsc 之类的",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/play/?#code/DwFQhgRgNgpgBAEzAFzAZQPYFcBOBjGAXgG8lVNcCBfOPDKLAWwDsBnEuhl1mgegD4gA",target:"_blank",rel:"noopener noreferrer",children:"编译一下"}),"："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"浏览器看一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"渲染成功！"}),"\n",(0,s.jsx)(n.p,{children:"这就是 umd 的方式如何使用组件库。"}),"\n",(0,s.jsx)(n.p,{children:"我们的组件库也支持下 umd："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"加一下 webpack.config.js"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const path = require('path');\n\n/**\n * @type {import('webpack').Configuration}\n */\nmodule.exports = {\n    mode: 'development',\n    devtool: 'source-map',\n    entry: {\n        index: ['./src/index.ts']\n    },\n    output: {\n        filename: 'guang-components.js',\n        path: path.join(__dirname, 'dist/umd'),\n        library: 'Guang',\n        libraryTarget: 'umd'\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.tsx?$/,\n                loader: 'ts-loader',\n                options: {\n                    configFile: 'tsconfig.build.json'\n                }\n            }\n        ]\n    },\n    resolve: {\n        extensions: ['.ts', '.tsx', '.js', '.jsx', '.json']\n    },\n    externals: {\n        react: 'React',\n        'react-dom': 'ReactDOM',\n        dayjs: 'dayjs'\n    }\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"就是从 index.ts 入口开始打包，产物格式为 umd，文件名 guang-components.js，全局变量为 Guang。"}),"\n",(0,s.jsx)(n.p,{children:"用 ts-loader 来编译 ts 代码，指定配置文件为 tsconfig.build.json。"}),"\n",(0,s.jsx)(n.p,{children:"注意打包的时候不要把 react 和 react-dom、dayjs 包打进去，而是加在 external 配置里，也就是从全局变量来访问这些依赖。"}),"\n",(0,s.jsx)(n.p,{children:"安装依赖："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm install --save-dev webpack-cli webpack ts-loader\n"})}),"\n",(0,s.jsx)(n.p,{children:"这里的 jsdoc 注释是为了引入 ts 类型的，可以让 webpack.config.js 有类型提示："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:"js.png"})}),"\n",(0,s.jsxs)(n.p,{children:["对 jsdoc 感兴趣的话可以看我这篇文章：",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7292437487011856394",target:"_blank",rel:"noopener noreferrer",children:"JSDoc 真能取代 TypeScript？"})]}),"\n",(0,s.jsx)(n.p,{children:"打包一下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npx webpack\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后看下产物："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"看起来没啥问题。"}),"\n",(0,s.jsx)(n.p,{children:"这三个模块也都是通过直接读取全局变量的方式引入，没有打包进去："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在 package.json 改下版本号，添加 unpkg 的入口，然后发布到 npm："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm publish\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在 unpkg 访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["访问 ",(0,s.jsx)(n.a,{href:"https://unpkg.com/guang-components",target:"_blank",rel:"noopener noreferrer",children:"https://unpkg.com/guang-components"})," 会自动重定向到最新版本的 umd 代码。"]}),"\n",(0,s.jsx)(n.p,{children:"回到刚才的 antd-umd-test 项目，添加一个 index2.html，引入 guang-components"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <script src="https://unpkg.com/react@18.3.1/umd/react.production.min.js"><\/script>\n    <script src="https://unpkg.com/react-dom@18.3.1/umd/react-dom.production.min.js"><\/script>\n    <script src="https://unpkg.com/dayjs@1.11.11/dayjs.min.js"><\/script>\n    <script src="https://unpkg.com/guang-components@0.0.7/dist/umd/guang-components.js"><\/script>\n</head>\n<body>\n    <div id="root"></div>\n    <script>\n\n    <\/script>\n</body>\n</html>\n'})}),"\n",(0,s.jsx)(n.p,{children:"浏览器访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以通过全局变量 Guang 来拿到组件。"}),"\n",(0,s.jsxs)(n.p,{children:["css 也是通过 ",(0,s.jsx)(n.a,{href:"https://unpkg.com/guang-components@0.0.8/dist/esm/Calendar/index.css",target:"_blank",rel:"noopener noreferrer",children:"unpkg 来拿到"}),"："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后我们渲染下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    <script src="https://unpkg.com/react@18.3.1/umd/react.production.min.js"><\/script>\n    <script src="https://unpkg.com/react-dom@18.3.1/umd/react-dom.production.min.js"><\/script>\n    <script src="https://unpkg.com/dayjs@1.11.11/dayjs.min.js"><\/script>\n    <script src="https://unpkg.com/guang-components@0.0.7/dist/umd/guang-components.js"><\/script>\n    \n    https://unpkg.com/guang-components@0.0.8/dist/esm/Calendar/index.css\n</head>\n<body>\n    <div id="root"></div>\n    <script>\n        const container = document.getElementById(\'root\');\n        const root = ReactDOM.createRoot(container);\n\n        root.render(React.createElement(Guang.Calendar, { value: dayjs(\'2024-07-01\') }));\n    <\/script>\n</body>\n</html>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["jsx 在 ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/play/?#code/DwYQhgNgpgdgJmATgAgG6QK5QLwG8ECeAVgM4AUA5AEwAMVALALQ0DszAjBQJQC+AfMAD04aPCR8AUEA",target:"_blank",rel:"noopener noreferrer",children:"ts playground"})," 编译："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"浏览器访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到，umd 的组件库代码生效了。"}),"\n",(0,s.jsx)(n.p,{children:"但是控制台有个报错："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点进去可以看到是 _jsx 这个函数的问题："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"react 我们通过 externals 的方式，从全局变量引入。"}),"\n",(0,s.jsx)(n.p,{children:"但是这个 react/jsx-runtime 不会。"}),"\n",(0,s.jsx)(n.p,{children:"这个 react/jsx-runtime 是干啥的呢？"}),"\n",(0,s.jsxs)(n.p,{children:["同一份 ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/play/?jsx=4#code/DwFQhgRgNgpgBAEzAFzAZQPYFcBOBjGAXgG8lVNcCBfOPDKLAWwDsBnEuhl1mgegD4gA",target:"_blank",rel:"noopener noreferrer",children:"jsx 代码"}),"："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["你在 ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/play/?jsx=4#code/DwFQhgRgNgpgBAEzAFzAZQPYFcBOBjGAXgG8lVNcCBfOPDKLAWwDsBnEuhl1mgegD4gA",target:"_blank",rel:"noopener noreferrer",children:"typescript playground"})," 里把 jsx 编译选项切换为 react："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到是不同的编译结果。"}),"\n",(0,s.jsx)(n.p,{children:"React 17 之前都是编译为 React.createElement，这需要运行的时候有 React 这个变量，所以之前每个组件都要加上 import React from 'react' 才行。"}),"\n",(0,s.jsx)(n.p,{children:"React 17 之后就加了下面的方式，直接编译为用 react/jsx-runtime 的 api 的方式。不再需要都加上 import React from 'react' 了。"}),"\n",(0,s.jsx)(n.p,{children:"我们组件库也是用的这种："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"但现在打包 umd 代码的时候，这样有问题。"}),"\n",(0,s.jsx)(n.p,{children:"所以我们把 jsx 编译配置改一下就好了。"}),"\n",(0,s.jsx)(n.p,{children:"修改 jsx 为 react 之后，会有一些报错："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在每个报错的组件加一下 React 全局变量："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"再次打包就好了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"改下版本号，重新发布一下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm publish\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"改下 index2.html 里用的组件库的版本号："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"现在就没报错了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样，我们的组件库就支持了 umd。"}),"\n",(0,s.jsxs)(n.p,{children:["案例代码上传了",(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/react-course-code/tree/main/guang-components",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"前面分析过，组件库基本都会提供 esm、commonjs、umd 三种格式的代码。"}),"\n",(0,s.jsx)(n.p,{children:"这节我们实现了 umd 的支持，通过 webpack 做了打包。"}),"\n",(0,s.jsx)(n.p,{children:"打包逻辑很简单：用 ts-loader 来编译 typescript 代码，然后 react、react-dom 等模块用 externals 的方式引入就好了。"}),"\n",(0,s.jsx)(n.p,{children:"再就是 react 通过 externals 的方式，会导致 react/jsx-runtime 引入有问题，所以我们修改了 tsconfig.json 的 jsx 的编译为 react，也就是编译成 React.createElement 的代码。"}),"\n",(0,s.jsx)(n.p,{children:"虽然 umd 的方式用的场景不多，但我们组件库还是要支持的。"})]})}function N(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(O,{...e})}):O(e)}let Q=N;N.__RSPRESS_PAGE_META={},N.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC41%E7%AB%A0%E2%80%94%E7%BB%84%E4%BB%B6%E5%BA%93%E5%AE%9E%E6%88%98%EF%BC%9A%E6%9E%84%E5%BB%BAumd%E4%BA%A7%E7%89%A9%EF%BC%8C%E9%80%9A%E8%BF%87unpkg%E8%AE%BF%E9%97%AE.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第41章—组件库实战：构建umd产物，通过unpkg访问",headingTitle:"第41章—组件库实战：构建umd产物，通过unpkg访问",frontmatter:{}}}}]);