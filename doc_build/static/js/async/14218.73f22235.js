"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["14218"],{180350:function(e,n,a){a.r(n),a.d(n,{default:()=>B});var c=a(552676),s=a(740453);let r=a.p+"static/image/db169e50d62c9a68a391907022e4eddc.febcdc95.webp",i=a.p+"static/image/2d41523ecbe1fead8e693b9cd984646f.99b10625.webp",d=a.p+"static/image/7f5c9de316c338030f68732c2b7457e4.caf61887.webp",t=a.p+"static/image/e06424677372c0db87d210f10eabb067.db6142cb.webp",p=a.p+"static/image/b1667b437f236a34d5941d58b3ed07c4.9faa5c12.webp",l=a.p+"static/image/29c33a364c1daad474f1327ab4b569ab.a5c83aaa.webp",j=a.p+"static/image/d7e34613311e811b80d33da26cdc7223.3a43d977.webp",o=a.p+"static/image/c19868fe6fe2aadba17a785cb5fb7355.62130244.webp",x=a.p+"static/image/63a9a0bc8afda698bd40e626781af562.1afd9b1a.webp",h=a.p+"static/image/424122364b28d750b9d68fc82ecacfb8.f422bdc4.webp",b=a.p+"static/image/d21abeaa5b89bed62dcc871d212cfa6c.1fe39d34.webp",m=a.p+"static/image/c4c94dac6c56b9acde7dca2daf803554.789f9db1.webp",f=a.p+"static/image/0931b8c366dfc9ae8c159690844ab7ca.c6ead3c9.webp",g=a.p+"static/image/effd5a3f6ac64a5973dffb2ad345a0c7.bf96cdc8.webp",u=a.p+"static/image/89bbfd0580f32d3e972b2891aaea4577.8919245c.webp",E=a.p+"static/image/fa62ab8e4d2cb4c9a09491efc3aefc7c.080a0d9f.webp",w=a.p+"static/image/057ec3bedb56e0269b14521c6a848095.0c151f7f.webp",A=a.p+"static/image/fda2533b9fdaf82ee50b8e7cfd7df1bc.47dd449b.webp",v=a.p+"static/image/8079a29b4cd02f5419ebb7c40aee3758.205da868.webp",_=a.p+"static/image/b33cfd709e5f0e5b21669a71fbfdd551.0175c763.webp",N=a.p+"static/image/44a5dbe9928ba2aaeedc82a902f1813b.2fd26792.webp",R=a.p+"static/image/2ef199da096b501aeed744ba1627fc21.b7fe92cb.webp",V=a.p+"static/image/478f5c6de732f9378dff5014a45f3afc.d45447fa.webp",T=a.p+"static/image/2c6f3d4c4cabdbb1035662b71ee1fb3e.952d9a23.webp",y=a.p+"static/image/88defc33e939220a8f1e4c23ead757a0.f661727c.webp",C=a.p+"static/image/fe33fa2a93d340965ac5353e796ffab7.37f42921.webp",S=a.p+"static/image/5f27cc7f1e1c3ca28229a9c515936e2c.d6ca1960.webp",I=a.p+"static/image/71fbb21617ed25cc1d42803cbcedb44a.a49739aa.webp",M=a.p+"static/image/d7d122d42153c461c557f651c83d66cd.eac67cae.webp",U=a.p+"static/image/122e43f2e761feb391532514774e962f.76b29882.webp",D=a.p+"static/image/d54c2ebe489ef2ae8ce296f9f1f3824d.459310a2.webp",k=a.p+"static/image/bedd6e9943cda6b4193c5ee4269622a7.46e28937.webp";function O(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,s.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"24-接口如何实现多版本共存",children:["24. 接口如何实现多版本共存",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24-接口如何实现多版本共存",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"应用开发完一版上线之后，还会不断的迭代。"}),"\n",(0,c.jsx)(n.p,{children:"后续可能需要修改已有的接口，但是为了兼容，之前版本的接口还要保留。"}),"\n",(0,c.jsx)(n.p,{children:"那如何同时支持多个版本的接口呢？"}),"\n",(0,c.jsx)(n.p,{children:"Nest 内置了这个功能，我们来试一下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest new version-test\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:k,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"创建个 nest 项目。"}),"\n",(0,c.jsx)(n.p,{children:"进入项目，创建 aaa 模块："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest g resource aaa --no-spec\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:D,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"把服务跑起来："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm run start:dev\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:U,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"postman 里访问下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:M,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这是版本一的接口。"}),"\n",(0,c.jsx)(n.p,{children:"假设后面我们又开发了一版接口，但路由还是 aaa，怎么做呢？"}),"\n",(0,c.jsx)(n.p,{children:"这样："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:I,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"在 controller 上标记为 version 1，这样默认全部的接口都是 version 1。"}),"\n",(0,c.jsx)(n.p,{children:"然后单独用 @Version 把 version 2 的接口标识一下。"}),"\n",(0,c.jsx)(n.p,{children:"在 main.ts 里调用 enableVersioning 开启接口版本功能："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"import { VersioningType } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  app.enableVersioning({\n    type: VersioningType.HEADER,\n    header: 'version'\n  })\n  await app.listen(3000);\n}\nbootstrap();\n"})}),"\n",(0,c.jsx)(n.p,{children:"开启接口版本功能，指定通过 version 这个 header 来携带版本号。"}),"\n",(0,c.jsx)(n.p,{children:"测试下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:C,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到，带上 version:1 的 header，访问的就是版本 1 的接口。"}),"\n",(0,c.jsx)(n.p,{children:"带上 version:2 的 header，访问的就是版本 2 的接口。"}),"\n",(0,c.jsx)(n.p,{children:"它们都是同一个路由。"}),"\n",(0,c.jsx)(n.p,{children:"但这时候有个问题："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"如果不带版本号就 404 了。"}),"\n",(0,c.jsx)(n.p,{children:"这个也很正常，因为这就是版本一的接口嘛，只有显式声明版本才可以。"}),"\n",(0,c.jsx)(n.p,{children:"如果你想所有版本都能访问这个接口，可以用 VERSION_NEUTRAL 这个常量："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:T,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"现在带不带版本号，不管版本号是几都可以访问这些接口："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:V,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:R,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:N,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"但是现在因为从上到下匹配，版本 2 的接口不起作用了："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:_,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这时候或者可以把它移到上面去："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"或者单独建一个 version 2 的 controller"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest g controller aaa/aaa-v2 --no-spec --flat\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"把 AaaController 里 version 2 的接口删掉，移到这里来："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"import { Controller, Get,Version } from '@nestjs/common';\nimport { AaaService } from './aaa.service';\n\n@Controller({\n    path: 'aaa',\n    version: '2'\n})\nexport class AaaV2Controller {\n    constructor(private readonly aaaService: AaaService) {}\n\n    @Get()\n    findAllV2() {\n      return this.aaaService.findAll() + '222';\n    }\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"现在版本 2 就走的 AaaV2Controller："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"其他版本走 AaaController："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"一般我们就是这样做的，有一个 Controller 标记为 VERSION_NEUTRAL，其他版本的接口放在单独 Controller 里。"}),"\n",(0,c.jsx)(n.p,{children:"注意，controller 之间同样要注意顺序，前面的 controller 先生效："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"试一下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"除了用自定义 header 携带版本号，还有别的方式："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"app.enableVersioning({\n    type: VersioningType.MEDIA_TYPE,\n    key: 'vv='\n})\n"})}),"\n",(0,c.jsx)(n.p,{children:"MEDIA_TYPE 是在 accept 的 header 里携带版本号："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"你也可以用 URI 的方式："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"app.enableVersioning({\n    type: VersioningType.URI\n})\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"但是这种方式不支持 VERSION_NEUTRAL，你要指定明确的版本号才可以："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"此外，如果觉得这些指定版本号的方式都不满足需求，可以自己写："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"import { VersioningType } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { Request } from 'express';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const extractor = (request: Request)=> {\n    if(request.headers['disable-custom']) {\n      return '';\n    }\n    return request.url.includes('guang') ? '2' : '1';\n  }\n\n  app.enableVersioning({\n    type: VersioningType.CUSTOM,\n    extractor\n  })\n\n  await app.listen(3000);\n}\n\nbootstrap();\n"})}),"\n",(0,c.jsx)(n.p,{children:"我们自己实现了一个版本号的逻辑，如果 url 里包含 guang，就返回版本 2 的接口，否则返回版本 1 的。"}),"\n",(0,c.jsx)(n.p,{children:"此外，如果有 disable-custom 的 header 就返回 404。"}),"\n",(0,c.jsx)(n.p,{children:"试一下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这样，就能实现各种灵活的版本号规则。"}),"\n",(0,c.jsxs)(n.p,{children:["案例代码在",(0,c.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/version-test",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,c.jsxs)(n.h2,{id:"总结",children:["总结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"今天我们学了如何开发一个接口的多个版本。"}),"\n",(0,c.jsx)(n.p,{children:"Nest 内置了这个功能，同一个路由，指定不同版本号就可以调用不同的接口。"}),"\n",(0,c.jsx)(n.p,{children:"只要在 main.ts 里调用 enableVersioning 即可。"}),"\n",(0,c.jsx)(n.p,{children:"有 URI、HEADER、MEDIA_TYPE、CUSTOM 四种指定版本号的方式。"}),"\n",(0,c.jsx)(n.p,{children:"HEADER 和 MEDIA_TYPE 都是在 header 里置顶，URI 是在 url 里置顶，而 CUSTOM 是自定义版本号规则。"}),"\n",(0,c.jsx)(n.p,{children:"可以在 @Controller 通过 version 指定版本号，或者在 handler 上通过 @Version 指定版本号。"}),"\n",(0,c.jsx)(n.p,{children:"如果指定为 VERSION_NEUTRAL 则是匹配任何版本号（URI 的方式不支持这个）。"}),"\n",(0,c.jsx)(n.p,{children:"这样，当你需要开发同一个接口的多个版本的时候，就可以用这些内置的功能。"})]})}function P(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(O,{...e})}):O(e)}let B=P;P.__RSPRESS_PAGE_META={},P.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F24.%20%E6%8E%A5%E5%8F%A3%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"24. 接口如何实现多版本共存",headingTitle:"24. 接口如何实现多版本共存",frontmatter:{}}}}]);