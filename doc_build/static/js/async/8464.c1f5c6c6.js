"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["8464"],{221996:function(e,n,r){r.r(n),r.d(n,{default:()=>g});var s=r(552676),t=r(740453);let i=r.p+"static/image/4a804a6c1bb60b3bb4d454ce132cb928.4cf49fdb.webp",a=r.p+"static/image/ce5bbcbcf61219077bb94bd623877399.57eb8bbf.webp",c=r.p+"static/image/70dabc7db8c49047d49af70051e5603f.158afce6.webp",d=r.p+"static/image/6a2b9e15cd46e473af08b020f2a67501.23f25f46.webp",l=r.p+"static/image/9ab69b8dea025783c9ec7cc72893bf59.8f5ca5e6.webp",h=r.p+"static/image/716a5996eafdd0615fd5097b23706650.5c6edaeb.webp",p=r.p+"static/image/0ad390094a30e05bd8eba62e648235c9.80f55aa6.webp",o=r.p+"static/image/b7a2c544fc141dbe99d1e3194c7421fe.4ada4c54.webp",j=r.p+"static/image/f780c73292131222669aae0c55e399e1.c9b663dc.webp",x=r.p+"static/image/c71a12c65287d5aa5a41576cf21865d0.35584b88.webp",f=r.p+"static/image/00b14bd5595c821c8786a5e4e9d7bdf1.cc13e3e9.webp";function b(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",h3:"h3",pre:"pre",code:"code",ul:"ul",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"31web-vitals-如何计算如何衡量网页性能",children:["31.Web Vitals 如何计算？如何衡量网页性能？",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31web-vitals-如何计算如何衡量网页性能",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"用 Performance 工具分析网页的时候，你可能会看到 FP、DCL、FCP、L、LCP 这些东西："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"勾选 web vitals 的话，还能看到具体的时间："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这是什么呢？"}),"\n",(0,s.jsx)(n.p,{children:"这叫做 web vitals，网页性能指标，这其中还有 3 个核心的，叫做 web core vitals。"}),"\n",(0,s.jsx)(n.p,{children:"我们分别来看下它们的含义："}),"\n",(0,s.jsxs)(n.h2,{id:"web-vitals",children:["Web Vitals",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#web-vitals",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"ttfb-首字节到达",children:[(0,s.jsx)(n.a,{href:"https://web.dev/ttfb",target:"_blank",rel:"noopener noreferrer",children:"TTFB"})," （首字节到达）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ttfb-首字节到达",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Time To First Byte，从开始加载网页到接收到第一个字节的网页内容之间的耗时，用来衡量网页加载体验。"}),"\n",(0,s.jsx)(n.p,{children:"可以通过 performance api 计算出来："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { responseStart, requestStart } = performance.timing\nconst TTFB = responseStart - requestStart\n"})}),"\n",(0,s.jsx)(n.p,{children:"或者通过 PerformanceObserver api："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"new PerformanceObserver((entryList) => {  \n    const entries = entryList.getEntries();  \n  \n    for (const entry of entries) {  \n        if (entry.responseStart > 0) {  \n            console.log(`TTFB: ${entry.responseStart}`, entry.name);  \n        }  \n    }  \n}).observe({  \n    type: 'resource',  \n    buffered: true  \n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"fp-首次绘制",children:["FP （首次绘制）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fp-首次绘制",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"First Paint，第一个像素绘制到页面上的时间"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const paint = performance.getEntriesByType('paint')\nconst FP = paint[0].startTime\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"fcp-首次内容绘制",children:[(0,s.jsx)(n.a,{href:"https://web.dev/fcp",target:"_blank",rel:"noopener noreferrer",children:"FCP"})," （首次内容绘制）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fcp-首次内容绘制",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"First Contentful Paint，从开始加载网页到第一个文本、图像、svg、非白色的 canvas 渲染完成之间的耗时。"}),"\n",(0,s.jsx)(n.p,{children:"可以通过 performance 的 api 计算出来："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const paint = performance.getEntriesByType('paint')\nconst FCP = paint[1].startTime\n"})}),"\n",(0,s.jsx)(n.p,{children:"也可以通过 PerformanceObserver 的 api 拿到："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"new PerformanceObserver((entryList) => {  \n    for (const entry of entryList.getEntriesByName('first-contentful-paint')) {  \n        console.log('FCP candidate:', entry.startTime, entry);  \n    }  \n}).observe({type: 'paint', buffered: true});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"lcp-最大内容绘制",children:[(0,s.jsx)(n.a,{href:"https://web.dev/lcp",target:"_blank",rel:"noopener noreferrer",children:"LCP"})," （最大内容绘制）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lcp-最大内容绘制",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Largest Contentful Paint，最大的内容（文字/图片）渲染的时间。"}),"\n",(0,s.jsx)(n.p,{children:"计算方式是从网页开始渲染到渲染完成，每次渲染内容都对比下大小，如果是更大的内容，就更新下 LCP 的值："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以通过 PerformanceObserver 的 api 来拿到计算结果："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let LCP = 0\n\nconst performanceObserver = new PerformanceObserver((entryList, observer) => {\n  const entries = entryList.getEntries()\n  observer.disconnect()\n  \n  LCP = entries[entries.length - 1].startTime\n})\n\nperformanceObserver.observe({ entryTypes: ['largest-contentful-paint'] })\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"fmp-首次有意义的绘制",children:["FMP （首次有意义的绘制）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fmp-首次有意义的绘制",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"First Meaningful Paint，首次有意义的绘制。"}),"\n",(0,s.jsx)(n.p,{children:"前面的 FCP、LCP 记录的是内容、最大内容的渲染，但这些内容并不一定关键，比如视频网站，渲染视频最关键，别的内容的渲染不是最重要的。"}),"\n",(0,s.jsx)(n.p,{children:"FMP 就是记录关键内容渲染的时间。"}),"\n",(0,s.jsx)(n.p,{children:"计算它的话我们可以手动给元素加一个标识："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<video elementtiming="meaningful" />\n'})}),"\n",(0,s.jsx)(n.p,{children:"然后通过 PerformanceObserver 的 api 拿到它的渲染时间，就是 FMP 的值："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let FMP = 0\n\nconst performanceObserver = new PerformanceObserver((entryList, observer) => {\n  const entries = entryList.getEntries()\n  observer.disconnect()\n\n  FMP = entries[0].startTime\n})\n\nperformanceObserver.observe({ entryTypes: ['element'] })\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"dcldom内容加载完成",children:["DCL（DOM内容加载完成）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dcldom内容加载完成",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"DomContentloaded，html 文档被完全加载和解析完之后，DOMContentLoaded 事件被触发，无需等待 stylesheet、img 和 iframe 的加载完成。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { domContentLoadedEventEnd, fetchStart } = performance.timing\nconst DCL = domContentLoadedEventEnd - fetchStart\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"l加载完成",children:["L（加载完成）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#l加载完成",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Load， html 加载和解析完，它依赖的资源（iframe、img、stylesheet）也加载完触发。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { loadEventEnd, fetchStart } = performance.timing\nconst L = loadEventEnd - fetchStart\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"tti-可交互时间",children:[(0,s.jsx)(n.a,{href:"https://web.dev/tti",target:"_blank",rel:"noopener noreferrer",children:"TTI"})," （可交互时间）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tti-可交互时间",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Time to Interactive，可交互时间。"}),"\n",(0,s.jsx)(n.p,{children:"计算方式为："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"从 FCP 后开始计算"}),"\n",(0,s.jsx)(n.li,{children:"持续 5 秒内无长任务（大于 50ms） 且无两个以上正在进行中的 GET 请求"}),"\n",(0,s.jsx)(n.li,{children:"往前回溯至 5 秒前的最后一个长任务结束的时间，没有长任务的话就是 FCP 的时间"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { domInteractive, fetchStart } = performance.timing\nconst TTI = domInteractive - fetchStart\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"fid-首次输入延迟",children:[(0,s.jsx)(n.a,{href:"https://web.dev/fid",target:"_blank",rel:"noopener noreferrer",children:"FID"})," （首次输入延迟）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fid-首次输入延迟",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"First Input Delay，用户第一次与网页交互（点击按钮、点击链接、输入文字等）到网页响应事件的时间。"}),"\n",(0,s.jsx)(n.p,{children:"记录在 FCP 和 TTI 之间用户首次与页面交互时响应的延迟。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let FID = 0\n\nconst performanceObserver = new PerformanceObserver((entryList, observer) => {\n  const entries = entryList.getEntries()\n  observer.disconnect()\n\n  FID = entries[0].processingStart - entries[0].startTime\n})\n\nperformanceObserver.observe({ type: ['first-input'], buffered: true })\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"tbt-阻塞总时长",children:[(0,s.jsx)(n.a,{href:"https://web.dev/tbt",target:"_blank",rel:"noopener noreferrer",children:"TBT"})," （阻塞总时长）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tbt-阻塞总时长",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Total Blocking Time，记录在首次内容渲染（FCP）到可以处理交互（TTI）之间所有长任务（超过 50ms 的 longtask）的阻塞时间总和。"}),"\n",(0,s.jsxs)(n.h3,{id:"cls-累积布局偏移",children:[(0,s.jsx)(n.a,{href:"https://web.dev/cls",target:"_blank",rel:"noopener noreferrer",children:"CLS"})," （累积布局偏移）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#cls-累积布局偏移",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Cumulative Layout Shift，累计布局偏移，记录了页面上非预期的位移波动。计算方式为：位移影响的面积 * 位移距离（完整计算过程感兴趣可以看",(0,s.jsx)(n.a,{href:"https://web.dev/cls/#%E5%B8%83%E5%B1%80%E5%81%8F%E7%A7%BB%E5%88%86%E6%95%B0",target:"_blank",rel:"noopener noreferrer",children:"官方文档"}),"）"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"举个例子，比如一个图片没加载完的时候是 50 * 50 的大小，但是加载完之后变为了 100 * 100，这就是布局的波动，会影响体验。"}),"\n",(0,s.jsx)(n.p,{children:"这时候 lighthouse 等工具给出的优化建议是给 img 设置固定的 width 和 height。"}),"\n",(0,s.jsxs)(n.h3,{id:"si-速度指数",children:[(0,s.jsx)(n.a,{href:"https://web.dev/si",target:"_blank",rel:"noopener noreferrer",children:"SI"})," （速度指数）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#si-速度指数",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Speed Index，页面可见部分的显示速度, 单位是时间"}),"\n",(0,s.jsx)(n.p,{children:"这个指标也有快、适度、慢的区间，用性能测试工具测量时会转为相应的分数："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"指标这么多，哪些指标是要重点关注的呢？谷歌选出了 3 个核心指标："}),"\n",(0,s.jsxs)(n.h2,{id:"core-web-vitals",children:["Core Web Vitals",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#core-web-vitals",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"谷歌从上面的 Web Vitals 里选出了 3 个核心的，分别是 LCP、FID、CLS。"}),"\n",(0,s.jsx)(n.p,{children:"LCP 是最大内容渲染时间，代表页面已经完成了主要内容的渲染，这个指标可以用来衡量加载到渲染的性能。（FMP 是有意义的渲染，那个比较难定义）"}),"\n",(0,s.jsx)(n.p,{children:"FID 是衡量页面内容首次渲染（FCP）之后，到可交互（TTI）的这段时间内，用户点击按钮或者输入内容到页面响应的时间。是从用户交互角度衡量页面性能的指标。"}),"\n",(0,s.jsx)(n.p,{children:"CLS 是布局稳定性，是能反应用户体验的一个指标。"}),"\n",(0,s.jsxs)(n.p,{children:["这三个核心指标分别代表了",(0,s.jsx)(n.strong,{children:"加载性能、交互性能、视觉稳定性"}),"。比较有代表性。"]}),"\n",(0,s.jsx)(n.p,{children:"我们可以通过 LightHouse 工具来测量性能指标："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点击 analyze page load 就会开始测量。"}),"\n",(0,s.jsx)(n.p,{children:"会给出 FCP、LCP、SI、TTI、TBT、CLS 性能指标的值，并根据值的区间计算得分："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"下面还会给出针对不同指标的优化建议："}),"\n",(0,s.jsx)(n.p,{children:"比如我们前面提到的图片设置 width 和 height 来优化 CLS："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"有的同学可能会说怎么没有 Core Web Vitals 的 FID，确实，LighoutHouse 的指标里没这个，但是可以用 TBT 代替。"}),"\n",(0,s.jsx)(n.p,{children:"FID 是首次输入延迟，是从首次内容渲染（FCP）到可交互（TTI）之间，用户输入到页面响应的时间。"}),"\n",(0,s.jsx)(n.p,{children:"TBT 是阻塞总时长，是从首次内容渲染（FCP）到可交互（TTI）之间，所有 longtask 的总时长。"}),"\n",(0,s.jsx)(n.p,{children:"这俩指标很接近，所以可以用 TBT 代替 FID。"}),"\n",(0,s.jsx)(n.p,{children:"至于为什么没有 FID，lighouthouse 的文档里有解释："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"至于得分是怎么算出来的，什么时候标红、标绿、标黄，自然是有区间的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"比如 LCP 小于 2.5s 是 good，标绿，大于 4s 标红等。"}),"\n",(0,s.jsxs)(n.p,{children:["LightHouse 还提供了一个",(0,s.jsx)(n.a,{href:"https://googlechrome.github.io/lighthouse/scorecalc/#FCP=780&SI=1743&FMP=723&TTI=1600&FCI=6500&LCP=2324&TBT=14&CLS=0&device=desktop&version=9",target:"_blank",rel:"noopener noreferrer",children:"可视化的计算器"}),"："]}),"\n",(0,s.jsx)(n.p,{children:"可以看到指标在不同值的时候的分数和颜色，或者看达到多少分数需要把指标优化到多少："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"当你有优化目标的时候，可以通过这个计算器看看要达到多少分需要把指标优化到什么程度。"}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Google 定义了一系列性能指标，叫做 Web Vitals："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/ttfb",target:"_blank",rel:"noopener noreferrer",children:"TTFB"})," 首字节到达"]}),"\n",(0,s.jsx)(n.li,{children:"FP 首次绘制"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/fcp",target:"_blank",rel:"noopener noreferrer",children:"FCP"})," 首次内容绘制"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/lcp",target:"_blank",rel:"noopener noreferrer",children:"LCP"})," 最大内容绘制"]}),"\n",(0,s.jsx)(n.li,{children:"FMP 首次有意义的绘制"}),"\n",(0,s.jsx)(n.li,{children:"DCL DOM内容加载完成"}),"\n",(0,s.jsx)(n.li,{children:"L 加载完成"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/tti",target:"_blank",rel:"noopener noreferrer",children:"TTI"})," 可交互时间"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/fid",target:"_blank",rel:"noopener noreferrer",children:"FID"})," 首次输入延迟"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/tbt",target:"_blank",rel:"noopener noreferrer",children:"TBT"})," 阻塞总时长"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/cls",target:"_blank",rel:"noopener noreferrer",children:"CLS"})," 累积布局偏移"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://web.dev/si",target:"_blank",rel:"noopener noreferrer",children:"SI"})," 速度指数"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"又从其中选出了 3 个作为核心指标，也就是 LCP、FID、CLS，分别用来衡量加载性能、交互性能、视觉稳定性。"}),"\n",(0,s.jsx)(n.p,{children:"可以用 LightHouse 测量这些指标的值，LighoutHouse 会给出分数和红绿黄的标识，也会给出每个指标的优化建议。"}),"\n",(0,s.jsx)(n.p,{children:"有时需要自己计算并上报这些指标，可以通过 performance api 来算，或者通过 PerformanceObserver api 拿到计算后的指标值。"}),"\n",(0,s.jsx)(n.p,{children:"当我们谈网页性能的时候，会具体到这些性能指标。要记住这些指标的含义，比如别人提起 LCP 你要知道指的是加载性能。"})]})}function m(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}let g=m;m.__RSPRESS_PAGE_META={},m.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F31.Web%20Vitals%20%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97%EF%BC%9F%E5%A6%82%E4%BD%95%E8%A1%A1%E9%87%8F%E7%BD%91%E9%A1%B5%E6%80%A7%E8%83%BD%EF%BC%9F.md"]={toc:[{text:"Web Vitals",id:"web-vitals",depth:2},{text:"TTFB （首字节到达）",id:"ttfb-首字节到达",depth:3},{text:"FP （首次绘制）",id:"fp-首次绘制",depth:3},{text:"FCP （首次内容绘制）",id:"fcp-首次内容绘制",depth:3},{text:"LCP （最大内容绘制）",id:"lcp-最大内容绘制",depth:3},{text:"FMP （首次有意义的绘制）",id:"fmp-首次有意义的绘制",depth:3},{text:"DCL（DOM内容加载完成）",id:"dcldom内容加载完成",depth:3},{text:"L（加载完成）",id:"l加载完成",depth:3},{text:"TTI （可交互时间）",id:"tti-可交互时间",depth:3},{text:"FID （首次输入延迟）",id:"fid-首次输入延迟",depth:3},{text:"TBT （阻塞总时长）",id:"tbt-阻塞总时长",depth:3},{text:"CLS （累积布局偏移）",id:"cls-累积布局偏移",depth:3},{text:"SI （速度指数）",id:"si-速度指数",depth:3},{text:"Core Web Vitals",id:"core-web-vitals",depth:2},{text:"总结",id:"总结",depth:2}],title:"31.Web Vitals 如何计算？如何衡量网页性能？",headingTitle:"31.Web Vitals 如何计算？如何衡量网页性能？",frontmatter:{}}}}]);