"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["33045"],{532279:function(e,n,s){s.r(n),s.d(n,{default:()=>d});var r=s(552676),t=s(740453);function a(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",h4:"h4",strong:"strong",pre:"pre",code:"code",blockquote:"blockquote"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"70云函数实用工具库",children:["70.云函数实用工具库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#70云函数实用工具库",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"113-云函数实用工具库",children:["11.3 云函数实用工具库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#113-云函数实用工具库",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"云函数经常需要处理一些非常基础事情，比如时间、数组、数字、对象、字符串、IP等，自己造轮子的成本很高，这时候我们可以到前面提到的awesome Node.js的Github里去找一些别人已经写好的开源模块，我们直接下载引入即可，下面就列举一些比较好用的工具并会结合云函数给出一些详细的案例。"}),"\n",(0,r.jsxs)(n.h3,{id:"1131-moment时间处理和timezone世界时间",children:["11.3.1 moment时间处理和Timezone世界时间",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1131-moment时间处理和timezone世界时间",children:"#"})]}),"\n",(0,r.jsxs)(n.h4,{id:"1云函数时间处理",children:["1、云函数时间处理",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1云函数时间处理",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["开发小程序时经常需要格式化时间、处理相对时间、日历时间以及时间的多语言问题，这个时候就可以使用比较流行的momentjs了，可以参考",(0,r.jsx)(n.a,{href:"http://momentjs.cn/",target:"_blank",rel:"noopener noreferrer",children:"moment中文文档"})]}),"\n",(0,r.jsxs)(n.p,{children:["使用开发者工具新建一个云函数，比如moment，然后在package.json",(0,r.jsx)(n.strong,{children:"增加"}),"moment最新版latest的依赖："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'"dependencies": {\n  "wx-server-sdk": "latest",\n  "moment": "latest"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["在index.js里的代码修改为如下，我们将moment区域设置为中国，将时间格式化为 ",(0,r.jsx)(n.code,{children:"十二月 23日  2019,  4:13:29 下午"}),"的样式以及相对当前时间",(0,r.jsx)(n.code,{children:"多少分钟前"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\nconst moment = require(\"moment\");\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nexports.main = async (event, context) => {\n  moment.locale('zh-cn');\n  time1 = moment().format('MMMM Do YYYY, h:mm:ss a');\n  time2 = moment().startOf('hour').fromNow();\n  return  { time1,time2}\n}\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"值得注意的是"}),"，云函数中的时区为 UTC+0，不是 UTC+8，格式化得到的时间和在国内的时间是有8个小时的时间差的，",(0,r.jsx)(n.strong,{children:"如果在云函数端将时间格式转换为字符串"}),"需要给小时数+8（这个处理需要注意一些细节，不会处理的建议修改时区），也可以修改时区。"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"2云函数处理时区的两个方法",children:["2、云函数处理时区的两个方法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2云函数处理时区的两个方法",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["云函数修改时区我们可以使用timezone依赖（和moment是同一个开源作者），",(0,r.jsx)(n.a,{href:"https://momentjs.com/timezone/",target:"_blank",rel:"noopener noreferrer",children:"timezone技术文档"})]}),"\n",(0,r.jsxs)(n.p,{children:["在package.json",(0,r.jsx)(n.strong,{children:"增加"}),"moment-timezone最新版latest的依赖，然后修改上面相应的代码即可，"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'"dependencies": {\n  "wx-server-sdk": "latest",\n  "moment-timezone": "latest"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"然后使用在云函数里使用如下代码，即可完成时区的转换。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const moment = require('moment-timezone');\ntime1 = moment().tz('Asia/Shanghai').format('MMMM Do YYYY, h:mm:ss a');\n"})}),"\n",(0,r.jsxs)(n.p,{children:["云函数的时区除了可以使用moment来处理外，还可以通过配置云函数的",(0,r.jsx)(n.strong,{children:"环境变量"}),"的方法(在云开发控制台)，添加一个字段 TZ，值为",(0,r.jsx)(n.code,{children:"Asia/Shanghai"}),"来指定时区即可。"]}),"\n",(0,r.jsxs)(n.h3,{id:"1132-获取公网ip",children:["11.3.2 获取公网IP",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1132-获取公网ip",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["有时我们希望能够获取到服务器的公网IP，比如用于IP地址的白名单，或者想根据IP查询到服务器所在的地址，ipify就是一个免费好用的依赖，通过它我们也可以获取到云函数所在服务器的公网IP，",(0,r.jsx)(n.a,{href:"https://github.com/sindresorhus/ipify",target:"_blank",rel:"noopener noreferrer",children:"ipify Github地址"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:["使用开发者工具新建一个getip的云函数，然后输入以下代码，并在package.json的”dependencies”里",(0,r.jsx)(n.strong,{children:"增加"}),"最新版的ipify依赖："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'"dependencies": {\n  "wx-server-sdk": "latest",\n  "ipify": "latest"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"在index.js里的代码修改为如下，调用ipify返回ipv4的服务器地址："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\nconst ipify = require('ipify');\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nexports.main = async (event, context) => {\n  return await ipify({ useIPv6: false })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"然后右键getip云函数根目录，选择在终端中打开，输入npm install安装依赖，之后上传并部署所有文件。我们可以在小程序端调用这个云函数，就可以得到云函数服务器的公网IP，这个IP是随机而有限的几个，反复调用getip，就能够穷举所有云函数所在服务器的ip了。可能你会在使用云函数连接数据库或者用云函数来建微信公众号的后台时需要用到IP白名单，我们可以把这些ip都添加到白名单里面，这样云函数就可以做很多事情啦。"}),"\n",(0,r.jsxs)(n.h3,{id:"1133-加解密crypto",children:["11.3.3 加解密Crypto",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1133-加解密crypto",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"crypto模块是Node.js的核心模块之一，它提供了安全相关的功能，包含对 OpenSSL 的哈希、HMAC、加密、解密、签名、以及验证功能的一整套封装。由于crypto模块是内置模块，我们引入它是无需下载，就可以直接引入。"}),"\n",(0,r.jsx)(n.p,{children:"使用开发者工具新建一个云函数，比如crypto，在index.js里输入以下代码，我们来了解一下crypto支持哪些加密算法，并以MD5加密为例："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nconst crypto = require('crypto');\nexports.main = async (event, context) => {\n  const hashes = crypto.getHashes(); //获取crypto支持的加密算法种类列表\n\n  //md5 加密 CloudBase2020 返回十六进制\n  var md5 = crypto.createHash('md5');\n  var message = 'CloudBase2020';\n  var digest = md5.update(message, 'utf8').digest('hex');   \n\n  return {\n      \"crypto支持的加密算法种类\":hashes,\n      \"md5加密返回的十六进制\":digest\n  };\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"将云函数部署之后调用从返回的结果我们可以了解到，云函数crypto模块支持46种加密算法。"}),"\n",(0,r.jsxs)(n.h3,{id:"1134-lodash实用工具库",children:["11.3.4 Lodash实用工具库",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1134-lodash实用工具库",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Lodash是一个一致性、模块化、高性能的 JavaScript ",(0,r.jsx)(n.strong,{children:"实用工具库"}),"，通过降低 array、number、objects、string 等数据类型的使用难度从而让 JavaScript 变得更简单。Lodash 的模块化方法非常适用于：遍历 array、object 和 string；对值进行操作和检测；创建符合功能的函数。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"技术文档："})," ",(0,r.jsx)(n.a,{href:"https://lodash.com/",target:"_blank",rel:"noopener noreferrer",children:"Lodash官方文档"}),"、",(0,r.jsx)(n.a,{href:"https://www.lodashjs.com/",target:"_blank",rel:"noopener noreferrer",children:"Lodash中文文档"})]}),"\n",(0,r.jsxs)(n.p,{children:["使用开发者工具新建一个云函数，比如lodash，然后在package.json ",(0,r.jsx)(n.strong,{children:"增加"})," lodash最新版latest的依赖："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'"dependencies": {\n    "lodash": "latest"\n  }\n'})}),"\n",(0,r.jsx)(n.p,{children:"在index.js里的代码修改为如下，这里使用到了lodash的chunk方法来分割数组："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\nvar _ = require('lodash');\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nexports.main = async (event, context) => {\n  //将数组拆分为长度为2的数组\n  const arr= _.chunk(['a', 'b', 'c', 'd'], 2);\n  return arr\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["右键lodash云函数目录，选择“在终端中打开”，npm install 安装模块之后右键部署并上传所有文件。我们就可以通过多种方式来调用它（前面已详细介绍）即可获得结果。Lodash作为工具，非常好用且实用，",(0,r.jsx)(n.strong,{children:"它的源码也非常值得学习"}),"，更多相关内容则需要大家去GitHub和官方技术文档里深入了解。"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["在",(0,r.jsx)(n.a,{href:"https://github.com/sindresorhus/awesome-Node.js",target:"_blank",rel:"noopener noreferrer",children:"awesome Node.js"}),"页面我们了解到还有Ramba、immutable、Mout等类似工具库，这些都非常推荐。借助于Github的awesome清单，我们就能一手掌握最酷炫好用的开源项目，避免了自己去收集收藏。"]}),"\n"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}let d=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F70.%E4%BA%91%E5%87%BD%E6%95%B0%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93.md"]={toc:[{text:"11.3 云函数实用工具库",id:"113-云函数实用工具库",depth:2},{text:"11.3.1 moment时间处理和Timezone世界时间",id:"1131-moment时间处理和timezone世界时间",depth:3},{text:"1、云函数时间处理",id:"1云函数时间处理",depth:4},{text:"2、云函数处理时区的两个方法",id:"2云函数处理时区的两个方法",depth:4},{text:"11.3.2 获取公网IP",id:"1132-获取公网ip",depth:3},{text:"11.3.3 加解密Crypto",id:"1133-加解密crypto",depth:3},{text:"11.3.4 Lodash实用工具库",id:"1134-lodash实用工具库",depth:3}],title:"70.云函数实用工具库",headingTitle:"70.云函数实用工具库",frontmatter:{}}}}]);