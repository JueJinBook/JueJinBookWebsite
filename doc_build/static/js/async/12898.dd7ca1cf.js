"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["12898"],{558717:function(n,e,o){o.r(e),o.d(e,{default:()=>d});var s=o(552676),a=o(740453);function i(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",strong:"strong",h4:"h4",pre:"pre",code:"code",blockquote:"blockquote"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"22生命周期",children:["22.生命周期",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#22生命周期",children:"#"})]}),"\n",(0,s.jsxs)(e.h2,{id:"36-生命周期",children:["3.6 生命周期",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#36-生命周期",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"生命周期指的是小程序App和页面Page从被打开到被关闭、卸载的过程，这个过程包含多个有顺序的阶段，比如初始化、资源是否加载完成、页面是否被显示、用户是否将小程序或页面切换到了后台、用户是否卸载了页面等。"}),"\n",(0,s.jsxs)(e.h3,{id:"361-构造器",children:["3.6.1 构造器",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#361-构造器",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["App()函数注册小程序，Page()函数注册小程序中的一个页面，他们",(0,s.jsx)(e.strong,{children:"都接受的是对象Object类型的参数"}),"，包含一些生命周期函数和事件处理函数。"]}),"\n",(0,s.jsxs)(e.h4,{id:"1小程序构造器和页面构造器",children:["1、小程序构造器和页面构造器",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1小程序构造器和页面构造器",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"App() 必须在 app.js 中调用，必须调用且只能调用一次，从技术文档我们可以了解小程序构造器有如下属性与方法，，而onLaunch、onShow等这些就是小程序的生命周期函数。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"App({\n  onLaunch: function (options) { //监听小程序初始化\n  },\n  onShow:function(options){      //监听小程序启动或切前台\n  },\n  onHide:function(){      //监听小程序切后台\n  },\n  onError:function(msg){     //错误监听函数     \n  },\n  onPageNotFound:function(){ //页面不存在监听函数\n  },\n  onUnhandledRejection:function(){//未处理的 Promise 拒绝事件监听函数   \n  },\n  onThemeChange:function(){//监听系统主题变化\n  }\n})\n"})}),"\n",(0,s.jsx)(e.p,{children:"Page()则需要写在每个小程序页面的js文件里面来注册小程序中的一个页面，页面构造器有如下属性和方法，而其中onLoad、onShow等就是页面的生命周期函数："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"Page({\n  data: {//页面的初始数据\n  },\n  onLoad: function(options) {//监听页面加载\n  },\n  onShow: function() {//监听页面显示\n  },\n  onReady: function() {//监听页面初次渲染完成\n  },\n  onHide: function() {//监听页面隐藏\n  },\n  onUnload: function() {//监听页面卸载\n  },\n  onPullDownRefresh: function() {//监听用户下拉动作\n  },\n  onReachBottom: function() {//页面上拉触底事件的处理函数\n  },\n  onShareAppMessage: function () {//用户点击右上角转发\n  },\n  onPageScroll: function() {//页面滚动触发事件的处理函数\n  },\n  onResize: function() {//页面尺寸改变时触发\n  },\n  onTabItemTap:function(){//当前是 tab 页时，点击 tab 时触发\n  }\n})\n"})}),"\n",(0,s.jsx)(e.p,{children:"可能你一开始看到这些陌生的函数名称以及功能介绍会比较迷茫，对生命周期函数以及什么是监听没有概念，这些很正常，我们可以先打开app.js以及页面的js文件看看，它们是不是都有一个这样的构造器，以及使用到了部分的生命周期函数？在后面我们会通过实战来学习。"}),"\n",(0,s.jsxs)(e.h4,{id:"2页面的全局变量",children:["2、页面的全局变量",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2页面的全局变量",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["在前面我们已经介绍过，我们可以在",(0,s.jsx)(e.code,{children:"Page({})"}),"对象前添加一些变量，比如我们声明了一个user变量："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'const user = {name:"李东bbsky",address:"深圳"} \nconsole.log(user.address) //之前介绍过，这里可以访问user对象\nPage({\n  data: {\n    title:"技术杂役"\n  },\n  onLoad: function(options) {\n    console.log(this.data.title)\n    console.log(user.name)  //在生命周期函数里访问user对象\n  },\n})\n'})}),"\n",(0,s.jsx)(e.p,{children:"这个user变量可以在Page({})对象的生命周期函数里访问，因为user变量定义在了Page之外，它是整个页面的全局变量。但是Page里的data对象，就只能通过this.data来访问，不能在Page外面访问到。"}),"\n",(0,s.jsxs)(e.h4,{id:"3声明变量的写法",children:["3、声明变量的写法",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3声明变量的写法",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["值得一提的是在写JavaScript表达式的时候，我们要分清什么时候可以用",(0,s.jsx)(e.code,{children:"="}),"赋值，啥时候需要用对象赋值，使用",(0,s.jsx)(e.code,{children:":"}),"："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'Page({\n  const school = "清华大学"  //错误写法\n  data:{                    //正确写法\n\n  },\n  onLoad: function(options) {\n    company:"腾讯"          //错误写法\n    const company = "腾讯"  //正确写法\n  },    \n})\n'})}),"\n",(0,s.jsxs)(e.p,{children:["我们需要留意哪些是对象，哪些是函数，",(0,s.jsx)(e.code,{children:"Page({})"}),"内是不能直接用",(0,s.jsx)(e.code,{children:"="}),"声明变量的，它"]}),"\n",(0,s.jsxs)(e.h4,{id:"4全局变量",children:["4、全局变量",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4全局变量",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"全局变量也是相对的，比如我们把变量声明在Page外，这个变量就是Page的全局变量，而有些变量我们可以声明在生命周期函数或事件处理函数的里，如在页面的js里执行以下代码:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'Page({\n  data: {\n    title:""\n  },\n\n  onLoad: function (options) {\n    const movielist=["肖申克的救赎","霸王别姬","这个杀手不太冷"]\n    this.setData({\n      title:movielist[1]\n    })\n    console.log(this.data.title)\n  },\n})\n'})}),"\n",(0,s.jsxs)(e.p,{children:["我们首先在onLoad生命周期函数里声明了一个movielist变量，然后通过",(0,s.jsx)(e.code,{children:"this.setData"}),"将movielist数组的第二项赋值给data里面的title，然后再通过",(0,s.jsx)(e.code,{children:"this.data"}),"调用data里面title的值。对于",(0,s.jsx)(e.code,{children:"this.setData"}),"而言，movielist就是一个全局变量。"]}),"\n",(0,s.jsxs)(e.h3,{id:"362-生命周期函数",children:["3.6.2 生命周期函数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#362-生命周期函数",children:"#"})]}),"\n",(0,s.jsxs)(e.h4,{id:"1打印日志了解生命周期",children:["1、打印日志了解生命周期",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1打印日志了解生命周期",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"对小程序和页面的生命周期，我们可以通过打印日志的方式来了解生命周期函数具体的执行顺序和情况，使用开发者工具在app.js里给onLaunch、onShow、onHide添加一些打印日志。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"onLaunch(opts) {\n  console.log('onLaunch监听小程序初始化。',opts)\n},\nonShow(opts) {\n  console.log('onShow监听小程序启动或切前台',opts)\n},\nonHide() {\n  console.log('onHide监听小程序切后台')\n},\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"想必大家已经注意，有的参数写的options，有的写的却是opts；前面事件对象有的写的是event，有的则用的是e，这个参数都是可以自定义的哦"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"以及在lifecylce.js的js里添加"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'onLoad: function(options) {\n  console.log("onLoad监听页面加载",options)\n},\nonReady: function() {\n  console.log("onReady监听页面初次渲染完成")\n},\nonShow: function() {\n  console.log("onShow监听页面显示")\n},\nonHide: function() {\n  console.log("onHide监听页面隐藏")\n},\nonUnload: function() {\n  console.log("onUnload监听页面卸载")\n},\n'})}),"\n",(0,s.jsxs)(e.p,{children:["通过在模拟器执行各种动作，比如编译、点击转发按钮、点击小程序转发按钮旁的关闭按钮（并没有关闭）、页面切换等来了解生命周期函数的",(0,s.jsx)(e.strong,{children:"执行顺序"}),"（比如页面生命周期），对切前台和切后台、页面的加载、渲染、显示、隐藏、卸载有一定的了解。"]}),"\n",(0,s.jsxs)(e.h4,{id:"3onlaunch与onshow",children:["3、onLaunch与onShow",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3onlaunch与onshow",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["onLaunch是监听小程序的初始化，初始化完成时触发，",(0,s.jsx)(e.strong,{children:"全局只会触发一次"}),"，所以在这里我们可以用来执行获取用户登录信息的函数等一些非常核心的数据，如果onLaunch的函数过多，会影响小程序的启动速度。"]}),"\n",(0,s.jsxs)(e.p,{children:["onShow是在小程序启动，或从后台进入前台显示时触发，也就是",(0,s.jsx)(e.strong,{children:"它会触发很多次"}),"，在这里就不大适合放获取用户登录信息的函数啦。这两者的区别要注意。"]}),"\n",(0,s.jsxs)(e.h4,{id:"2生命周期函数调用api",children:["2、生命周期函数调用API",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2生命周期函数调用api",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"前面我们已经了解到，通过点击事件可以触发事件处理函数，也就是需要用户来点击某个组件才能触发；这里页面的生命周期函数也可以触发事件处理函数，它不需要用户点击组件，只需要用户打开小程序、打开某个页面，把小程序切后台等情况时就能触发里面的函数。"}),"\n",(0,s.jsxs)(e.p,{children:["比如我们在app.js的onLaunch生命周期函数里调用",(0,s.jsx)(e.code,{children:"wx.showLoading"}),"的接口，表示小程序正在加载中："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'App({\n  onLaunch: function () {\n    wx.showLoading({\n      title: "正在加载中",\n    })\n  },\n  globalData: {\n\n  }\n})\n'})}),"\n",(0,s.jsxs)(e.p,{children:["执行之后我们会发现”正在加载中“的loading动画一直都会在，因为我们需要在表示资源加载完成的生命周期函数里调用",(0,s.jsx)(e.code,{children:"wx.hideLoading"}),"来隐藏这个loading动画，比如小程序 onShow 生命周期函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'App({\n  onLaunch: function () {\n    wx.showLoading({\n      title: "正在加载中",\n    })\n  },\n  onShow (options) {\n    wx.hideLoading({\n      success: (res) => {\n        console.log("加载完成，所以隐藏掉了")\n      },\n    })\n  },\n  globalData: {\n\n  }\n})\n'})}),"\n",(0,s.jsx)(e.p,{children:"我们需要弄清楚，生命周期函数会在小程序或页面在何种阶段或什么情况下才会触发，以及这些生命周期函数的触发顺序。"}),"\n",(0,s.jsxs)(e.h4,{id:"3小程序打开场景值",children:["3、小程序打开场景值",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3小程序打开场景值",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"在App的onLaunch和onShow打印的对象里有一个scene为1001，这个是场景值。场景值用来描述用户进入小程序的路径方式。用户进入你的小程序的方式有很多，比如有的是扫描二维码、有的是长按图片识别二维码，有的是通过微信群进入的小程序，有的是朋友单聊进入的小程序，有的是通过公众号进入的小程序等等，这些就是场景值，而具体的场景值，可以看技术文档，场景值对产品、运营来说非常重要。"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"技术文档："}),(0,s.jsx)(e.a,{href:"https://developers.weixin.qq.com/miniprogram/dev/reference/scene-list.html",target:"_blank",rel:"noopener noreferrer",children:"场景值列表"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"App({\n  onLaunch: function (options) {\n    console.log('打印小程序启动时的参数',options)\n  },\n})\n"})}),"\n",(0,s.jsx)(e.p,{children:"在options对象里就包含着scene这个属性，属性的值即为场景值："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'path: "" //页面路径\nquery: {} //页面的参数\nreferrerInfo: {} //来源小程序、公众号或 App 的 appId\nscene: 1047 //场景值\nshareTicket: //带 shareTicket 的转发可以获取到更多的转发信息，例如群聊的名称以及群的标识 openGId\n'})})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(i,{...n})}):i(n)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F22.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.md"]={toc:[{text:"3.6 生命周期",id:"36-生命周期",depth:2},{text:"3.6.1 构造器",id:"361-构造器",depth:3},{text:"1、小程序构造器和页面构造器",id:"1小程序构造器和页面构造器",depth:4},{text:"2、页面的全局变量",id:"2页面的全局变量",depth:4},{text:"3、声明变量的写法",id:"3声明变量的写法",depth:4},{text:"4、全局变量",id:"4全局变量",depth:4},{text:"3.6.2 生命周期函数",id:"362-生命周期函数",depth:3},{text:"1、打印日志了解生命周期",id:"1打印日志了解生命周期",depth:4},{text:"3、onLaunch与onShow",id:"3onlaunch与onshow",depth:4},{text:"2、生命周期函数调用API",id:"2生命周期函数调用api",depth:4},{text:"3、小程序打开场景值",id:"3小程序打开场景值",depth:4}],title:"22.生命周期",headingTitle:"22.生命周期",frontmatter:{}}}}]);