"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["89611"],{803717:function(e,n,i){i.r(n),i.d(n,{default:()=>l});var s=i(552676),r=i(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ol:"ol",li:"li",pre:"pre",code:"code",h2:"h2",img:"img"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"23拓展-2无所不知--info-指令",children:["23拓展 2：无所不知 —— Info 指令",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23拓展-2无所不知--info-指令",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"在使用 Redis 时，时常会遇到很多问题需要诊断，在诊断之前需要了解 Redis 的运行状态，通过强大的 Info 指令，你可以清晰地知道 Redis 内部一系列运行参数。"}),"\n",(0,s.jsx)(n.p,{children:"Info 指令显示的信息非常繁多，分为 9 大块，每个块都有非常多的参数，这 9 个块分别是:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Server  服务器运行的环境参数"}),"\n",(0,s.jsx)(n.li,{children:"Clients 客户端相关信息"}),"\n",(0,s.jsx)(n.li,{children:"Memory 服务器运行内存统计数据"}),"\n",(0,s.jsx)(n.li,{children:"Persistence 持久化信息"}),"\n",(0,s.jsx)(n.li,{children:"Stats 通用统计数据"}),"\n",(0,s.jsx)(n.li,{children:"Replication 主从复制相关信息"}),"\n",(0,s.jsx)(n.li,{children:"CPU CPU 使用情况"}),"\n",(0,s.jsx)(n.li,{children:"Cluster 集群信息"}),"\n",(0,s.jsx)(n.li,{children:"KeySpace 键值对统计数量信息"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Info 可以一次性获取所有的信息，也可以按块取信息。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# 获取所有信息\n> info\n# 获取内存相关信息\n> info memory\n# 获取复制相关信息\n> info replication\n"})}),"\n",(0,s.jsxs)(n.p,{children:["考虑到参数非常繁多，一一说明工作量巨大，下面我只挑一些关键性的、非常实用和最常用的参数进行详细讲解。如果读者想要了解所有的参数细节，请参考阅读 ",(0,s.jsx)(n.a,{href:"https://redis.io/commands/info",target:"_blank",rel:"noopener noreferrer",children:"Redis 官网文档"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"redis-每秒执行多少次指令",children:["Redis 每秒执行多少次指令？",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redis-每秒执行多少次指令",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/7/16/164a14ce6633c24a?w=345&h=220&f=png&s=19427",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["这个信息在 Stats 块里，可以通过 ",(0,s.jsx)(n.code,{children:"info stats"})," 看到。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# ops_per_sec: operations per second，也就是每秒操作数\n> redis-cli info stats |grep ops\ninstantaneous_ops_per_sec:789\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/7/13/1649181bd00bed33?w=306&h=147&f=png&s=20852",alt:""}),"\n以上，表示 ops 是 789，也就是所有客户端每秒会发送 789 条指令到服务器执行。极限情况下，Redis 可以每秒执行 10w 次指令，CPU 几乎完全榨干。如果 qps 过高，可以考虑通过 ",(0,s.jsx)(n.code,{children:"monitor"})," 指令快速观察一下究竟是哪些 key 访问比较频繁，从而在相应的业务上进行优化，以减少 IO 次数。",(0,s.jsx)(n.code,{children:"monitor"})," 指令会瞬间吐出来巨量的指令文本，所以一般在执行 ",(0,s.jsx)(n.code,{children:"monitor"})," 后立即 ",(0,s.jsx)(n.code,{children:"ctrl+c "}),"中断输出。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli monitor\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"redis-连接了多少客户端",children:["Redis 连接了多少客户端？",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redis-连接了多少客户端",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["这个信息在 Clients 块里，可以通过 ",(0,s.jsx)(n.code,{children:"info clients"})," 看到。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli info clients\n# Clients\nconnected_clients:124  # 这个就是正在连接的客户端数量\nclient_longest_output_list:0\nclient_biggest_input_buf:0\nblocked_clients:0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这个信息也是比较有用的，通过观察这个数量可以确定是否存在意料之外的连接。如果发现这个数量不对劲，接着就可以使用",(0,s.jsx)(n.code,{children:"client list"}),"指令列出所有的客户端链接地址来确定源头。"]}),"\n",(0,s.jsxs)(n.p,{children:["关于客户端的数量还有个重要的参数需要观察，那就是",(0,s.jsx)(n.code,{children:"rejected_connections"}),"，它表示因为超出最大连接数限制而被拒绝的客户端连接次数，如果这个数字很大，意味着服务器的最大连接数设置的过低需要调整 ",(0,s.jsx)(n.code,{children:"maxclients"})," 参数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli info stats |grep reject\nrejected_connections:0\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"redis-内存占用多大-",children:["Redis 内存占用多大 ?",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redis-内存占用多大-",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/7/16/164a14efc8e3e44b?w=362&h=216&f=png&s=13620",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["这个信息在 Memory 块里，可以通过 ",(0,s.jsx)(n.code,{children:"info memory"})," 看到。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli info memory | grep used | grep human\nused_memory_human:827.46K # 内存分配器 (jemalloc) 从操作系统分配的内存总量\nused_memory_rss_human:3.61M  # 操作系统看到的内存占用 ,top 命令看到的内存\nused_memory_peak_human:829.41K  # Redis 内存消耗的峰值\nused_memory_lua_human:37.00K # lua 脚本引擎占用的内存大小\n"})}),"\n",(0,s.jsx)(n.p,{children:"如果单个 Redis 内存占用过大，并且在业务上没有太多压缩的空间的话，可以考虑集群化了。"}),"\n",(0,s.jsxs)(n.h2,{id:"复制积压缓冲区多大",children:["复制积压缓冲区多大？",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#复制积压缓冲区多大",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["这个信息在 Replication 块里，可以通过 ",(0,s.jsx)(n.code,{children:"info replication"})," 看到。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli info replication |grep backlog\nrepl_backlog_active:0\nrepl_backlog_size:1048576  # 这个就是积压缓冲区大小\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n"})}),"\n",(0,s.jsx)(n.p,{children:"复制积压缓冲区大小非常重要，它严重影响到主从复制的效率。当从库因为网络原因临时断开了主库的复制，然后网络恢复了，又重新连上的时候，这段断开的时间内发生在 master 上的修改操作指令都会放在积压缓冲区中，这样从库可以通过积压缓冲区恢复中断的主从同步过程。"}),"\n",(0,s.jsx)(n.p,{children:"积压缓冲区是环形的，后来的指令会覆盖掉前面的内容。如果从库断开的时间过长，或者缓冲区的大小设置的太小，都会导致从库无法快速恢复中断的主从同步过程，因为中间的修改指令被覆盖掉了。这时候从库就会进行全量同步模式，非常耗费 CPU 和网络资源。"}),"\n",(0,s.jsx)(n.p,{children:"如果有多个从库复制，积压缓冲区是共享的，它不会因为从库过多而线性增长。如果实例的修改指令请求很频繁，那就把积压缓冲区调大一些，几十个 M 大小差不多了，如果很闲，那就设置为几个 M。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"> redis-cli info stats | grep sync\nsync_full:0\nsync_partial_ok:0\nsync_partial_err:0  # 半同步失败次数\n"})}),"\n",(0,s.jsxs)(n.p,{children:["通过查看",(0,s.jsx)(n.code,{children:"sync_partial_err"}),"变量的次数来决定是否需要扩大积压缓冲区，它表示主从半同步复制失败的次数。"]}),"\n",(0,s.jsxs)(n.h2,{id:"思考",children:["思考",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#思考",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"平时你们在使用 Redis 时还需要查看哪些重要的信息，能不能直接在 Info 信息里获取？"})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let l=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["Redis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%EF%BC%9A%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5%2F23%E6%8B%93%E5%B1%95%202%EF%BC%9A%E6%97%A0%E6%89%80%E4%B8%8D%E7%9F%A5%20%E2%80%94%E2%80%94%20Info%20%E6%8C%87%E4%BB%A4.md"]={toc:[{text:"Redis 每秒执行多少次指令？",id:"redis-每秒执行多少次指令",depth:2},{text:"Redis 连接了多少客户端？",id:"redis-连接了多少客户端",depth:2},{text:"Redis 内存占用多大 ?",id:"redis-内存占用多大-",depth:2},{text:"复制积压缓冲区多大？",id:"复制积压缓冲区多大",depth:2},{text:"思考",id:"思考",depth:2}],title:"23拓展 2：无所不知 —— Info 指令",headingTitle:"23拓展 2：无所不知 —— Info 指令",frontmatter:{}}}}]);