"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["95724"],{987652:function(e,n,r){r.r(n),r.d(n,{default:()=>q});var s=r(552676),i=r(740453);let c=r.p+"static/image/53d02957851ab13799b90e81c71d2c73.34a43304.webp",a=r.p+"static/image/8c5c8432cdaa50fea29d609ef3d7c5db.ce50aea2.webp",d=r.p+"static/image/8d01e9e0f27642593427491a1125e984.e53984d8.webp",l=r.p+"static/image/5222c8dd6be62777ce0f212effff46b5.160ed225.webp",t=r.p+"static/image/e48d14f311f704fe2c246f3db94917f9.b5a0cdb7.webp",o=r.p+"static/image/a5bd12ff1bcbe00537e6a925c1c4fdd0.ac628f40.webp",h=r.p+"static/image/5207db567362d920fefb7838075bb45b.ca429149.webp",x=r.p+"static/image/0ecc04a8698b3c434a96690177b4c3d9.89c6068f.webp",p=r.p+"static/image/e022b048517d21c4d6d901e296d48912.519d576e.webp",j=r.p+"static/image/015015398abf9bd8c4d1e67d37a0d098.ad15e253.webp",m=r.p+"static/image/5fb2698819f80a9bfd821a32fb15cda7.816184e7.webp",g=r.p+"static/image/869aace86daf6b4987023c4f73a3f5e3.91fafc83.webp",f=r.p+"static/image/a15a6f67b84f41f827f7095a3aaa99d0.f50a1416.webp",u=r.p+"static/image/16f228f3b9525da03cb6f9234f575db7.0a2095d8.webp",b=r.p+"static/image/8c58184d71f151eb65e5bda4d0ed6c90.ddcecdd8.webp",y=r.p+"static/image/4835727418828bae731cb537a8562824.44070f89.webp",S=r.p+"static/image/d7e20acb724e786117db8ad36e5259bc.29e4d1d1.webp",k=r.p+"static/image/4f651e553044c27fed84f4cfc7aba468.e1c15224.webp",w=r.p+"static/image/5905eb9b93f71e793ec77069d5dcb0a0.1472219d.webp",C=r.p+"static/image/49992eed2eb11740ebe49e3c5846843f.842eabcb.webp",_=r.p+"static/image/832fd8dfb93ae8d7cc0a092487398ffa.a289b127.webp",N=r.p+"static/image/d9e36a90508f7c87d13d900897af0e26.332ca290.webp",v=r.p+"static/image/916f38e9d565aed424e635e66a224fc0.98ef6d6b.webp",P=r.p+"static/image/9f8367ee6b1d9e8fd8f69d523ce82b7f.f8cd28d8.webp";function E(e){let n=Object.assign({h1:"h1",a:"a",p:"p",strong:"strong",h2:"h2",img:"img",pre:"pre",code:"code",blockquote:"blockquote",ul:"ul",li:"li",h3:"h3"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"第28章cssgrid之瀑布流布局masonry和masonry-auto-flow",children:["第28章—CSSGrid之瀑布流布局：masonry和masonry-auto-flow",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第28章cssgrid之瀑布流布局masonry和masonry-auto-flow",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["\uFEFF瀑布流布局有一个专业术语，即 ",(0,s.jsx)(n.strong,{children:"Masonry Layout"}),"。它是一种典型的 Web 布局， ",(0,s.jsx)(n.a,{href:"https://www.pinterest.co.uk/",target:"_blank",rel:"noopener noreferrer",children:"Pinterest"})," 网站是最早使用瀑布流布局的，因此在业内也将瀑布流布局称为 Pinterest 布局。早期，还没有哪一种 CSS 特性可以实现瀑布流布局，因此， Web 开发者只能使用 JavaScript 来实现瀑布流布局，比如 ",(0,s.jsx)(n.a,{href:"https://masonry.desandro.com/index.html",target:"_blank",rel:"noopener noreferrer",children:"Masonry"})," 和 ",(0,s.jsx)(n.a,{href:"https://isotope.metafizzy.co/index.html",target:"_blank",rel:"noopener noreferrer",children:"Isotope"})," 等。"]}),"\n",(0,s.jsxs)(n.p,{children:["随着 CSS 的多列布局和 Flexbox 布局的出现，也有 Web 开发者使用这两种布局技术来实现瀑布流布局。不过，它们实现的瀑布流布局是一种伪瀑布流布局。庆幸的是，W3C 的 CSS 工作小组专门为瀑布流布局制定了一份规范，并且作为 CSS Grid （",(0,s.jsx)(n.a,{href:"https://drafts.csswg.org/css-grid-3/",target:"_blank",rel:"noopener noreferrer",children:"CSS Grid Layout Module Level 3"}),"）规范的一部分。也就是说，Web 开发者可以使用 CSS Grid 布局来实现瀑布流布局。在这节课中，我们一起来探讨 CSS Grid 是如何实现瀑布流布局的。"]}),"\n",(0,s.jsxs)(n.h2,{id:"什么是瀑布流布局",children:["什么是瀑布流布局",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#什么是瀑布流布局",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"瀑布流布局是一种很常见的 Web 布局设计。在布局容器中会有很多个项目（通常是图片或文章摘要），容器中的项目在行内方向一个接一个地布局。当它们移动到下一行时，项目将向上称动到第一行较短（高度较低）项目所留下的空隙中。有点类似于我们生活中“砌砖”的样子："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:P,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"从布局角度来看，瀑布流布局更类似网格布局中自动放置网格项目的布局，但又没有严格遵循该布局模式。"}),"\n",(0,s.jsxs)(n.p,{children:["最著名的瀑布流布当属 ",(0,s.jsx)(n.a,{href:"https://www.pinterest.co.uk/",target:"_blank",rel:"noopener noreferrer",children:"Pinterest"}),"，比如他的搜索结果页面的布局效果："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:"img"})}),"\n",(0,s.jsxs)(n.h2,{id:"背后的故事",children:["背后的故事",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#背后的故事",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161372229123440648",target:"_blank",rel:"noopener noreferrer",children:"CSS 网格布局"}),"具有强大的布局能力，它使得 Web 开发者能很好的控制方框（元素盒子）及其内容的大小和位置。到目前为止，",(0,s.jsx)(n.a,{href:"https://s.juejin.cn/ds/iJeW5aqF/",target:"_blank",rel:"noopener noreferrer",children:"Web 众多布局技术中"}),"，只有 CSS 网格布局是二维布局：",(0,s.jsx)(n.strong,{children:"在两个维度上都需要对齐内容的布局"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"尽管许多布局可以使用 CSS 网格来实现，但是 Web 上的一些布局使用 CSS 网格也是有所限制的，比如瀑布流布局。"}),"\n",(0,s.jsx)(n.p,{children:"@Rachel Andrew 曾经也说过，网格布局和瀑布流布局的结构是有所不同的，对于网格布局而言，他有严格的行和列，但对于瀑布流布局来说，他并没有严格的行和列："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"虽然瀑布流布局也会有行和列，但它的列更像是一个 Flexbox 布局或者多列布局。也因此，社区有同学通过这几种方式（CSS Flexbox 或 CSS 多列布局）来实现瀑布流布局。相比而言，实现瀑布流这种布局外观的最接近的方法是使用 CSS 的多列布局。比如下面这个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTML",children:'<div class="masonry--container">\n \xa0 \xa0<div class="item">\n \xa0 \xa0 \xa0 \xa0<img src="https://picsum.photos/1024/860?random=1" alt="">\n \xa0 \xa0 \xa0 \xa0<h3>Blog Post</h3>\n \xa0 \xa0 \xa0 \xa0<p>Lorem ipsum dolor si...</p>\n \xa0 \xa0</div>\n \xa0 \xa0\x3c!-- 省略其他 item --\x3e\n</div>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:"@layer layout {\n \xa0  .masonry--container {\n \xa0 \xa0 \xa0  column-count: 4;\n \xa0 \xa0 \xa0  column-gap: 1rem;\n \xa0  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/xxQMbaj",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/xxQMbaj"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在上面的例子中，你会看到整个布局看起来像瀑布流布局。然而，项目（卡片）的顺序沿着列运行。也就是说，使用多列布局来实现瀑布流布局和真正的瀑布流布局之间有着关键性的区别：“",(0,s.jsx)(n.strong,{children:"在多列布局中，项目（卡片）是按列显示的，通常在瀑布流布局中，希望项目（卡片）是按行显示"}),"”。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"因此，多列布局实现的“瀑布流布局”有可能无法满足我们实际的业务需求。例如，Pinterest 网站的搜索结果页，期望搜索出来的结果总是排列在前面，比如说页面最顶部就能看到搜索的结果，而不是像多列布局实现的效果那样，排在前面的都在第一列。"}),"\n",(0,s.jsxs)(n.p,{children:["最初，我以为使用 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161623932439625758",target:"_blank",rel:"noopener noreferrer",children:"CSS 网格布局中自动放置网格项目的特性"}),"（即 ",(0,s.jsx)(n.code,{children:"grid-auto-flow: dense"}),"）就可以实现瀑布流布局："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:"img"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:"@layer layout {\n \xa0 \xa0.masonry--container {\n \xa0 \xa0 \xa0 \xa0display: grid;\n \xa0 \xa0 \xa0 \xa0grid-template-columns: repeat(auto-fit, minmax(min(100% - 2rem, 300px), 1fr));\n \xa0 \xa0 \xa0 \xa0grid-auto-flow: dense;\n \xa0 \xa0 \xa0 \xa0gap: 1rem;\n \xa0 \xa0 \xa0 \xa0align-items: start;\n \xa0  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["虽然这种方式（",(0,s.jsx)(n.code,{children:"grid-auto-flow: dense"}),"）可以使网格项目（卡片）自动放置（填充所有的空白），但布局仍然是一个网格，因此没有办法使项目（卡片）上升到较短项目（卡片）留下的空白空间中。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/VwVgLYO",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/VwVgLYO"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"正如你所看到的，这离我们所需要的瀑布流布局还很远。"}),"\n",(0,s.jsxs)(n.p,{children:["这也再次说明，瀑布流布局不是一个网格，它是一个相对专业的布局。基于这些原因，W3C 的 CSS 工作组才将瀑布流布局当作一个独立的规范。即使把他和 CSS 网格规范关联起来，也只能说 CSS 瀑布流布局规范（",(0,s.jsx)(n.a,{href:"https://drafts.csswg.org/css-grid-3/",target:"_blank",rel:"noopener noreferrer",children:"CSS Grid Level 3"}),"）是 CSS 网格布局的一个附本。"]}),"\n",(0,s.jsxs)(n.h2,{id:"网格布局的瀑布流特性",children:["网格布局的瀑布流特性",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#网格布局的瀑布流特性",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["网格布局的瀑布流特性是一个比较新的规范，到目前为止，我们可以在 Safari 17（TP版）和 Firefox Nightly 浏览器中开启相关实验属性来使用它。你可以在 Firefox Nightly 游览器的地址栏中输入 ",(0,s.jsx)(n.code,{children:"about:config"})," ，并启用 ",(0,s.jsx)(n.code,{children:"layout.css.grid-template-masonry-value.enabled"})," （将其设置为 ",(0,s.jsx)(n.code,{children:"true"}),"）。完成这些操作之后，你就可以在该浏览器中查看到 CSS 网格制作的瀑布流布局效果："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"同样的，你可以在 Safari 17 （TP）中开启相应的实验属性："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:"img"})}),"\n",(0,s.jsx)(n.p,{children:"接下来，我们就可以来看看 CSS 网格是如何实现瀑布流布局？"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["特别声明，接下来的内容，你需要具备一定的 CSS Grid 知识才能更易于理解，如果你从未接触过 CSS Grid 相关的知识，",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161372229123440648",target:"_blank",rel:"noopener noreferrer",children:"建议你花一点时间了解一下这方面的知识"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在 CSS 中，我们可以在网格容器上使用 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 和 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 属性来显式指定网格的行和列。例如："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:".grid--container {\n \xa0 \xa0display: grid;\n \xa0 \xa0grid-template-columns: repeat(4, minmax(0, 1fr));\n \xa0 \xa0grid-template-rows: repeat(2, auto);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"上面的 CSS 创建了一个四列两行的网格："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/PoxVZpg",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PoxVZpg"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://drafts.csswg.org/css-grid-3/#masonry-layout",target:"_blank",rel:"noopener noreferrer",children:"CSS Grid Layout Module Level 3"})," 为 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 和 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 新增了一个 ",(0,s.jsx)(n.code,{children:"masonry"})," 值，专门用来制作瀑布流布局。也就是说，你要使用网格制作瀑布流布局，",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 和 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 两者必须有一个将值设置为 ",(0,s.jsx)(n.code,{children:"masonry"})," 。例如，下面的 CSS 将 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 设置为 ",(0,s.jsx)(n.code,{children:"masonry"})," ："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:".masonry--container {\n \xa0 \xa0display: grid;\n \xa0 \xa0grid-template-columns: repeat(auto-fit, minmax(min(100% - 2rem, 300px), 1fr));\n \xa0 \xa0gap: 1rem;\n \xa0 \xa0align-items: start;\n \xa0 \xa0grid-template-rows: masonry;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"你将看到的效果如下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/vYQbLRb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/vYQbLRb"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["也可以将 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 设置为 ",(0,s.jsx)(n.code,{children:"masonry"})," 。例如："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:".masonry--container {\n \xa0 \xa0display: grid;\n \xa0 \xa0grid-template-columns: masonry;\n \xa0 \xa0grid-template-rows: repeat(2, minmax(0, 1fr));\n \xa0 \xa0gap: 1rem;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/wvQNMbM",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/wvQNMbM"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["正如你所看到的，",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 和 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 属性值是 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，可以创建不同方向的瀑布流布局："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"纵向（垂直方向）的瀑布流布局"}),"： ",(0,s.jsx)(n.code,{children:"grid-template-rows: masonry"})," 将创建纵向瀑布流布局"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"横向（水平方向）的瀑布流布局"}),"：",(0,s.jsx)(n.code,{children:"grid-template-columns: masonry"})," 将创建横向瀑布流布局"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:"img"})}),"\n",(0,s.jsxs)(n.p,{children:["需要注意的是，当 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 和 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 属性的值都是 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，浏览器会将 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 的值解析为 ",(0,s.jsx)(n.code,{children:"none"})," 。"]}),"\n",(0,s.jsxs)(n.h3,{id:"瀑布轴masonry-axis",children:["瀑布轴（Masonry Axis）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#瀑布轴masonry-axis",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"在 CSS Grid 中，网格容器具有内联轴（Inline Axis）和块轴（Block Axis）。注意，内联轴也称为行轴，块轴也称为列轴："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:"img"})}),"\n",(0,s.jsxs)(n.p,{children:["要使用瀑布流布局，",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 或 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 至少有一个是 ",(0,s.jsx)(n.code,{children:"masonry"})," 。只是，值为 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，其所对应的轴就变成了瀑布流轴（Masonry Axis），另一个轴则是网格轴："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["当 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 的值为 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，网格的内联轴（行轴）就变成了瀑布流轴，块轴（列轴）则保持不变"]}),"\n",(0,s.jsxs)(n.li,{children:["当 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 的值为 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，网格的块轴（列轴）就变成了瀑布流轴，内联轴（行轴）则保持不变"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:"img"})}),"\n",(0,s.jsxs)(n.h3,{id:"网格轴上的行为",children:["网格轴上的行为",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#网格轴上的行为",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"虽然在外观上看，瀑布流布局与网格布局有所差异，但目前为止，依旧是基于网格容器来创建的瀑布流布局。从这一点来说，瀑布流布局在网格轴上的行为与常规网格是完全相同的。因此，你可以调整网格轨道的大小、给网格线命名、网格项目和网格轨道的对齐方式。"}),"\n",(0,s.jsxs)(n.p,{children:["同样的，在瀑布流布局中也可以像使用常规网格布局那样，基于网格线名称来放置瀑布流项目（网格项目）。比如下面这个示例，将第五个瀑布流项目放置在网格线名为 ",(0,s.jsx)(n.code,{children:"box-start"})," 和 ",(0,s.jsx)(n.code,{children:"box-end"})," 之间："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:"@layer layout {\n \xa0 \xa0.masonry--container {\n \xa0 \xa0 \xa0 \xa0display: grid;\n \xa0 \xa0 \xa0 \xa0grid-template-columns: 1fr [box-start] 1fr 1fr [box-end] 1fr;\n \xa0 \xa0 \xa0 \xa0grid-template-rows: masonry;\n \xa0 \xa0 \xa0 \xa0gap: 1rem;\n \xa0 \xa0 \xa0 \xa0align-items: start;\n \xa0  }\n \xa0\n \xa0 \xa0.item:nth-child(5) {\n \xa0 \xa0 \xa0 \xa0grid-column: box-start / box-end;\n \xa0  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/poQGLbQ",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/poQGLbQ"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"这里有一个小细节需要注意，通过网格线放置的网格项目将会在瀑布流项目（未通过网格线放置的网格项目）放置之前先放置。比如上面这个示例，你会发现瀑布流项目被放置在它（第五个网格项目，即使用网格线放置的网格项目）周围。"}),"\n",(0,s.jsxs)(n.p,{children:["除此之外，你也可以像常规网格项目一样，使用 ",(0,s.jsx)(n.code,{children:"span"})," 来跨越多个网格轨道（合并单元格）。比如下面这个示例，将具有 ",(0,s.jsx)(n.code,{children:".blog"})," 类的网格项目跨越两列网格轨道："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:"@layer layout {\n \xa0 \xa0.masonry--container {\n \xa0 \xa0 \xa0 \xa0display: grid;\n \xa0 \xa0 \xa0 \xa0grid-template-columns: repeat(4, 1fr);\n \xa0 \xa0 \xa0 \xa0grid-template-rows: masonry;\n \xa0 \xa0 \xa0 \xa0gap: 1rem;\n \xa0 \xa0 \xa0 \xa0align-items: start;\n \xa0  }\n \xa0\n \xa0 \xa0.blog {\n \xa0 \xa0 \xa0 \xa0grid-column: span 2;\n \xa0  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/NWEoMKm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWEoMKm"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"masonary-auto-flow",children:["masonary-auto-flow",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#masonary-auto-flow",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"masonry-auto-flow"})," 是专门为瀑布流布局定义的属性，它允许你控制瀑布流布局中的项目流。该属性的值主要有："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"masonry-auto-flow:  [ pack | next ] || [definite-first | ordered ] \n"})}),"\n",(0,s.jsx)(n.p,{children:"每个值的意思是："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"pack"})})," ：默认值，表示根据默认的瀑布流布局算法，瀑布流项目将被放置在空间最大的轨道上"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"next"})})," ：瀑布流项目一个接一个地放置在网格轨道上"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"definite-first"})})," ：按照默认的瀑布布局算法，在放置其他瀑布流项目之前，先放置有明确位置的瀑布流项目"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ordered"})})," ：忽略任何有明确放置位置的瀑布流项目，并根据 ",(0,s.jsx)(n.code,{children:"order"})," 修改文件顺序放置所有瀑布流项目；也就是说，除非使用 ",(0,s.jsx)(n.code,{children:"order"})," 属性排序，否则按照它们在文档中的顺序排列瀑布流项目"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"masonry-auto-flow"})," 属性的值有两种形式："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["单一值：",(0,s.jsx)(n.code,{children:"pack"})," 、",(0,s.jsx)(n.code,{children:"next"})," 、",(0,s.jsx)(n.code,{children:"definite-first"})," 和 ",(0,s.jsx)(n.code,{children:"ordered"})," 四个关键词之一"]}),"\n",(0,s.jsxs)(n.li,{children:["双值：",(0,s.jsx)(n.code,{children:"pack definite-first"})," 、",(0,s.jsx)(n.code,{children:"pack ordered"})," 、",(0,s.jsx)(n.code,{children:"next definite-first"})," 或 ",(0,s.jsx)(n.code,{children:"next ordered"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/PoxVyWP",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PoxVyWP"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["拿 ",(0,s.jsx)(n.code,{children:"next"})," 和 ",(0,s.jsx)(n.code,{children:"pack"})," 来做一个对比。其中 ",(0,s.jsx)(n.code,{children:"masonry-auto-flow: next"})," 允许你把瀑布流项目（网格项目）放置在网格轴上的下一个位置，而不是像默认情况（",(0,s.jsx)(n.code,{children:"pack"}),"）那样将瀑布流项目（网格项目）放置在具有最多空间的列中："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/OJadogG",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/OJadogG"})," （请使用 Safari 17 TP 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"justify-tracks-和-align-tracks",children:["justify-tracks 和 align-tracks",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#justify-tracks-和-align-tracks",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["瀑布流布局新增了 ",(0,s.jsx)(n.code,{children:"justify-tracks"})," 和 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 属性。当瀑布轴是在块轴（Column）方向时，",(0,s.jsx)(n.code,{children:"justify-tracks"})," 有效；当瀑布轴是在内联轴（Row）方向时，",(0,s.jsx)(n.code,{children:"align-tracks"})," 有效。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"align-tracks: [normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>]# \n​\njustify-tracks: [normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]# \n​\n<baseline-position> = [ first | last ]? && baseline \n<content-distribution> = space-between | space-around | space-evenly | stretch \n<overflow-position> = unsafe | safe \n<content-position> = center | start | end | flex-start | flex-end\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"align-tracks"})," 和 ",(0,s.jsx)(n.code,{children:"justify-tracks"})," 的默认值都是 ",(0,s.jsx)(n.code,{children:"normal"})," ，而且都应该应用在是瀑布流布局的网格容器上。他们的属性值和 ",(0,s.jsx)(n.code,{children:"align-content"}),"、",(0,s.jsx)(n.code,{children:"justify-content"})," 相同，不同的是 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 和 ",(0,s.jsx)(n.code,{children:"justtify-tracks"})," 可以接受以逗号（",(0,s.jsx)(n.code,{children:","}),"）分隔的多个值。"]}),"\n",(0,s.jsxs)(n.p,{children:["先来回顾一下 ",(0,s.jsx)(n.code,{children:"align-content"})," 和 ",(0,s.jsx)(n.code,{children:"justify-content"})," 在网格布局中是如何控制网格轨道对齐方式："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"img"})}),"\n",(0,s.jsxs)(n.p,{children:["需要知道的是，",(0,s.jsx)(n.code,{children:"align-content"})," 和 ",(0,s.jsx)(n.code,{children:"justify-content"})," 也可以运用到瀑布流容器上，但不同的是，对于瀑布流轴，这两个属性是不生效的，在瀑布流轴上，分别被 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 和 ",(0,s.jsx)(n.code,{children:"justify-tracks"})," 替代。比如下面这个示例："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:".container {\n \xa0 \xa0display: grid; \n \xa0 \xa0grid-template-columns: repeat(4, 160px); \n \xa0 \xa0gap: 10px; \n \xa0 \xa0\n \xa0 \xa0justify-content: var(--justify-content); \n \xa0 \xa0align-content: var(--align-content); /* 被 align-tracks 替代 */\n \xa0 \xa0\n \xa0 \xa0grid-template-rows: masonry; \n \xa0 \xa0align-tracks: var(--align-tracks);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["上面的代码中，将 ",(0,s.jsx)(n.code,{children:"grid-template-rows"})," 设置值为 ",(0,s.jsx)(n.code,{children:"masonry"})," 时，内联轴（行轴）是对应的瀑布流轴，块轴（列轴）是网格轴。在这种情况之下，",(0,s.jsx)(n.code,{children:"align-content"})," 在瀑布轴上是不生效的，同时被 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 替代（这个时候 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 相当于 ",(0,s.jsx)(n.code,{children:"align-content"}),"）："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/poQGxap",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/poQGxap"})," （请使用 Firefox Nightly 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["再来看另外一个场景，就是 ",(0,s.jsx)(n.code,{children:"grid-template-columns"})," 设置为 ",(0,s.jsx)(n.code,{children:"masonry"}),"，这个时候内联轴（行轴）是网格轴，块轴（列轴）是瀑布轴。在这种情况之下，",(0,s.jsx)(n.code,{children:"justify-content"})," 在瀑布轴上不生效，同时被 ",(0,s.jsx)(n.code,{children:"justify-tracks"})," 替代："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:":root {\n \xa0 \xa0--justify-content: normal;\n \xa0 \xa0--align-content: normal;\n \xa0 \xa0--justify-tracks: normal;\n}\n​\n.container {\n \xa0 \xa0display: grid;\n \xa0 \xa0grid-template-rows: repeat(4, 160px);\n \xa0 \xa0gap: 10px;\n​\n \xa0 \xa0justify-content: var(--justify-content); /* 被 justify-tracks 替代 */\n \xa0 \xa0align-content: var(--align-content);\n \xa0 \xa0\n \xa0 \xa0grid-template-columns: masonry;\n \xa0 \xa0justify-tracks: var(--justify-tracks);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/LYXqgMP",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/LYXqgMP"})," （请使用 Firefox Nightly 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["前面我们提到过，",(0,s.jsx)(n.code,{children:"align-tracks"})," 和 ",(0,s.jsx)(n.code,{children:"justify-tracks"})," 可以同时取多个值。比如下面这个示例，我们有四列的瀑布流布局，给 ",(0,s.jsx)(n.code,{children:"align-tracks"})," 设置多个值："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-CSS",children:"body {\n \xa0 \xa0display: grid;\n \xa0 \xa0grid-template-columns: repeat(4, 1fr);\n \xa0 \xa0gap: 10px;\n​\n \xa0 \xa0grid-template-rows: masonry;\n \xa0 \xa0align-tracks: start, center, end, space-between;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:"img"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Demo 地址：",(0,s.jsx)(n.a,{href:"https://codepen.io/airen/full/qBQgJzW",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/qBQgJzW"})," （请使用 Firefox Nightly 查看）"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"我们是幸福的，这几年 CSS 在高速发展，有很多新的 CSS 特性提出，并且得到浏览器的支持。正如今天我们所聊的瀑布流布局，它是一个新特性，而且是个实验性特性。虽然说还没得到众多主流浏览器支持，但并不用过于担心，我想在不久的将来，这个特性就会得到更多的浏览器支持。当然，如果你在构建一个新的内部项目，那么可以尝试着使用这个新特性。"}),"\n",(0,s.jsxs)(n.p,{children:["另外，你也可以尝试着使用用该布局特性，如果遇到问题，或者无法完成在以前的实现中能够完成的任务，",(0,s.jsx)(n.a,{href:"https://github.com/w3c/csswg-drafts/issues/",target:"_blank",rel:"noopener noreferrer",children:"可以向CSSWG 提出你的问题"}),"。这样，我们才能更快的用上这个新特性。"]})]})}function G(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}let q=G;G.__RSPRESS_PAGE_META={},G.__RSPRESS_PAGE_META["%E7%8E%B0%E4%BB%A3CSS%2F%E7%AC%AC28%E7%AB%A0%E2%80%94CSSGrid%E4%B9%8B%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80%EF%BC%9Amasonry%E5%92%8Cmasonry-auto-flow.md"]={toc:[{text:"什么是瀑布流布局",id:"什么是瀑布流布局",depth:2},{text:"背后的故事",id:"背后的故事",depth:2},{text:"网格布局的瀑布流特性",id:"网格布局的瀑布流特性",depth:2},{text:"瀑布轴（Masonry Axis）",id:"瀑布轴masonry-axis",depth:3},{text:"网格轴上的行为",id:"网格轴上的行为",depth:3},{text:"masonary-auto-flow",id:"masonary-auto-flow",depth:3},{text:"justify-tracks 和 align-tracks",id:"justify-tracks-和-align-tracks",depth:3},{text:"小结",id:"小结",depth:2}],title:"第28章—CSSGrid之瀑布流布局：masonry和masonry-auto-flow",headingTitle:"第28章—CSSGrid之瀑布流布局：masonry和masonry-auto-flow",frontmatter:{}}}}]);