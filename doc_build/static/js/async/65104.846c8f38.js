"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["65104"],{897809:function(e,n,s){s.r(n),s.d(n,{default:()=>i});var r=s(552676),a=s(740453);let l=s.p+"static/image/24549da58054bf8d1912c7fa54d2b7ee.fefee050.png";function c(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",strong:"strong",h3:"h3",code:"code",pre:"pre",blockquote:"blockquote",img:"img",h4:"h4"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"17javascript基础入门",children:["17.JavaScript基础入门",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#17javascript基础入门",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"JavaScript是目前世界上最流行的编程语言之一，它也是小程序云开发最重要的基础语言。要做出一个功能复杂的小程序，除了需要掌握JavaScript的基本语法，还要了解如何使用JavaScript来操作小程序（通过API接口）。"}),"\n",(0,r.jsxs)(n.h2,{id:"31-javascript基础入门",children:["3.1 JavaScript基础入门",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-javascript基础入门",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["我们可以使用用微信开发者工具的控制台来快速学习JavaScript。打开微信开发者工具，在",(0,r.jsx)(n.strong,{children:"调试器"}),"里可以看到",(0,r.jsx)(n.strong,{children:"Console"}),"、Sources、Network、Appdata、Wxml等标签，这些都是调试器的功能模块。\xa0而",(0,r.jsx)(n.strong,{children:"控制台Console"}),"除了可以显示小程序的错误信息外，还可以用于输入和调试代码。"]}),"\n",(0,r.jsxs)(n.h3,{id:"311-数学运算",children:["3.1.1 数学运算",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#311-数学运算",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["JavaScript的算数运算符和我们常见的数学运算符没有太大区别，+加、-减、乘*、除/、指数**，我们可以在控制台Console的",(0,r.jsx)(n.code,{children:">"}),"后面逐行输入并按Enter执行以下代码："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"136+384; //加法\n(110/0.5+537-100)*2; //加减乘除\n2**5; //指数运算符\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"//"}),"为JavaScript的注释，可以不用输入，输入也不会有影响；JavaScript的语句之间用英文字符的分号;分隔。"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsxs)(n.h3,{id:"312-consolelog打印日志",children:["3.1.2 Console.log打印日志",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#312-consolelog打印日志",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["在控制台输入四则运算可以直接得到结果，是因为调用了console.log()函数，我们可以把上面的四则运算在控制台里使用 console.log(321*3)打印出来，除了四则运算，console.log()还可以打印",(0,r.jsx)(n.strong,{children:"字符串String"}),"，比如："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(\"童鞋，欢迎开始JavaScript的学习~nJavaScript是一门非常流行的编程语言，只要是有浏览器的地方就少不了JavaScript；n网页、小程序、甚至App、桌面应用等都少不了JavaScript；nJavaScript玩得溜的人我们可以称其为前端开发工程师；n前端开发工程师是需求量极大的岗位n\");\nconsole.log('%c欢迎关注小程序的云开发：https://www.zhihu.com/org/teng-xun-yun-kai-fa-tcb （用云开发可以更快速学好前端开发）','color: red' );\n"})}),"\n",(0,r.jsx)(n.p,{children:"在实际应用中，总有一些具有特殊含义的字符无法直接输入，比如换行 n、Tab键 t、回车 r、反斜杠 ，这些我们称之为转义字符。JavaScript中单引号和双引号都表示字符串。如果字符串中存在双引号，建议最外层用单引号；如果字符串中存在单引号，建议最外层用双引号。如何在控制台给打印的字体添加颜色等，大家可以自行去研究。"}),"\n",(0,r.jsxs)(n.h3,{id:"313-打印数组array",children:["3.1.3 打印数组Array",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#313-打印数组array",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"我们可以在控制台使用console.log()打印数组，打印出来之后，结果的前面会有数字显示数组的长度length，以及可以展开。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(["肖申克的救赎","霸王别姬","这个杀手不太冷","阿甘正传","美丽人生"])\n'})}),"\n",(0,r.jsxs)(n.p,{children:['在展开的结果里，我们可以看到数组的索引index，以及索引index对应的值（比如： 1:  "霸王别姬"）、该数组的长度length，以及数组的',(0,r.jsx)(n.strong,{children:"方法"}),"(",(0,r.jsx)(n.strong,{children:"在__proto__里可以看到，比如concat、push、shift、slice、toString等"}),")。"]}),"\n",(0,r.jsx)(n.p,{children:"我们也可以通过索引值打印数组里的单一数据，也就是通过指定数组名以及索引值，来访问某个特定的元素："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(["肖申克的救赎","霸王别姬","这个杀手不太冷","阿甘正传","美丽人生"][3])\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"314-打印对象object",children:["3.1.4 打印对象Object",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#314-打印对象object",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在控制台里使用console.log()函数打印一个对象Object，对象的结果仍然可以通过左侧的三角展开可以看到对象的属性以及属性对应的值。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log({name: "霸王别姬",img: "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp",desc: "风华绝代。"})\n'})}),"\n",(0,r.jsx)(n.p,{children:"我们可以通过点表示法来访问该属性获取属性对应的值："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log({name: "霸王别姬",img: "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp",desc: "风华绝代。"}.desc)\n'})}),"\n",(0,r.jsx)(n.p,{children:"当我们打印数组的某一项和通过点表示法获取对象某个属性对应的值的时候，有没有觉得打印的内容太长？这个时候我们可以把数组、对象赋值给一个变量，类似于数学里的y=ax+b，就可以大大简化代码了。"}),"\n",(0,r.jsxs)(n.h3,{id:"315-变量与赋值",children:["3.1.5 变量与赋值",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#315-变量与赋值",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["JavaScript可以使用",(0,r.jsx)(n.strong,{children:"let语句声明变量"}),"，使用",(0,r.jsxs)(n.strong,{children:["等号=",(0,r.jsx)(n.strong,{children:"可以"}),"给变量赋值"]}),"，等号=左侧为",(0,r.jsx)(n.strong,{children:"变量名"}),"，右侧为",(0,r.jsx)(n.strong,{children:"给该变量赋的值"}),"，变量的值可以是任何",(0,r.jsx)(n.strong,{children:"数据类型"}),"。JavaScript常见的数据类型有：数值（Number）、字符串（String）、布尔值（Boolean）、对象（Object）、函数（Function）等。"]}),"\n",(0,r.jsxs)(n.h4,{id:"1将数据赋值给变量",children:["1、将数据赋值给变量",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1将数据赋值给变量",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"比如我们可以在控制台里，将上面的数组和对象赋值给一个变量，然后打印该变量，先来打印数组："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let movielist=["肖申克的救赎","霸王别姬","这个杀手不太冷","阿甘正传","美丽人生"]\nconsole.log(movielist)\nconsole.log(movielist[2])\n'})}),"\n",(0,r.jsx)(n.p,{children:"再来看打印对象的情况："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let movie={name: "霸王别姬",img: "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp",desc: "风华绝代。"}\nconsole.log(movie)\nconsole.log(movie.name)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["通过",(0,r.jsx)(n.strong,{children:"将复杂的数据信息（数组、对象）赋值给一个变量"}),"，代码得到了大大的简化，可以深刻了解到",(0,r.jsx)(n.strong,{children:"变量是用于存储信息的”容器”"}),"。"]}),"\n",(0,r.jsxs)(n.h4,{id:"2变量的冲突与覆盖",children:["2、变量的冲突与覆盖",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2变量的冲突与覆盖",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"比如我们在控制台Console里使用let声明一个变量username，然后将username打印出来："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let username="小明"\nconsole.log(username)\n'})}),"\n",(0,r.jsx)(n.p,{children:"但是如果再次使用let声明username，并给username赋值时就会出现变量名冲突的报错，比如再在控制台里输入以下代码并按Enter执行，看会报什么错？"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let username="小丸子"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["也就是说声明了一个变量名之后，就不能再次",(0,r.jsx)(n.strong,{children:"声明这个变量名"}),"啦。但是我们却可以给该变量重新赋值，比如："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'username="小军"\nconsole.log(username)\n'})}),"\n",(0,r.jsx)(n.p,{children:"我们发现给该变量重新赋值之后，变量的值就被覆盖了。所以let 变量名=值，相当于进行了两步操作，第一步是声明变量名，第二步是给变量赋值，具体可以通过控制台执行下面的代码来理解。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let school  //声明变量\nschool="清华"   //将字符串String"清华"赋值给变量\nconsole.log(school)  //打印变量\nschool=["清华","北大","上交","复旦","浙大","南大","中科大"] //给变量赋值新的数据类型新的数据\nconsole.log(school)  //打印变量\n'})}),"\n",(0,r.jsx)(n.p,{children:"通过使用控制台实战打印具体的信息，我们就会对声明变量、赋值、覆盖（修改变量的值）有了更深的了解。"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"这个undefined是console.log()这个函数的返回值，每个函数都有返回值，如果函数没有提供返回值，会返回 undefined。"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"316-操作数组",children:["3.1.6 操作数组",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#316-操作数组",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在前面我们已经说过，数组是一个有序的列表。下面这个数组是豆瓣电影的top5："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'["肖申克的救赎","霸王别姬","这个杀手不太冷","阿甘正传","美丽人生"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"但是有时候我们需要操作一下该数组，比如想增加5项数据，变成top10，比如数据太多，只想要top3等等，这个时候就需要对数组进行操作了。要对数组进行操作，就有操作的方法。前面我们已经将给数组赋值给了movielist，下面我们可以直接使用该变量。也可以先在控制台再赋值一下。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'movielist=["肖申克的救赎","霸王别姬","这个杀手不太冷","阿甘正传","美丽人生"]\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"1分隔符join方法",children:["1、分隔符join方法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1分隔符join方法",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"join方法将数组元素拼接为字符串,以分隔符分割，默认是逗号,分割。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(movielist.join("、"))\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"2添加数组push方法",children:["2、添加数组push方法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2添加数组push方法",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["push()方法向数组的末尾添加一个或更多元素，并",(0,r.jsx)(n.strong,{children:"返回新数组的长度"}),"。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(movielist.push("千与千寻","泰坦尼克号","辛德勒的名单","盗梦空间","忠犬八公的故事"))\n'})}),"\n",(0,r.jsx)(n.p,{children:"这里返回的是新数组的长度，那我们打印一下新数组看具体包含了哪些值，push方法在原来的数组后面（不是前面）新增了5个值（不是覆盖，重新赋值）。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movielist)\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"3移除最后一项pop方法",children:["3、移除最后一项pop方法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3移除最后一项pop方法",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["pop() 从数组末尾",(0,r.jsx)(n.strong,{children:"移除"}),"最后一项，并返回移除的项的值："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movielist.pop())\n"})}),"\n",(0,r.jsx)(n.p,{children:"返回的是数组的最后一项，我们再来打印movielist，看看有什么变化："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movielist)\n"})}),"\n",(0,r.jsx)(n.p,{children:"以上通过一些实际的案例让大家了解如何使用控制台打印这种实战方式来了解了一些数组具体的操作方法，数组的操作方法还有很多，大家可以去查阅技术文档。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"技术文档："}),(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer",children:"MDN数组Array"})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["如果说小程序的开发离不开小程序的官方技术文档，那MDN则是每一个前端开发工程师都必须经常去翻阅的技术文档。打上",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer",children:"MDN数组Array"}),"，在页面的左侧菜单里，我们可以看到Array有着数十种方法，而这些方法，都是我们之前打印了数组之后在__proto__里看到的方法。关于数组的prototype，学有余力的人可以去阅读",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype",target:"_blank",rel:"noopener noreferrer",children:"MDN Array.Prototype"})]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"小任务："})," 通过实战的方式了解一下数组的concat()、reverse()、shift()、slice()、sort()、splice()、unshift()方法"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"317-操作对象",children:["3.1.7 操作对象",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#317-操作对象",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"我们可以用点表示法访问对象的属性，通过给该属性赋值就能够添加和修改对象的属性的值了。在之前我们声明过一个对象movie："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'movie={name: "霸王别姬",img: "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp",desc: "风华绝代。"}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"1给对象添加属性",children:["1、给对象添加属性",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1给对象添加属性",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"比如我们给霸王别姬增加英文名的属性，直接在控制台里输入以下代码："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'movie.englishname="Farewell My Concubine"\n'})}),"\n",(0,r.jsx)(n.p,{children:"然后再在控制台打印movie看看movie是否有了englishname的属性"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movie)\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"2删除对象的某个属性",children:["2、删除对象的某个属性",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2删除对象的某个属性",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"比如我们想删除movie的img属性，可以通过delete 方法来删除"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"delete movie.img\n"})}),"\n",(0,r.jsx)(n.p,{children:"然后再在控制台打印movie看看movie的img属性是否被删除了。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movie)\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"3更新对象的某个属性",children:["3、更新对象的某个属性",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3更新对象的某个属性",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"比如我们想更新movie的desc属性，可以通过重新赋值的方式来更新"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'movie.desc="人生如戏。"\n'})}),"\n",(0,r.jsx)(n.p,{children:"然后再在控制台打印movie看看movie的desc属性是否有了变化。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log(movie)\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"318-常量",children:["3.1.8 常量",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#318-常量",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["在前面我们知道变量的值可以通过重新赋值的方式来改变，但是有些数据我们希望是固定的（写死，不会经常改变），这个时候可以使用",(0,r.jsx)(n.strong,{children:"const声明"}),"创建一个值的",(0,r.jsx)(n.strong,{children:"只读"}),"引用。const声明和let声明挺像的。"]}),"\n",(0,r.jsx)(n.p,{children:"比如开发小程序的时候，我们会确定小程序的色系、颜色等，使用const声明，以后直接调用这个常量，这样就不用记那么多复杂的参数，以后想全网改样式，直接改const的内容即可。比如："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const defaultStyle = {\n  color: '#7A7E83',\n  selectedColor: '#3cc51f',\n  backgroundColor: '#ffffff',\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"319-字符串的操作",children:["3.1.9 字符串的操作",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#319-字符串的操作",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["前面我们已经知道字符串是JavaScript的数据类型之一，那我们可以怎么来操作字符串呢？下面我们就来结合MDN技术文档来学习。",(0,r.jsx)(n.strong,{children:"MDN文档是前端最为依赖的技术文档"}),"，我们要像查词典一样来学习如何使用它。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"技术文档："}),(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer",children:"MDN技术文档之JavaScript标准库之String"})]}),"\n",(0,r.jsx)(n.p,{children:"首先我们在main.js里输入以下代码，然后执行，在Console控制台查看效果："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let lesson="云开发技术训练营";\nlet enname="CloudBase Camp"\nconsole.log(lesson.length);  //返回字符串的长度\nconsole.log(lesson[4]);  //返回在指定位置的字符\nconsole.log(lesson.charAt(4));   //返回在指定位置的字符\nconsole.log(lesson.substring(3,6));  //从索引3开始到6（不包括6）\nconsole.log(lesson.substring(4));  //从索引4开始到结束\nconsole.log(enname.toLowerCase()); //把一个字符串全部变为小写：\nconsole.log(enname.toUpperCase());  //把一个字符串全部变为大写：\nconsole.log(enname.indexOf(\'oud\')); //搜索指定字符串出现的位置：\nconsole.log(enname.concat(lesson)); //连接两个字符串\nconsole.log(lesson.slice(4)); //提取字符串的某个部分，并以新的字符串返回被提取的部分\n'})}),"\n",(0,r.jsxs)(n.p,{children:["然后打开技术文档，在技术文档左侧菜单的",(0,r.jsx)(n.strong,{children:"属性"}),"和",(0,r.jsx)(n.strong,{children:"方法"}),"里，找到操作字符串用了哪些属性和方法，通过翻阅技术文档既加深对字符串的每个操作的理解，也知道该如何查阅技术文档。"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"字符串怎么有这么多属性和方法？多就对了，正是因为多，所以我们不能用传统的死记硬背来学习技术。技术文档怎么有这么多新词汇我见都没有见过，完全看不懂？你不需要全部都懂，就像我们不需要懂词典里的所有单词和语法一样。即使是GRE满分高手也不能认全所有单词，而通常6级单词就已经够用了，技术也是一样的道理。"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3110-math对象",children:["3.1.10 Math对象",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3110-math对象",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Math是一个内置对象， 它具有数学常数和函数的属性和方法，但**它不是一个函数对象。**大家可以先在控制台实战然后再来了解这句话啊含义。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"技术文档："})," ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math",target:"_blank",rel:"noopener noreferrer",children:"Math对象MDN文档"})]}),"\n",(0,r.jsx)(n.p,{children:"在开发者工具的控制台console里输入以下代码，根据得到的结果来弄清楚每个函数的意思。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"let x=3,y=4,z=5.001,a=-3,b=-4,c=-5;\nconsole.log(Math.abs(b)); //返回b的绝对值\nconsole.log(Math.round(z));//返回z四舍五入后的整数\nconsole.log(Math.pow(x,y)) //返回x的y次幂\nconsole.log(Math.max(x,y,z,a,b,c)); //返回x,y,z,a,b,c的最大值\nconsole.log(Math.min(x,y,z,a,b,c));//返回x,y,z,a,b,c的最小值\nconsole.log(Math.sign(a));  //返回a是正数还是负数\nconsole.log(Math.hypot(x,y));  //返回所有x,y的平方和的平方根 \nconsole.log(Math.PI);  //返回一个圆的周长与直径的比例，约3.1415\n"})}),"\n",(0,r.jsx)(n.p,{children:"我们打开技术文档，在左侧菜单找一下Math对象的属性有哪些，Math对象的方法又有哪些？大致感受一下属性和方法到底是什么意思。"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"注意，在别的开发语言里面，我们想获取一个数的绝对值可以直接调用abs(x)函数即可，而JavaScript却是Math.abs(x)，这是因为前面说的Math不是函数(函数对象)，而是一个对象。"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3111-date对象",children:["3.1.11 Date对象",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3111-date对象",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Date 对象用于处理日期和时间。时间有年、月、日、星期、小时、分钟、秒、毫秒以及时区的概念，因此Date对象属性和方法也显得比较多。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"技术文档："}),(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer",children:"Date对象MDN文档"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"let now = new Date();  //返回当日的日期和时间。\nconsole.log(now); \nconsole.log(now.getFullYear()); //从 Date 对象以四位数字返回年份。\nconsole.log(now.getMonth());  //从 Date 对象返回月份 (0 ~ 11)。\nconsole.log(now.getDate());  //从 Date 对象返回一个月中的某一天 (1 ~ 31)。\nconsole.log(now.getDay());  //从 Date 对象返回一周中的某一天 (0 ~ 6)。\nconsole.log(now.getHours());  //返回 Date 对象的小时 (0 ~ 23)。\nconsole.log(now.getMinutes());  //返回 Date 对象的分钟 (0 ~ 59)。\nconsole.log(now.getSeconds());  //返回 Date 对象的秒数 (0 ~ 59)。\nconsole.log(now.getMilliseconds());  //返回 Date 对象的毫秒(0 ~ 999)。\nconsole.log(now.getTime());  //返回 1970 年 1 月 1 日至今的毫秒数。\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"这些内容都是非常重要的基础，在以后的应用开发中有着非常重要的应用，大家不要觉得枯燥。虽然不需要你现在马上记住它，但是要明白这些基础类型处理了什么，处理的效果是怎样的，以后当你遇到要处理数据的时候，还记得怎么找文档来对症下药。"}),"\n"]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}let i=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F17.JavaScript%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.md"]={toc:[{text:"3.1 JavaScript基础入门",id:"31-javascript基础入门",depth:2},{text:"3.1.1 数学运算",id:"311-数学运算",depth:3},{text:"3.1.2 Console.log打印日志",id:"312-consolelog打印日志",depth:3},{text:"3.1.3 打印数组Array",id:"313-打印数组array",depth:3},{text:"3.1.4 打印对象Object",id:"314-打印对象object",depth:3},{text:"3.1.5 变量与赋值",id:"315-变量与赋值",depth:3},{text:"1、将数据赋值给变量",id:"1将数据赋值给变量",depth:4},{text:"2、变量的冲突与覆盖",id:"2变量的冲突与覆盖",depth:4},{text:"3.1.6 操作数组",id:"316-操作数组",depth:3},{text:"1、分隔符join方法",id:"1分隔符join方法",depth:4},{text:"2、添加数组push方法",id:"2添加数组push方法",depth:4},{text:"3、移除最后一项pop方法",id:"3移除最后一项pop方法",depth:4},{text:"3.1.7 操作对象",id:"317-操作对象",depth:3},{text:"1、给对象添加属性",id:"1给对象添加属性",depth:4},{text:"2、删除对象的某个属性",id:"2删除对象的某个属性",depth:4},{text:"3、更新对象的某个属性",id:"3更新对象的某个属性",depth:4},{text:"3.1.8 常量",id:"318-常量",depth:3},{text:"3.1.9 字符串的操作",id:"319-字符串的操作",depth:3},{text:"3.1.10 Math对象",id:"3110-math对象",depth:3},{text:"3.1.11 Date对象",id:"3111-date对象",depth:3}],title:"17.JavaScript基础入门",headingTitle:"17.JavaScript基础入门",frontmatter:{}}}}]);