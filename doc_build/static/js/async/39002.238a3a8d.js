"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["39002"],{665304:function(n,e,s){s.r(e),s.d(e,{default:()=>z});var r=s(552676),i=s(740453);let o=s.p+"static/image/d96f39363e7f8bbfe4370b3c04615abe.dbff3eb7.webp",t=s.p+"static/image/e52db688c9fed88c28231a96dda34d6a.093f9c42.webp",c=s.p+"static/image/a265a38c5ea83925f6cde6481c478f5f.d696ed7c.webp",l=s.p+"static/image/6c178e2dd8ae57bb3e05ee0852791602.8a479809.webp",a=s.p+"static/image/fbe099108db8d59feaa03e9f4e758cf4.7b60762d.webp",d=s.p+"static/image/fa5c3ff27e2fae6f47c66d3d2b6038d6.ce2943c4.webp",p=s.p+"static/image/ada77858ffc0930bd82f0cfea6dbc79c.1822dc0f.webp",g=s.p+"static/image/75ef2ed970c432047b5f9de797348d49.3d4d43e6.webp",j=s.p+"static/image/d4263da2fc351819969e98313026a16f.f66894f1.webp",x=s.p+"static/image/9d0a7f380ca130267fe1c027aa156857.8a9b80bd.webp",h=s.p+"static/image/0054bab5babe03526b384c55b8a8dd78.d96c13cd.webp",m=s.p+"static/image/cce545855e7ae044893de3fa70263a6f.acb5b504.webp",f=s.p+"static/image/6a0ddb2b5b7fc508b360c5f3592bbe07.3218be35.webp",b=s.p+"static/image/725ff61288b45433dde6822bee6fcfbe.f5724fd6.webp",w=s.p+"static/image/5bcc789e8b95fc836383cb9c9f9e6e1b.ef9fbc6d.webp",u=s.p+"static/image/bce478897400a3e522e39c597a161e9b.3cc32f7e.webp",v=s.p+"static/image/3857b9ca7d98d755541ce671356dad78.1a469a18.webp",E=s.p+"static/image/f7488faf82a34b35133e551699649bcb.ddc0b56f.webp",y=s.p+"static/image/8ef58a8adfbd4852199cab8216430d5b.503dbaa7.webp",N=s.p+"static/image/ee9c5f21cf17404cdd6d25352fba3d2e.28ee7e30.webp",_=s.p+"static/image/1d1bfe4d9e17be2a41c672d49acc0284.ff8a5dc2.webp",k=s.p+"static/image/478ccc5ce6cace8546794f8ef14c04e8.db2c0d6d.webp",F=s.p+"static/image/cce3443aecc7454747d0ba64d9204a81.12d57c0e.webp",C=s.p+"static/image/0f14674d73f7434368abb3612e55a316.eda8565e.webp",A=s.p+"static/image/c7e9191869a0cb8de81d40043b252972.78de6767.webp",B=s.p+"static/image/66618f5dac7763bb05895f2b3e56b0cf.df781594.webp",T=s.p+"static/image/05c699f0635704fbfa4665260cc09611.ab4fd3a9.webp",D=s.p+"static/image/ad17d6a0e57472336a1023f8fcd4978f.717c3ada.webp",P=s.p+"static/image/e6d325c8f67f005e4b86a4ef8500325d.95acd8c2.webp",L=s.p+"static/image/4664d6c97dfb07513e2b5864488a5271.7c2b8d6c.webp",S=s.p+"static/image/0f342d41437f1ab2b33450a5d8866b9f.5aefc4cc.webp",H=s.p+"static/image/45334cd51643832a08815e1df686c3f5.5ff85edc.webp";function R(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,i.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"37-为什么-node-里要用-winston-打印日志",children:["37. 为什么 Node 里要用 Winston 打印日志？",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#37-为什么-node-里要用-winston-打印日志",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Node 里怎么打印日志呢？"}),"\n",(0,r.jsx)(e.p,{children:"有同学说，不也是用 console.log 么。"}),"\n",(0,r.jsx)(e.p,{children:"不，服务端打印日志一般不会用 console.log。"}),"\n",(0,r.jsx)(e.p,{children:"因为 console.log 打印完就没了，而服务端的日志经常要用来排查问题，需要搜索、分析日志内容，所以需要写入文件或者数据库里。"}),"\n",(0,r.jsx)(e.p,{children:"而且打印的日志需要分级别，比如有的是错误的日志，有的只是普通日志，需要能够过滤不同级别的日志。"}),"\n",(0,r.jsx)(e.p,{children:"此外，打印的日志需要带上时间戳，所在的代码位置等信息。"}),"\n",(0,r.jsx)(e.p,{children:"这些都是 console.log 没有的功能。"}),"\n",(0,r.jsx)(e.p,{children:"所以我们一般都会用专门的日志框架来做，比如 winston。"}),"\n",(0,r.jsxs)(e.p,{children:["它是 Node 最流行的日志框架，",(0,r.jsx)(e.a,{href:"https://www.npmjs.com/package/winston",target:"_blank",rel:"noopener noreferrer",children:"npm 官网"}),"上可以看到每周千万级的下载量："]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:H,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"那 winston 都有什么功能？怎么用呢？"}),"\n",(0,r.jsx)(e.p,{children:"我们试试看："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"mkdir winston-test\ncd winston-test\nnpm init -y\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:S,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"先创建个项目。"}),"\n",(0,r.jsx)(e.p,{children:"安装 winston："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"npm install --save winston\n"})}),"\n",(0,r.jsx)(e.p,{children:"然后写下 index.js"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple(),\n    transports: [\n        new winston.transports.Console(),\n        new winston.transports.File({ \n            dirname: 'log', filename: 'test.log' \n        }),\n    ]\n});\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"用 createLogger 创建了 logger 实例，指定 level、format、tranports。"}),"\n",(0,r.jsx)(e.p,{children:"level：打印的日志级别"}),"\n",(0,r.jsx)(e.p,{children:"format：日志格式"}),"\n",(0,r.jsx)(e.p,{children:"transports：日志的传输方式"}),"\n",(0,r.jsx)(e.p,{children:"我们指定了 Console 和 File 两种传输方式。"}),"\n",(0,r.jsx)(e.p,{children:"在 package.json 里指定 type 为 module，也就是所有代码都是 es module 的："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:L,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"这样代码里就可以直接用 import、export 这些语法了。"}),"\n",(0,r.jsx)(e.p,{children:"用 node 跑一下："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"node index.js\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:P,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"可以看到控制台和文件里都有了打印的日志。"}),"\n",(0,r.jsx)(e.p,{children:"再跑一遍："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"node index.js\n"})}),"\n",(0,r.jsx)(e.p,{children:"会在后面追加："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:D,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"那么问题来了，如果所有日志都写在一个文件里，那这个文件最终会不会特别大？"}),"\n",(0,r.jsx)(e.p,{children:"不用担心，winston 支持按照大小自动分割文件："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:T,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"我们指定 maxsize 为 1024 字节，也就是 1kb。"}),"\n",(0,r.jsx)(e.p,{children:"然后再跑几次："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:B,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"大概跑了 10 次左右，出现了第二个文件："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:A,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"而这时第一个日志文件刚好是 1kb："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:C,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"这就是根据大小自动分割日志文件的功能。"}),"\n",(0,r.jsx)(e.p,{children:"有同学说，一般日志都是按照日期自动分割的，比如 2023-10-28 的日志文件，2023-10-29 的日志文件，这样之后也好管理。"}),"\n",(0,r.jsx)(e.p,{children:"这个支持么？"}),"\n",(0,r.jsx)(e.p,{children:"当然支持，但是要换别的 Transport 了。"}),"\n",(0,r.jsxs)(e.p,{children:["在 ",(0,r.jsx)(e.a,{href:"https://github.com/winstonjs/winston/blob/HEAD/docs/transports.md#winston-core",target:"_blank",rel:"noopener noreferrer",children:"winston 文档"}),"里可以看到有很多 Transport："]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:F,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"Console、File、Http、Stream 这几个 Transport 是内置的。"}),"\n",(0,r.jsx)(e.p,{children:"下面还有很多社区的 Transport，比如 MongoDB 的 Transport，很明显就是把日志写入 mongodb 的。"}),"\n",(0,r.jsx)(e.p,{children:"这里的 DailyRotateFile 就是按照日期滚动存储到日志文件的 Transport。"}),"\n",(0,r.jsx)(e.p,{children:"我们试试看："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"npm install --save winston-daily-rotate-file\n"})}),"\n",(0,r.jsx)(e.p,{children:"安装这个 Transport。"}),"\n",(0,r.jsx)(e.p,{children:"然后改下代码："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\nimport 'winston-daily-rotate-file';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple(),\n    transports: [\n        new winston.transports.Console(),\n        new winston.transports.DailyRotateFile({\n            level: 'info',\n            dirname: 'log2',\n            filename: 'test-%DATE%.log',\n            datePattern: 'YYYY-MM-DD-HH-mm',\n            maxSize: '1k'\n        })\n    ]\n});\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"这里使用了 DailyRotateFile 的 transport，然后指定了文件名和日期格式。"}),"\n",(0,r.jsx)(e.p,{children:"指定文件名里的日志格式包含分钟，所以不同的分钟打印的日志会写入不同文件里："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:k,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"这就达到了滚动日志的效果。"}),"\n",(0,r.jsx)(e.p,{children:"再来试试 http 的 transport："}),"\n",(0,r.jsx)(e.p,{children:"先创建个 nest 服务："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"nest new winston-log-server\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:_,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"添加一个路由："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:N,alt:""})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"@Post('log')\nlog(@Body() body) {\n    console.log(body);\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"把它跑起来："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"npm run start:dev\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"然后改下 index.js"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\nimport 'winston-daily-rotate-file';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple(),\n    transports: [\n        new winston.transports.Console(),\n        new winston.transports.Http({\n            host: 'localhost',\n            port: '3000',\n            path: '/log'\n        })\n    ]\n});\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"使用 http 的 transport 来传输日志。"}),"\n",(0,r.jsx)(e.p,{children:"跑一下："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"node ./index.js\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:E,alt:""})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"nest 服务收到了传过来的日志。"}),"\n",(0,r.jsx)(e.p,{children:"基本上，内置的和社区的 transport 就足够用了，不管是想把日志发送到别的服务，还是把日志存到数据库等，都可以用不同 Transport 实现。"}),"\n",(0,r.jsx)(e.p,{children:"这些 transport 可以用 add、remove 方法来动态增删："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nconst console = new winston.transports.Console();\nconst file = new winston.transports.File({ filename: 'test.log' });\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple()\n});\n\nlogger.clear();\nlogger.add(console);\nlogger.remove(console);\nlogger.add(file);\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"比如我先 clear，然后动态添加又删除了 console，然后又添加了一个 file 的 transport。"}),"\n",(0,r.jsx)(e.p,{children:"效果就是只有一个 file 的 transport："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"再就是日志级别，winston 有 6 种级别的日志："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"从上往下，重要程度依次降低。"}),"\n",(0,r.jsx)(e.p,{children:"比如当你指定 level 是 info 时，那 info、warn、error 的日志会输出，而 http、debug 这些不会。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"日志级别的功能虽然简单，但却是很实用的功能。"}),"\n",(0,r.jsx)(e.p,{children:"日志可以通过 format 指定格式："}),"\n",(0,r.jsx)(e.p,{children:"simple："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsxs)(e.p,{children:["json：\n",(0,r.jsx)("img",{src:h,alt:""})]}),"\n",(0,r.jsx)(e.p,{children:"prettyPrint（比 json 的格式多了一些空格）："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"用 combine 组合 timestamp 和 json："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"或者再组合个 label："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"加上个标签，再搜索相关日志就方便多了。"}),"\n",(0,r.jsx)(e.p,{children:"彩色："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"通过这些，就可以指定各种日志格式。"}),"\n",(0,r.jsx)(e.p,{children:"但现在有个问题，如果我不同的 transport 要指定不同的格式呢？"}),"\n",(0,r.jsx)(e.p,{children:"可以这样："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    transports: [\n        new winston.transports.Console({\n            format: winston.format.combine(\n                winston.format.colorize(),\n                winston.format.simple()\n            ),\n        }),\n        new winston.transports.File({ \n            dirname: 'log3',\n            filename: 'test.log',\n            format: winston.format.json()\n        }),\n    ]\n});\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"每个 transport 单独指定 format 就好了。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:d,alt:""})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"那如果我有的日志只想 console，而有的日志希望写入文件，而且配置都不同呢？"}),"\n",(0,r.jsx)(e.p,{children:"我们可以创建多个 logger 实例，每个 logger 实例有不同的 format、transport、level 等配置："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nwinston.loggers.add('console', {\n    format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple()\n    ),\n    transports: [\n        new winston.transports.Console()\n    ]\n});\n\nwinston.loggers.add('file', {\n    format:winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n    ),\n    transports: [\n        new winston.transports.File({\n            dirname: 'log4',\n            filename: 'test.log',\n            format: winston.format.json()\n        })\n    ]\n});\n\n\nconst logger1 = winston.loggers.get('console');\n\nlogger1.info('aaaaa');\nlogger1.error('bbbbb');\n\nconst logger2 = winston.loggers.get('file');\n\nlogger2.info('xxxx');\nlogger2.info('yyyy');\n"})}),"\n",(0,r.jsx)(e.p,{children:"我们创建了 2 个 logger 实例，其中一个只写入 console，另一个只写入 file，并且 format 都不同。"}),"\n",(0,r.jsx)(e.p,{children:"然后分别用不同的 logger 来打印日志。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:c,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"这样，项目中有不同的日志需求的时候，就可以创建多个 logger 实例。"}),"\n",(0,r.jsx)(e.p,{children:"此外，winston 还支持指定如何处理未捕获的错误的日志："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple(),\n    transports: [\n        new winston.transports.Console()\n    ],\n    exceptionHandlers: [\n        new winston.transports.File({\n            filename: 'error.log'\n        })\n    ]\n});\n\nthrow new Error('xxx');\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:"跑一下，可以看到错误日志被输出到了 error.log"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"除了 error 外，Promise 的未捕获异常也可以指定如何处理日志："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import winston from 'winston';\n\nconst logger = winston.createLogger({\n    level: 'debug',\n    format: winston.format.simple(),\n    transports: [\n        new winston.transports.Console()\n    ],\n    rejectionHandlers: [\n        new winston.transports.File({\n            filename: 'rejection.log'\n        })\n    ]\n});\n\n(async function(){\n    throw Error('yyy');\n})();\n\nlogger.info('光光光光光光光光光');\nlogger.error('东东东东东东东东');\nlogger.debug(66666666);\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"这些就是 winston 的主要功能了。"}),"\n",(0,r.jsxs)(e.p,{children:["案例代码在",(0,r.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/winston-test",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,r.jsxs)(e.h2,{id:"总结",children:["总结",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Node 服务端我们不会用 console.log 打印日志，而是会用日志框架，比如 winston。"}),"\n",(0,r.jsx)(e.p,{children:"winston 支持 tranport 配置，可以把日志传输到 console、file、通过 http 发送到别的服务，写入 mongodb 数据库等。"}),"\n",(0,r.jsx)(e.p,{children:"社区有很多 transport 可用，我们尝试了滚动日志的 transport，可以根据日期来自动分割日志文件。"}),"\n",(0,r.jsx)(e.p,{children:"winston 还支持 level 配置，可以根据级别来过滤日志。"}),"\n",(0,r.jsx)(e.p,{children:"而且还支持 format 的设置，比如 json、simple、label、timstamp 等，一般我们输出到文件里的都是 json 格式，并且给他加上时间戳和 label，这样方便之后分析。"}),"\n",(0,r.jsx)(e.p,{children:"每个 transport 都可以单独指定 format，而且还可以创建多个 logger，每个 logger 用不同的配置。"}),"\n",(0,r.jsx)(e.p,{children:"此外，winston 还支持指定未捕获的 error 的日志怎么处理。"}),"\n",(0,r.jsx)(e.p,{children:"总之，相比直接 console.log，用 winston 这样的灵活强大的日志框架可太香了。"})]})}function M(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(R,{...n})}):R(n)}let z=M;M.__RSPRESS_PAGE_META={},M.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F37.%20%E4%B8%BA%E4%BB%80%E4%B9%88%20Node%20%E9%87%8C%E8%A6%81%E7%94%A8%20Winston%20%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%EF%BC%9F.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"37. 为什么 Node 里要用 Winston 打印日志？",headingTitle:"37. 为什么 Node 里要用 Winston 打印日志？",frontmatter:{}}}}]);