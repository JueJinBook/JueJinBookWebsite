"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["91975"],{28291:function(e,n,r){r.r(n),r.d(n,{default:()=>N});var d=r(552676),s=r(740453);let c=r.p+"static/image/9bfa941db7a23570a6effb83bfcb2c99.95da4691.webp",i=r.p+"static/image/914175952e27b3b59cc8d48607d2c2a4.da63299a.webp",l=r.p+"static/image/63f290a1843bd833477820ead5ea9035.4869ed26.webp",a=r.p+"static/image/5ef57a157091b5f85c2d25d6056ce9ee.637fad14.webp",t=r.p+"static/image/a4f0bcd383425843f088811817aa1d46.f991a7f8.webp",h=r.p+"static/image/7893ac942e71e5b3d7299447d8ae3642.86ee09b8.webp",x=r.p+"static/image/1065c12b241f3bd02ffdb8e8fb68c201.8cd6d03f.webp",j=r.p+"static/image/50b84c072fa22960f28833d84a9f0d09.1deb5301.webp",p=r.p+"static/image/482ce84b3340c069712ead96ed6f8309.24fca2b0.webp",o=r.p+"static/image/2b2d38329eba54f3304d0dbefa53b144.518237f2.webp",u=r.p+"static/image/02e06ce219cddc2c55951550e03f74f2.292fa40e.webp",g=r.p+"static/image/f5b271e915a566b937d378ee324a6ae0.adadc449.webp",m=r.p+"static/image/00b7a3f28c4e162d3caf6525d42834e3.1da7daf3.webp";function b(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",h3:"h3",pre:"pre",img:"img",strong:"strong",ul:"ul",li:"li",h4:"h4",blockquote:"blockquote",ol:"ol"},(0,s.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"2初始篇-_-nextjs-cli",children:["2.初始篇 _ Next.js CLI",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2初始篇-_-nextjs-cli",children:"#"})]}),"\n",(0,d.jsxs)(n.h2,{id:"前言",children:["前言",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"欢迎学习 Next.js！在学习具体的知识点之前，我们先来创建一个 Next.js 项目。创建了可运行的项目，才能在学习的时候边调试边理解，从而达到事半功倍的效果。"}),"\n",(0,d.jsxs)(n.p,{children:["幸运的是，Next.js 提供了开箱即用的 ",(0,d.jsx)(n.code,{children:"create-next-app"}),"脚手架，内置支持 TypeScript、ESLint 等功能，零配置即可实现自动编译和打包。"]}),"\n",(0,d.jsxs)(n.p,{children:["本篇我们会讲解创建项目的两种方式：自动创建项目和手动创建项目，以及开发项目时常用的脚本命令。同时我们会对脚本背后的 ",(0,d.jsx)(n.code,{children:"next"})," 命令进行详解，帮助大家了解每个命令实现的功能和可选参数。"]}),"\n",(0,d.jsxs)(n.h2,{id:"1-自动创建项目",children:["1. 自动创建项目",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-自动创建项目",children:"#"})]}),"\n",(0,d.jsxs)(n.h3,{id:"11-环境要求",children:["1.1. 环境要求",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-环境要求",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["此本小册基于的是目前最新版本的 v14 版本，需要 ",(0,d.jsx)(n.a,{href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer",children:"Node.js 18.17"})," 及以后版本，支持 macOS、Windows、Linux 系统。"]}),"\n",(0,d.jsxs)(n.h3,{id:"12-创建项目",children:["1.2. 创建项目",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12-创建项目",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["最快捷的创建 Next.js 项目的方式是使用 ",(0,d.jsx)(n.code,{children:"create-next-app"}),"脚手架，你只需要运行："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx create-next-app@latest\n"})}),"\n",(0,d.jsx)(n.p,{children:"接下来会有一系列的操作提示，比如设置项目名称、是否使用 TypeScript、是否开启 ESLint、是否使用 Tailwind CSS 等，根据自己的实际情况进行选择即可。如果刚开始你不知道如何选择，遵循默认选择即可，这些选择的作用我们会随着小册的学习逐渐了解。"}),"\n",(0,d.jsxs)(n.p,{children:["注：为了减少学习成本，此本小册的示例代码就不使用 TypeScript 了。（想学习 TypeScript 的同学可以看我翻译的最新的",(0,d.jsx)(n.a,{href:"https://juejin.cn/column/7029490086710345742",target:"_blank",rel:"noopener noreferrer",children:" TypeScript 官方文档"}),"）"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["完成选择之后，",(0,d.jsx)(n.code,{children:"create-next-app"})," 会自动创建项目文件并安装依赖，创建安装完的项目目录和文件如下："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["如果你不使用 ",(0,d.jsx)(n.code,{children:"npx"}),"，也支持使用 ",(0,d.jsx)(n.code,{children:"yarn"}),"、",(0,d.jsx)(n.code,{children:"pnpm"}),"、",(0,d.jsx)(n.code,{children:"bunx"}),"："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"yarn create next-app\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"pnpm create next-app\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"bunx create-next-app\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"13-运行项目",children:["1.3. 运行项目",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#13-运行项目",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["查看项目根目录 ",(0,d.jsx)(n.code,{children:"package.json"})," 文件的代码："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'  "scripts": {\n    "dev": "next dev",\n    "build": "next build",\n    "start": "next start",\n    "lint": "next lint"\n  },\n'})}),"\n",(0,d.jsxs)(n.p,{children:["我们可以看到脚本命令有 ",(0,d.jsx)(n.code,{children:"dev"}),"、",(0,d.jsx)(n.code,{children:"build"}),"、",(0,d.jsx)(n.code,{children:"start"}),"、",(0,d.jsx)(n.code,{children:"lint"}),"，分别对应开发、构建、运行、代码检查。"]}),"\n",(0,d.jsxs)(n.p,{children:["开发的时候使用  ",(0,d.jsx)(n.code,{children:"npm run dev"}),"。部署的时候先使用 ",(0,d.jsx)(n.code,{children:"npm run build"})," 构建生产代码，再执行 ",(0,d.jsx)(n.code,{children:"npm run start"})," 运行生产项目。运行 ",(0,d.jsx)(n.code,{children:"npm run lint"})," 则会执行 ESLint 语法检查。"]}),"\n",(0,d.jsxs)(n.p,{children:["现在我们执行 ",(0,d.jsx)(n.code,{children:"npm run dev"})," 运行项目吧！"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["命令行会提示运行在 ",(0,d.jsx)(n.code,{children:"3000"})," 端口，我们在浏览器打开页面 ",(0,d.jsx)(n.a,{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer",children:(0,d.jsx)(n.a,{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/"})}),"，看到如下内容即表示项目成功运行："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"注：学习的时候为了避免浏览器插件带来的影响，建议在无痕模式下测试。"})}),"\n",(0,d.jsxs)(n.h3,{id:"14-示例代码",children:["1.4. 示例代码",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#14-示例代码",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["Next.js 提供了丰富的示例代码，比如 ",(0,d.jsx)(n.code,{children:"with-redux"}),"、",(0,d.jsx)(n.code,{children:"api-routes-cors"}),"、",(0,d.jsx)(n.code,{children:"with-electron"}),"、",(0,d.jsx)(n.code,{children:"with-jest"}),"、",(0,d.jsx)(n.code,{children:"with-markdown"}),"、",(0,d.jsx)(n.code,{children:"with-material-ui"}),"、",(0,d.jsx)(n.code,{children:"with-mobx"}),"，从这些名字中也可以看出，这些示例代码演示了 Next.js 的各种使用场景，比如 ",(0,d.jsx)(n.code,{children:"with-redux"}),"就演示了 Next.js 如何与 redux 搭配使用。"]}),"\n",(0,d.jsxs)(n.p,{children:["你可以访问 ",(0,d.jsx)(n.a,{href:"https://github.com/vercel/next.js/tree/canary/examples",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/vercel/next.js/tree/canary/examples"})," 查看有哪些示例代码。如果你想直接使用某个示例代码，就比如 ",(0,d.jsx)(n.code,{children:"with-redux"}),"，无须手动 clone 代码，在创建项目的时候使用 ",(0,d.jsx)(n.code,{children:"--example"})," 参数即可直接创建："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx create-next-app --example with-redux your-app-name\n"})}),"\n",(0,d.jsxs)(n.p,{children:["注：使用示例代码的时候，并不会像执行 ",(0,d.jsx)(n.code,{children:"npx create-next-app"}),"时提示是否使用 TypeScript、ESLint 等，而是会直接进入项目创建和依赖安装阶段。"]}),"\n",(0,d.jsxs)(n.h2,{id:"2-手动创建项目",children:["2. 手动创建项目",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-手动创建项目",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"大部分时候我们并不需要手动创建 Next.js 项目，但了解这个过程有助于我们认识到一个最基础的 Next.js 项目依赖哪些东西。"}),"\n",(0,d.jsxs)(n.h3,{id:"21-创建文件夹并安装依赖",children:["2.1. 创建文件夹并安装依赖",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-创建文件夹并安装依赖",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["现在，创建一个文件夹，假设名为 ",(0,d.jsx)(n.code,{children:"next-app-manual"}),"，",(0,d.jsx)(n.code,{children:"cd"})," 进入该目录，安装依赖："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm install next@latest react@latest react-dom@latest\n"})}),"\n",(0,d.jsxs)(n.p,{children:["npm 会自动创建 ",(0,d.jsx)(n.code,{children:"package.json"})," 并安装依赖项。"]}),"\n",(0,d.jsxs)(n.h3,{id:"22-添加-scripts",children:["2.2. 添加 scripts",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-添加-scripts",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["打开 ",(0,d.jsx)(n.code,{children:"package.json"}),"，添加以下内容："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'{\n  "scripts": {\n    "dev": "next dev",\n    "build": "next build",\n    "start": "next start",\n    "lint": "next lint"\n  }\n}\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"23-创建目录",children:["2.3. 创建目录",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23-创建目录",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["在 ",(0,d.jsx)(n.code,{children:"next-app-manual"}),"下新建 ",(0,d.jsx)(n.code,{children:"app"})," 文件夹，",(0,d.jsx)(n.code,{children:"app"})," 下新建 ",(0,d.jsx)(n.code,{children:"layout.js"})," 和 ",(0,d.jsx)(n.code,{children:"page.js"}),"文件，代码如下："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// app/layout.js\nexport default function RootLayout({ children }) {\n  return (\n    <html lang="en">\n      <body>{children}</body>\n    </html>\n  )\n}\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"// app/page.js\nexport default function Page() {\n  return <h1>Hello, Next.js!</h1>\n}\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"24-运行项目",children:["2.4. 运行项目",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24-运行项目",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["现在运行 ",(0,d.jsx)(n.code,{children:"npm run dev"}),"，正常渲染则表示运行成功："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,d.jsxs)(n.h2,{id:"3-nextjs-cli",children:["3. Next.js CLI",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-nextjs-cli",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["通过 ",(0,d.jsx)(n.code,{children:"package.json"})," 中的代码我们知道：当我们运行 ",(0,d.jsx)(n.code,{children:"npm run dev"})," 的时候，其实执行的是 ",(0,d.jsx)(n.code,{children:"next dev"}),"。",(0,d.jsx)(n.code,{children:"next"})," 命令就是来自于 Next.js CLI。Next.js CLI 可以帮助你启动、构建和导出项目。"]}),"\n",(0,d.jsxs)(n.p,{children:["完整的 CLI 命令，你可以执行 ",(0,d.jsx)(n.code,{children:"npx next -h"})," 查看（",(0,d.jsx)(n.code,{children:"-h"})," 是 ",(0,d.jsx)(n.code,{children:"--help"})," 的简写）。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["从上图可以看到，",(0,d.jsx)(n.code,{children:"next"})," 可以执行的命令有多个，我们介绍下最常用的一些。"]}),"\n",(0,d.jsxs)(n.p,{children:["注：因为我们是使用 ",(0,d.jsx)(n.code,{children:"npx"}),"创建的项目，这种方式下避免了全局安装 ",(0,d.jsx)(n.code,{children:"create-next-app"}),"，所以我们本地全局并无 ",(0,d.jsx)(n.code,{children:"next"})," 命令。如果你要执行 ",(0,d.jsx)(n.code,{children:"next"})," 命令，可以在 ",(0,d.jsx)(n.code,{children:"next"}),"前加一个 ",(0,d.jsx)(n.code,{children:"npx"}),"，就比如这次用到的 ",(0,d.jsx)(n.code,{children:"npx next -h"})]}),"\n",(0,d.jsxs)(n.h3,{id:"31-next-build",children:["3.1. next build",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-next-build",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["执行 ",(0,d.jsx)(n.code,{children:"next build"})," 将会创建项目的生产优化版本："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next build\n"})}),"\n",(0,d.jsx)(n.p,{children:"构建输出如下："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,d.jsx)(n.p,{children:"从上图可以看出，构建时会输出每条路由的信息，比如 Size 和 First Load JS。注意这些值指的都是 gzip 压缩后的大小。其中 First Load JS 会用绿色、黄色、红色表示，绿色表示高性能，黄色或红色表示需要优化。"}),"\n",(0,d.jsx)(n.p,{children:"这里要解释一下 Size 和 First Load JS 的含义。正常我们开发的 Next.js 项目，其页面表现类似于单页应用，即路由跳转（我们称之为“导航”）的时候，页面不会刷新，而会加载目标路由所需的资源然后展示，所以："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-md",children:"加载目标路由一共所需的 JS 大小 = 每个路由都需要依赖的 JS 大小 + 目标路由单独依赖的 JS 大小\n"})}),"\n",(0,d.jsx)(n.p,{children:"其中："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["加载目标路由一共所需的 JS 大小就是 ",(0,d.jsx)(n.code,{children:"First Load JS"})]}),"\n",(0,d.jsxs)(n.li,{children:["目标路由单独依赖的 JS 大小就是 ",(0,d.jsx)(n.code,{children:"Size"})]}),"\n",(0,d.jsxs)(n.li,{children:["每个路由都需要依赖的 JS 大小就是图中单独列出来的 ",(0,d.jsx)(n.code,{children:"First load JS shared by all"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"也就是说："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-md",children:"First Load JS = Size + First load JS shared by all\n"})}),"\n",(0,d.jsxs)(n.p,{children:["以上图中的 ",(0,d.jsx)(n.code,{children:"/"})," 路由地址为例，89 kB（First Load JS）= 5.16 kB（Size） + 83.9 kB（First load JS shared by all）"]}),"\n",(0,d.jsx)(n.p,{children:"使用官方文档中的介绍就是："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"Size"}),"：导航到该路由时下载的资源大小，每个路由的大小只包括它自己的依赖项"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"First Load JS"}),"：加载该页面时下载的资源大小"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"First load JS shared by all"}),"：所有路由共享的 JS 大小会被单独列出来"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["现在我们访问生产版本的 ",(0,d.jsx)(n.a,{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer",children:(0,d.jsx)(n.a,{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/"})}),"："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:h,alt:"截屏2023-12-04 下午3.38.18.png"})}),"\n",(0,d.jsxs)(n.p,{children:["上图中红色框住的 JS 是每个页面都要加载的 JS，根据命令行中的输出，总共大小为 ",(0,d.jsx)(n.code,{children:"83.9"})," kB，",(0,d.jsx)(n.code,{children:"413-dd2d1e77cac135ea.js"})," 和 ",(0,d.jsx)(n.code,{children:"page-9a9638f75b922b0c.js"})," 是这个页面单独的 JS，总共大小为 ",(0,d.jsx)(n.code,{children:"5.16"})," kB，所有JS 资源大小为 ",(0,d.jsx)(n.code,{children:"89 kB"}),"。（注：跟图中的数字没有完全一致是因为没有开启 gzip 压缩）"]}),"\n",(0,d.jsxs)(n.h4,{id:"next-build---profile",children:["next build --profile",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#next-build---profile",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"该命令参数用于开启 React 的生产性能分析（需要 Next.js v9.5 以上）。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next build --profile\n"})}),"\n",(0,d.jsxs)(n.p,{children:["然后你就可以像在开发环境中使用 React 的 ",(0,d.jsx)(n.code,{children:"profiler"})," 功能。"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["注：这里我们执行的命令是 ",(0,d.jsx)(n.code,{children:"npx next build --profile"}),"，而不是 ",(0,d.jsx)(n.code,{children:"npm run build --profile"}),"。实际上有三种方式可以开启："]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["运行 ",(0,d.jsx)(n.code,{children:"npx next build --profile"})]}),"\n",(0,d.jsxs)(n.li,{children:["先修改 ",(0,d.jsx)(n.code,{children:"package.json"})," 中的 ",(0,d.jsx)(n.code,{children:"build"})," 脚本命令为："]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n "scripts": {\n    "build": "next build --profile"\n  }\n}\n'})}),"\n",(0,d.jsxs)(n.p,{children:["然后再运行 ",(0,d.jsx)(n.code,{children:"npm run build"})]}),"\n",(0,d.jsxs)(n.ol,{start:"3",children:["\n",(0,d.jsxs)(n.li,{children:["运行 ",(0,d.jsx)(n.code,{children:"npm run build -- --profile"}),"，将 ",(0,d.jsx)(n.code,{children:"--profile"})," 添加到 ",(0,d.jsx)(n.code,{children:"--"})," 分隔符后，会将 ",(0,d.jsx)(n.code,{children:"--profile"})," 作为参数传递给实际执行的命令，最终的命令还是 ",(0,d.jsx)(n.code,{children:"next build --profile"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["下节的 ",(0,d.jsx)(n.code,{children:"--debug"})," 参数使用也是同理"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["如果你想测验这个功能，首先你的",(0,d.jsx)(n.a,{href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi",target:"_blank",rel:"noopener noreferrer",children:"浏览器要装有 React 插件"}),"，然后你要对 React 的 ",(0,d.jsx)(n.a,{href:"https://legacy.reactjs.org/docs/profiler.html",target:"_blank",rel:"noopener noreferrer",children:"Profiler API"})," 有一定了解（其实就是测量组件渲染性能）。比如现在我们把 ",(0,d.jsx)(n.code,{children:"page.js"})," 的代码改为："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"// app/page.js\nimport React from 'react'\n\nexport default function Page() {\n  return (\n    <React.Profiler id=\"hello\">\n      <p>hello app server</p>\n    </React.Profiler>\n  )\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["执行 ",(0,d.jsx)(n.code,{children:"npm run dev"}),"，你在控制台里可以看到："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["通常执行 ",(0,d.jsx)(n.code,{children:"npm run build"})," 和 ",(0,d.jsx)(n.code,{children:"npm run start"}),"后，你再打开控制台，会发现在生产环境中不支持性能测量："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["但如果你执行 ",(0,d.jsx)(n.code,{children:"npx next build --profile"})," 再执行 ",(0,d.jsx)(n.code,{children:"npm run start"}),"，尽管 React 插件会显示当前在生产环境，但 Profiler 是可以使用的："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:i,alt:"image.png"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"这个功能可以帮助大家排查线上的性能问题。"})}),"\n",(0,d.jsxs)(n.h4,{id:"next-build---debug",children:["next build --debug",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#next-build---debug",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"该命令参数用于开启更详细的构建输出："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next build --debug\n"})}),"\n",(0,d.jsxs)(n.p,{children:["开启后，将输出额外的构建输出信息如 ",(0,d.jsx)(n.code,{children:"rewrites"}),"、",(0,d.jsx)(n.code,{children:"redirects"}),"、",(0,d.jsx)(n.code,{children:"headers"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["举个例子，我们修改下 ",(0,d.jsx)(n.code,{children:"next.config.js"}),"文件："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  async redirects() {\n    return [\n      {\n        source: '/index',\n        destination: '/',\n        permanent: true,\n      },\n    ]\n  },\n  async rewrites() {\n    return [\n      {\n        source: '/about',\n        destination: '/',\n      },\n    ]\n  }\n}\n\nmodule.exports = nextConfig\n\n"})}),"\n",(0,d.jsxs)(n.p,{children:["再执行 ",(0,d.jsx)(n.code,{children:"npx next build --debug"}),"，输出结果如下："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,d.jsxs)(n.p,{children:["你可以看到相比之前的构建输出信息，多了 ",(0,d.jsx)(n.code,{children:"rewrites"}),"、",(0,d.jsx)(n.code,{children:"redirects"})," 等信息。关于 rewrites、redirects 的具体用法，我们会在后续的内容中介绍。"]}),"\n",(0,d.jsxs)(n.h3,{id:"32-next-dev",children:["3.2. next dev",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-next-dev",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["开发模式下，使用 ",(0,d.jsx)(n.code,{children:"next dev"})," 运行程序，会自动具有热加载、错误报告等功能。默认情况下，程序将在 ",(0,d.jsx)(n.code,{children:"http://localhost:3000"})," 开启。如果你想更改端口号："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next dev -p 4000\n"})}),"\n",(0,d.jsx)(n.p,{children:"如果你想更改主机名（hostname）：（以便其他主机访问）"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next dev -H 192.168.1.2\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"33-next-start",children:["3.3. next start",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-next-start",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["生产模式下，使用 ",(0,d.jsx)(n.code,{children:"next start"}),"运行程序。不过要先执行 ",(0,d.jsx)(n.code,{children:"next build"}),"构建出生产代码。运行的时候，跟开发模式相同，程序默认开启在 ",(0,d.jsx)(n.code,{children:"http://localhost:3000"}),"。如果你想更改端口号："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next start -p 4000\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"34-next-lint",children:["3.4. next lint",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-next-lint",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["执行 ",(0,d.jsx)(n.code,{children:"next lint"}),"会为 ",(0,d.jsx)(n.code,{children:"pages/"}),"、",(0,d.jsx)(n.code,{children:"app/"}),"、",(0,d.jsx)(n.code,{children:"components/"}),"、",(0,d.jsx)(n.code,{children:"lib/"}),"、",(0,d.jsx)(n.code,{children:"src/"}),"目录下的所有文件执行 ESLint 语法检查。如果你没有安装 ESLint，该命令会提供一个安装指导。如果你想要指定检查的目录："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next lint --dir utils\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"35-next-info",children:["3.5. next info",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#35-next-info",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"next info"}),"会打印当前系统相关的信息，可用于报告 Next.js 程序的 bug。在项目的根目录中执行："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npx next info\n"})}),"\n",(0,d.jsx)(n.p,{children:"打印信息类似于："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"Operating System:\n  Platform: linux\n  Arch: x64\n  Version: #22-Ubuntu SMP Fri Nov 5 13:21:36 UTC 2021\nBinaries:\n  Node: 16.13.0\n  npm: 8.1.0\n  Yarn: 1.22.17\n  pnpm: 6.24.2\nRelevant packages:\n  next: 12.0.8\n  react: 17.0.2\n  react-dom: 17.0.2\n"})}),"\n",(0,d.jsx)(n.p,{children:"这些信息可以贴到 GitHub Issues 中方便 Next.js 官方人员排查问题。"}),"\n",(0,d.jsxs)(n.h2,{id:"小结",children:["小结",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"恭喜你，完成本篇内容的学习！"}),"\n",(0,d.jsxs)(n.p,{children:["这一节我们讲解了",(0,d.jsx)(n.strong,{children:"自动创建项目"}),"和",(0,d.jsx)(n.strong,{children:"手动创建项目"}),"两种创建项目的方式，如果是全新的项目，推荐使用自动创建方式。如果是项目中引入 Next.js，可以参考手动创建项目的方式。"]}),"\n",(0,d.jsx)(n.p,{children:"Next.js 项目常用的脚本有三个："}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"npm run dev"}),"用于开发时使用"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"npm run build"}),"用于构建生产版本"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"npm run start"}),"用于运行生产版本"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["从 ",(0,d.jsx)(n.code,{children:"package.json"}),"中，我们得知这些脚本背后用的其实是 Next.js CLI 的 ",(0,d.jsx)(n.code,{children:"next"})," 命令，然后我们对常用的 ",(0,d.jsx)(n.code,{children:"next"})," 命令和相关参数进行了介绍。在必要的时候，可以使用这些命令和参数自定义 npm 脚本。"]}),"\n",(0,d.jsx)(n.p,{children:"靡不有初，鲜克有终。恭喜你迈出第一步！接下来我们将进入路由篇，带大家了解 Next.js v13 带来颠覆式更新的的 App Route 功能。在学习的过程中，如果遇到有疑问的地方，一定要多写 demo 测试哦！"}),"\n",(0,d.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://nextjs.org/docs/getting-started/installation",target:"_blank",rel:"noopener noreferrer",children:"Getting Started: Installation"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://nextjs.org/docs/app/api-reference/create-next-app",target:"_blank",rel:"noopener noreferrer",children:"API Reference: create-next-app"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://nextjs.org/docs/pages/api-reference/next-cli#next-info",target:"_blank",rel:"noopener noreferrer",children:"API Reference: Next.js CLI"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v10/commands/npm-run-script",target:"_blank",rel:"noopener noreferrer",children:"npm-run-script"})}),"\n"]})]})}function f(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(b,{...e})}):b(e)}let N=f;f.__RSPRESS_PAGE_META={},f.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F2.%E5%88%9D%E5%A7%8B%E7%AF%87%20_%20Next.js%20CLI.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. 自动创建项目",id:"1-自动创建项目",depth:2},{text:"1.1. 环境要求",id:"11-环境要求",depth:3},{text:"1.2. 创建项目",id:"12-创建项目",depth:3},{text:"1.3. 运行项目",id:"13-运行项目",depth:3},{text:"1.4. 示例代码",id:"14-示例代码",depth:3},{text:"2. 手动创建项目",id:"2-手动创建项目",depth:2},{text:"2.1. 创建文件夹并安装依赖",id:"21-创建文件夹并安装依赖",depth:3},{text:"2.2. 添加 scripts",id:"22-添加-scripts",depth:3},{text:"2.3. 创建目录",id:"23-创建目录",depth:3},{text:"2.4. 运行项目",id:"24-运行项目",depth:3},{text:"3. Next.js CLI",id:"3-nextjs-cli",depth:2},{text:"3.1. next build",id:"31-next-build",depth:3},{text:"next build --profile",id:"next-build---profile",depth:4},{text:"next build --debug",id:"next-build---debug",depth:4},{text:"3.2. next dev",id:"32-next-dev",depth:3},{text:"3.3. next start",id:"33-next-start",depth:3},{text:"3.4. next lint",id:"34-next-lint",depth:3},{text:"3.5. next info",id:"35-next-info",depth:3},{text:"小结",id:"小结",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"2.初始篇 _ Next.js CLI",headingTitle:"2.初始篇 _ Next.js CLI",frontmatter:{}}}}]);