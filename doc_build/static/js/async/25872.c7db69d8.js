"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["25872"],{369314:function(e,n,d){d.r(n),d.d(n,{default:()=>l});var h=d(552676),r=d(740453);let i=d.p+"static/image/10f446324241f925674c550dcddaf327.72794d78.webp";function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",h2:"h2",ul:"ul",li:"li",img:"img",h3:"h3"},(0,r.ah)(),e.components);return(0,h.jsxs)(h.Fragment,{children:[(0,h.jsxs)(n.h1,{id:"26udp",children:["26.UDP",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#26udp",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"网络协议是每个前端工程师都必须要掌握的知识，我们将先来学习传输层中的两个协议：UDP 以及 TCP。对于大部分工程师来说最常用的协议也就是这两个了，并且面试中经常会提问的也是关于这两个协议的区别。"}),"\n",(0,h.jsx)(n.p,{children:"我们先来解答这个常考面试题关于 UDP 部分的内容，然后再详细去学习这个协议。"}),"\n",(0,h.jsx)(n.pre,{children:(0,h.jsx)(n.code,{className:"language-!",children:"常考面试题：UDP 与 TCP 的区别是什么？\n"})}),"\n",(0,h.jsx)(n.p,{children:"首先 UDP 协议是面向无连接的，也就是说不需要在正式传递数据之前先连接起双方。然后 UDP 协议只是数据报文的搬运工，不保证有序且不丢失的传递到对端，并且UDP 协议也没有任何控制流量的算法，总的来说 UDP 相较于 TCP 更加的轻便。"}),"\n",(0,h.jsxs)(n.h2,{id:"面向无连接",children:["面向无连接",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#面向无连接",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"首先 UDP 是不需要和 TCP 一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。"}),"\n",(0,h.jsx)(n.p,{children:"并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。"}),"\n",(0,h.jsx)(n.p,{children:"具体来说就是："}),"\n",(0,h.jsxs)(n.ul,{children:["\n",(0,h.jsx)(n.li,{children:"在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个 UDP 头标识下是 UDP 协议，然后就传递给网络层了"}),"\n",(0,h.jsx)(n.li,{children:"在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作"}),"\n"]}),"\n",(0,h.jsxs)(n.h2,{id:"不可靠性",children:["不可靠性",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#不可靠性",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。"}),"\n",(0,h.jsx)(n.p,{children:"并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。"}),"\n",(0,h.jsx)(n.p,{children:"再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。"}),"\n",(0,h.jsxs)(n.h2,{id:"高效",children:["高效",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#高效",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"虽然 UDP 协议不是那么的可靠，但是正是因为它不是那么的可靠，所以也就没有 TCP 那么复杂了，需要保证数据不丢失且有序到达。"}),"\n",(0,h.jsx)(n.p,{children:"因此 UDP 的头部开销小，只有八字节，相比 TCP 的至少二十字节要少得多，在传输数据报文时是很高效的。"}),"\n",(0,h.jsx)(n.p,{children:(0,h.jsx)("img",{src:i,alt:""})}),"\n",(0,h.jsx)(n.p,{children:"UDP 头部包含了以下几个数据"}),"\n",(0,h.jsxs)(n.ul,{children:["\n",(0,h.jsx)(n.li,{children:"两个十六位的端口号，分别为源端口（可选字段）和目标端口"}),"\n",(0,h.jsx)(n.li,{children:"整个数据报文的长度"}),"\n",(0,h.jsx)(n.li,{children:"整个数据报文的检验和（IPv4 可选 字段），该字段用于发现头部信息和数据中的错误"}),"\n"]}),"\n",(0,h.jsxs)(n.h2,{id:"传输方式",children:["传输方式",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#传输方式",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。"}),"\n",(0,h.jsxs)(n.h2,{id:"适合使用的场景",children:["适合使用的场景",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#适合使用的场景",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"UDP 虽然对比 TCP 有很多缺点，但是正是因为这些缺点造就了它高效的特性，在很多实时性要求高的地方都可以看到 UDP 的身影。"}),"\n",(0,h.jsxs)(n.h3,{id:"直播",children:["直播",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#直播",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"想必大家都看过直播吧，大家可以考虑下如果直播使用了基于 TCP 的协议会发生什么事情？"}),"\n",(0,h.jsx)(n.p,{children:"TCP 会严格控制传输的正确性，一旦有某一个数据对端没有收到，就会停止下来直到对端收到这个数据。这种问题在网络条件不错的情况下可能并不会发生什么事情，但是在网络情况差的时候就会变成画面卡住，然后再继续播放下一帧的情况。"}),"\n",(0,h.jsx)(n.p,{children:"但是对于直播来说，用户肯定关注的是最新的画面，而不是因为网络条件差而丢失的老旧画面，所以 TCP 在这种情况下无用武之地，只会降低用户体验。"}),"\n",(0,h.jsxs)(n.h3,{id:"王者荣耀",children:["王者荣耀",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#王者荣耀",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"虽然我具体不知道王者荣耀底层使用了什么协议，但是对于这类实时性要求很高的游戏来说，UDP 是跑不了的。"}),"\n",(0,h.jsx)(n.p,{children:"为什么这样说呢？首先对于王者荣耀来说，用户体量是相当大的，如果使用 TCP 连接的话，就可能会出现服务器不够用的情况，因为每台服务器可供支撑的 TCP 连接数量是有限制的。"}),"\n",(0,h.jsx)(n.p,{children:"再者，因为 TCP 会严格控制传输的正确性，如果因为用户网络条件不好就造成页面卡顿然后再传输旧的游戏画面是肯定不能接受的，毕竟对于这类实时性要求很高的游戏来说，最新的游戏画面才是最需要的，而不是老旧的画面，否则角色都不知道死多少次了。"}),"\n",(0,h.jsxs)(n.h2,{id:"小结",children:["小结",(0,h.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,h.jsx)(n.p,{children:"这一章节的内容就到这里，因为 UDP 协议相对简单，所以内容并不是很多，但是下一章节会呈现很多关于 TCP 相关的内容，请大家做好准备。"}),"\n",(0,h.jsx)(n.p,{children:"最后总结一下这一章节的内容："}),"\n",(0,h.jsxs)(n.ul,{children:["\n",(0,h.jsx)(n.li,{children:"UDP 相比 TCP 简单的多，不需要建立连接，不需要验证数据报文，不需要流量控制，只会把想发的数据报文一股脑的丢给对端"}),"\n",(0,h.jsx)(n.li,{children:"虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为"}),"\n"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,h.jsx)(n,{...e,children:(0,h.jsx)(s,{...e})}):s(e)}let l=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93%2F26.UDP.md"]={toc:[{text:"面向无连接",id:"面向无连接",depth:2},{text:"不可靠性",id:"不可靠性",depth:2},{text:"高效",id:"高效",depth:2},{text:"传输方式",id:"传输方式",depth:2},{text:"适合使用的场景",id:"适合使用的场景",depth:2},{text:"直播",id:"直播",depth:3},{text:"王者荣耀",id:"王者荣耀",depth:3},{text:"小结",id:"小结",depth:2}],title:"26.UDP",headingTitle:"26.UDP",frontmatter:{}}}}]);