"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["25030"],{584117:function(e,n,i){i.r(n),i.d(n,{default:()=>J});var d=i(552676),c=i(740453);let s=i.p+"static/image/e21b266a98bf1f51dd282566d57129b9.9c1be74d.gif",r=i.p+"static/image/c0fedb8f63f6717bd194925181200c2c.9bc015b5.gif",l=i.p+"static/image/9b1775b1d96b4075af7172fa6c244695.93243b47.gif",x=i.p+"static/image/040c1c16a5fdc63624dec215ffbabfe6.90fa56c1.gif",h=i.p+"static/image/70600848f0e72f2e346d9f6db7174bf0.cd825b3b.gif",o=i.p+"static/image/54e205cb480861dedb12dbc5164eee1e.0cadc844.gif",j=i.p+"static/image/c81134cf0a6c8d59b0e183e903ce3dac.7f03e954.gif",a=i.p+"static/image/b22dc291b980c7925aba383d22a52e94.081bb9d4.gif",t=i.p+"static/image/8e82246a1a4e56f0c3f2b7eef624fb92.6e43e791.gif",p=i.p+"static/image/7ee263016044c830aa195f7111cb563f.df5f6cdb.gif",g=i.p+"static/image/9b1d23cb88041c41a7b6eb3257d8463a.400f7339.gif",v=i.p+"static/image/a39d4f46ddff7d117c9d25bfac1122f0.52b39bd9.gif",m=i.p+"static/image/8b26e6974364adbd9d847a40bd38cc74.a1f2e6f5.gif",w=i.p+"static/image/a54e21b567053fe68fe6589fee1f3107.0bd2bebb.gif",f=i.p+"static/image/dca07ead2fdbe1cf5b060de3ad57c31f.b0e035ba.webp",b=i.p+"static/image/9f9904bbb7eb9671058a7bb7df8b582e.47a5d653.webp",B=i.p+"static/image/f1a985f5252611760891c21b0f5f4731.4c518af0.gif",S=i.p+"static/image/96ca572910a26a3d2d67d7fbbf20e288.8ee72db3.webp",V=i.p+"static/image/563009c9b979b770301c05b1c5cfcfaa.3871f583.gif",M=i.p+"static/image/081600c12fcc73506262f08c05980387.52dc32b2.webp",u=i.p+"static/image/08d2d0c13f7200630dc8197156091ef8.deddb485.webp",G=i.p+"static/image/00fb89bf14b165679ad8e73c1588d68f.19c21d43.gif",y=i.p+"static/image/0cabd7ff092c33029c72ca95fa092599.5a26c164.gif",k=i.p+"static/image/fb5a3a7d9613e71e619c470ecb86b1d3.1d5b43dc.webp",A=i.p+"static/image/dd4dd4288cb045de04d7a1e41f21ed68.e953d9c0.gif",R=i.p+"static/image/682dba044e2b204b106b361419d60ebf.13134e0e.webp",N=i.p+"static/image/af94ffa24f74b95b8420833276cfe0c6.741cf24f.webp",Y=i.p+"static/image/278bb9477f67a1337c1f1e5c429227d8.dda3b225.gif",L=i.p+"static/image/3fdf58424b85fea9bb19403ce007fe83.9e8fda3e.webp",q=i.p+"static/image/41135ced38e99a76bbb956efb90d9e83.ca3d3bbf.webp",_=i.p+"static/image/06e52c628e2d28d1acb505e027226e62.c19d43aa.webp",W=i.p+"static/image/f86c6b801be5ba387c068a555c08951d.a3d085fd.webp",C=i.p+"static/image/3594f1fdab4412b75242cc7decfb74b4.3871f583.gif",X=i.p+"static/image/99166a91f14fe81bea812ad58cbe1f05.19c21d43.gif",z=i.p+"static/image/8ee3d54afeac94726ecca9c8903732d2.d414d162.webp",E=i.p+"static/image/9c45e0dc3f78bb9645bb4fdd611a1f20.ae7cda3f.webp",O=i.p+"static/image/5a7ecb0a6f47d9269407a710b7bbfa09.c4730f17.webp",D=i.p+"static/image/d3aad731f6d3940da508e6bbc0468bef.602c0c33.webp",P=i.p+"static/image/60988fa134b2f7efca469c25a97b2282.ff347c1f.webp",F=i.p+"static/image/b7ffa2359f7bd1d2d737702051751f8f.4dc2f48c.webp";function Z(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",img:"img",pre:"pre",h3:"h3",strong:"strong",blockquote:"blockquote",ul:"ul",li:"li",h4:"h4"},(0,c.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"6-初级篇svg-坐标系统",children:["6-初级篇：SVG 坐标系统",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-初级篇svg-坐标系统",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"SVG 在 Web 设计中扮演着独特而引人注目的角色。与 HTML 元素不同，SVG 元素不受 CSS 盒模型的拘束，这为元素的定位和转换带来一系列挑战。初次接触这个独特的世界可能让你感到复杂，但当你深入了解 SVG 坐标系统的原理后，你会发现操作 SVG 元素变得更加直观和合理。"}),"\n",(0,d.jsxs)(n.p,{children:["今天，我们将一同踏上这场有关于 SVG 坐标系统的奇妙之旅。我们将深入研究三个至关重要的 SVG 属性，它们像导航灯一样引领着 SVG 坐标系统的方向：视口（Viewport）、视图框（",(0,d.jsx)(n.code,{children:"viewBox"}),"）和保持宽高比（",(0,d.jsx)(n.code,{children:"preserveAspectRatio"}),"）。通过对这些属性的深入理解，你将能够更加灵活地掌握 SVG 元素的位置和变换，为创造出更为丰富多彩的图形打下坚实基础。"]}),"\n",(0,d.jsx)(n.p,{children:"在这节课中，我们将揭开 SVG 坐标系统的神秘面纱，解析这个视觉奇迹背后的工作原理。不仅将告诉你“怎么做”，更会解释“为什么这样做”。相信通过深入了解 SVG 坐标系统，你将能够释放创造力，设计出令人惊叹的图形，为你的项目注入全新的生机。"}),"\n",(0,d.jsx)(n.p,{children:"让我们一同踏上这场关于 SVG 坐标系统的探索之旅，开启属于你的创意冒险。"}),"\n",(0,d.jsxs)(n.h2,{id:"svg-坐标系统",children:["SVG 坐标系统",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#svg-坐标系统",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["了解一些 ",(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161621092665131022",target:"_blank",rel:"noopener noreferrer",children:"Web 布局"}),"知识的开发者应该明白，在构建 Web 应用或网站的页面布局时，离不开坐标系统的支持。通常，我们将这个坐标系统称为 Web 坐标系统或 CSS 坐标系统。"]}),"\n",(0,d.jsxs)(n.p,{children:["Web 坐标系统的默认原点位于给定上下文的左上角，即元素盒子的左上角。它包括 ",(0,d.jsx)(n.code,{children:"x"})," 轴（也称为水平轴或内联轴），正值表示向右，负值表示向左；",(0,d.jsx)(n.code,{children:"y"})," 轴（也称为垂直轴或块轴），正值表示向下，负值表示向上。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:F,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"在绘制 SVG 图形时，我们同样依赖于 Web 坐标系统，这个坐标系统也被称为 SVG 坐标系统。值得注意的是，它与所有计算机绘图（比如Canvas）所采用的坐标系统相差无几。不过，SVG 坐标系统与传统的笛卡尔坐标系统有所不同："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:P,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在 SVG 中，坐标系的原点位于画布的左上角，而不是迪卡尔坐标系中的原点。这意味着，在 SVG 中，向右和向下分别是 ",(0,d.jsx)(n.code,{children:"x"})," 轴和 ",(0,d.jsx)(n.code,{children:"y"})," 轴的正方向，而不是传统的向右为 ",(0,d.jsx)(n.code,{children:"x"})," 轴正方向，向上为 ",(0,d.jsx)(n.code,{children:"y"})," 轴正方向。此外，SVG 坐标系的单位可以是像素（",(0,d.jsx)(n.code,{children:"px"}),"）、百分比（",(0,d.jsx)(n.code,{children:"%"}),"）或其它 CSS 支持的长度单位，这使得 SVG 具有更大的灵活性，可以更好地适应不同的设备和屏幕分辨率。"]}),"\n",(0,d.jsx)(n.p,{children:"SVG 将使用不同的坐标系来描述元素的位置和方向。其中，用户坐标系是画布的坐标系，也称为原始坐标系。所有绘制操作都是基于这个坐标系进行的。参考坐标系是在绘制和操作特定图形元素时用来观察和测量的坐标系。它可以帮助我们理解某个元素相对于某个特定参考点的位置和尺寸。通常情况下，一个图形元素会继承其父元素的坐标系，称为前驱坐标系。这些不同的坐标系在 SVG 中发挥着重要的作用，使得我们可以更好地组织和控制图形的布局和样式。"}),"\n",(0,d.jsxs)(n.p,{children:["我们可以通过设置元素的 ",(0,d.jsx)(n.code,{children:"x"})," 和 ",(0,d.jsx)(n.code,{children:"y"})," 属性来控制元素的位置。同时，我们也可以使用 ",(0,d.jsx)(n.code,{children:"transform"})," 属性来对元素进行旋转、缩放和平移等变换操作。这些操作都是基于 SVG 坐标系的，因此了解和掌握 SVG 坐标系对于我们使用 SVG 进行 Web 设计和开发非常重要。"]}),"\n",(0,d.jsx)(n.p,{children:"下面是一个简单的 SVG 示例，演示了 SVG 坐标系统："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="200" height="200" xmlns="http://www.w3.org/2000/svg">\n    \x3c!-- 矩形在用户坐标系统中的位置和大小 --\x3e\n    <rect x="20" y="30" width="50" height="50" fill="blue" />\n\n    \x3c!-- 坐标系统变换，将第二个矩形平移并缩放 --\x3e\n    <g transform="translate(80, 80) scale(1.5)">\n        <rect x="0" y="0" width="50" height="50" fill="red" />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["在这个例子中，第一个矩形在用户坐标系统中具有位置（",(0,d.jsx)(n.code,{children:"20,30"}),"）和大小（",(0,d.jsx)(n.code,{children:"50 x 50"}),"），而第二个矩形位于被变换的坐标系统中，通过平移和缩放进行调整。这演示了 SVG 中坐标系统和变换的基本概念。"]}),"\n",(0,d.jsxs)(n.p,{children:["值得注意的是，SVG 坐标系还支持一些特殊的属性，例如 ",(0,d.jsx)(n.code,{children:"viewBox"})," 和 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 等。这些属性可以帮助我们更好地控制图形的布局和缩放方式，使得我们的 Web 设计更加灵活和易于维护。"]}),"\n",(0,d.jsx)(n.p,{children:"总的来说，SVG 坐标系是一种强大而灵活的工具，可以帮助我们更好地组织和控制图形的布局和样式。通过了解和掌握 SVG 坐标系，我们可以更好地使用 SVG 进行 Web 设计和开发，创造出更加精美和富有创意的 Web 效果。"}),"\n",(0,d.jsxs)(n.h2,{id:"svg-坐标系统的核心概念",children:["SVG 坐标系统的核心概念",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#svg-坐标系统的核心概念",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"理解 SVG 坐标系统是掌握 SVG 的必经之路。要彻底掌握 SVG 坐标系统，那么它的几个核心概念（或术语）必须要有所了解。在构建可伸缩矢量图形的过程中，SVG 坐标系统发挥着关键作用，为开发者提供了灵活且强大的工具。这个坐标系统并非只是简单的数学概念，而是一系列互相关联的元素，包括用户坐标系统、视窗坐标系统、坐标单位、变换以及默认原点等。只有理解这些关键概念，我们才能够更加巧妙地操控 SVG，创造出适应不同屏幕尺寸和展示要求的矢量图形，为用户呈现出更加生动、交互且具有吸引力的视觉体验。"}),"\n",(0,d.jsxs)(n.h3,{id:"svg-画布",children:["SVG 画布",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#svg-画布",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"画布是 SVG 内容绘制的空间或区域。从概念上来说，这个画布在两个维度上都是无限的，因此 SVG 可以拥有任意的大小。然而，在屏幕上的呈现实际上是相对于一个有限区域，被称为视口（Viewport）。SVG 的内容可能超出视口的边界，但超出部分将被剪切并变得不可见。这种设计使得 SVG 具备了灵活性，可以创建适合各种屏幕尺寸和布局的图形，同时确保只有视口内的内容可见。"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:D,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"如上图所示，SVG 的内容超出视口部分变得不可见（上图中较暗区域）。"}),"\n",(0,d.jsxs)(n.h3,{id:"视口viewport",children:["视口（Viewport）",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#视口viewport",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"视口又被称为视窗。通常指的是当前可见的计算机图形区域。例如，我们熟悉的 Web 浏览器的显示区域："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:O,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"如上图所示，图中的阴影部分被称为浏览器的视口，即用户在 Web 浏览器中可见的区域。通常，这个区域与浏览器窗口的大小相对应，但并不包括浏览器的UI元素，比如地址栏、标签栏等。Web 开发者可以通过使用 CSS 和 JavaScript 来精准地控制和响应视口的尺寸和变化，从而提供更出色的用户体验，尤其是在移动设备上。"}),"\n",(0,d.jsxs)(n.p,{children:["在 SVG 的领域中，存在一个十分关键的概念，即 ",(0,d.jsx)(n.strong,{children:"SVG 视口（Viewport）"})," 。简单地说，SVG 视口是指 SVG 图形可见的区域。想象一下，就好比我们日常生活中使用的相框，这个相框的大小就是 SVG 视口的大小，即你能够直接观察到的范围。无论相片的尺寸有多大，你实际能够看到的范围都受到这个相框的限制。换句话说，SVG 视口的大小决定了你在相框内所能观察到的 SVG 图形（相片）的区域。这种类比帮助我们理解 SVG 视口是一种确定可见范围的关键概念。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:E,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"你用来装裱相片的相框肯定不是统一尺寸的，它有大有小。同样，SVG 的视口也是有大小差异的。换言之，在 Web 开发过程中，我们可以通过设定 SVG 视口的尺寸来调整这个相框的大小，就像你调整相框以适应不同尺寸相片一样。这种灵活性让我们能够根据需要优雅地呈现 SVG 图形，创造出更具吸引力和适应性的用户体验。"}),"\n",(0,d.jsxs)(n.p,{children:["实际上，每当你创建一个新的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素时，它都会在当前视口内部创建一个新的视口和坐标系统。要设置 SVG 视口的大小，可以通过在最外层的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上指定 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 属性："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600">\n    \x3c!-- SVG 内容绘制到 SVG 画布上 --\x3e\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["在SVG中，值可以带有或不带有单位标识符。无单位的值被认为是在用户空间中以用户单位指定的。如果值是以用户单位指定的，那么该值被假定等于相同数据的 ",(0,d.jsx)(n.code,{children:"px"})," 单位。因此，在上述例子中，SVG 视口的尺寸是 ",(0,d.jsx)(n.code,{children:"800px x 600px"}),"。你也可以使用 CSS 支持的长度单位来指定值，例如 ",(0,d.jsx)(n.code,{children:"em"}),"、",(0,d.jsx)(n.code,{children:"0%"}),"、",(0,d.jsx)(n.code,{children:"px"})," 等。"]}),"\n",(0,d.jsxs)(n.p,{children:["你也可以使用 CSS 来调整 SVG 视口的大小和位置，就像处理其他 HTML 元素一样。这非常便利，因为它允许你使用 ",(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161621092560273439",target:"_blank",rel:"noopener noreferrer",children:"Flexbox"})," 和 ",(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7161370789680250917/section/7161372229123440648",target:"_blank",rel:"noopener noreferrer",children:"Grid"})," 等 ",(0,d.jsx)(n.a,{href:"https://s.juejin.cn/ds/iFhwxCat/",target:"_blank",rel:"noopener noreferrer",children:"Web 布局技术"}),"来创建响应式的 SVG 图形。由于 SVG 图形可以在不失真的情况下缩放，你可以在所有屏幕分辨率上使用相同的图形！"]}),"\n",(0,d.jsxs)(n.p,{children:["请注意，使用 CSS 设置 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 将会覆盖 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素标签上定义的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"}),"。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600">\n    \x3c!-- SVG 内容绘制到 SVG 画布上 --\x3e\n</svg>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"svg {\n    width: 1024px;\n    height: 768px;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:z,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["此时，SVG 视口的尺寸是 ",(0,d.jsx)(n.code,{children:"1024px x 768px"}),"。另外，建议你习惯性地在 ",(0,d.jsx)(n.code,{children:"<svg>"})," 定义 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 属性值，以使 SVG 具有隐式尺寸，避免在某些场景下 SVG 不在页面上呈现。"]}),"\n",(0,d.jsxs)(n.p,{children:["需要了解的是，无论以何种方式为最外层的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置了宽度和高度，浏览器都将创建一个初始视口坐标系统和一个初始用户坐标系统。"]}),"\n",(0,d.jsxs)(n.p,{children:["请注意，整个 SVG 画布或其部分是否可见取决于画布的大小和 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的取值。目前，你无需过多担心这些问题，我们将在后续的内容中对其进行详细阐述。"]}),"\n",(0,d.jsxs)(n.h3,{id:"viewbox-属性",children:["viewBox 属性",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#viewbox-属性",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["在前面的课程中，许多示例中的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素除了显式设置了 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 属性外，还包含了一个 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="200" height="200" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg">\n    <title> CodePen Logo</title>\n    <path d="M512 42.666667c10.538667 0 20.224 3.84 27.648 10.154666 1.365333 0.768 2.773333 1.621333 4.096 2.56l419.413333 293.674667 0.768 0.554667c1.024 0.768 2.005333 1.536 2.986667 2.389333l-3.754667-2.986667a43.093333 43.093333 0 0 1 13.525334 15.616l0.298666 0.597334A42.496 42.496 0 0 1 981.333333 384v256a42.666667 42.666667 0 0 1-22.357333 37.546667 36.992 36.992 0 0 1-3.114667 2.389333l-419.413333 293.674667-0.341333 0.256a42.368 42.368 0 0 1-3.328 2.048l-0.853334 0.512a27.52 27.52 0 0 1-0.554666 0.256l-0.597334 0.298666a42.453333 42.453333 0 0 1-19.925333 4.352H512a42.794667 42.794667 0 0 1-18.773333-4.352l-0.597334-0.298666-0.341333-0.170667a42.752 42.752 0 0 1-4.053333-2.389333l-0.426667-0.298667a43.306667 43.306667 0 0 1-0.298667-0.213333l-419.413333-293.674667-3.072-2.389333A42.666667 42.666667 0 0 1 42.666667 640V384c0-6.741333 1.578667-13.098667 4.352-18.773333l0.298666-0.597334a42.538667 42.538667 0 0 1 13.525334-15.573333l419.413333-293.674667 4.096-2.56A42.496 42.496 0 0 1 512 42.666667zM329.173333 564.053333L190.293333 661.290667l279.04 195.413333V662.186667l-140.16-98.133334z m365.610667 0L554.666667 662.186667v194.474666l278.997333-195.370666-138.88-97.237334zM896 423.168L769.152 512 896 600.789333V423.168zM128 423.210667v177.536l126.762667-88.789334L128 423.210667z m384 12.842666L403.541333 512l108.416 75.904 108.458667-75.946667L512 436.053333z m-42.666667-268.885333L190.208 362.624l138.965333 97.28L469.333333 361.728v-194.56z m85.333334 0.042667v194.56l140.117333 98.133333 138.922667-97.28L554.666667 167.210667z" fill="#666666" />\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 属性的作用就像是在告诉 SVG 画布，你想把一组图形拉伸或缩小，以便它们能够完美适应到特定的容器中。用谷歌地图来形容：视口（Viewport）规定地图在屏幕上的尺寸，而 ",(0,d.jsx)(n.code,{children:"viewBox"})," 则决定你在地图上看到的哪一部分以及缩放的程度："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:X,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在前文中，我们提到，一旦为 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置了 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 属性，浏览器就会建立一个初始的视口坐标系统（Viewport Coordinate System）和一个初始的用户坐标系统（User Coordinate System）。"]}),"\n",(0,d.jsxs)(n.p,{children:["一般而言，我们对视口坐标系统更加熟悉，因为它与我们在 Web 上常见的坐标系统相同。通常情况下，在这个坐标系统中，",(0,d.jsx)(n.code,{children:"1px"})," 就是 ",(0,d.jsx)(n.code,{children:"1px"}),"，这个坐标系统相对来说是相对固定的。然而，对于用户坐标系统，情况就有所不同。因为它才是 SVG 中真实的坐标系统，专门用于在 SVG 画布上绘制 SVG 图形。这个坐标系统可以比视口大或小，也可以完全或部分地显示在视口内（想象一下谷歌地图的情景）。因此，用户坐标系统常常又被称为 SVG 坐标系统（SVG Coordinate System）、当前坐标系统（The Current Coordinate System）或视图框坐标系统（viewBox Coordinate System）。"]}),"\n",(0,d.jsxs)(n.p,{children:["通常情况下，用户坐标系和视口坐标系是相同的。这是因为我们没有特别指定它们之间的区别。因此，SVG 元素的定位和绘制看起来就像是相对于视口坐标系进行的一样。当我们创建一个视口坐标系（即在 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素中指定了宽度和高度）时，浏览器会自动创建一个与视口坐标系相同的默认用户坐标系。"]}),"\n",(0,d.jsxs)(n.p,{children:["在 SVG 中，我们可以通过使用 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性来定义自己的用户坐标系统。如果所选择的用户坐标系统与视口坐标系统的宽高比相同，它将被拉伸以填充整个视口区域。然而，如果所选择的用户坐标系统与视口坐标系统的宽高比不同，可以使用 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性来指定整个系统是否在视口内可见，并且还可以用它来指定用户坐标系统在视口内的位置。"]}),"\n",(0,d.jsxs)(n.p,{children:["换句话说，视口坐标系统（Viewport，即 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"}),"）与用户坐标系统（",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"<viewBox>"}),"）是相互关联的。",(0,d.jsx)(n.a,{href:"https://2019.wattenberger.com/guide/scaling-svg",target:"_blank",rel:"noopener noreferrer",children:"@Wattenberger 制作了一幅富有形象的望远镜和星空效果"}),"，生动地解释了视口坐标系统与用户坐标系统之间的关系："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:C,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["URL：",(0,d.jsx)(n.a,{href:"https://2019.wattenberger.com/guide/scaling-svg",target:"_blank",rel:"noopener noreferrer",children:"https://2019.wattenberger.com/guide/scaling-svg"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在上图中，望远镜默认采用了普通的缩放级别，其中一个“单位”等同于一个像素。一旦我们设定了外部宽度和高度（即 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"}),"），就可以对望远镜进行缩放（使用 ",(0,d.jsx)(n.code,{children:"viewBox"}),"）："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"x"})," 和 ",(0,d.jsx)(n.code,{children:"y"})," 设置了视图框左上角的位置，调整这些值将使我们的视图发生平移。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 设置了在视图框内可见的“单位”数量，调整这些值将产生视图的缩放效果。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["稍后，我们将详细探讨 ",(0,d.jsx)(n.code,{children:"viewBox"})," 如何使用，以及它对 SVG 绘制所产生的影响！"]}),"\n",(0,d.jsxs)(n.h3,{id:"preserveaspectratio-属性",children:["preserveAspectRatio 属性",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preserveaspectratio-属性",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性是 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的一项重要功能，用于控制 SVG 中的 ",(0,d.jsx)(n.code,{children:"viewBox"})," 在视口中的缩放和定位。这个属性主要用来确保图形在缩放时能够保持宽高比一致。通过 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"}),"，你可以定义三个关键方面：是均匀缩放还是拉伸、整个 ",(0,d.jsx)(n.code,{children:"viewBox"})," 是否完全可见、以及 ",(0,d.jsx)(n.code,{children:"viewBox"})," 在视口内的对齐方式。"]}),"\n",(0,d.jsxs)(n.p,{children:["想象一下生活中的相框和照片。把 SVG 的视口（视口坐标系统）看作是相框，而 ",(0,d.jsx)(n.code,{children:"viewBox"}),"（相当于用户坐标系统）是照片。照片可能大可能小，可能和相框匹配，也可能不匹配，这就需要你决定照片如何放置在相框内。如果照片大小和相框一致，一切都很顺利，装裱起来效果也很完美。但如果照片比相框大或小，就需要考虑如何摆放照片，以确保令人满意。这意味着，",(0,d.jsx)(n.code,{children:"viewBox"})," 不仅控制照片大小，还控制照片在相框内的位置。"]}),"\n",(0,d.jsxs)(n.p,{children:["有时候会遇到一个头疼的问题，如果你的照片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）宽高比与相框（视口）的不同，那么尽管你重新调整了照片的尺寸，也难以确保它和相框完美匹配，因为它们的比例不同。在这种情况下，如果硬要把照片塞进相框，可能会导致照片变形。为了避免这种问题，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 就变得尤为重要了，它允许你强制保持照片的均匀缩放，同时保持宽高比，还可以指定照片在相框内的位置。"]}),"\n",(0,d.jsxs)(n.p,{children:["在 SVG 的世界中，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 提供了对 ",(0,d.jsx)(n.code,{children:"viewBox"})," 缩放和定位的精细控制。这种灵活性让 SVG 图形能够适应不同的显示设备、分辨率和视口尺寸，同时确保图形的宽高比得以保持。通过调整 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 中的参数，Web 开发者可以优化 SVG 图形的呈现效果，确保在各种情境下都能获得最佳的可视化效果。关于如何使用它，我们稍后会结合实例向大家展示，让你更深入地了解 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 在 SVG 中的功能和作用。"]}),"\n",(0,d.jsxs)(n.h3,{id:"用户单位",children:["用户单位",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#用户单位",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["在SVG中，用户单位是一种抽象的长度度量，表示图形中相对长度的标准。用户单位是相对于用户坐标系统的，该坐标系统定义了 SVG 图形的绘制空间。引入用户单位的主要目的是为了解决在不同输出格式和设备上显示图形时的尺寸问题。与具体的物理长度单位（如 ",(0,d.jsx)(n.code,{children:"px"}),"、",(0,d.jsx)(n.code,{children:"mm"})," 等）不直接相关，而是相对于当前SVG文档和环境而言。"]}),"\n",(0,d.jsxs)(n.p,{children:["当 SVG 元素未明确指定单位时，它们将被解释为用户单位。例如，如果在 SVG 中定义一个矩形，指定其宽度为 ",(0,d.jsx)(n.code,{children:"100"}),"，而没有指定单位，该值将被解释为用户单位："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="200" height="200">\n    <rect x="10" y="10" width="100" height="50" />\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["在上述示例中，矩形的宽度被指定为",(0,d.jsx)(n.code,{children:"100"}),"，高度被指定为 ",(0,d.jsx)(n.code,{children:"50"})," ，表示它在用户坐标系统中占用 ",(0,d.jsx)(n.code,{children:"100 x 50"})," 个用户单位的空间。该值根据用户坐标系统的比例进行映射，具体取决于 SVG 元素的父级或整个视口。"]}),"\n",(0,d.jsxs)(n.p,{children:["通常情况下，在 SVG 文档中，",(0,d.jsx)(n.code,{children:"1"})," 个用户单位对应于输出设备（如显示器）上的 ",(0,d.jsx)(n.code,{children:"1"})," 个像素（",(0,d.jsx)(n.code,{children:"px"}),"）。然而，这种比例是可以更改的，否则 SVG 的名字中就不会包含“Scalable”（可缩放）一词。类似于 CSS 可以定义字体的绝对大小和相对大小，SVG 也可以定义绝对大小（例如使用 ",(0,d.jsx)(n.code,{children:"pt"})," 或 ",(0,d.jsx)(n.code,{children:"cm"})," 单位）。同时，SVG 也可以使用相对大小，只需提供数字而不标明单位，输出时将采用用户单位。"]}),"\n",(0,d.jsxs)(n.p,{children:["在没有进一步规范说明的情况下，SVG 中的用户单位通常以像素（",(0,d.jsx)(n.code,{children:"px"}),"）为基准，因为一般来说，",(0,d.jsx)(n.code,{children:"1"})," 个用户单位被定义为 ",(0,d.jsx)(n.code,{children:"1px"}),"。要明确更改这种设置，SVG 提供了多种方法。我们可以从 SVG 的根元素开始："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600">\n    <g class="dog">\n        <path d="..." />\n    </g>\n</svg>    \n'})}),"\n",(0,d.jsxs)(n.p,{children:["上面代码中的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素定义了一个 ",(0,d.jsx)(n.code,{children:"800 x 600"}),"的 SVG 画布，其中 ",(0,d.jsx)(n.code,{children:"1"})," 个用户单位等同于 ",(0,d.jsx)(n.code,{children:"1"})," 个屏幕单位（",(0,d.jsx)(n.code,{children:"1px"}),"）。换句话说，这段代码创建了一个 ",(0,d.jsx)(n.code,{children:"800px x 600px"})," 的 SVG 画布。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600" viewBox="0 0 400 300">\n    <g class="dog">\n        <path d="..." />\n    </g>\n</svg>    \n'})}),"\n",(0,d.jsxs)(n.p,{children:["在这里，SVG 画布的尺寸是 ",(0,d.jsx)(n.code,{children:"800 x 600"}),"（即 ",(0,d.jsx)(n.code,{children:"800px x 600px"}),"）。然而，",(0,d.jsx)(n.code,{children:"viewBox"})," 属性定义了画布上可显示的区域（用户坐标系统）：从 ",(0,d.jsx)(n.code,{children:"(0,0)"})," 点开始，到 ",(0,d.jsx)(n.code,{children:"(400, 300)"})," 点结束，相当于创建了一个 ",(0,d.jsx)(n.code,{children:"400 x 300"})," 的区域。这个 ",(0,d.jsx)(n.code,{children:"400 x 300"})," 的区域将显示在 ",(0,d.jsx)(n.code,{children:"800 x 600"})," 的 SVG 画布上，形成了放大两倍的效果。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:W,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNOxxqm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNOxxqm"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"不难发现，SVG 的用户单位发挥了与“相对性和可伸缩性”以及“输出设备适应性”相关的关键作用："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"相对性和可伸缩性"}),"：用户单位的主要功能在于赋予 SVG 图形相对性和可伸缩性。无论图形显示在何种尺寸的画布上，用户单位能够自动适应，从而维持图形的相对比例。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"输出设备适应性"}),"：用户单位使得 SVG 图形能够在不同的输出设备上自适应，无需显式指定具体的物理单位。这使得SVG图形能够在屏幕、打印机或其他媒体上无缝展示。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.h2,{id:"了解-svg-的-viewport-和-viewbox",children:["了解 SVG 的 Viewport 和 viewBox",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#了解-svg-的-viewport-和-viewbox",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:_,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["SVG 中的 Viewport（视口）和 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性是两个至关重要的概念，它们共同塑造和调整 SVG 图形的呈现和布局。只有深刻理解和熟练掌握它们之间的紧密联系，才能发挥 SVG 的潜力，创作出令人满意的作品。这两者的精妙结合为 Web 设计师和开发者提供了强大的工具，使其能够精确掌控图形在不同环境和尺寸下的展现效果，实现更加灵活和响应式的图形设计。"]}),"\n",(0,d.jsxs)(n.p,{children:["我们继续把 Viewport 想象为相框，",(0,d.jsx)(n.code,{children:"viewBox"})," 想象为相片，如下图所示："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:q,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["上图展示了SVG画布、视口（Viewport）和 ",(0,d.jsx)(n.code,{children:"viewBox"}),"。我们将焦点集中在 SVG 视口和 ",(0,d.jsx)(n.code,{children:"viewBox"})," 这两个要素上。"]}),"\n",(0,d.jsxs)(n.p,{children:["不难发现，相框的大小就是 SVG 视口的大小，也是你的眼睛看得到的范围，它由 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 来决定。当相框的大小决定之后，不管你的相片多大，你能看到的实际范围就是相框的大小，比如上图中的 ",(0,d.jsx)(n.code,{children:"800px x 600px"})," 。"]}),"\n",(0,d.jsxs)(n.p,{children:["当你将相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）装裱到相框（Viewport）中，那么这张相片的大小和位置就很关键了。"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"如果相片和相框尺寸相等，那么效果可以说是堪称完美"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"如果相片比相框小，那么相片就填不满整个区域，你需要考虑相片在相框中的摆放位置，才能达到满意的效果"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"如果相片比相框大，那么相片就会超出相框的区域，你同样需要考虑相片在相框中的摆放位置，才能达到满意效果"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:L,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["因此，",(0,d.jsx)(n.code,{children:"viewBox"})," 除了能够控制相片的大小，还能够决定相片在相框中的摆放方式。换句话说，通过巧妙地组合和调整 Viewport 与 ",(0,d.jsx)(n.code,{children:"viewBox"}),"，你能够实现 SVG 图形在不同大小的容器中自适应显示，同时灵活控制图形的比例和位置。这对于创建具有响应式和可伸缩特性的 SVG 图形至关重要。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:Y,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNOxxqm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNOxxqm"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，上图中的灰色坐标表示了在 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上使用 ",(0,d.jsx)(n.code,{children:'width="800"'})," 和 ",(0,d.jsx)(n.code,{children:'height="600"'})," 建立的视口坐标系，即 SVG 的视口（也就是相框）；而蓝色坐标表示在 SVG 画布上建立的用户坐标系，也就是所有绘图都在此完成，使用 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上的 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性进行设置（也就是相片）。"]}),"\n",(0,d.jsxs)(n.p,{children:["SVG 视口（Viewport）相比于 ",(0,d.jsx)(n.code,{children:"viewBox"})," 要更容易理解，只需要在 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上指定 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 或使用 CSS 为 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置宽高样式，就能定义一个视口的大小："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600">\n    \x3c!-- 视口（相框）的尺寸是 800 x 600 个用户单位，相当于 800px x 600px --\x3e\n</svg>\n'})}),"\n",(0,d.jsx)(n.p,{children:"或者使用 CSS 样式："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"svg {\n    width: 800px;\n    height: 600px;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["然而，SVG 的 ",(0,d.jsx)(n.code,{children:"viewBox"})," 就显得复杂得多，理解它可能需要花费一些精力。接下来，通过实际案例来解释它。"]}),"\n",(0,d.jsxs)(n.p,{children:["在我们进入实际案例之前，让我们先简单地了解一下 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的语法："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'viewBox = "<min-x> <min-y> <width> <height>"\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 属性的值是一个由四个数字 ",(0,d.jsx)(n.code,{children:"<min-x>"}),"、",(0,d.jsx)(n.code,{children:"<min-y>"}),"、",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 组成的列表，它们之间用空格和 ",(0,d.jsx)(n.code,{children:"/"})," 或逗号分隔。这些值会使浏览器自动提供适当的变换矩阵，将指定的用户坐标系中的矩形区域映射到指定区域的边界（通常是 SVG 视口）。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 的值确定了 viewBox（用户坐标系统）的左上角，",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 确定了该 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的尺寸。请注意，",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽（",(0,d.jsx)(n.code,{children:"width"}),"）和高（",(0,d.jsx)(n.code,{children:"height"}),"）不需要与父元素 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 相同。 ",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 的负值都是错误的，并使 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性无效。为其中之一设置为 ",(0,d.jsx)(n.code,{children:"0"})," ，将会禁用元素的渲染。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 属性并不仅仅适用于 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素，你还可以在 SVG 的 ",(0,d.jsx)(n.code,{children:"<marker>"}),"、",(0,d.jsx)(n.code,{children:"<pattern>"}),"、",(0,d.jsx)(n.code,{children:"<symbol>"})," 和 ",(0,d.jsx)(n.code,{children:"<view>"})," 元素上使用。"]}),"\n",(0,d.jsxs)(n.p,{children:["需要知道的是，如果对一个元素同时应用 ",(0,d.jsx)(n.code,{children:"transform"}),"（或 ",(0,d.jsx)(n.code,{children:"patternTransform"}),"）和 ",(0,d.jsx)(n.code,{children:"viewBox"}),"，就会建立两个新的坐标系统。",(0,d.jsx)(n.code,{children:"transform"})," 为该元素建立第一个坐标系统，而 ",(0,d.jsx)(n.code,{children:"viewBox"})," 为该元素的所有子元素建立第二个坐标系统。第一个坐标系统会与第二个坐标系统相乘。"]}),"\n",(0,d.jsxs)(n.p,{children:["与 ",(0,d.jsx)(n.code,{children:"transform"})," 属性不同的是，由于 ",(0,d.jsx)(n.code,{children:"viewBox"})," 导致的自动变换不会直接影响具有 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的元素上的 ",(0,d.jsx)(n.code,{children:"x"}),"、",(0,d.jsx)(n.code,{children:"y"}),"、",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 属性。换句话说，在 ",(0,d.jsx)(n.code,{children:"viewBox"})," 变换应用之前，这些属性表示坐标系中的值。然而，与 ",(0,d.jsx)(n.code,{children:"transform"})," 属性一样，它确实为所有其他属性和后代元素建立了一个新的坐标系。这部分涉及到了 SVG 坐标变换相关概念，我们将在后面的课程中再详细介绍。"]}),"\n",(0,d.jsxs)(n.p,{children:["例如，你可以像下面这样，给 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置 ",(0,d.jsx)(n.code,{children:"viewBox"})," ："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600" viewBox="0 0 800 600">\n    \x3c!-- SVG 内容 --\x3e\n</svg>    \n'})}),"\n",(0,d.jsxs)(n.p,{children:["当你已经学会在元素上设置 ",(0,d.jsx)(n.code,{children:"viewBox"}),"，并理解了它的基本作用时，你可以通过一些视觉实例更深入地了解这个概念。简单来说，",(0,d.jsx)(n.code,{children:"viewBox"})," 创建了一个用户坐标系统，允许你通过缩放、平移或裁剪来变换 SVG 图形。然而，仅仅知道这些可能还不够。现在，让我们通过一些直观的例子来深化你对 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的理解。"]}),"\n",(0,d.jsxs)(n.p,{children:["我们将从一个高宽比相同的例子开始，这意味着 ",(0,d.jsx)(n.code,{children:"viewBox"})," 和视口的宽高比相等，暂时不需要考虑 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"}),"。"]}),"\n",(0,d.jsxs)(n.h3,{id:"相片viewbox等于相框viewport",children:["相片（viewBox）等于相框（Viewport）",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相片viewbox等于相框viewport",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["让我们首先考虑相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）与相框（Viewport）尺寸相等的情况。在 SVG 中，有两种情况下相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）和相框（Viewport）的大小会相等："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'\x3c!-- 情景一：未显式给 svg 元素设置 viewBox --\x3e\n<svg width="800" height="600">\n    <g class="dog">\n        <path d="..." />\n    </g>\n</svg>\n\n\x3c!-- 情景二：显示给 svg 元素设置 viewBox，并且 width 、height 与 svg 元素的 width 和 height 相等 --\x3e\n<svg width="800" height="600" viewBox="0 0 800 600">\n    <g class="dog">\n        <path d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["在第二个情景中，",(0,d.jsx)(n.code,{children:'viewBox="0 0 800 600"'})," 使得相片的原点、大小与 SVG 视口（Viewport）相同。因此，当我们将“小狗”的相片放入相框（SVG 视口）后，它会自动填充整个相框。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:N,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWmrqdW",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWmrqdW"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"相片viewbox小于相框viewport",children:["相片（viewBox）小于相框（Viewport）",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相片viewbox小于相框viewport",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["通过给 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置 ",(0,d.jsx)(n.code,{children:"viewBox"})," ，我们可以进一步放大或缩小我们的相片，其的原则是，",(0,d.jsx)(n.code,{children:"viewBox"})," 会自动尽可能去填充满相框（Viewport）。我们将从一个简单的例子开始。在这个例子中，",(0,d.jsx)(n.code,{children:"viewBox"})," （相片）的尺寸是视口（相框）的大小的一半。在这个例子中，不会更改 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的原点，因此它的 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 的值都设置为 ",(0,d.jsx)(n.code,{children:"0"})," ，它的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 分别是 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 的一半（相片的宽高将是视口宽高的一半）。"]}),"\n",(0,d.jsxs)(n.p,{children:["通过为 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素设置 ",(0,d.jsx)(n.code,{children:"viewBox"}),"，我们可以灵活地放大或缩小图形，原则是 ",(0,d.jsx)(n.code,{children:"viewBox"})," （相片）会自动尽可能填满视口（相框）。让我们从一个简单的例子开始。在这个例子中，",(0,d.jsx)(n.code,{children:"viewBox"}),"（相片）的尺寸是视口（相框）大小的一半。在这种情况下，",(0,d.jsx)(n.code,{children:"viewBox"})," 的原点不会改变，因此 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 的值都设置为 ",(0,d.jsx)(n.code,{children:"0"}),"，而 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 分别是 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 的一半（相片的宽高是视口宽高的一半）。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600" viewBox="0 0 400 300">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["上述代码中的 ",(0,d.jsx)(n.code,{children:'viewBox="0 0 400 300"'})," 指定了画布的特定区域，从左上角的 ",(0,d.jsx)(n.code,{children:"(0,0)"})," 点到 ",(0,d.jsx)(n.code,{children:"(400,300)"})," 点。接着，SVG 图形被裁剪到该区域，并且该区域会被放大以填充整个视口。换言之，通过设置 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性，我们将 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的大小设定为 ",(0,d.jsx)(n.code,{children:"400 x 300"}),"。当相片的尺寸比相框小时，它会在原始相片上裁切一小块区域（这里是 ",(0,d.jsx)(n.code,{children:"400 x 300"}),"），然后将其调整到填满整个视口的大小（",(0,d.jsx)(n.code,{children:"800 x 600"}),"）。这意味着，这个 ",(0,d.jsx)(n.code,{children:"400 x 300"})," 的区域将显示在 ",(0,d.jsx)(n.code,{children:"800 x 600"})," 的 SVG 画布上，形成了放大两倍的效果。"]}),"\n",(0,d.jsx)(n.p,{children:"该过程的分解如下图所示："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:R,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["你可以尝试点击下面示例中的复选框，来查看 ",(0,d.jsx)(n.code,{children:'viewBox = "0 0 800 600"'})," 到 ",(0,d.jsx)(n.code,{children:'viewBox="0 0 400 300"'})," 的视觉化："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:A,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/wvZWaVG",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/wvZWaVG"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"相片viewbox大于相框viewport",children:["相片（viewBox）大于相框（Viewport）",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相片viewbox大于相框viewport",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）尺寸大于相框（Viewport），指的是 ",(0,d.jsx)(n.code,{children:"viewBox"})," 设置的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 大于 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"})," 。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600" viewBox="0 0 1600 1200">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="0 0 1600 1200"'})," 会先把相片的底图放大到 ",(0,d.jsx)(n.code,{children:"1600 x 1200"})," ，但是图案大小不变，然后再尽可能的将相片塞到相框中（",(0,d.jsx)(n.code,{children:"800 x 600"}),"）:"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:k,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["正如你所看到的，相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）要缩小才能放入到相框中。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:y,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ZEZOQzP",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ZEZOQzP"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"设置-viewbox-的坐标原点",children:["设置 viewBox 的坐标原点",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#设置-viewbox-的坐标原点",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）不仅能够调整大小，还能够在相框（Viewport）中调整自身的位置。在介绍 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性时，我将带有 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的 SVG 画布类比成谷歌地图。就像在谷歌地图中一样，你可以对画布进行缩放（改变 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 值），从而聚焦到特定的区域。除此之外，你还可以拖动地图（调整 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值）来查看不同的位置和区域。这个区域将会是唯一可见的部分，而其他地方仍然存在，只不过由于超出了浏览器视口的范围，因此是不可见的——就好像被裁剪掉一样。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:G,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["现在，让我们尝试着更改 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 的值，来调整相片在相框（Viewport）中的位置。",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 可以是任何你想要的数字，你也可以同时修改它们，或者只修改其中一个。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'\x3c!-- 用户坐标系(相片 viewBox)沿着 x 轴向右移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="-200 0 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- 用户坐标系(相片 viewBox)沿着 y 轴向下移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="0 -200 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- 用户坐标系(相片 viewBox)沿着 x 轴和 y 轴向右向下移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="-200 -200 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- 用户坐标系(相片 viewBox)沿着 x 轴向左移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="200 0 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- 用户坐标系(相片 viewBox)沿着 y 轴向上移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="0 200 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- 用户坐标系(相片 viewBox)沿着 x 轴和 y 轴向左向下移动 200 个用户单位 --\x3e\n<svg width="800" height="600" viewBox="200 200 800 600">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:u,alt:"Frame 822.jpg"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ExJyKgX",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ExJyKgX"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"注意，上图中被移出相框的图像会被裁剪掉。"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:M,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在这一点上需要注意，为 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 指定非零值会对图形产生变换效果，具体而言，就像 SVG 画布被平移了："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="-200 0 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 值为 ",(0,d.jsx)(n.code,{children:"-200"})," ，SVG 画布向右平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(200 0)"'})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="0 -200 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值为 ",(0,d.jsx)(n.code,{children:"-200"})," ，SVG 画布向下平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(0 200)"'})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="-200 -200 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值都为 ",(0,d.jsx)(n.code,{children:"-200"})," ，SVG 画布同时向右向下平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，有点类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(200 200)"'})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="200 0 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 值为 ",(0,d.jsx)(n.code,{children:"200"})," ，SVG 画布向左平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(-200 0)"'})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="0 200 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值为 ",(0,d.jsx)(n.code,{children:"200"})," ，SVG 画布向上平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(0 -200)"'})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'viewBox="200 200 800 600"'})," 中 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值都为 ",(0,d.jsx)(n.code,{children:"200"})," ，SVG 画布同时向左向上平移了 ",(0,d.jsx)(n.code,{children:"200"})," 个用户单位，有点类似于 ",(0,d.jsx)(n.code,{children:'transform = "translate(-200 -200)"'})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["实际上，正如规范所述，",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的效果是，用户代理会自动提供适当的变换矩阵，将用户空间中指定的矩形映射到指定区域的边界（通常是视口）。这只是一种技术术语，用于表达之前提到的概念：“图形被裁剪，然后缩放以适应视口”。规范接着补充说明：“在某些情况下，用户代理可能需要提供平换以及缩放变换”。如上面例子所示，在最外层的 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上，如果 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性为 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 或 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 指定了非零值，则可能需要进行平移变换；如果 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性为 ",(0,d.jsx)(n.code,{children:"<width>"})," 或 ",(0,d.jsx)(n.code,{children:"<height>"})," 指定了与 ",(0,d.jsx)(n.code,{children:"<svg>"})," 的 ",(0,d.jsx)(n.code,{children:"width"})," 或 ",(0,d.jsx)(n.code,{children:"height"})," 值，则可能需要进行缩放变换。"]}),"\n",(0,d.jsxs)(n.p,{children:["请注意，它与 ",(0,d.jsx)(n.code,{children:"transform"})," 属性有所不同，有关此部分内容的详细解释将留待我们在 SVG 坐标变换讨论中深入探讨。"]}),"\n",(0,d.jsxs)(n.h3,{id:"设置-viewbox-造成的影响",children:["设置 viewBox 造成的影响",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#设置-viewbox-造成的影响",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["注意到了吗？在 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的四个值中，",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 就像是控制位移的魔术师，类似于 CSS 变换中的 ",(0,d.jsx)(n.code,{children:"translate"}),"，可以让相片在相框中轻松上下左右移动；而 ",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 充当了缩放的调节器，就像是 CSS 变换中的 ",(0,d.jsx)(n.code,{children:"scale"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["然而，有趣的是，它的视觉效果与我们熟知的 CSS 变换中的位移和缩放完全相反。例如，当你将 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 设置为正值时，相片会往相框的左上方移动，反之，设为负值则往右下方移动。同样，增大 ",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"})," 的值实际上导致了缩小的效果，而减小则呈现放大的效果。这样的设计或许有些反直觉，但也为 SVG 创造了更丰富的变换可能性。"]}),"\n",(0,d.jsxs)(n.p,{children:["造成这种影响，都是因为 ",(0,d.jsx)(n.code,{children:"viewBox"})," 实际上影响的是 SVG 中的用户坐标系统，所以才会和你的直觉有相反的效果。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:V,alt:""})}),"\n",(0,d.jsxs)(n.h2,{id:"preserveaspectratio-使用",children:["preserveAspectRatio 使用",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preserveaspectratio-使用",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["到目前为止，所有演示示例的效果都建立在相框（Viewport）和相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）具有相等宽高比的条件之上。那么，如果相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）和相框（Viewport）的宽高比不同，会出现怎样的效果呢？比如，设定相框的宽高为 ",(0,d.jsx)(n.code,{children:"800 x 600"}),"，对应的宽高比为 ",(0,d.jsx)(n.code,{children:"4:3"}),"；同时将相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）的宽高设定为 ",(0,d.jsx)(n.code,{children:"600 x 300"}),"，其宽高比为 ",(0,d.jsx)(n.code,{children:"2:1"}),"。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'\x3c!-- Viewport 和 viewBox 的宽高比相等，都是 4:3 --\x3e\n<svg width="800" height="600" viewBox="0 0 400 300">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n\n\x3c!-- Viewport 和 viewBox 的宽高比不相等，前者是 4:3, 后者是 2: 1 --\x3e\n<svg width="800" height="600" viewBox="0 0 600 300">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsx)(n.p,{children:"这个时候，你将看到的效果如下："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:S,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/PogzGQe",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PogzGQe"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"你可以通过下面这个交互式案例动态查看，在宽高比不相等的情况下，SVG 的视觉效果有何差异："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:B,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNOxxqm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNOxxqm"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在 SVG 中，我们知道用户坐标系（相片，",(0,d.jsx)(n.code,{children:"viewBox"}),"）及图形定位都是在视口（相框）内的，这是为了确保以下几点："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["整个相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）都填充在相框（Viewport）内。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["保持相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）的宽高比，确保相片填充在相框内时不会被拉伸或变形。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["相片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）在相框内的垂直和水平方向上居中。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["这是默认行为。那么，是什么控制了这种行为呢？如果我们想要更改视口内 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的位置，该如何操作？这就是 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性发挥作用的地方。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性在 SVG 中扮演着关键角色，用于定义图形（相片，",(0,d.jsx)(n.code,{children:"viewBox"}),"）在视口（相框）中的位置和缩放行为。这一属性不仅掌控了 SVG 图形的尺寸，还包括了对齐和裁剪的处理。"]}),"\n",(0,d.jsxs)(n.p,{children:["通过 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"}),"，你能够灵活地调整 SVG 图形的显示方式。它提供了对 ",(0,d.jsx)(n.code,{children:"viewBox"})," 统一缩放的控制，确保图形在不同的视口尺寸下保持一致的比例。同时，你还能够指定图形在视口中的对齐方式，让你的SVG图形按照你的期望进行展示，不再局限于默认的居中对齐。"]}),"\n",(0,d.jsxs)(n.p,{children:["总体而言，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 是一个强大的SVG属性，让你能够更精细地掌控图形在不同情境下的呈现效果，确保你的 SVG 图形无论在何种尺寸的视口下都能够以最佳方式展现。"]}),"\n",(0,d.jsxs)(n.p,{children:["在深入探讨 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 如何精准控制图形在视口中的定位和缩放之前，我们首先来了解一下它的语法。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"preserveAspectRatio = <align> <meetOrSlice>?\n\n<align> = none | xMinYMin | xMidYMin | xMaxYMin | xMinYMid | xMidYMid | xMaxYMid | xMinYMax | xMidYMax | xMaxYMax\n\n<meetOrSlice> = meet | slice\n"})}),"\n",(0,d.jsxs)(n.p,{children:["它的值由一个或两个关键字组成：其中 ",(0,d.jsx)(n.code,{children:"<align>"})," 是必选值， ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 是可选值。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性和 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性有一些相似之处，除了可以用于 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素外，还适用于 ",(0,d.jsx)(n.code,{children:"<feImage>"}),"、",(0,d.jsx)(n.code,{children:"<image>"}),"、",(0,d.jsx)(n.code,{children:"<marker>"}),"、",(0,d.jsx)(n.code,{children:"<pattern>"}),"、",(0,d.jsx)(n.code,{children:"<symbol>"})," 和 ",(0,d.jsx)(n.code,{children:" <view>  "}),"等元素。但是，在不同的元素上应用时，它们的作用略有不同："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["对于 ",(0,d.jsx)(n.code,{children:"<svg>"})," 、",(0,d.jsx)(n.code,{children:"<marker>"}),"、",(0,d.jsx)(n.code,{children:"<pattern>"}),"、",(0,d.jsx)(n.code,{children:"<symbol>"})," 和 ",(0,d.jsx)(n.code,{children:"<view>"})," 等元素，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 表示是否必须执行统一缩放以适应元素视口。对于这些元素，如果未提供 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性，则 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 将被忽略。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["对于 ",(0,d.jsx)(n.code,{children:"<feImage>"})," 和 ",(0,d.jsx)(n.code,{children:"<image>"})," 元素，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 定义了引用图像应该如何适应这些元素定义的矩形框。",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 指示引用图像在参考矩形框方面应该如何适应，以及引用图像的宽高比是否应保持相对于当前用户坐标系统。有关这方面的详细信息，本小册后面将专门进行阐述。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["注意，在这里我们只会涉及到 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 在 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素上的应用。"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["接下来，我们一起来探讨一下 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的 ",(0,d.jsx)(n.code,{children:"<align>"})," 值和 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 值的功能，先从 ",(0,d.jsx)(n.code,{children:"<align>"})," 值开始。"]}),"\n",(0,d.jsxs)(n.h3,{id:"对齐align值",children:["对齐（",(0,d.jsx)(n.code,{children:"<align>"}),"）值",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#对齐align值",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的 ",(0,d.jsx)(n.code,{children:"<align>"})," 值决定了是否进行统一缩放以及如何对齐 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的轴和视口的轴，当 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽高比与视口的宽高比不匹配时。它的值可以是 ",(0,d.jsx)(n.code,{children:"none"}),"、",(0,d.jsx)(n.code,{children:"xMinYMin"}),"、",(0,d.jsx)(n.code,{children:"xMidYMin"}),"、",(0,d.jsx)(n.code,{children:"xMaxYMin"}),"、",(0,d.jsx)(n.code,{children:"xMinYMid"}),"、",(0,d.jsx)(n.code,{children:"xMidYMid"}),"、",(0,d.jsx)(n.code,{children:"xMaxYMid"}),"、",(0,d.jsx)(n.code,{children:"xMinYMax"}),"、",(0,d.jsx)(n.code,{children:"xMidYMax"})," 或 ",(0,d.jsx)(n.code,{children:"xMaxYMax"})," 中的一个。除了 ",(0,d.jsx)(n.code,{children:"none"})," 之外的所有值都用于均匀缩放图像，保持其宽高比，并对齐 ",(0,d.jsx)(n.code,{children:"viewBox"})," 在视口内。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"<align>"})," 的工作原理类似于 CSS 的 ",(0,d.jsx)(n.code,{children:"background-position"})," 属性取百分比值的方式。你可以将 ",(0,d.jsx)(n.code,{children:"viewBox"})," 想象成背景图像。不同于 ",(0,d.jsx)(n.code,{children:"background-position"})," 的是，它不是将 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的特定点定位到视口的相应点，而是将 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的特定“轴”与视口相应“轴”对齐。"]}),"\n",(0,d.jsxs)(n.p,{children:["要理解 ",(0,d.jsx)(n.code,{children:"<align>"})," 值的含义，首先需要了解 ",(0,d.jsx)(n.code,{children:"viewBox"})," 和视口中的每个“轴”。简单来说，SVG 视口和 ",(0,d.jsx)(n.code,{children:"viewBox"})," 在横纵两个方向上各有三条特定“轴”："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["横向三条“轴”：",(0,d.jsx)(n.code,{children:"min-x"}),"、",(0,d.jsx)(n.code,{children:"mid-x"})," 和 ",(0,d.jsx)(n.code,{children:"max-x"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["纵向三条“轴”：",(0,d.jsx)(n.code,{children:"min-y"}),"、",(0,d.jsx)(n.code,{children:"mid-y"})," 和 ",(0,d.jsx)(n.code,{children:"max-y"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["这些轴的位置（或定义）与 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的值（",(0,d.jsx)(n.code,{children:"<min-x> <min-y> <width> <height>"}),"）紧密相关。其中，",(0,d.jsx)(n.code,{children:"min-x"})," 和 ",(0,d.jsx)(n.code,{children:"min-y"})," 两个轴分别对应着 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 值。而 ",(0,d.jsx)(n.code,{children:"max-x"})," 和 ",(0,d.jsx)(n.code,{children:"max-y"})," 两个“轴”分别位于："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"max-x"})," 轴位于 ",(0,d.jsx)(n.code,{children:"<min-x> + <width>"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"max-y"})," 轴位于 ",(0,d.jsx)(n.code,{children:"<min-y> + <height>"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["剩下的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 和 ",(0,d.jsx)(n.code,{children:"mid-y"})," 分别位于："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"mid-x"})," 轴位于 ",(0,d.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,d.jsx)(n.code,{children:"<max-x>"})," 轴中间，即 ",(0,d.jsx)(n.code,{children:"<min-x> + (<width> / 2)"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"mid-y"})," 轴位于 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 和 ",(0,d.jsx)(n.code,{children:"<max-y>"})," 轴中间，即 ",(0,d.jsx)(n.code,{children:"<min-y> + (<height> / 2)"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg width="800" height="600" viewBox="0 0 500 500">\n    <g class="dog">\n        <g d="..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:b,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["上图中左侧展示了 SVG 视口的“轴”，右侧则是 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的“轴”。通过理解这些“轴”，我们可以指导 SVG 如何在视口和 ",(0,d.jsx)(n.code,{children:"viewBox"})," 中对齐各自的轴。"]}),"\n",(0,d.jsxs)(n.p,{children:["换句话说，这些轴的对齐方式由 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的 ",(0,d.jsx)(n.code,{children:"<align>"})," 值决定。"]}),"\n",(0,d.jsx)(n.p,{children:"以下面这个 SVG 为例："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg viewBox="0 0 137 137" xmlns="http://www.w3.org/2000/svg" class="ele">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3.57 3.57 0 0 1-3.53-4.21c.03-.16 2.81-16.26-1.86-25.98-2.9-6.02-6.09-7.1-11.86-9.07-2.96-1-6.32-2.15-10.16-4.21-6.43-3.46-9.3-9.67-14.62-14.14C6.35 64.78-5.12 58.74 2.7 47.08c3.32-4.95 9.79-7.45 14.39-7.68a15 15 0 0 1 .73-.02c3.46 0 6.3 1.23 8.58 2.21 1.24.54 2.41 1.04 3.3 1.17.26.04.55.06.86.06.75 0 1.58-.1 2.46-.22 1.05-.14 2.22-.29 3.47-.29.88 0 1.7.07 2.5.23 1.25.23 2.54.47 3.65.47.46 0 .85-.04 1.18-.13.71-.17 1.46-.4 2.19-.64 1.35-.42 2.74-.85 4.29-1.12a11.69 11.69 0 0 1 3.67-.04c-3.42-2.46-6.18-5.5-5.1-9.09 1.29-4.32 6.91-4.82 11.04-4.82 2.1 0 4.53.15 7.23.46.52-4.97.67-13.19.67-13.27a3.6 3.6 0 0 1 2.13-3.21c.47-.21 4.91-2.08 13.6-2.08l2 .03c9.94.32 16.55 2.3 17.27 2.52.68.2 7.3 2.18 15.78 7.36 8.52 5.22 11.6 9.78 11.91 10.28.75 1.16.76 2.67.02 3.84-.5.79-4.58 7.32-6.75 11.51a53.62 53.62 0 0 1 8.14 4.94c1.42 1.09 5.74 4.4 4.49 8.61-1.06 3.55-5.04 4.52-8.7 4.76 1.75 4.74 1.65 9.3-.34 13.36l-.28.55c-1.01 2.05-1.12 2.26-.76 3.83.3 1.33.78 2.68 1.28 4.1.54 1.56 1.1 3.16 1.5 4.89l.26.95.02.08c.3 1.06.81 2.85 1.19 4.4.6 2.4 1.2 4.9-.94 6.5-.4.3-10.27 7.5-32.83 10.21-20.61 2.48-38.93 15.8-39.11 15.93-.63.46-1.36.7-2.13.7" fill="oklch(0.78 0.22 164.22 / 0.91)" />\n        <path d="M94.06 39.45c9.6 2.86 18.12 6.08 24.27 9a32.64 32.64 0 0 1 1.86-4.69c2.25-4.54 7.3-12.57 7.3-12.57s-2.72-4.23-10.77-9.16c-8.39-5.12-14.96-6.98-14.96-6.98s-6.51-2.06-16.34-2.37c-9.43-.3-14.03 1.74-14.03 1.74s-.17 9.48-.8 14.52c-.21 1.77-.59 3.42-.98 4.82 6.65.98 15.23 2.93 24.45 5.69" fill="#322549" />\n        <path d="M132.97 57.14c-1.28 4.27-20.38 2.33-42.65-4.33-22.28-6.66-39.3-15.52-38.02-19.8 1.27-4.27 20.37-2.33 42.65 4.33 22.27 6.66 39.3 15.52 38.02 19.8" fill="#322549" />\n        <path d="M121.36 54.91c-.72 2.42-14.43.45-30.6-4.4-16.19-4.83-28.72-10.7-28-13.11.71-2.41 14.42-.45 30.6 4.39s28.72 10.71 28 13.12" fill="#322549" />\n        <path d="M64.58 37.85c-.54.23-1.06.49-1.56.8-2.73 1.72-4.12 4.6-5.8 7.22-2.09-.94-4.01-1.62-6.32-1.22-2.14.37-4.15 1.19-6.2 1.7-2.03.52-4.28.1-6.37-.3-3.2-.6-6.07.7-9.15.25-3.44-.49-7.02-3.57-11.9-3.33-4.15.22-9.23 2.57-11.6 6.1-2.28 3.4-2.18 11.1 2.82 12.21 2.2.5 3.8-.16 5.23 1.92 4.73 6.83 8.68 14.6 16.12 18.6 10.94 5.87 18.27 3.94 23.54 14.88 5.27 10.95 2.17 28.16 2.17 28.16s18.92-13.97 40.81-16.6c21.9-2.64 31.12-9.53 31.12-9.53.47-.35-1.73-7.56-1.88-8.26-.7-3.06-2.08-5.92-2.78-8.99-.7-3.04.02-4.12 1.31-6.76 2.28-4.64 1.09-9.59-1.4-13.89-2.25-3.9-5.7-7.3-9.94-8.94-7.53-2.9-10.14-3.41-10.14-3.41s-1.22-8.75-15.81-10.57c-5.42-.68-10.78-1.8-16.27-1.3-2 .18-4.11.48-6 1.26" fill="#322549" />\n        <path d="M10.3 60.03s1.22 6.5 2.43 6.5c1.22 0 1.9-6.5 1.9-6.5H10.3" fill="#322549" />\n        <path d="M17.03 49.9c-2.1.63-3.98.5-4.22-.3-.24-.8 1.26-1.96 3.35-2.59 2.1-.63 3.98-.5 4.22.3.24.8-1.26 1.96-3.35 2.59zm70.02 45.77c6.56-2.9 13.2-5.78 19.42-9.36 4.75-2.74 10.49-6.25 13.05-11.3 5.3-10.41-6.67-18.76-15.53-20.42-1.5-.28-12.81-1.72-13.23.85.41-2.54 3.22-3.68 4.56-5.64 2.12-3.07-.87-3.64-3.26-4.67-4.12-1.78-8.4-3.1-12.92-3.19-4.66-.08-8.55.45-12.05 3.88-.62.6-1.43 1.5-1.55 2.35-.35 2.51 4.67 3.29 6.1 2.4a28.4 28.4 0 0 1 10.78-3.73c2.48-.31 5.05-.44 7.46.32.65.21 1.35.46 1.91.85.06.04.48.45.52.45h-4.05s-2.43 3.82-8.1 5.44c-5.68 1.63-13.3-1.62-13.3-1.62s-5.56-2.64-10.58-1.99c-5.03.65-6.13 0-6.13 0v2.4s-2.43-1.63-5.27-2.4c-2.84-.77-6.9-2.67-11.96-1.84-5.07.84-6.09.18-10.75-1.84-4.66-2.01-9.68-1.43-12.57 3.68-2.89 5.12.81 8.4.81 8.4l4.22.11c.92-.06 1.84-.11 2.7-.1.29-1.77 1.12-5.6 3.08-6.55 2.56-1.24 1.36 3 1.63 5 .12.9.31 1.79.48 2.5 3.39 1.27 6.67 3.24 11.2 2.57 5.48-.82 11.36-4.61 16.63-1.7l.22.12c.51-1.15 1.76-3.67 3.03-4 1.66-.44.14 2.27-.13 3.7-.12.63-.2 1.26-.25 1.77.56.31 1.12.62 1.68.9.36-1.35 1.03-3.39 2.04-3.88 1.54-.74.57 2.21.59 3.66 0 .53.03 1.06.07 1.51 2.66 1.14 5.28 1.79 7.96 1.36 5.06-.81 5.83-3.02 13.58.14 2.27.92 4.68 2.99 7.05 3.31 1.5.2 5.88-.06 5.73-2.37.07 1.04.85 1.45.28 2.62-.43.9-1.45 1.45-2.35 1.75-2.72.94-4.85-.69-7.31-1.6-2.72-1.02-5.74-2.78-8.67-3.07-3.65-.37-8.52 2.06-13.38 1.25-4.87-.81-8.92-6.7-15.61-5.88-6.7.81-9.13 4.06-15 2.43-.91-.25-1.73-.52-2.49-.8-.05.2-.1.44-.14.72-.2 1.55.72 4.82-1.26 3.86-1.56-.76-2.2-4.6-2.4-6.2-2.23-1.01-4.22-1.83-7-1.83-.44 0-.85.02-1.25.05 1.63 2.74 5.84 9.4 10.89 14.15C32.7 80.27 39 80.46 39 80.46s-2.03-1.62-3.85-3.04c-1.83-1.42-4.46-5.92-4.46-5.92a64 64 0 0 0 10.94 7.34 501.7 501.7 0 0 0 13.59 6.9s-1.02-.2-3.45-.62c-2.43-.4-7.1-2.22-7.1-2.22s6.29 5.47 12.57 9.53c6.29 4.05 17.64 8.3 17.64 8.3s2.38-.74 12.17-5.06z" fill="#F5EA3C" />\n        <path d="M72.96 31.3l-.12.62c6.56 1.51 13.7 3.4 21.13 5.65a324.6 324.6 0 0 1 22.61 7.71l.27-.63c-6.13-2.82-13.79-8.7-22-11.18-7.98-2.4-15.38-1.11-21.9-2.17M75.52 50.67s2.3 1.77 5.24 1.11c2.95-.64 5.25-2.82 5.25-2.82s-1.73-.32-3.92-.17c-.1.37-.21.78-.36 1.12-.35.78-1.2 1.19-1.2 1.19s-.24-.37-.41-1.34a2.78 2.78 0 0 1-.04-.7c-2.56.53-4.56 1.6-4.56 1.6M119.74 81.8s-5.31 4.91-17.9 10.61c-13.44 6.1-27.48 10.92-41.07 16.7l-.79 7.28s10.23-5.9 24.97-9.23c14.74-3.35 24.76-5.37 29.67-6.42a32.9 32.9 0 0 0 8.66-3.22l-3.54-15.72" fill="oklch(0.78 0.22 164.22 / 0.91)" />\n        <path d="M17.03 49.9c-2.1.63-3.98.5-4.22-.3-.24-.8 1.26-1.96 3.35-2.59 2.1-.63 3.98-.5 4.22.3.24.8-1.26 1.96-3.35 2.59zm89.44 36.4c4.75-2.73 10.49-6.24 13.05-11.29 5.3-10.41-6.67-18.76-15.53-20.42-1.5-.28-12.81-1.72-13.23.85.41-2.54 3.22-3.68 4.56-5.64 2.12-3.07-.87-3.64-3.26-4.67-4.12-1.78-8.4-3.1-12.92-3.19-4.66-.08-8.55.45-12.05 3.88-.62.6-1.43 1.5-1.55 2.35-.35 2.51 4.67 3.29 6.1 2.4a28.4 28.4 0 0 1 10.78-3.73c2.48-.31 5.05-.44 7.46.32.65.21 1.35.46 1.91.85.06.04.48.45.52.45h-4.05s-2.43 3.82-8.1 5.44c-5.68 1.63-13.3-1.62-13.3-1.62s-5.56-2.64-10.58-1.99c-5.03.65-6.13 0-6.13 0v2.4s-2.43-1.63-5.27-2.4c-2.84-.77-6.9-2.67-11.96-1.84-5.07.84-6.09.18-10.75-1.84-4.66-2.01-9.68-1.43-12.57 3.68-2.89 5.12.81 8.4.81 8.4l4.22.11c.92-.06 1.84-.11 2.7-.1.29-1.77 1.12-5.6 3.08-6.55 2.56-1.24 1.36 3 1.63 5 .12.9.31 1.79.48 2.5 3.39 1.27 6.67 3.24 11.2 2.57 5.48-.82 11.36-4.61 16.63-1.7l.22.12c.51-1.15 1.76-3.67 3.03-4 1.66-.44.14 2.27-.13 3.7-.12.63-.2 1.26-.25 1.77.56.31 1.12.62 1.68.9.36-1.35 1.03-3.39 2.04-3.88 1.54-.74.57 2.21.59 3.66 0 .53.03 1.06.07 1.51 2.66 1.14 5.28 1.79 7.96 1.36 5.06-.81 5.83-3.02 13.58.14 2.27.92 4.68 2.99 7.05 3.31 1.22.17 2.86.12 4-.4 1.71-.79.68-1.98-.89-1.89a3.02 3.02 0 0 1 2.4-1.4c3.41-.23 4.58 4.4 5.71 6.81 1.7 3.61 1.35 7.59-.5 11.07-5.6 10.49-22.03 17.44-22.03 17.44s2.38-.75 12.17-5.07c6.56-2.9 13.2-5.78 19.42-9.36z" fill="#409144" />\n        <path d="M65.56 65.66c5.06-.81 5.83-3.02 13.58.14 2.27.92 4.68 2.99 7.05 3.31 1.02.14 3.38.06 4.73-.74l.44-.82c-1.63.37-5.75 1.02-7.92-1.01-2.75-2.58-4.64-4.2-11.54-3.26-5.73.8-9.33 1.01-14.3-1.4-.05.33-.08.65-.07.9 0 .54.03 1.07.07 1.52 2.66 1.14 5.28 1.79 7.96 1.36zm-9.92-4.83c-.43-.24-.87-.5-1.33-.8l-.66-.4a6.3 6.3 0 0 0-.18.7c-.12.64-.2 1.27-.25 1.78.56.31 1.12.62 1.68.9.17-.65.42-1.46.74-2.18zm-38.3-2.14c.09-.6.25-1.44.5-2.32-3.7-.64-7.19-.61-9.1-.53.5 1.81 1.67 2.85 1.67 2.85l4.22.11c.92-.06 1.84-.11 2.7-.1zm33.01 1.83l.22.12c.23-.52.62-1.33 1.1-2.09-5.17-2.49-8.23-1.34-12.39.25-4.82 1.86-8.34 2.23-15.58-.8a22 22 0 0 0-1.62-.6c.12.81.29 1.6.45 2.25 3.38 1.27 6.66 3.24 11.2 2.57 5.47-.82 11.35-4.61 16.62-1.7zM104 54.59c-1.25-.23-9.27-1.26-12.18-.13l-.18.07-.73.56a.92.92 0 0 0-.14.35c.01-.1.04-.19.06-.28L87.12 58s17.72-2.29 22.27 8.54c4.56 10.82-7.95 21.33-17.19 26.85 4.85-2.17 9.68-4.43 14.27-7.08 4.75-2.74 10.49-6.25 13.05-11.3 5.3-10.41-6.67-18.76-15.53-20.42zM69.9 50.92l-2.5-.45c.77.3 1.7.45 2.5.45zm.58 5.63c-2.59-1.2-5.03-3.69-6.46-5.33 1.7.52 2.83 1.06 2.83 1.06s7.63 3.24 13.3 1.62a16 16 0 0 0 1.97-.7l.05-.01c.16-.07.31-.13.48-.22l.06-.03c3.86-1.83 5.56-4.48 5.56-4.48h4.04s-1.34 4.69-7.24 7.48c-5.9 2.8-10.54 2.5-14.59.61z" fill="#317F3F" />\n        <path d="M85.43 96.38l.15-.07-.15.07M75 100.7l-.05.01.04-.01M75.14 100.65c-.02 0-.03 0-.04.02l.04-.02M75.36 100.57l-.07.02.07-.02M30 65.52c8.31.75 12.91-1.93 16.1-1.68 3.2.26 3.72 3.2 12.15 4.6 8.44 1.41 11.8-2.17 16.2.13 3.34 1.75 6.7 3.77 10.4 4.72 1.1.28 2.71.5 4.23.35 2-.19 3.86-.99 4.19-3.06.26-1.7-.93-2.5-1.35-3.77.19.89.73 1.63.28 2.55-.43.9-1.45 1.45-2.35 1.75-2.72.94-4.85-.69-7.31-1.6-2.72-1.02-5.74-2.78-8.67-3.07-3.65-.37-8.52 2.06-13.38 1.25-4.87-.81-8.92-6.7-15.61-5.88-6.7.81-9.13 4.06-15 2.43-.91-.25-1.73-.52-2.49-.8a6.51 6.51 0 0 0-.16 1.8c.9.1 1.82.2 2.77.28M23.6 61.82c-2.24-1.01-4.23-1.83-7-1.83-.45 0-.86.02-1.26.05.53.9 1.34 2.2 2.36 3.73 1.53.3 3.77.7 6.47 1.08-.3-1.14-.48-2.31-.57-3.03" fill="#E8B63D" />\n        <path d="M33 75.01c.5 1.28.6 2.5-.79 2.58-2.93.18-14.5-13.82-14.52-13.83a61.82 61.82 0 0 0 8.54 10.43C32.7 80.27 39 80.46 39 80.46s-2.03-1.62-3.85-3.04a13.13 13.13 0 0 1-2.15-2.4M41.63 78.84l1.31.69c-6.04-3.58-11.5-7.41-11.54-7.44a65.6 65.6 0 0 0 10.23 6.75M93.45 88.1a33.72 33.72 0 0 1-11.38 2.54c-9.15.3-20.75-2.87-28.85-5.89l2 .98s-1.02-.2-3.45-.6c-2.43-.4-7.1-2.23-7.1-2.23s6.29 5.47 12.57 9.53c6.29 4.05 17.64 8.3 17.64 8.3s11.54-4.88 18.57-12.64M76.52 100.13l-.15.06.15-.06M81.73 97.98l-.45.2.45-.2M76.05 100.31l-.12.05.11-.05M80.53 98.48l-.36.16.36-.16M84.72 96.7l-.82.35.82-.36M83.11 97.39l-.59.25.59-.25M77.1 99.9l-.18.07.17-.07M78.56 99.31l-.24.1.24-.1M79.49 98.92l-.31.14.3-.14"  fill="#E8B63D" />\n        <path d="M66.83 52.6c-.07-2.58 1.23-4.7 2.92-4.76 1.7-.04 3.12 2 3.19 4.58.07 2.58-1.24 4.7-2.92 4.75-1.7.05-3.12-2-3.19-4.58zm17.56 45.22c-5.62-2.47-12.84-7.58-13.06-15.43-.2-6.76.32-19.85.48-23.37 1.88-.93 3.2-3.56 3.11-6.61-.1-3.79-2.31-6.8-4.93-6.72-2.62.07-4.66 3.2-4.55 6.98.1 3.73 2.25 6.7 4.81 6.71-.25 3.67-.84 17.21-.51 23.54.38 7.3 7.66 15.72 18.12 17.27 10.32 1.51 29.54 1.09 29.54 1.09l1.71-1.24S90 100.3 84.4 97.82z" fill="#322549" />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".ele {\n    display: block;\n    outline: 2px solid oklch(0.48 0.52 64.22);\n    width: 80vh;\n    aspect-ratio: 1;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["上面示例中，我们并没有为 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素定义 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性，因此，它会取其默认值 ",(0,d.jsx)(n.code,{children:"xMidYMid meet"})," ，即 ",(0,d.jsx)(n.code,{children:"<align>"})," 的值为 ",(0,d.jsx)(n.code,{children:"xMidYMid"})," ，",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 的值为 ",(0,d.jsx)(n.code,{children:"meet"})," 。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:f,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNOLyYE",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNOLyYE"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在这个示例中，",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽高比是 ",(0,d.jsx)(n.code,{children:"1:1"})," ，同时视口的宽高比也是 ",(0,d.jsx)(n.code,{children:"1:1"})," （CSS 的 ",(0,d.jsx)(n.code,{children:"aspect-ratio"})," 设置视口的宽高比）。在这种情况下，",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性并不是关键因素。"]}),"\n",(0,d.jsxs)(n.p,{children:["假设，你在上面的基础上，调整视口的宽高比（修改 ",(0,d.jsx)(n.code,{children:"aspect-ratio"})," 的值）："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:w,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/VwNjdzB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/VwNjdzB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["你会发现，不管 ",(0,d.jsx)(n.code,{children:"viewBox"})," 和视口的宽高比是否相等， ",(0,d.jsx)(n.code,{children:"viewBox"}),"（相片）会在视口（相框）中居中显示，并保持宽高比不变。这是因为默认情况下 ",(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMidYMid meet"'}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["接下来，尝试调整 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 的 ",(0,d.jsx)(n.code,{children:"<align>"})," 属性的值，看看当 ",(0,d.jsx)(n.code,{children:"viewBox"}),"（相片）和视口（相框）的宽高比不同时会发生什么。"]}),"\n",(0,d.jsxs)(n.h4,{id:"不强制进行统一缩放none",children:["不强制进行统一缩放：none",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#不强制进行统一缩放none",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="none" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>        \n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio = "none"'})," 时，表示给定元素的图形不会统一缩放。"]}),"\n",(0,d.jsxs)(n.p,{children:["如果需要，可以以非统一的方式（不保持宽高比）缩放给定元素的图形内容，以确保元素的边界框完全匹配视口矩形。换句话说，",(0,d.jsx)(n.code,{children:"viewBox"})," 可能会根据需要进行拉伸或收缩，以填满整个视口，这可能会导致图形失真。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:m,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/pen/VwNjdzB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/pen/VwNjdzB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，如果 ",(0,d.jsx)(n.code,{children:"<align>"})," 的值是 ",(0,d.jsx)(n.code,{children:"none"})," ，则会忽略可选的 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 值。"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xminymin",children:["强制进行统一缩放：xMinYMin",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xminymin",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMinYMin" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMinYMin"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 0% 0%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:v,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/yLrJEqV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLrJEqV"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmidymin",children:["强制进行统一缩放：xMidYMin",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmidymin",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMidYMin" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMidYMin"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 50% 0%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:g,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/PogzBbZ",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PogzBbZ"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmaxymin",children:["强制进行统一缩放：xMaxYMin",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmaxymin",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMaxYMin" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMaxYMin"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 100% 0%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:p,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/dyLXjvB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/dyLXjvB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xminymid",children:["强制进行统一缩放：xMinYMid",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xminymid",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMinYMid" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMinYMid"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 0% 50%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:t,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/MWReBGG",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/MWReBGG"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmidymid",children:["强制进行统一缩放：xMidYMid",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmidymid",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMidYMid" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMidYMid"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放，",(0,d.jsx)(n.code,{children:"xMidYmid"})," 也是 ",(0,d.jsx)(n.code,{children:"<align>"})," 的默认值："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 50% 50%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:a,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/yLrJqqj",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLrJqqj"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmaxymid",children:["强制进行统一缩放：xMaxYMid",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmaxymid",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMaxYMid" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMaxYMid"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"mid-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 100% 50%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:j,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/XWQKPmw",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/XWQKPmw"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xminymax",children:["强制进行统一缩放：xMinYMax",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xminymax",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMinYMax" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMinYMax"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"min-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 0% 100%"})," :"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:o,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/MWReBPB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/MWReBPB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmidymax",children:["强制进行统一缩放：xMidYMax",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmidymax",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMidYMax" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMidYMax"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴和视口的 ",(0,d.jsx)(n.code,{children:"mid-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴和视口的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 50% 100%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:h,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/MWReBZB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/MWReBZB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"强制进行统一缩放xmaxymax",children:["强制进行统一缩放：xMaxYMax",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制进行统一缩放xmaxymax",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMaxYMax" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:'preserveAspectRatio="xMaxYMax"'})," 会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"max-x"})," 轴对齐"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"})," 的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴与视口的 ",(0,d.jsx)(n.code,{children:"max-y"})," 轴对齐"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以将其视为 ",(0,d.jsx)(n.code,{children:"background-position: 100% 100%"})," ："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:x,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/jORrvMv",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/jORrvMv"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["正如前面提到的，使用 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的 ",(0,d.jsx)(n.code,{children:"<align>"})," 值，除 ",(0,d.jsx)(n.code,{children:"none"})," 之外的其他值都会强制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行统一缩放，并且会控制 ",(0,d.jsx)(n.code,{children:"viewBox"})," 与视口的对方式。另外，需要知道的是，在某些时候，根据 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的大小，",(0,d.jsx)(n.code,{children:"<align>"})," 的某些值可能具有相似的结果。"]}),"\n",(0,d.jsxs)(n.p,{children:["你可能已经发现了，上面这些演示 ",(0,d.jsx)(n.code,{children:"<align>"})," 值的案例，其 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 值都使用了默认值 ",(0,d.jsx)(n.code,{children:"meet"})," ，以确保整个 ",(0,d.jsx)(n.code,{children:"viewBox"})," 包含在视口内。"]}),"\n",(0,d.jsxs)(n.p,{children:["接下来，我们再来聊聊 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 的 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 的值。"]}),"\n",(0,d.jsxs)(n.h3,{id:"meetorslice-值",children:[(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 值",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#meetorslice-值",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 是 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的可选值，包括了 ",(0,d.jsx)(n.code,{children:"meet"})," 和 ",(0,d.jsx)(n.code,{children:"slice"})," 两个选项，其中 ",(0,d.jsx)(n.code,{children:"meet"})," 是默认值。该参数决定了 ",(0,d.jsx)(n.code,{children:"viewBox"})," 是否完全可见于视口内。其工作方式类似于 ",(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7199571709102391328/section/7199845663143067660#heading-2",target:"_blank",rel:"noopener noreferrer",children:"CSS 的 background-size 属性中的 contain 和 cover 值"}),"，其中 ",(0,d.jsx)(n.code,{children:"meet"})," 类似于 ",(0,d.jsx)(n.code,{children:"contain"}),"，而 ",(0,d.jsx)(n.code,{children:"slice"})," 类似于 ",(0,d.jsx)(n.code,{children:"cover"}),"。如果提供该参数，它需要与 ",(0,d.jsx)(n.code,{children:"<align>"})," 参数之间用空格分隔。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'<svg preserveAspectRatio="xMaxYMax slice" viewBox="0 0 137 137">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"meet"})," 值确保 ",(0,d.jsx)(n.code,{children:"viewBox"})," 在缩放时保持宽高比不变，使其完全适应于视口内，并尽可能填充整个视口，但不会超出其范围。如果视口的宽高比与 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽高比不匹配，",(0,d.jsx)(n.code,{children:"viewBox"})," 将会在视口内居中显示（因为 ",(0,d.jsx)(n.code,{children:"<align>"})," 默认值为 ",(0,d.jsx)(n.code,{children:"xMidYMid"}),"），可能会留出一些空白区域。这个值类似于 ",(0,d.jsx)(n.code,{children:"background-size: contain"}),"，背景图像（",(0,d.jsx)(n.code,{children:"viewBox"}),"）会尽量缩放以适应背景绘制区域（视口），确保完全覆盖绘制区域。但如果背景图像（",(0,d.jsx)(n.code,{children:"viewBox"}),"）的宽高比与所应用元素（视口）的宽高比不同，可能会出现一些留白，可能是上下或左右留白。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"slice"})," 值确保整个视口被 ",(0,d.jsx)(n.code,{children:"viewBox"})," 填充，这意味着 ",(0,d.jsx)(n.code,{children:"viewBox"})," 可能会超出视口的范围。它保持了 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽高比，但可能会根据视口尺寸对 ",(0,d.jsx)(n.code,{children:"viewBox"})," 进行裁剪，因此视口内的 ",(0,d.jsx)(n.code,{children:"viewBox"})," 可能会有部分区域被裁剪。如果视口的宽高比与 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的宽高比不匹配，它会拉伸 ",(0,d.jsx)(n.code,{children:"viewBox"})," 以填满整个视口，这可能导致图形内容在某个方向上拉伸。这个值类似于 ",(0,d.jsx)(n.code,{children:"background-size: cover"}),"，背景图片（",(0,d.jsx)(n.code,{children:"viewBox"}),"）会被缩放，以最小的尺寸填充元素（视口）框。"]}),"\n",(0,d.jsxs)(n.p,{children:["总的来说，",(0,d.jsx)(n.code,{children:"meet"})," 会尽可能放大图形以填充视口，而 ",(0,d.jsx)(n.code,{children:"slice"})," 则会尽可能填充视口，这意味着部分图形内容会被裁剪掉。"]}),"\n",(0,d.jsxs)(n.p,{children:["来看一个关于 ",(0,d.jsx)(n.code,{children:"meet"})," 的示例："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-XML",children:'\x3c!-- meet: width > height --\x3e\n<svg preserveAspectRatio="xMidYMid meet" viewBox="0 0 137 137" style="aspect-ratio: 16 / 9">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n\n\x3c!-- meet: width < height --\x3e\n<svg preserveAspectRatio="xMidYMid meet" viewBox="0 0 137 137" style="aspect-ratio: 3 / 4">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M55.56 128.42a3..." />\n    </g>\n</svg>\n'})}),"\n",(0,d.jsxs)(n.p,{children:["上面这个示例演示了 ",(0,d.jsx)(n.code,{children:"meet"})," 值在不同对齐值下的效果："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:l,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWmrEqr",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWmrEqr"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["将上面示例中的 ",(0,d.jsx)(n.code,{children:"meet"})," 更换成 ",(0,d.jsx)(n.code,{children:"slice"})," ，调整 ",(0,d.jsx)(n.code,{children:"<align>"})," 的值，你看到效果如下："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:r,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/XWQKyMY",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/XWQKyMY"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["最后，你可以通过下面这个案例，通过更直观的视觉效果来理解视口、",(0,d.jsx)(n.code,{children:"viewBox"})," 以及不同的 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 值是如何一起工作，更进一步的了解 SVG 坐标系的工作原理。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:s,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNOxxqm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNOxxqm"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h2,{id:"小结",children:["小结",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["要理解 SVG 坐标系统，需要了解几个关键概念：SVG 视口，",(0,d.jsx)(n.code,{children:"viewBox"}),"和 ",(0,d.jsx)(n.code,{children:"preserveAspectRatio"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["SVG 视口是用户在浏览器中实际看到的 SVG 图形区域。视口通常由 ",(0,d.jsx)(n.code,{children:"<svg>"})," 元素的边界框（",(0,d.jsx)(n.code,{children:"width"})," 和 ",(0,d.jsx)(n.code,{children:"height"}),"）定义，这决定了 SVG 图形的可见部分。SVG 视口的大小可以通过 CSS 样式或 SVG 属性来控制，允许开发者调整 SVG 图形在页面上的呈现方式。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"viewBox"}),"是 SVG 元素的一个属性，它定义了 SVG 图形的可视区域和用户坐标系统。",(0,d.jsx)(n.code,{children:"viewBox"})," 由四个值组成：",(0,d.jsx)(n.code,{children:"<min-x>"})," 、 ",(0,d.jsx)(n.code,{children:"<min-y>"})," 、 ",(0,d.jsx)(n.code,{children:"<width>"})," 和 ",(0,d.jsx)(n.code,{children:"<height>"}),"。它允许 Web 开发者指定一个矩形区域，其中包含了 SVG 图形的全部或部分内容。通过调整 ",(0,d.jsx)(n.code,{children:"viewBox"})," 的值，可以控制 SVG 图形的缩放和定位。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 是一个与 ",(0,d.jsx)(n.code,{children:"viewBox"})," 属性相关的属性，它控制了 SVG 图形在视口中的缩放和定位方式。",(0,d.jsx)(n.code,{children:"preserveAspectRatio"})," 属性的值由两部分组成：",(0,d.jsx)(n.code,{children:"<align>"})," 和 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 。其中 ",(0,d.jsx)(n.code,{children:"<align>"})," 指定了图形在视口中的对齐方式，而 ",(0,d.jsx)(n.code,{children:"<meetOrSlice>"})," 则指定了图形是缩放（",(0,d.jsx)(n.code,{children:"meet"}),"）还是裁剪（",(0,d.jsx)(n.code,{children:"slice"}),"）。"]}),"\n",(0,d.jsx)(n.p,{children:"有了这个基础之后，我们就能更好的控制 SVG 图形，比如图形的缩放和位置。了解了 SVG 坐标系之后，我们就可以进入下一节，使用 SVG 元素来绘制图形。开始真正的创作！"})]})}function Q(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(Z,{...e})}):Z(e)}let J=Q;Q.__RSPRESS_PAGE_META={},Q.__RSPRESS_PAGE_META["%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%20SVG%2F6-%E5%88%9D%E7%BA%A7%E7%AF%87%EF%BC%9ASVG%20%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F.md"]={toc:[{text:"SVG 坐标系统",id:"svg-坐标系统",depth:2},{text:"SVG 坐标系统的核心概念",id:"svg-坐标系统的核心概念",depth:2},{text:"SVG 画布",id:"svg-画布",depth:3},{text:"视口（Viewport）",id:"视口viewport",depth:3},{text:"viewBox 属性",id:"viewbox-属性",depth:3},{text:"preserveAspectRatio 属性",id:"preserveaspectratio-属性",depth:3},{text:"用户单位",id:"用户单位",depth:3},{text:"了解 SVG 的 Viewport 和 viewBox",id:"了解-svg-的-viewport-和-viewbox",depth:2},{text:"相片（viewBox）等于相框（Viewport）",id:"相片viewbox等于相框viewport",depth:3},{text:"相片（viewBox）小于相框（Viewport）",id:"相片viewbox小于相框viewport",depth:3},{text:"相片（viewBox）大于相框（Viewport）",id:"相片viewbox大于相框viewport",depth:3},{text:"设置 viewBox 的坐标原点",id:"设置-viewbox-的坐标原点",depth:3},{text:"设置 viewBox 造成的影响",id:"设置-viewbox-造成的影响",depth:3},{text:"preserveAspectRatio 使用",id:"preserveaspectratio-使用",depth:2},{text:"对齐（`<align>`）值",id:"对齐align值",depth:3},{text:"不强制进行统一缩放：none",id:"不强制进行统一缩放none",depth:4},{text:"强制进行统一缩放：xMinYMin",id:"强制进行统一缩放xminymin",depth:4},{text:"强制进行统一缩放：xMidYMin",id:"强制进行统一缩放xmidymin",depth:4},{text:"强制进行统一缩放：xMaxYMin",id:"强制进行统一缩放xmaxymin",depth:4},{text:"强制进行统一缩放：xMinYMid",id:"强制进行统一缩放xminymid",depth:4},{text:"强制进行统一缩放：xMidYMid",id:"强制进行统一缩放xmidymid",depth:4},{text:"强制进行统一缩放：xMaxYMid",id:"强制进行统一缩放xmaxymid",depth:4},{text:"强制进行统一缩放：xMinYMax",id:"强制进行统一缩放xminymax",depth:4},{text:"强制进行统一缩放：xMidYMax",id:"强制进行统一缩放xmidymax",depth:4},{text:"强制进行统一缩放：xMaxYMax",id:"强制进行统一缩放xmaxymax",depth:4},{text:"`<meetOrSlice>` 值",id:"meetorslice-值",depth:3},{text:"小结",id:"小结",depth:2}],title:"6-初级篇：SVG 坐标系统",headingTitle:"6-初级篇：SVG 坐标系统",frontmatter:{}}}}]);