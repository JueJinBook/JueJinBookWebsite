"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["14933"],{19094:function(n,e,s){n.exports=s.p+"static/image/a63a136cdde3166f183dc2ee8ffbedec.4d1b09ab.png"},612705:function(n,e,s){n.exports=s.p+"static/image/c2722cc0ab951b1c275ca87d658571ac.967cac4b.png"},991055:function(n,e,s){s.r(e),s.d(e,{default:()=>d});var i=s(552676),r=s(740453),a=s(19094),l=s(612705);function h(n){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",img:"img",strong:"strong",ul:"ul",li:"li"},(0,r.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"18框架解析引言",children:["18.框架解析：引言",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#18框架解析引言",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"在方案了解中，我们讲解了微前端常见的几种实现方案，在原理解析中我们讲解了隔离、通信和性能优化，但是没有讲解如何将这些原理和具体的方案结合社区的微前端框架进行实践。在框架解析中，我们会基于之前所学习的方案和原理，进行更深度的社区框架的分析和实践。"}),"\n",(0,i.jsxs)(e.h2,{id:"single-spa",children:["single-spa",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#single-spa",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:["在",(0,i.jsx)(e.a,{href:"https://juejin.cn/book/7258893482318626868/section/7259192824322031631#heading-0",target:"_blank",rel:"noopener noreferrer",children:"原理解析：引言"}),"中，我们讲解了应用在 MPA 的模式下前端天然可以做到小型应用的拆分，微应用只需要考虑如何根据导航进行跳转，在跳转的过程中无论是新开标签页还是在当前标签页切换应用，浏览器会处理标签页应用的状态的周期事件，如下所示："]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsxs)(e.p,{children:["从上图可以发现，在标签页应用切换的过程中，浏览器控制了应用运行的",(0,i.jsx)(e.strong,{children:"状态"}),"和",(0,i.jsx)(e.strong,{children:"事件"}),"，其中部分应用状态由用户发起，包括激活、失活、隐藏和终止等，而部分应用的状态则是浏览器自行发起，包裹冻结和丢弃。"]}),"\n",(0,i.jsxs)(e.p,{children:["在 MPA 模式下可以通过浏览器来实现应用状态和周期事件的处理，但是在 SPA 模式下默认无法做到技术无关的应用切换。大部分的 Web 框架（例如 React、Vue 和 Svelte 等）提供了根据路由来切换框架组件的能力，并没有提供根据路由来切换技术无关的应用的能力。为此，",(0,i.jsx)(e.a,{href:"https://single-spa.js.org/",target:"_blank",rel:"noopener noreferrer",children:"single-spa"})," 提供了根据路由来切换应用的能力，并且在内部实现了应用的状态转换和周期事件，从而实现了类似于 MPA 模式下浏览器的应用切换能力。如下所示："]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)("img",{src:a,alt:"yuque_diagram (13)_副本.jpg"})}),"\n",(0,i.jsx)(e.p,{children:"在接下来的课程中，会重点讲解 single-spa 的基础概念，并会提供 single-spa 的实践示例和需要掌握的基础知识，并且还会详细讲解 single-spa 的实现原理。"}),"\n",(0,i.jsxs)(e.h2,{id:"qiankun",children:["qiankun",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#qiankun",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:["尽管 single-spa 可以根据路由进行应用切换，内置了应用的状态和事件处理，但是它缺少了微应用的隔离和性能优化功能，",(0,i.jsx)(e.a,{href:"https://qiankun.umijs.org/zh",target:"_blank",rel:"noopener noreferrer",children:"qiankun"})," 在 single-spa 的基础上进行了二次封装，加强了微前端的这些能力设计，包括："]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"应用隔离"}),"：微应用的 CSS 和 JS 隔离"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"加载方式"}),"：可以配置 HTML 地址进行微应用加载"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"性能优化"}),"：可以对微应用进行预加载"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"通信方式"}),"：可以实现微应用之间的互相通信"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"在 MPA 模式下，浏览器可以天然做到应用的加载、预加载、隔离和通信，但是在 SPA 模式下，这些能力都需要框架自行设计来进行补足，因此 qiankun 和 singe-spa 本质上都是为了模拟 MPA 模式下的浏览器行为能力。当然，框架设计的这些能力由于受到了 JS 执行环境的限制，并没有浏览器本身的能力强大。"}),"\n",(0,i.jsx)(e.p,{children:"在接下来的课程中，我们会在掌握了 single-spa 的基础上继续讲解 qiankun 的实践示例和实现原理，从而帮助大家更好的掌握 qiankun。"}),"\n",(0,i.jsxs)(e.h2,{id:"小结",children:["小结",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"本课程主要介绍了社区常见的两个微前端框架 single-spa 和 qiankun，粗略的讲解了两者的作用和区别，在接下来的课程中会详细讲解两者的使用示例以及原理知识。"})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BE%AE%E5%89%8D%E7%AB%AF%2F18.%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90%EF%BC%9A%E5%BC%95%E8%A8%80.md"]={toc:[{text:"single-spa",id:"single-spa",depth:2},{text:"qiankun",id:"qiankun",depth:2},{text:"小结",id:"小结",depth:2}],title:"18.框架解析：引言",headingTitle:"18.框架解析：引言",frontmatter:{}}}}]);