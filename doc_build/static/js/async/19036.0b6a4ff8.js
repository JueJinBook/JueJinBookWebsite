"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["19036"],{70262:function(e,n,s){s.r(n),s.d(n,{default:()=>H});var c=s(552676),i=s(740453);let t=s.p+"static/image/f092018ea5c7b0b47b078f96cb80994c.83502729.webp",a=s.p+"static/image/42db0b5e7b369db2dda9e97c49720bfe.de803927.webp",d=s.p+"static/image/5f33b1b4a972df5f6368d18a78e1fb1a.8c6a281f.webp",r=s.p+"static/image/bdde6069000b74fce4fff5107853af82.8149ea6d.webp",l=s.p+"static/image/f77138da1b80aa12d9d1780cf9378b13.f2423966.webp",p=s.p+"static/image/180208d211a8fb6c861510279a070644.b567cbfb.webp",h=s.p+"static/image/85c1d6851b2b99083e381aa3ffabc7ca.48ebd7a4.webp",j=s.p+"static/image/c6d6355e8c4f0e1ae64bb3ebd7b2765f.bad831ea.webp",x=s.p+"static/image/1ab97f620bf95568f2464dc0ea0cac6b.605c537e.webp",b=s.p+"static/image/c93cc6a1a9d77d15407356c26f77701e.eafb4de2.webp",f=s.p+"static/image/50f9d0288c7840b7f796706a5893d702.4afb9f12.webp",m=s.p+"static/image/9fee30ed07ffa33472aede06900924e6.4e8850ae.webp",g=s.p+"static/image/6d72d2029f7a21b44b05adb4ccaadade.cbc8ef28.webp",o=s.p+"static/image/50b32793349cea7afb47879ca968a67d.c4db8350.webp",w=s.p+"static/image/d316e07107742f6416c29be31fad8d6d.1aef28a2.webp",u=s.p+"static/image/57a0ec4773a181fd57104e2f3df44607.8c3946bf.webp",k=s.p+"static/image/2edcd3e2fddb53478c6f223fa7776e48.05e798b0.webp",E=s.p+"static/image/918e3601092d051748f268847ac98aa0.c8edf110.webp",_=s.p+"static/image/498970d768abe2c6076835c0d18d904b.a38e5d49.webp",A=s.p+"static/image/c5ed940e3612461195414a66ecdb229c.3e593daf.webp",N=s.p+"static/image/520dfbc48390d8449dffa2b25d9f449f.3d0a8f74.webp",C=s.p+"static/image/ca67ca313ba25167dac8304d4ba0162c.7fb846b6.webp",R=s.p+"static/image/d1bafff9e37dcfd0e084f727fc894639.bce16f18.webp",S=s.p+"static/image/0ec26f725cb42bec21cc2b36e7bc8dbf.343ab54d.webp",O=s.p+"static/image/9f1bd92cf39083d2e5f5178e48754a6d.c78477e9.webp",v=s.p+"static/image/b400f46ade47e3eb30106a79e5000d7a.eb3f8f44.webp",B=s.p+"static/image/887640ff90def14ea449870404b43485.33d96df4.webp",F=s.p+"static/image/63967929cc7a2e9857181888202602c6.a6d4f92b.webp",M=s.p+"static/image/95a79137c95ed35ad6b6977cef7ca7fb.c3bb2ac9.webp",T=s.p+"static/image/db3198ef2e5167bf7de229e094b42c48.1f02a691.webp",D=s.p+"static/image/889ae51035ecc7def391cee315e758c6.5d71c916.webp",I=s.p+"static/image/1b0cc5d29457e991898f35f9c722e55b.a9f2e75f.webp",L=s.p+"static/image/5b641e8cf444b42649dce09beed418be.c4cd47a4.webp",P=s.p+"static/image/1f2ea3c008575258426a87be97ce4ce0.522ea8a7.webp",y=s.p+"static/image/ae0cdd29cefa41f5d613a573afc70195.2b2dff1c.webp",G=s.p+"static/image/752dc8999d92a58284bffc4606d9bb36.b87552b1.webp",U=s.p+"static/image/67af8b42b84af755047b449e6542f86c.acbd5dd0.webp",q=s.p+"static/image/c92c85b330e58abb0a615fa79ba153e9.af620680.webp";function $(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"4-快速掌握-nest-cli",children:["4. 快速掌握 Nest CLI",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-快速掌握-nest-cli",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"项目开发离不开工程化的部分，比如创建项目、编译构建、开发时 watch 文件变动自动构建等。"}),"\n",(0,c.jsx)(n.p,{children:"Nest 项目自然也是这样，所以它在 @nestjs/cli 这个包里提供了 nest 命令。"}),"\n",(0,c.jsx)(n.p,{children:"可以直接 npx 执行，npm 会把它下载下来然后执行："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npx @nestjs/cli new 项目名\n"})}),"\n",(0,c.jsx)(n.p,{children:"也可以安装到全局，然后执行，更推荐这种："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install -g @nestjs/cli\n\nnest new 项目名\n"})}),"\n",(0,c.jsx)(n.p,{children:"不过后者要时不时升级下版本，不然可能用它创建的项目版本不是最新的："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm update -g @nestjs/cli\n"})}),"\n",(0,c.jsx)(n.p,{children:"那 nest 都提供了啥命令呢？"}),"\n",(0,c.jsx)(n.p,{children:"nest -h 看看:"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:q,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"有创建新项目的 nest new，有生成某些代码的 nest generate，还有编译构建的 nest build，开发模式的 nest start 等。"}),"\n",(0,c.jsx)(n.p,{children:"分别看一下："}),"\n",(0,c.jsxs)(n.h2,{id:"nest-new",children:["nest new",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-new",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"nest new 我们用过，就是创建一个新的 nest 项目的。"}),"\n",(0,c.jsx)(n.p,{children:"它有这么几个选项："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:U,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--skip-git 和 --skip-install 很容易理解，就是跳过 git 的初始化，跳过 npm install。"}),"\n",(0,c.jsx)(n.p,{children:"--package-manager 是指定包管理器的，之前创建项目的时候会让我们选择："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:G,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"指定之后，就跳过包管理器选择这步了："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--language 可以指定 typescript 和 javascript，一般我们都选择 ts，用默认的就好。"}),"\n",(0,c.jsx)(n.p,{children:"--strict 是指定 ts 的编译选项是否开启严格模式的，也就是这么 5 个选项："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:P,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"默认是 false，也可以指定为 true："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:L,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这个之后需要的话再改就行。"}),"\n",(0,c.jsxs)(n.h2,{id:"nest-generate",children:["nest generate'",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-generate",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"nest 命令除了可以生成整个项目外，还可以生成一些别的代码，比如 controller、service、module 等。"}),"\n",(0,c.jsx)(n.p,{children:"比如生成 module："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest generate module aaa\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:I,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"它会生成 module 的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:D,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"还会自动在 AppModule 里引入："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:T,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"当然你也可以生成 controller、service 等代码："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest generate controller aaa\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:M,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"同样，它也会更新到 module 的依赖里去。"}),"\n",(0,c.jsx)(n.p,{children:"生成 service 也是一样："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:F,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"当然，如果是要完整生成一个模块的代码，不需要一个个生成，可以用"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest generate resource xxx\n"})}),"\n",(0,c.jsx)(n.p,{children:"它会让你选择是哪种代码，因为 nest 支持 http、websocket、graphql、tcp 等，这里我们选择 http 的 REST 风格 api："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:B,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后会让你选择是否生成 CRUD 代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"选择是。"}),"\n",(0,c.jsx)(n.p,{children:"然后就会生成整个模块的 CRUD + REST api 的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:O,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"当然，它同样会自动在 AppModule 引入："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:R,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这就是 nest generate，可以快速生成各种代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:C,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这些代码模版的集合是在 @nestjs/schematics 这个包里定义的。"}),"\n",(0,c.jsx)(n.p,{children:"nest new 创建项目的时候有个 --collection 选项，就是配置这个的。"}),"\n",(0,c.jsx)(n.p,{children:"不过一般我们不需要配置。"}),"\n",(0,c.jsxs)(n.p,{children:["你可以在 ",(0,c.jsx)(n.a,{href:"https://github.com/nestjs/schematics/tree/master/src/lib",target:"_blank",rel:"noopener noreferrer",children:"@nestjs/schematics"})," 里看到这些代码模版的定义："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:N,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"它的实现原理很简单，就是模版引擎填充变量，打印成代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"nest generate 也有不少选项："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:_,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--flat 和 --no-flat 是指定是否生成对应目录的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--spec 和 --no-spec 是指定是否生成测试文件："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:k,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--skip-import 是指定不在 AppModule 里引入："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"也就是不生成这部分代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"至于 --project，这是指定生成代码在哪个子项目的，等之后用到 monorepo 项目的时候再说。"}),"\n",(0,c.jsx)(n.p,{children:"这就是 nest cli 提供的快速生成各种代码的能力，是不是还挺方便的？"}),"\n",(0,c.jsxs)(n.h2,{id:"nest-build",children:["nest build",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-build",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"然后就是 nest build 了，它是用来构建项目的:"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"执行 nest build，会在 dist 目录下生成编译后的代码。"}),"\n",(0,c.jsx)(n.p,{children:"同样，它也有一些选项："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--wepback 和 --tsc 是指定用什么编译，默认是 tsc 编译，也可以切换成 webpack。"}),"\n",(0,c.jsx)(n.p,{children:"这是 tsc 的编译产物："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这是 webpack 的编译产物："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"tsc 不做打包、webpack 会做打包，两种方式都可以。"}),"\n",(0,c.jsx)(n.p,{children:"node 模块本来就不需要打包，但是打包成单模块能提升加载的性能。"}),"\n",(0,c.jsx)(n.p,{children:"--watch 是监听文件变动，自动 build 的。"}),"\n",(0,c.jsx)(n.p,{children:"但是 --watch 默认只是监听 ts、js 文件，加上 --watchAssets 会连别的文件一同监听变化，并输出到 dist 目录，比如 md、yml 等文件。"}),"\n",(0,c.jsx)(n.p,{children:"--path 是指定 tsc 配置文件的路径的。"}),"\n",(0,c.jsx)(n.p,{children:"那 --config 是指定什么配置文件呢？"}),"\n",(0,c.jsx)(n.p,{children:"是 nest cli 的配置文件。"}),"\n",(0,c.jsxs)(n.h2,{id:"nest-clijson",children:["nest-cli.json",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-clijson",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"刚刚我们说的那些选项都可以在 nest-cli.json 里配置："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"比如 compilerOptions 里设置 webpack 为 true 就相当于 nest build --webpack，一样的效果："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"webpack 设置为 false 就是用 tsc 了。"}),"\n",(0,c.jsx)(n.p,{children:"deleteOutDir 设置为 true，每次 build 都会都清空 dist 目录。"}),"\n",(0,c.jsx)(n.p,{children:"而 assets 是指定 nest build 的时候，把那些非 js、ts 文件也复制到 dist 目录下。"}),"\n",(0,c.jsx)(n.p,{children:"可以通过 include、exclude 来精确匹配，并且可以单独指定是否 watchAssets。"}),"\n",(0,c.jsx)(n.p,{children:"不过只支持 src 下文件的复制，如果是非 src 下的，可以自己写脚本复制："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后是 generateOptions，这些就和我们 nest generate 时的 --no-spec、--no-flat 一样的效果。"}),"\n",(0,c.jsx)(n.p,{children:"比如我把 flat 设置为 false、spec 设置为 false，那再 generate 代码时就是这样的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"生成了一层目录，并且没有生成测试文件。"}),"\n",(0,c.jsx)(n.p,{children:"sourceRoot 是指定源码目录。"}),"\n",(0,c.jsx)(n.p,{children:"entryFile 是指定入口文件的名字，默认是 main。"}),"\n",(0,c.jsx)(n.p,{children:"而 $schema 是指定 nest-cli.json 的 schema，也就是可以有哪些属性的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://json.schemastore.org/nest-cli",target:"_blank",rel:"noopener noreferrer",children:(0,c.jsx)(n.a,{href:"https://json.schemastore.org/nest-cli",target:"_blank",rel:"noopener noreferrer",children:"https://json.schemastore.org/nest-cli"})})}),"\n",(0,c.jsx)(n.p,{children:"这是一种 json schema 的规范，还是挺容易看懂的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"如果想全面了解 nest-cli.json 都有啥属性，可以看看这个 schema 定义。"}),"\n",(0,c.jsxs)(n.h2,{id:"nest-start",children:["nest start",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-start",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"最后，再来看下 nest start 命令："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到每次重新 build 了，并且用 node 把 main.js 跑了起来。"}),"\n",(0,c.jsx)(n.p,{children:"它有这些选项："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--watch 是最常用的选项了，也就是改动文件之后自动重新 build："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--debug 是启动调试的 websocket 服务，用来 debug。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:a,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"--exec 可以指定用什么来跑，默认是用 node 跑，你也可以切换别的 runtime。"}),"\n",(0,c.jsx)(n.p,{children:"其余选项和 nest build 一样，就不复述了。"}),"\n",(0,c.jsxs)(n.h2,{id:"nest-info",children:["nest info",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nest-info",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"最后还有个 nest info 命令，这个就是查看项目信息的，包括系统信息、 node、npm 和依赖版本："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsxs)(n.h2,{id:"总结",children:["总结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"nest 在 @nestjs/cli 包里提供了 nest 命令，它可以用来做很多事情："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"生成项目结构和各种代码"}),"\n",(0,c.jsx)(n.li,{children:"编译代码"}),"\n",(0,c.jsx)(n.li,{children:"监听文件变动自动编译"}),"\n",(0,c.jsx)(n.li,{children:"打印项目依赖信息"}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"也就是这些子命令："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"nest new 快速创建项目"}),"\n",(0,c.jsx)(n.li,{children:"nest generate 快速生成各种代码"}),"\n",(0,c.jsx)(n.li,{children:"nest build 使用 tsc 或者 webpack 构建代码"}),"\n",(0,c.jsx)(n.li,{children:"nest start 启动开发服务，支持 watch 和调试"}),"\n",(0,c.jsx)(n.li,{children:"nest info 打印 node、npm、nest 包的依赖版本"}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"并且，很多选项都可以在 nest-cli.json 里配置，比如 generateOptions、compilerOptions 等。"}),"\n",(0,c.jsx)(n.p,{children:"学会用 nest cli，是学好 nest 很重要的一步。"})]})}function z(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)($,{...e})}):$(e)}let H=z;z.__RSPRESS_PAGE_META={},z.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F4.%20%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1%20Nest%20CLI.md"]={toc:[{text:"nest new",id:"nest-new",depth:2},{text:"nest generate'",id:"nest-generate",depth:2},{text:"nest build",id:"nest-build",depth:2},{text:"nest-cli.json",id:"nest-clijson",depth:2},{text:"nest start",id:"nest-start",depth:2},{text:"nest info",id:"nest-info",depth:2},{text:"总结",id:"总结",depth:2}],title:"4. 快速掌握 Nest CLI",headingTitle:"4. 快速掌握 Nest CLI",frontmatter:{}}}}]);