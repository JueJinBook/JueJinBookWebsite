"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43425"],{581088:function(n,e,s){s.r(e),s.d(e,{default:()=>u});var c=s(552676),d=s(740453);let i=s.p+"static/image/1ba951be2dac1543f6bde65fb6e64d39.c0bc7e90.webp",r=s.p+"static/image/a016c722ff576d9bfe649e60b553c6cc.da7570fc.webp",l=s.p+"static/image/313eadde1aa554789a53dac491afc5ff.fdf42463.webp",a=s.p+"static/image/4f6bdb60fad1c8496e162c0a5c7f6df7.9b79df3d.webp",j=s.p+"static/image/09de58d5b84829ce1a2d343bf388e6eb.79107c9e.webp",h=s.p+"static/image/203705f5039f1c9dc86df390d17367fc.df488e2c.webp",p=s.p+"static/image/2c22916a40a31f53cc941f400a2470fe.c0a654ab.webp",x=s.p+"static/image/6ae553a9f59070154af4f94eac42f40c.b7b5c2c9.webp",t=s.p+"static/image/9240e4cad71bbd8c1b53b5632d7b6eef.de9c212c.webp",b=s.p+"static/image/26886bfab6e2fe9a7dd1d87e16bbcb06.abf02b4c.webp",E=s.p+"static/image/3813d93cce5dfeb04b61ff19ac8c3cf5.2d1847b7.webp",g=s.p+"static/image/1305dd2e6c0222871aa11f4a2b9ce8f4.1dd95d33.webp",o=s.p+"static/image/fce2ceaf9a304426f3764694a3a0ad3d.9c8bf918.webp",A=s.p+"static/image/6c722dafd778d91c73c626f65bf8ace7.ada8c281.webp",m=s.p+"static/image/f69976c0fddef73664a85eed1b39a5d9.d94cb8b3.webp",f=s.p+"static/image/68d7b919cb380c7736a6158a55af9581.82d07426.webp";function T(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li",h2:"h2"},(0,d.ah)(),n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(e.h1,{id:"51-mysql-的事务和隔离级别",children:["51. MySQL 的事务和隔离级别",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#51-mysql-的事务和隔离级别",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"我们学习了增删改查的 sql 语句，并进行了大量的练习。"}),"\n",(0,c.jsx)(e.p,{children:"但有个问题："}),"\n",(0,c.jsx)(e.p,{children:"如果是两个 update 的语句，一个把订单详情表数量修改了，一个把订单表的总金额修改了。但是改订单总金额的那个 sql 执行失败了。"}),"\n",(0,c.jsx)(e.p,{children:"这时候怎么办？"}),"\n",(0,c.jsx)(e.p,{children:"数量已经改了，但是总金额没改成功，就对不上了。"}),"\n",(0,c.jsx)(e.p,{children:"这种就需要事务（transaction）了。"}),"\n",(0,c.jsx)(e.p,{children:"它是这样用的："}),"\n",(0,c.jsx)(e.p,{children:"比如 3 号订单的这三个商品，我们把它数量都改为 1。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"那总金额就是 200，需要改 order 表的 total_amount 为 200。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"我们先开启事务："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"START TRANSACTION\n"})}),"\n",(0,c.jsx)(e.p,{children:"然后执行两条 sql 语句："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"UPDATE order_items SET quantity=1 WHERE order_id=3;\n\nUPDATE orders SET total_amount=200 WHERE id=3;\n"})}),"\n",(0,c.jsx)(e.p,{children:"分别修改了 order_items 的商品数量和 orders 的订单总金额。"}),"\n",(0,c.jsx)(e.p,{children:"然后再查询下现在 orders 表和 order_items 表的数据。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"确实改了。"}),"\n",(0,c.jsx)(e.p,{children:"如果这时候你发现改错了，想再改回去，可你不记得之前的数据是啥了，怎么办呢？"}),"\n",(0,c.jsx)(e.p,{children:"别担心，这时候只要执行下 ROLLBACK 就好了。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"你会发现它们的数据恢复了："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"如果你确实想提交，那可以执行 COMMIT："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"START TRANSACTION;\n\nUPDATE order_items SET quantity=1 WHERE order_id=3;\n\nUPDATE orders SET total_amount=200 WHERE id=3;\n\nCOMMIT;\n"})}),"\n",(0,c.jsx)(e.p,{children:"这时候数据就真正被修改，不能回滚了。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"那如果我不是想回滚所有的 sql 语句，只是回滚一部分呢？"}),"\n",(0,c.jsx)(e.p,{children:"这需要手动告诉 mysql 一些保存的点："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"START TRANSACTION;\n\nSAVEPOINT aaa;\n\nUPDATE order_items SET quantity=1 WHERE order_id=3;\n\nSAVEPOINT bbb;\n\nUPDATE orders SET total_amount=200 WHERE id=3;\n\nSAVEPOINT ccc;\n\n"})}),"\n",(0,c.jsx)(e.p,{children:"比如我设置了 3 个保存点。"}),"\n",(0,c.jsx)(e.p,{children:"执行这段 sql，数据确实修改了："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"这时候我们回滚到 bbb 的位置："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"ROLLBACK TO SAVEPOINT bbb;\n"})}),"\n",(0,c.jsx)(e.p,{children:"然后再查询下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"这时候 order_items 表修改成功了，但是 orders 表修改没成功。"}),"\n",(0,c.jsx)(e.p,{children:"这确实是这个点的状态："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"再回滚到 ccc："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"ROLLBACK TO SAVEPOINT ccc;\n"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"这时候就都修改成功了。"}),"\n",(0,c.jsx)(e.p,{children:"这就是事务："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"START TRANSACTION 开启事务后所有的 sql 语句都可以 ROLLBACK，除非执行了 COMMIT 完成这段事务。"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"还可以设置几个 SAVEPOINT，这样可以 ROLLBACK TO 任何一个 SAVEPOINT 的位置。"})}),"\n",(0,c.jsx)(e.p,{children:"当你修改多个表的时候，并且这些表的数据是有关联的时候，事务是必须的。要不全部成功，要不全部不成功。"}),"\n",(0,c.jsx)(e.p,{children:"那如果事务还没有 COMMIT，但是它修改了一些表，这时候我们能查到它修改后的数据么？"}),"\n",(0,c.jsx)(e.p,{children:"这就涉及到事务的隔离级别的概念了。"}),"\n",(0,c.jsx)(e.p,{children:"MYSQL 有 4 种事务隔离级别："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"READ UNCOMMITTED"}),"：可以读到别的事务尚未提交的数据。"]}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["这就有个问题，你这个事务内第一次读的数据是 aaa，下次读可能就是 bbb 了，这个问题叫做",(0,c.jsx)(e.strong,{children:"不可重复读"}),"。"]}),"\n",(0,c.jsxs)(e.p,{children:["而且，万一你读到的数据人家又回滚了，那你读到的就是临时数据，这个问题叫做",(0,c.jsx)(e.strong,{children:"脏读"}),"。"]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"READ COMMITTED"}),"：只读取别的事务已提交的数据。"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"这样是没有脏读问题了，读到的不会是临时数据。"}),"\n",(0,c.jsx)(e.p,{children:"但是还是有可能你这个事务内第一次读的数据是 aaa，下次读可能是 bbb ，也就是不可重复读的问题依然存在。"}),"\n",(0,c.jsxs)(e.p,{children:["不只是数据不一样，可能你两次读取到的记录行数也不一样，这叫做",(0,c.jsx)(e.strong,{children:"幻读"}),"。"]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"REPEATABLE READ"}),"：在同一事务内，多次读取数据将保证结果相同。"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"这个级别保证了读取到的数据一样，但是不保证行数一样，也就是说解决了不可重复读的问题，但仍然存在幻读的问题。"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"SERIALIZABLE"}),"：在同一时间只允许一个事务修改数据。"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"事务一个个执行，各种问题都没有了。"}),"\n",(0,c.jsx)(e.p,{children:"但是负面影响就是性能很差，只能一个个的事务执行。"}),"\n",(0,c.jsx)(e.p,{children:"这 4 种级别主要是数据一致性和性能的差别，一致性越好，并发性能就越差。"}),"\n",(0,c.jsx)(e.p,{children:"需要根据实际情况来权衡。"}),"\n",(0,c.jsx)(e.p,{children:"可以这样查询当前的事务隔离级别："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"select @@transaction_isolation\n"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"这个了解就好，一般用默认的。"}),"\n",(0,c.jsxs)(e.h2,{id:"总结",children:["总结",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"事务内的几条 sql 要么全部成功，要么全部不成功，这样能保证数据的一致性。"}),"\n",(0,c.jsx)(e.p,{children:"它的使用方式是 START TRANSACTION; COMMIT; 或者 ROLLBACK;"}),"\n",(0,c.jsx)(e.p,{children:"还可以设置 SAVEPOINT，然后 ROLLBACK TO SAVEPOINT;"}),"\n",(0,c.jsx)(e.p,{children:"事务还没提交的数据，别的事务能不能读取到，这就涉及到隔离级别的概念了。"}),"\n",(0,c.jsx)(e.p,{children:"一般就用默认的隔离级别就行，也就是 REPEATABLE READ。"}),"\n",(0,c.jsx)(e.p,{children:"基本上，只要写增删改的 sql，那都是要开事务的。"})]})}function S(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,d.ah)(),n.components);return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(T,{...n})}):T(n)}let u=S;S.__RSPRESS_PAGE_META={},S.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F51.%20MySQL%20%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"51. MySQL 的事务和隔离级别",headingTitle:"51. MySQL 的事务和隔离级别",frontmatter:{}}}}]);