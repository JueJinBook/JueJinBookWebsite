"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["77329"],{92290:function(e,n,c){c.r(n),c.d(n,{default:()=>a});var d=c(552676),i=c(740453);let s=c.p+"static/image/552067a43227ff2165101a34bd9d784c.8638213b.webp",r=c.p+"static/image/aca328eed289ea16f8560a56d4cd8c7e.ed0abc44.webp",l=c.p+"static/image/1ae6dc66bc618d5008360d10de3c40e8.27919721.webp";function h(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h3:"h3",code:"code",strong:"strong",ul:"ul",li:"li",h5:"h5",hr:"hr",table:"table",thead:"thead",tr:"tr",th:"th",pre:"pre",img:"img",input:"input"},(0,i.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"7站服务器服务器中运行的应用或服务如何通过url访问",children:["7.站服务器：服务器中运行的应用或服务，如何通过URL访问？",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7站服务器服务器中运行的应用或服务如何通过url访问",children:"#"})]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"技术要点：Nginx、Firewalld"}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"前言",children:["前言",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"作为一名开发者，若要往全栈工程师或前端架构师的方向发展，后续几章都要认真学习。部署一个属于自己的服务器，接着都会在该服务器中搞事情。"}),"\n",(0,d.jsxs)(n.p,{children:["通过前两章的学习，服务器与域名都部署完毕就能立即访问网站吗？当然不是，访问网站不是简单地将网站源码丢到服务器，还需",(0,d.jsx)(n.code,{children:"站服务器"}),"的加持，这样用户才能访问网站。该过程具体如何实现？本章将带领你",(0,d.jsx)(n.strong,{children:"基于Nginx反向代理应用与服务"}),"，通过",(0,d.jsx)(n.code,{children:"Nginx"}),"完成一些日常",(0,d.jsx)(n.code,{children:"站服务器"}),"的工作，解锁个人官网、域名映射、跨域问题、动静分离、反向代理等服务端姿势。"]}),"\n",(0,d.jsxs)(n.h3,{id:"背景站服务器是什么",children:["背景：站服务器是什么",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#背景站服务器是什么",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"站服务器"}),"又称",(0,d.jsx)(n.code,{children:"Web服务器"}),"或",(0,d.jsx)(n.code,{children:"网站服务器"}),"，简称",(0,d.jsx)(n.code,{children:"WS"}),"，指驻留在因特网中的网络应用程序，用于处理客户端的请求并返回响应，可存放资源文件供全世界浏览，可存放数据文件供全世界下载。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"站服务器"}),"主要功能是向客户端提供文档服务，只要是遵循",(0,d.jsx)(n.code,{children:"HTTP"}),"设计的网络应用程序都可认为是",(0,d.jsx)(n.code,{children:"站服务器"}),"。其工作原理分为三个过程，分别是",(0,d.jsx)(n.code,{children:"连接过程"}),"、",(0,d.jsx)(n.code,{children:"请求过程"}),"和",(0,d.jsx)(n.code,{children:"应答过程"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["熟悉",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"的同学可能发现",(0,d.jsx)(n.code,{children:"站服务器"}),"的工作原理与其类似。其实在软件开发与使用时，",(0,d.jsx)(n.code,{children:"站服务器"}),"等同于",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"。虽然不同",(0,d.jsx)(n.code,{children:"站服务器"}),"间有细节上的差异，但其基础原理都是一样的。"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step1"}),"：用户在地址栏中输入网址并按下回车键"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step2"}),"：客户端与服务端建立",(0,d.jsx)(n.code,{children:"TCP连接"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step3"}),"：客户端将用户行为根据",(0,d.jsx)(n.code,{children:"HTTP格式"}),"打包成数据包"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step4"}),"：服务端接收到数据包后，以",(0,d.jsx)(n.code,{children:"HTTP格式"}),"解析并获取客户端意图"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step5"}),"：客户端确认服务端可写，将数据包通过因特网递交到服务端"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step6"}),"：服务端获取客户端意图后，将数据包分类处理并返回处理结果"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step7"}),"：服务端将处理结果装入缓冲区"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step8"}),"：服务端将处理结果根据",(0,d.jsx)(n.code,{children:"HTTP格式"}),"打包成数据包"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step9"}),"：服务端确定客户端可写，将数据包通过因特网递交到客户端"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step10"}),"：客户端接收到数据包后，以",(0,d.jsx)(n.code,{children:"HTTP格式"}),"解析并获取处理结果"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Step11"}),"：客户端处理相关数据并展示在网页中"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["通过梳理不难发现，这是一个简单的网络通信过程。简而言之，就是一个简单的",(0,d.jsx)(n.code,{children:"发送数据"}),"、",(0,d.jsx)(n.code,{children:"接受数据"}),"和",(0,d.jsx)(n.code,{children:"处理数据"}),"的过程。更高级的",(0,d.jsx)(n.code,{children:"站服务器"}),"，无非就是将上述三个过程的内容划分得更详细一点而已。若非得对",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"与",(0,d.jsx)(n.code,{children:"站服务器"}),"做一个差异化对比，那",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"是建立在",(0,d.jsx)(n.code,{children:"HTTP"}),"上用于提供文档浏览的服务器，更多的是提供静态文件的浏览功能，而",(0,d.jsx)(n.code,{children:"站服务器"}),"则涵盖了",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"涉及的功能，不仅能存储文档还能在用户通过客户端提供信息的基础上运行其他脚本。"]}),"\n",(0,d.jsxs)(n.p,{children:["常见",(0,d.jsx)(n.code,{children:"站服务器"}),"有",(0,d.jsx)(n.code,{children:"Nginx"}),"、",(0,d.jsx)(n.code,{children:"Apache"}),"和",(0,d.jsx)(n.code,{children:"Tomcat"}),"。"]}),"\n",(0,d.jsxs)(n.h5,{id:"nginx",children:["Nginx",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nginx",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Nginx"}),"是一个轻量级开源的",(0,d.jsx)(n.code,{children:"站服务器"}),"软件，具备反向代理、负载均衡、缓存服务等功能，为高并发网站的应用场景而设计。随着技术发展与业务扩张，其逐渐受到关注，在国内一线互联网公司，例如阿里、腾讯、百度、网易、新浪等都开始广泛使用其满足一些高并发业务场景。"]}),"\n",(0,d.jsxs)(n.h5,{id:"apache",children:["Apache",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apache",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Apache"}),"是一个广泛流行的",(0,d.jsx)(n.code,{children:"站服务器"}),"软件，具备开源、跨平台、安全稳定等特性。其伴随互联网的大力发展并经过多年的技术沉淀与积累，已变得成熟稳定且具备大量可扩展功能模块，但在设计之初对性能与资源的消耗并未做过多关注，导致其在应对高并发业务场景时被一些轻量级的高性能",(0,d.jsx)(n.code,{children:"站服务器"}),"赶超。"]}),"\n",(0,d.jsxs)(n.h5,{id:"tomcat",children:["Tomcat",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tomcat",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Tomcat"}),"是一个运行",(0,d.jsx)(n.code,{children:"Servlet/JSP"}),"的",(0,d.jsx)(n.code,{children:"站服务器"}),"，主要用于",(0,d.jsx)(n.code,{children:"JavaWeb"}),"环境，与",(0,d.jsx)(n.code,{children:"Apache"}),"一样都是由",(0,d.jsx)(n.code,{children:"Apache软件基金会"}),"运作的开源项目。其本身可作为一个单独的",(0,d.jsx)(n.code,{children:"站服务器"}),"使用，主要用于处理动态请求，但在静态资源与高并发方面的性能较弱，因此常与",(0,d.jsx)(n.code,{children:"Apache"}),"等软件搭配使用，实现动静态请求分离。"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.p,{children:"为了方便理解，我梳理了一个表格，简单聊聊它们的特性与区别。"}),"\n",(0,d.jsxs)(n.table,{children:["\n",(0,d.jsxs)(n.thead,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.th,{align:"center",children:"站服务器"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"开源"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"性能"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"安全性"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"稳定性"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"上手难度"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"付费体验"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"动静分离"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"反向代理"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"负载均衡"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Nginx"}),"|✔️|较高|较高|较高|较易|免费/收费|✔️|✔️|✔️\n",(0,d.jsx)(n.strong,{children:"Apache"}),"|✔️|一般|一般|较高|较易|免费|✔️|✔️|✔️\n",(0,d.jsx)(n.strong,{children:"Tomcat"}),"|✔️|一般|一般|较高|较难|免费|✔️|✔️|✔️"]}),"\n",(0,d.jsxs)(n.p,{children:["综上所述，为了给网站营造一个长期稳定且安全高效的运行环境，推荐使用",(0,d.jsx)(n.code,{children:"Nginx"}),"作为",(0,d.jsx)(n.code,{children:"站服务器"}),"，毕竟其免费功能也能满足网站的日常使用。"]}),"\n",(0,d.jsxs)(n.h3,{id:"方案基于nginx反向代理应用与服务",children:["方案：基于Nginx反向代理应用与服务",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#方案基于nginx反向代理应用与服务",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Nginx"}),"不仅具备反向代理、负载均衡、缓存服务等功能，还支持热部署。它几乎可做到",(0,d.jsx)(n.code,{children:"7*24"}),"小时不间断运行，即使运行几个月也无需重启，还能在不间断运行的情况下热更新软件版本。",(0,d.jsx)(n.code,{children:"Nginx"}),"主打高性能，其占用内存少、并发能力强、能支持高达",(0,d.jsx)(n.code,{children:"50000"}),"个并发连接数，满足日常使用不在话下。"]}),"\n",(0,d.jsxs)(n.p,{children:["对于开发者来说",(0,d.jsx)(n.code,{children:"Node"}),"并不陌生，",(0,d.jsx)(n.code,{children:"Nginx"}),"与",(0,d.jsx)(n.code,{children:"Node"}),"有着很多相似理念，例如",(0,d.jsx)(n.code,{children:"HTTP服务器"}),"、",(0,d.jsx)(n.code,{children:"事件驱动"}),"、",(0,d.jsx)(n.code,{children:"非阻塞式I/O模型"}),"等，而",(0,d.jsx)(n.code,{children:"Nginx"}),"很多功能使用",(0,d.jsx)(n.code,{children:"Node"}),"也可实现，但两者并不冲突。",(0,d.jsx)(n.code,{children:"Nginx"}),"擅长底层服务器资源的处理，",(0,d.jsx)(n.code,{children:"Node"}),"擅长顶层具体业务逻辑的处理，两者可完美组合互相助力。"]}),"\n",(0,d.jsxs)(n.h5,{id:"安装",children:["安装",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["打开",(0,d.jsx)(n.code,{children:"CMD工具"}),"，登录服务器。第5章使用",(0,d.jsx)(n.code,{children:"yum"}),"安装了",(0,d.jsx)(n.code,{children:"Nginx"}),"，执行",(0,d.jsx)(n.code,{children:"nginx -v"}),"，发现其版本不是最新版本。",(0,d.jsx)(n.code,{children:"CentOS8"}),"自带的",(0,d.jsx)(n.code,{children:"Nginx版本"}),"是",(0,d.jsx)(n.code,{children:"1.14"}),"，因此自行创建高版本的",(0,d.jsx)(n.code,{children:"Nginx源"}),"，在",(0,d.jsx)(n.code,{children:"yum install nginx"}),"时才会安装最新版本的",(0,d.jsx)(n.code,{children:"Nginx"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["执行",(0,d.jsx)(n.code,{children:"vim /etc/yum.repos.d/nginx.repo"}),"，加入以下内容。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"[nginx-stable]\nname=nginx stable repo\nbaseurl=https://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=https://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n"})}),"\n",(0,d.jsxs)(n.p,{children:["执行",(0,d.jsx)(n.code,{children:"yum info nginx"}),"查看最新版本。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"上次元数据过期检查：1:09:43 前，执行于 2022年05月29日 星期日 04时56分26秒。\n已安装的软件包 # 当前版本\n名称         : nginx\n时期         : 1\n版本         : 1.14.0\n...\n\n可安装的软件包 # 最新版本\n名称         : nginx\n时期         : 1\n版本         : 1.22.0\n...\n"})}),"\n",(0,d.jsxs)(n.p,{children:["再执行",(0,d.jsx)(n.code,{children:"yum install nginx"}),"重新安装",(0,d.jsx)(n.code,{children:"Nginx"}),"，再执行",(0,d.jsx)(n.code,{children:"nginx -v"}),"，输出版本与上述信息一样表示更新成功。"]}),"\n",(0,d.jsxs)(n.p,{children:["打开",(0,d.jsx)(n.code,{children:"FTP工具"}),"，发现很多",(0,d.jsx)(n.code,{children:"Nginx配置文件"}),"存放在",(0,d.jsx)(n.code,{children:"/ect/nginx"}),"目录中。虽然配置文件众多，但只需关注",(0,d.jsx)(n.code,{children:"/etc/nginx/conf.d"}),"目录，该目录用于存放用户自定义的子配置文件。"]}),"\n",(0,d.jsxs)(n.p,{children:["主配置文件",(0,d.jsx)(n.code,{children:"nginx.conf"}),"中有一行",(0,d.jsx)(n.code,{children:"include /etc/nginx/conf.d/*.conf"}),"代码，其作用是当",(0,d.jsx)(n.code,{children:"Nginx"}),"运行时，主配置文件会默认加载",(0,d.jsx)(n.code,{children:"/etc/nginx/conf.d"}),"目录中所有子配置文件。"]}),"\n",(0,d.jsxs)(n.h5,{id:"操作",children:["操作",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#操作",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["启动",(0,d.jsx)(n.code,{children:"Nginx"}),"后，得益其安全稳定的特性，若未遇到特殊情况几乎都不会再重启，只需掌握以下命令就能操作",(0,d.jsx)(n.code,{children:"nginx"}),"。"]}),"\n",(0,d.jsxs)(n.table,{children:["\n",(0,d.jsxs)(n.thead,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.th,{align:"center",children:"命令"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"功能"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"nginx"}),"|启动进程\n",(0,d.jsx)(n.code,{children:"nginx -t"}),"|验证配置\n",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"|重启进程\n",(0,d.jsx)(n.code,{children:"nginx -s stop"}),"|杀掉进程\n",(0,d.jsx)(n.code,{children:"ps -ef | grep nginx"}),"|查看进程"]}),"\n",(0,d.jsxs)(n.h5,{id:"语法",children:["语法",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#语法",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Nginx"}),"主配置文件是",(0,d.jsx)(n.code,{children:"/etc/nginx/nginx.conf"}),"，可用",(0,d.jsx)(n.code,{children:"vim /etc/nginx/nginx.conf"}),"查看配置。以下是",(0,d.jsx)(n.code,{children:"nginx.conf"}),"的主体结构。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-txt",children:"nginx.conf # 全局配置\n├── events # 配置影响：Nginx服务器与用户的网络连接\n├── http   # 配置功能：代理、缓存、日志等功能\n│   ├── upstream # 配置后端地址：负载均衡不可或缺的部分\n│   ├── server   # 配置虚拟主机：一个http块可包括多个server块\n│   ├── server\n│   │   ├── location # 一个server块可包括多个location块\n│   │   ├── location # location块指令用于匹配URI\n│   │   └── ...\n│   └── ...\n└── ...\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["配置文件由",(0,d.jsx)(n.code,{children:"指令"}),"与",(0,d.jsx)(n.code,{children:"指令块"}),"组成"]}),"\n",(0,d.jsxs)(n.li,{children:["指令以",(0,d.jsx)(n.code,{children:"分号"}),"结尾，指令与参数以",(0,d.jsx)(n.code,{children:"空格"}),"分隔"]}),"\n",(0,d.jsxs)(n.li,{children:["指令块以",(0,d.jsx)(n.code,{children:"大括号"}),"将多条指令组织在一起"]}),"\n",(0,d.jsxs)(n.li,{children:["使用",(0,d.jsx)(n.code,{children:"$"}),"表示变量，提高复用性"]}),"\n",(0,d.jsxs)(n.li,{children:["使用",(0,d.jsx)(n.code,{children:"#"}),"加入注释，提高可读性"]}),"\n",(0,d.jsx)(n.li,{children:"部分指令的参数支持正则表达式"}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"include"}),"语句允许组合多个配置文件以提升配置的可维护性"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Nginx变量"}),"众多，可查看",(0,d.jsx)(n.a,{href:"https://www.jianshu.com/p/d082c216d08e",target:"_blank",rel:"noopener noreferrer",children:"Nginx预定义变量"}),"，在此不深入讲述了。"]}),"\n",(0,d.jsxs)(n.h5,{id:"防火墙",children:["防火墙",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#防火墙",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["启动",(0,d.jsx)(n.code,{children:"Nginx"}),"后，若",(0,d.jsx)(n.code,{children:"CentOS"}),"开启防火墙，还需在防火墙中加入需开放的端口让网站正常访问。",(0,d.jsx)(n.code,{children:"CentOS"}),"默认安装了",(0,d.jsx)(n.code,{children:"firewalld"}),"，可操作",(0,d.jsx)(n.code,{children:"firewalld"}),"控制指定端口是否开放。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"firewalld"}),"的基本使用可通过",(0,d.jsx)(n.code,{children:"systemctl"}),"管理。",(0,d.jsx)(n.code,{children:"systemctl"}),"是",(0,d.jsx)(n.code,{children:"CentOS"}),"服务管理工具中的主要工具，其融合",(0,d.jsx)(n.code,{children:"service"}),"与",(0,d.jsx)(n.code,{children:"chkconfig"}),"的功能于一体，只需掌握以下命令就能操作",(0,d.jsx)(n.code,{children:"firewalld"}),"。"]}),"\n",(0,d.jsxs)(n.table,{children:["\n",(0,d.jsxs)(n.thead,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.th,{align:"center",children:"命令"}),"\n",(0,d.jsx)(n.th,{align:"center",children:"功能"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"systemctl start firewalld"}),"|开启防火墙\n",(0,d.jsx)(n.code,{children:"systemctl stop firewalld"}),"|关闭防火墙\n",(0,d.jsx)(n.code,{children:"systemctl status firewalld"}),"|查看防火墙状态\n",(0,d.jsx)(n.code,{children:"systemctl disable firewalld"}),"|开机禁用防火墙\n",(0,d.jsx)(n.code,{children:"systemctl enable firewalld"}),"|开机启用防火墙"]}),"\n",(0,d.jsxs)(n.p,{children:["那如何开放一个指定端口？跟着我的步伐，通过执行以下命令就可开放或关闭一个指定端口，以",(0,d.jsx)(n.code,{children:"9999"}),"端口为例。"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["查看防火墙版本，确保防火墙已安装：",(0,d.jsx)(n.code,{children:"firewall-cmd --version"})]}),"\n",(0,d.jsxs)(n.li,{children:["查看防火墙状态，确保防火墙已开启：",(0,d.jsx)(n.code,{children:"firewall-cmd --state"})]}),"\n",(0,d.jsxs)(n.li,{children:["查看所有打开的端口，若端口已开放则无需继续执行命令：",(0,d.jsx)(n.code,{children:"firewall-cmd --zone=public --list-ports"})]}),"\n",(0,d.jsxs)(n.li,{children:["开放指定端口：",(0,d.jsx)(n.code,{children:"firewall-cmd --zone=public --add-port=9999/tcp --permanent"})]}),"\n",(0,d.jsxs)(n.li,{children:["重载防火墙配置：",(0,d.jsx)(n.code,{children:"firewall-cmd --reload"})]}),"\n",(0,d.jsxs)(n.li,{children:["查看指定端口是否已开放：",(0,d.jsx)(n.code,{children:"firewall-cmd --zone=public --query-port=9999/tcp"})]}),"\n",(0,d.jsxs)(n.li,{children:["删除指定端口：",(0,d.jsx)(n.code,{children:"firewall-cmd --zone=public --remove-port=9999/tcp --permanent"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["开放指定端口时追加",(0,d.jsx)(n.code,{children:"--permanent"}),"表示开放端口永久生效，无该参数则重启防火墙会失效。在默认情况下，",(0,d.jsx)(n.code,{children:"CentOS"}),"的防火墙是关闭的，因此无需主动开放指定端口。"]}),"\n",(0,d.jsxs)(n.h3,{id:"应用解锁nginx各种姿势",children:["应用：解锁Nginx各种姿势",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#应用解锁nginx各种姿势",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["以下示例及后续章节涉及的域名",(0,d.jsx)(n.code,{children:"yangzw.vip"}),"，记得改成你的域名哈！"]})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["以下示例及后续章节涉及的域名",(0,d.jsx)(n.code,{children:"yangzw.vip"}),"，记得改成你的域名哈！"]})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["以下示例及后续章节涉及的域名",(0,d.jsx)(n.code,{children:"yangzw.vip"}),"，记得改成你的域名哈！"]})}),"\n",(0,d.jsxs)(n.p,{children:["重要事情只说三遍，后续我不再提示把每章的",(0,d.jsx)(n.code,{children:"yangzw.vip"}),"改成你的域名了。"]}),"\n",(0,d.jsxs)(n.h5,{id:"个人官网",children:["个人官网",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#个人官网",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["在根目录中创建",(0,d.jsx)(n.code,{children:"www"}),"文件夹，该文件夹中再创建两个文件夹，分别是",(0,d.jsx)(n.code,{children:"client"}),"与",(0,d.jsx)(n.code,{children:"server"}),"。",(0,d.jsx)(n.code,{children:"client"}),"用于存放",(0,d.jsx)(n.code,{children:"Web应用源码"}),"，",(0,d.jsx)(n.code,{children:"server"}),"用于存放",(0,d.jsx)(n.code,{children:"Node应用源码"}),"。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:l,alt:"www文件夹"})}),"\n",(0,d.jsxs)(n.p,{children:["准备好个人官网源码，在",(0,d.jsx)(n.code,{children:"client"}),"文件夹中创建",(0,d.jsx)(n.code,{children:"yangzw"}),"文件夹，把源码拖到",(0,d.jsx)(n.code,{children:"yangzw"}),"中，最终的入口文件路径是",(0,d.jsx)(n.code,{children:"/www/client/yangzw/index.html"}),"。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:r,alt:"官网目录"})}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"/etc/nginx/conf.d"}),"目录中创建",(0,d.jsx)(n.code,{children:"yangzw.vip.conf"}),"文件，执行",(0,d.jsx)(n.code,{children:"vim /etc/nginx/conf.d/yangzw.vip.conf"}),"，加入以下内容。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"server {\n	listen 80;\n	server_name yangzw.vip www.yangzw.vip;\n	location / {\n		root /www/client/yangzw;\n		index index.html;\n	}\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["打开",(0,d.jsx)(n.a,{href:"https://www.aliyun.com",target:"_blank",rel:"noopener noreferrer",children:"阿里云官网"}),"，选择",(0,d.jsx)(n.code,{children:"右上角的控制台 → 左上角的菜单 → 云服务器ECS → 安全组 → 配置规则"}),"。再点击",(0,d.jsx)(n.code,{children:"手动添加"}),"，增加安全组的配置。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:s,alt:"添加安全组"})}),"\n",(0,d.jsxs)(n.p,{children:["手动增加",(0,d.jsx)(n.code,{children:"80"}),"端口。执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。在浏览器地址栏中输入",(0,d.jsx)(n.a,{href:"http://yangzw.vip",target:"_blank",rel:"noopener noreferrer",children:(0,d.jsx)(n.a,{href:"http://yangzw.vip",target:"_blank",rel:"noopener noreferrer",children:"http://yangzw.vip"})}),"，就可正常访问个人官网了。"]}),"\n",(0,d.jsxs)(n.h5,{id:"域名映射",children:["域名映射",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#域名映射",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["通过第6章的方式在服务器中配置一个全新的",(0,d.jsx)(n.code,{children:"static.yangzw.vip"}),"二级域名，该域名用于托管所有",(0,d.jsx)(n.code,{children:"静态资源"}),"。"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"www"}),"文件夹中创建",(0,d.jsx)(n.code,{children:"static"}),"文件夹，该文件夹用于存放静态资源。"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"/etc/nginx/conf.d"}),"目录中创建",(0,d.jsx)(n.code,{children:"static.yangzw.vip.conf"}),"文件，执行",(0,d.jsx)(n.code,{children:"vim /etc/nginx/conf.d/static.yangzw.vip.conf"}),"，加入以下内容。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"server {\n	listen 80;\n	server_name static.yangzw.vip;\n	location / {\n		root /www/static;\n		index index.html;\n	}\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"/www/static"}),"目录中创建",(0,d.jsx)(n.code,{children:"index.html"}),"文件，随便编码。"]}),"\n",(0,d.jsxs)(n.p,{children:["编辑完毕执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。在浏览器地址栏中输入",(0,d.jsx)(n.a,{href:"http://static.yangzw.vip",target:"_blank",rel:"noopener noreferrer",children:(0,d.jsx)(n.a,{href:"http://static.yangzw.vip",target:"_blank",rel:"noopener noreferrer",children:"http://static.yangzw.vip"})}),"，就可直接跳转到刚才创建的",(0,d.jsx)(n.code,{children:"/www/static"}),"目录中。"]}),"\n",(0,d.jsxs)(n.p,{children:["通过上述方式可映射各种资源文件，例如在",(0,d.jsx)(n.code,{children:"/www/static"}),"目录中创建",(0,d.jsx)(n.code,{children:"img"}),"文件夹并复制一张图像",(0,d.jsx)(n.code,{children:"nice.png"}),"，可通过",(0,d.jsx)(n.code,{children:"http://static.yangzw.vip/img/nice.png"}),"访问该图像了。"]}),"\n",(0,d.jsxs)(n.h5,{id:"跨域问题",children:["跨域问题",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#跨域问题",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["当产生跨域时，配置",(0,d.jsx)(n.code,{children:"Nginx"}),"处理该问题，就可无感知地继续保持开发进度，无需把实际访问的后端地址改成前端地址，这样适用性更高。"]}),"\n",(0,d.jsxs)(n.p,{children:["例如",(0,d.jsx)(n.code,{children:"nice.yangzw.vip"}),"访问",(0,d.jsx)(n.code,{children:"static.yangzw.vip"}),"，根据同源策略的定义，协议域名端口其一不同就是跨域。可通过配置",(0,d.jsx)(n.code,{children:"Nginx"}),"的",(0,d.jsx)(n.code,{children:"header"}),"解决跨域问题，继续以上述配置文件为例。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:'server {\n	listen 80;\n	server_name static.yangzw.vip;\n	# 新增部分-开始\n	add_header "Access-Control-Allow-Origin" $http_origin; # 当前请求域名，不支持携带Cookie的请求\n	add_header "Access-Control-Allow-Credentials" "true"; # 请求可携带Cookie\n	add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS"; # 允许的请求方式\n	add_header "Access-Control-Allow-Headers" $http_access_control_request_headers; # 允许的请求Header，可设置为*\n	add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range";\n	if ($request_method = "OPTIONS") {\n		add_header "Access-Control-Max-Age" 18000000; # 请求的有效期：在有效期内无需发出另一条预检请求\n		add_header "Content-Length" 0;\n		add_header "Content-Type" "text/plain; charset=utf-8";\n	}\n	# 新增部分-结束\n	location / {\n		root /www/static;\n		index index.html;\n	}\n}\n'})}),"\n",(0,d.jsxs)(n.p,{children:["编辑完毕执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。跨域问题完美解决。"]}),"\n",(0,d.jsxs)(n.h5,{id:"动静分离",children:["动静分离",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#动静分离",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"目前动静分离的方式有两种解决方案。在生产条件充足的情况下，还是推荐使用第一种方案，当然第二种方案也能满足个人官网做动静分离的需求。"}),"\n",(0,d.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","将静态资源存放到独立的二级域名中，例如上述创建的",(0,d.jsx)(n.code,{children:"static.yangzw.vip"})]}),"\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","动态跟静态资源混合发布，通过",(0,d.jsx)(n.code,{children:"Nginx"}),"配置区分"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["若使用",(0,d.jsx)(n.code,{children:"Nginx"}),"配置动静分离，就无需使用二级域名了。上述在",(0,d.jsx)(n.code,{children:"www"}),"文件夹中创建的",(0,d.jsx)(n.code,{children:"client"}),"文件夹用于存放",(0,d.jsx)(n.code,{children:"Web"}),"应用源码，创建的",(0,d.jsx)(n.code,{children:"static"}),"文件夹用于存放静态资源。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"server {\n	listen 80;\n	location / {\n		root /www/client; # 存放动态资源(Web应用)\n		index index.html;\n	}\n	location /static/ {\n		root /www/staic; # 存放静态资源\n		autoindex on; # 开启资源目录\n	}\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["编辑完毕执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。动静分离完美解决。"]}),"\n",(0,d.jsxs)(n.h5,{id:"反向代理",children:["反向代理",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#反向代理",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"反向代理"}),"经常被用于处理跨域问题，以下问题就是最直接的体现。"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"将请求转发到本机的另一个服务中"}),"\n",(0,d.jsx)(n.li,{children:"根据访问路径跳转到不同端口的服务中"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["创建二级域名",(0,d.jsx)(n.code,{children:"api.yangzw.vip"}),"用于管理接口，在服务器的",(0,d.jsx)(n.code,{children:"9999"}),"端口运行一个提供接口功能的",(0,d.jsx)(n.code,{children:"Node服务"}),"。现在需将两者关联在一起，即在客户端中通过",(0,d.jsx)(n.code,{children:"api.yangzw.vip"}),"可访问到服务端中",(0,d.jsx)(n.code,{children:"127.0.0.1:9999"}),"的接口功能。"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"/etc/nginx/conf.d"}),"目录中创建",(0,d.jsx)(n.code,{children:"api.yangzw.vip.conf"}),"文件，执行",(0,d.jsx)(n.code,{children:"vim /etc/nginx/conf.d/api.yangzw.vip.conf"}),"，加入以下内容。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"server {\n	listen 80;\n	server_name api.yangzw.vip;\n	location / {\n		proxy_pass http://127.0.0.1:9999;\n	}\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["编辑完毕执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。反向代理完美解决。"]}),"\n",(0,d.jsxs)(n.h5,{id:"负载均衡",children:["负载均衡",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#负载均衡",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"负载均衡"}),"是把负载均匀合理地分发到多个服务器中，实现压力分流的作用。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Nginx"}),"提供以下",(0,d.jsx)(n.code,{children:"负载均衡"}),"方式，默认为",(0,d.jsx)(n.code,{children:"轮询"}),"。"]}),"\n",(0,d.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,d.jsx)(n.strong,{children:"轮询"}),"：无需配置，每个请求根据时间顺序逐一分配到不同服务器，若其中一个服务挂了会自动被剔除"]}),"\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,d.jsx)(n.strong,{children:"weight"}),"：根据权重分配，指定每个服务器的轮询几率，权重越高其被访问的概率越大，可解决服务器性能不均的问题"]}),"\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,d.jsx)(n.strong,{children:"ip_hash"}),"：根据访问",(0,d.jsx)(n.code,{children:"IP"}),"的",(0,d.jsx)(n.code,{children:"Hash结果"}),"分配，每个访客固定访问一个服务器，可解决动态网页",(0,d.jsx)(n.code,{children:"Session共享"}),"的问题"]}),"\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,d.jsx)(n.strong,{children:"fair"}),"：根据服务器响应时间分配，响应时间短的服务器会优先分配，需安装",(0,d.jsx)(n.code,{children:"nginx-upstream-fair"})]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"http {\n	upstream api.yangzw.vip {\n		# ip_hash; # IpHash方式\n		# fair; # Fair方式\n		server 127.0.0.1:9999; # 负载均衡目的服务地址：可设置多个服务器\n		server 127.0.0.1:8888;\n		server 127.0.0.1:7777 weight=10; # 配置权重：不配置默认为1\n	}\n	server {\n		location / {\n			proxy_pass api.yangzw.vip;\n			proxy_connect_timeout 10;\n		}\n	}\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["编辑完毕执行",(0,d.jsx)(n.code,{children:"nginx -t"}),"验证",(0,d.jsx)(n.code,{children:"Nginx"}),"配置，再执行",(0,d.jsx)(n.code,{children:"nginx -s reload"}),"重启",(0,d.jsx)(n.code,{children:"Nginx"}),"进程。负载均衡完美解决。"]}),"\n",(0,d.jsxs)(n.h3,{id:"总结",children:["总结",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Nginx"}),"在",(0,d.jsx)(n.code,{children:"前端工程化"}),"中是一个很有分量的工具，其作为",(0,d.jsx)(n.code,{children:"站服务器"}),"能解决很多请求或代理的网络问题。在后续实战中还会继续结合项目衍生",(0,d.jsx)(n.code,{children:"Nginx"}),"的其他应用场景，如",(0,d.jsx)(n.code,{children:"深度压缩"}),"、",(0,d.jsx)(n.code,{children:"终端适配"}),"、",(0,d.jsx)(n.code,{children:"图像防盗"}),"、",(0,d.jsx)(n.code,{children:"路由刷新"}),"、",(0,d.jsx)(n.code,{children:"请求过滤"}),"、",(0,d.jsx)(n.code,{children:"文件缓存"}),"等应用场景。"]}),"\n",(0,d.jsxs)(n.p,{children:["当然本章内容也是作为后续章节的基础，会配合更多工具完善",(0,d.jsx)(n.code,{children:"Nginx"}),"的进阶，建议你好好拿上述配置流程练手，以熟悉",(0,d.jsx)(n.code,{children:"Nginx"}),"的语法结构与配置技巧。"]}),"\n",(0,d.jsx)(n.p,{children:"本章内容到此为止，希望能对你有所启发，欢迎你把自己的学习心得打到评论区！"}),"\n",(0,d.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","示例项目：",(0,d.jsx)(n.a,{href:"https://github.com/JowayYoung/fe-engineering",target:"_blank",rel:"noopener noreferrer",children:"fe-engineering"})]}),"\n",(0,d.jsxs)(n.li,{className:"task-list-item",children:[(0,d.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","正式项目：",(0,d.jsx)(n.a,{href:"https://github.com/JowayYoung/bruce",target:"_blank",rel:"noopener noreferrer",children:"bruce"})]}),"\n"]})]})}function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}let a=x;x.__RSPRESS_PAGE_META={},x.__RSPRESS_PAGE_META["%E4%BB%8E%200%20%E5%88%B0%201%20%E8%90%BD%E5%9C%B0%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%2F7.%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%9A%84%E5%BA%94%E7%94%A8%E6%88%96%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87URL%E8%AE%BF%E9%97%AE%EF%BC%9F.md"]={toc:[{text:"前言",id:"前言",depth:3},{text:"背景：站服务器是什么",id:"背景站服务器是什么",depth:3},{text:"方案：基于Nginx反向代理应用与服务",id:"方案基于nginx反向代理应用与服务",depth:3},{text:"应用：解锁Nginx各种姿势",id:"应用解锁nginx各种姿势",depth:3},{text:"总结",id:"总结",depth:3}],title:"7.站服务器：服务器中运行的应用或服务，如何通过URL访问？",headingTitle:"7.站服务器：服务器中运行的应用或服务，如何通过URL访问？",frontmatter:{}}}}]);