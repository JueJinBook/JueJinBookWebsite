"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["80921"],{888672:function(e,n,s){s.r(n),s.d(n,{default:()=>u});var i=s(552676),c=s(740453);let r=s.p+"static/image/ad94cc1a68f187baf695ae959a4a97e5.12336580.webp",l=s.p+"static/image/ea25c43af8a9498cb23f8f3e03f7dd54.92bde59c.webp",d=s.p+"static/image/5e15e342daa7217fcc53a6fd971b9c09.13068b70.webp",a=s.p+"static/image/f9c883d1f212c3ffbc21af2d344f7239.503e44d9.webp",h=s.p+"static/image/8525f429a1b05d08956a83e5167b4d35.5787cd1c.webp",t=s.p+"static/image/cd069c6afb42846acd53fd2353e545f6.c34f455e.webp",x=s.p+"static/image/903c741681ae27d68ebeecb42bd6a310.5e64d4b4.webp",j=s.p+"static/image/f91b2b37f340cbfa2ddb25ce67a46721.c7b2cfcb.webp",p=s.p+"static/image/038aefbcb03f4a703e95fa4955eafb5b.09e48005.webp",o=s.p+"static/image/9c3fdf58a76f09e66ac182411632e4c8.e32f1948.webp",g=s.p+"static/image/5e7c9f04b9df5bcc7f8c354aa2269de9.315900b1.webp";function m(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",img:"img",ol:"ol",li:"li",ul:"ul"},(0,c.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"23-sveltekit--images",children:["23-SvelteKit ❘ Images",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23-sveltekit--images",children:"#"})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"推荐学习指数：⭐️️，了解即可"}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"1-前言",children:["1. 前言",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["根据 ",(0,i.jsx)(n.a,{href:"https://almanac.httparchive.org/en/2022/media",title:"https://almanac.httparchive.org/en/2022/media",target:"_blank",rel:"noopener noreferrer",children:"Web Almanac"})," 中的介绍，图片大小占典型网站页面大小的很大一部分。根据统计，2021 年 6 月网站的总大小中位数是 2019 KB（移动端），其中 881 KB 是图片。这比 HTML（30 KB），CSS（72 KB），JavaScript（461 KB）和字体（97 KB）的总和还要多。"]}),"\n",(0,i.jsxs)(n.p,{children:["在绝大多数页面上（70% 移动设备，80% 桌面），最有影响的就是图片。Largest Contentful Paint（最大内容绘制，简写：",(0,i.jsx)(n.a,{href:"https://web.dev/articles/lcp?hl=zh-cn",title:"https://web.dev/articles/lcp?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:"LCP"}),"） 是一种 Web 性能指标，可以标识首屏中最大的内容元素。大部分时候，该元素都有图片。"]}),"\n",(0,i.jsx)(n.p,{children:"所以图片对应用性能的影响很大，本篇就来讲讲在 Svelte 项目中如何使用图片。"}),"\n",(0,i.jsxs)(n.h2,{id:"2-vite-内置处理",children:["2. Vite 内置处理",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-vite-内置处理",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["SvelteKit 使用 Vite 作为构建工具，而 Vite 内置对",(0,i.jsx)(n.a,{href:"https://cn.vitejs.dev/guide/assets",title:"https://cn.vitejs.dev/guide/assets",target:"_blank",rel:"noopener noreferrer",children:"静态资源的处理"}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import imgUrl from './img.png'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["因为 Vite 的自动处理，所以导出的并不是图片元素本身，而是图片地址。",(0,i.jsx)(n.code,{children:"imgUrl"})," 在开发时会是 ",(0,i.jsx)(n.code,{children:"/img.png"}),"，在生产构建后会是 ",(0,i.jsx)(n.code,{children:"/assets/img.2d8efhg.png"}),"，Vite 会自动为引入的资源生成 hash 文件名，体积较小的资源还会内联为 base64 data URL 等。这些是 Vite 的自带优化，而开发者只需正常使用即可："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"<script>\n  import logo from '$lib/assets/logo.png';\n<\/script>\n\n<img alt=\"The project logo\" src={logo} />\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"3-sveltejsenhanced-img",children:["3. @sveltejs/enhanced-img",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-sveltejsenhanced-img",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@sveltejs/enhanced-img"})," 是基于 Vite 的一个构建插件，提供图片处理功能，可处理 ",(0,i.jsx)(n.code,{children:"avif"}),"、",(0,i.jsx)(n.code,{children:"webp"}),"等文件格式，可自动设置图片的 ",(0,i.jsx)(n.code,{children:"width"}),"和 ",(0,i.jsx)(n.code,{children:"height"}),"防止布局偏移，为不同设备创建多种尺寸的图片，删除 EXIF 数据保护隐私。可用于任何基于 Vite 的项目，包括但不限于 SvelteKit 项目。"]}),"\n",(0,i.jsxs)(n.p,{children:["不过作为构建插件，",(0,i.jsx)(n.code,{children:"@sveltejs/enhanced-img"}),"只能在构建过程中优化位于本机的文件，其他来源的图片建议用 CDN 进行优化，也可借助 ",(0,i.jsx)(n.a,{href:"https://unpic.pics/img/svelte/",title:"https://unpic.pics/img/svelte/",target:"_blank",rel:"noopener noreferrer",children:"@unpic/svelte"})," 这样的图片优化库。"]}),"\n",(0,i.jsxs)(n.h3,{id:"31-基础使用",children:["3.1. 基础使用",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-基础使用",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"安装："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev @sveltejs/enhanced-img\n"})}),"\n",(0,i.jsxs)(n.p,{children:["修改 ",(0,i.jsx)(n.code,{children:"vite.config.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"import { sveltekit } from '@sveltejs/kit/vite';\n+import { enhancedImages } from '@sveltejs/enhanced-img';\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n  plugins: [\n+   enhancedImages(),\n    sveltekit()\n  ]\n});\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"注意：由于图片转换的成本，第一次构建的时候会有些慢，后面因为有缓存，速度会快很多"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["现在我们就可以在 ",(0,i.jsx)(n.code,{children:".svelte"}),"中使用："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<enhanced:img src="./path/to/your/image.jpg" alt="An alt text" />\n'})}),"\n",(0,i.jsx)(n.p,{children:"让我们写个 Demo 看下具体输出的结果："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"routes\n└─ img\n   ├─ +page.svelte\n   └─ wukong.webp\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"src/routes/img/+page.svelte"}),"的代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'<enhanced:img src="./wukong.webp" alt="wukong" class="wukong" />\n'})}),"\n",(0,i.jsx)(n.p,{children:"浏览器效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["在构建时，",(0,i.jsx)(n.code,{children:"<enhanced:img>"}),"将被替换为 ",(0,i.jsx)(n.code,{children:"<picture>"}),"，并且设置了多种图片类型和尺寸。开发的时候只用提供最高分辨率的图片，插件会自动为各种设备类型生成较小的版本。"]}),"\n",(0,i.jsxs)(n.h3,{id:"32-动态导入多张",children:["3.2. 动态导入多张",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-动态导入多张",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["开发者可以手动导入图片然后传递给 ",(0,i.jsx)(n.code,{children:"<enhanced:img>"}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"<script>\n  import WuKong from './wukong.webp?enhanced';\n<\/script>\n\n<enhanced:img src={WuKong} alt=\"wukong\" />\n"})}),"\n",(0,i.jsxs)(n.p,{children:["注意使用这种方式的时候，地址要加个 ",(0,i.jsx)(n.code,{children:"?enhanced"}),"，否则会导入错误。"]}),"\n",(0,i.jsx)(n.p,{children:"效果跟之前基本一致："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["当然这些写并没有什么明显的好处，但借助 ",(0,i.jsx)(n.a,{href:"https://cn.vitejs.dev/guide/features#glob-import",title:"https://cn.vitejs.dev/guide/features#glob-import",target:"_blank",rel:"noopener noreferrer",children:"Vite's import.meta.glob"})," 可以导入多张图片："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<script>\n  const imageModules = import.meta.glob(\'./*.{avif,gif,heif,jpeg,jpg,png,tiff,webp,svg}\', {\n    eager: true,\n    query: {\n      enhanced: true\n    }\n  });\n<\/script>\n\n{#each Object.entries(imageModules) as [_path, module]}\n  <enhanced:img src={module.default} alt="wukong img" class="mb-2" />\n{/each}\n'})}),"\n",(0,i.jsx)(n.p,{children:"浏览器效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:""})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"注意：width 和 height 属性并不需要添加，Vite 会自动从源图片中计算得出，以防止布局偏移。但这并不影响开发者设置图片样式："}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<script>\n  import WuKong from \'./wukong.webp?enhanced\';\n<\/script>\n\n<enhanced:img src={WuKong} alt="wukong" class="wukong" />\n\n<style>\n  .wukong {\n    width: 200px;\n    height: auto;\n  }\n</style>\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"33-图片转换",children:["3.3. 图片转换",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-图片转换",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"开发者也可以给图片添加一些转换比如模糊、旋转、调整明亮度等操作，用法也很简单："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<enhanced:img src="./wukong.webp?blur=15" alt="wukong" class="wukong" />\n'})}),"\n",(0,i.jsx)(n.p,{children:"只需要在图片地址后添加参数即可。浏览器效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["这个转化是对图片本身的转换，不是通过添加 CSS 实现。完整指令参考 ",(0,i.jsx)(n.a,{href:"https://github.com/JonasKruckenberg/imagetools/blob/main/docs/directives.md",title:"https://github.com/JonasKruckenberg/imagetools/blob/main/docs/directives.md",target:"_blank",rel:"noopener noreferrer",children:"GitHub imagetools"}),"。"]}),"\n",(0,i.jsxs)(n.h3,{id:"34-srcset-and-sizes",children:["3.4. srcset and sizes",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-srcset-and-sizes",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["我们先来讲讲 ",(0,i.jsx)(n.code,{children:"srcset"})," 和 ",(0,i.jsx)(n.code,{children:"sizes"})," 本身的用法。"]}),"\n",(0,i.jsxs)(n.p,{children:["HTML 5.1 新增加了 ",(0,i.jsx)(n.code,{children:"<img>"})," 元素的 ",(0,i.jsx)(n.code,{children:"srcset"}),"、",(0,i.jsx)(n.code,{children:"sizes"})," 属性，用于设置响应式图片。"]}),"\n",(0,i.jsxs)(n.p,{children:["当我们需要不同的设备展示不同的图片的时候，就需要用到 ",(0,i.jsx)(n.code,{children:"srcset"}),"。这里具体又分为两种情况，一种是图片是相同的尺寸，但是不同的分辨率对应不同的图片，即高分辨率下对应高倍图。一种是相同的图片内容，但依据设备显示的更大或者更小。这分别对应着 ",(0,i.jsx)(n.code,{children:"srcset"})," 的两种语法。"]}),"\n",(0,i.jsx)(n.p,{children:"先说第一种，根据分辨率不同展示不同的图片，使用示例如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'<img\n  srcset="elva-fairy-320w.jpg, elva-fairy-480w.jpg 1.5x, elva-fairy-640w.jpg 2x"\n  src="elva-fairy-640w.jpg"\n  alt="Elva dressed as a fairy"\n/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"srcset 是由逗号分隔的一个或多个字符串组成，每段字符串由以下组成："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"指向图片的 URL"}),"\n",(0,i.jsx)(n.li,{children:"一个空格（可选）"}),"\n",(0,i.jsx)(n.li,{children:"一个像素密度描述符（一个正浮点数，后面紧跟 x 符号）"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"如果我们给图片应用一个 CSS 样式："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"img {\n  width: 320px;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["它的宽度在屏幕上就是 320 像素（CSS 像素）。浏览器会计算出正在显示的显示器的分辨率，然后显示 srcset 引用的最适合的图片。如果是普通的分辨率，一个设备像素表示一个 CSS 像素，那就会加载 ",(0,i.jsx)(n.code,{children:"elva-fairy-320w.jpg"}),"，它的大小是 39KB，如果设备是高像素，用两个或者更多的设备像素表示一个 CSS 像素，那就会加载 ",(0,i.jsx)(n.code,{children:"elva-fairy-640w.jpg"}),"，它的大小是 93KB。"]}),"\n",(0,i.jsx)(n.p,{children:"再说第二种情况，相同的图片内容，但依据设备显示的更大或者更小。使用示例代码如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'<img\n  srcset="elva-fairy-small.jpg 480w, elva-fairy-large.jpg 800w"\n  src="elva-fairy-large.jpg"\n  alt="Elva dressed as a fairy"\n/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"srcset 的语法与刚才略有不同，它定义了浏览器可选择的图片设置以及每个图片的大小。分析它的语法，依然是由逗号分隔的一个或多个字符串组成，每段字符串由以下部分组成："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"指向图片的 URL"}),"\n",(0,i.jsx)(n.li,{children:"一个空格"}),"\n",(0,i.jsx)(n.li,{children:"图片的固有宽度（以像素为单位）。注意，这里使用宽度描述符 w，而非 px。但一个 w 对应 1 个像素。图片的固有宽度是指它的真实大小。"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["此时我们就告诉了浏览器，这张图片有两种备选图片可以显示，一张是 ",(0,i.jsx)(n.code,{children:"elva-fairy-small.jpg"}),"，这张图片的宽度是 480px，一张是 ",(0,i.jsx)(n.code,{children:"elva-fairy-large.jpg"}),"，它的宽度是 800px。"]}),"\n",(0,i.jsx)(n.p,{children:"那浏览器怎么知道用哪张图片呢？比如当前设备视口宽度是 640px，是选择 480px 的图片还是选择 800px 的图片呢？"}),"\n",(0,i.jsx)(n.p,{children:"为了帮助浏览器判断，你就需要写 sizes 属性。sizes 属性就是一组媒体查询条件，告诉浏览器，什么样的条件使用什么样的图片。一个使用示例如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'<img\n  srcset="elva-fairy-small.jpg 480w, elva-fairy-large.jpg 800w"\n  sizes="(max-width: 600px) 480px,\n         800px"\n  src="elva-fairy-large.jpg"\n  alt="Elva dressed as a fairy"\n/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"sizes 也是由逗号分隔的一个或多个字符串组成，每段字符串由以下组成："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["一个媒体条件，例子中为 ",(0,i.jsx)(n.code,{children:"(max-width:600px)"}),"，它表示当视口的宽度小于等于 600px 时"]}),"\n",(0,i.jsx)(n.li,{children:"一个空格"}),"\n",(0,i.jsx)(n.li,{children:"当媒体条件为真时，图片将填充的宽度，这个宽度可以是固定值，比如这个例子中的 480px，也可以是一个相对于视口的宽度（如 50vw），但不能是百分比。如果没有媒体条件，表示是默认生效。当浏览器成功匹配第一个媒体条件的时候，剩下所有的条件都会被忽略。所以顺序很重要。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"有了这些属性后，浏览器会："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"检查设备宽度"}),"\n",(0,i.jsx)(n.li,{children:"检查 sizes 列表中哪个媒体条件是第一个为真"}),"\n",(0,i.jsx)(n.li,{children:"查看给予该媒体查询的槽大小"}),"\n",(0,i.jsx)(n.li,{children:"加载 srcset 列表中引用的最接近所选的槽大小的图片"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"比如在这个例子中，如果浏览器的视口是 480px，那么 sizes 中的第一个条件 (max-width: 600px) 就为真，所以选择 480px 大小，因为 480px 与固有宽度 480w 最接近，所以加载 elva-fairy-small.jpg。通过这种方式就可以实现移动端加载小图片，从而加快移动端的加载速度。"}),"\n",(0,i.jsxs)(n.p,{children:["了解了 ",(0,i.jsx)(n.code,{children:"srcset"})," 和 ",(0,i.jsx)(n.code,{children:"sizes"})," 属性，让我们回到 ",(0,i.jsx)(n.code,{children:"<enhanced:img>"}),"的使用上。"]}),"\n",(0,i.jsxs)(n.p,{children:["如果使用了比较大的图片，则应指定 ",(0,i.jsx)(n.code,{children:"sizes"}),"以便在小设备上请求小图片。比如我们加载一个高清的图片："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"此图片的大小为 2160 * 1080 像素，大小为 423 KB。"}),"\n",(0,i.jsxs)(n.p,{children:["修改 ",(0,i.jsx)(n.code,{children:"src/routes/img/+page.svelte"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<enhanced:img src="./wukong.jpg" alt="wukong" sizes="min(2160px, 100vw)" class="wukong" />\n'})}),"\n",(0,i.jsxs)(n.p,{children:["在指定 sizes 后，",(0,i.jsx)(n.code,{children:"<enhanced:img>"})," 将为较小的设备生成小图片并填充 ",(0,i.jsx)(n.code,{children:"srcset"})," 属性。浏览器效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:a,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["你会发现，不同尺寸从 ",(0,i.jsx)(n.code,{children:"540"}),"、",(0,i.jsx)(n.code,{children:"768"}),"、",(0,i.jsx)(n.code,{children:"1080"}),"、",(0,i.jsx)(n.code,{children:"1366"}),"、",(0,i.jsx)(n.code,{children:"1536"}),"、",(0,i.jsx)(n.code,{children:"1920"}),"、",(0,i.jsx)(n.code,{children:"2160"})," 都生成了一张图片。那么浏览器是如何判断使用哪张尺寸的图片呢？"]}),"\n",(0,i.jsx)(n.p,{children:"我们举个例子，大家就知道了。"}),"\n",(0,i.jsxs)(n.p,{children:["首先是 ",(0,i.jsx)(n.code,{children:'sizes="min(2160px, 100vw)"'}),"，这个语法看起来有些奇怪，其实意思是在 2160px 下，以视口宽度为准。比如视口宽度是 ",(0,i.jsx)(n.code,{children:"1080px"}),"，",(0,i.jsx)(n.code,{children:"sizes=min(2160px, 100vw)"})," 的结果是 ",(0,i.jsx)(n.code,{children:"sizes=1080px"}),"，然后就以 ",(0,i.jsx)(n.code,{children:"1080px"})," 为结果到 ",(0,i.jsx)(n.code,{children:"srcset"})," 中查找合适的图片尺寸。"]}),"\n",(0,i.jsx)(n.p,{children:"现在让我们把设备切到 iphone 12 Pro："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["设备是 390 x 844，DPR 为 3，所以视口宽度是 390 x 3 = 1170。以 ",(0,i.jsx)(n.code,{children:"1170"})," 为结果去 srcset 中查找适合的尺寸，最为接近的是 ",(0,i.jsx)(n.code,{children:"1080w"}),"，所以用的图是对应 1080w 的那张图："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"此时图片大小为 26.5k，比原图 423k 要小很多。"}),"\n",(0,i.jsx)(n.p,{children:"其他设备尺寸也是同理。"}),"\n",(0,i.jsxs)(n.p,{children:["自动生成的最小图片宽度为 540px。如果想要更小的图片或希望自定义宽度，可以使用 ",(0,i.jsx)(n.code,{children:"w"})," 查询参数来实现："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<enhanced:img\n  src="./wukong.jpg?w=1280;640;400"\n  alt="wukong"\n  sizes="(min-width:1920px) 1280px, (min-width:1080px) 640px, (min-width:768px) 400px"\n  class="wukong"\n/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"此时浏览器效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:r,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"此时会根据你指定的宽度来生成对应的尺寸。"}),"\n",(0,i.jsxs)(n.h2,{id:"4-使用图片的最佳实践",children:["4. 使用图片的最佳实践",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-使用图片的最佳实践",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"最后让我们总结一下使用图片的最佳实践："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["选择合适的图片处理方案，比如 Vite 内置处理方案可内联图片，",(0,i.jsx)(n.code,{children:"@sveltejs/enhanced-img"}),"可用于处理大多数本机图片"]}),"\n",(0,i.jsx)(n.li,{children:"使用 CDN"}),"\n",(0,i.jsx)(n.li,{children:"原始图片应该有良好的品质和分辨率，并且应该有 2x 宽度用于 HiDPI 设备"}),"\n",(0,i.jsxs)(n.li,{children:["对于远大于移动设备宽度（约 400 像素）的图片（例如采用页面设计宽度的主图片），请指定 ",(0,i.jsx)(n.code,{children:"sizes"})," 以便在较小的设备上提供较小的图片"]}),"\n",(0,i.jsxs)(n.li,{children:["对于重要图片，例如最大内容绘制 （LCP） 图片，请设置为 ",(0,i.jsx)(n.code,{children:'fetchpriority="high" loading="eager"'})," 尽早优先加载"]}),"\n",(0,i.jsxs)(n.li,{children:["为图片提供一个容器或样式，使其受到约束，避免影响累积布局偏移 （CLS）。这也是为什么",(0,i.jsx)(n.code,{children:"@sveltejs/enhanced-img"})," 会自动添加 ",(0,i.jsx)(n.code,{children:"width"}),"和 ",(0,i.jsx)(n.code,{children:"height"}),"属性"]}),"\n",(0,i.jsxs)(n.li,{children:["始终提供好的 ",(0,i.jsx)(n.code,{children:"alt"})," 文本。如果不这样做，Svelte 编译器将发出警告"]}),"\n",(0,i.jsxs)(n.li,{children:["不要在 ",(0,i.jsx)(n.code,{children:"sizes"})," 中使用 ",(0,i.jsx)(n.code,{children:"em"})," 或 ",(0,i.jsx)(n.code,{children:"rem"}),"，并且更改这些值的默认大小"]}),"\n"]})]})}function f(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}let u=f;f.__RSPRESS_PAGE_META={},f.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F23-SvelteKit%20%E2%9D%98%20Images.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. Vite 内置处理",id:"2-vite-内置处理",depth:2},{text:"3. @sveltejs/enhanced-img",id:"3-sveltejsenhanced-img",depth:2},{text:"3.1. 基础使用",id:"31-基础使用",depth:3},{text:"3.2. 动态导入多张",id:"32-动态导入多张",depth:3},{text:"3.3. 图片转换",id:"33-图片转换",depth:3},{text:"3.4. srcset and sizes",id:"34-srcset-and-sizes",depth:3},{text:"4. 使用图片的最佳实践",id:"4-使用图片的最佳实践",depth:2}],title:"23-SvelteKit ❘ Images",headingTitle:"23-SvelteKit ❘ Images",frontmatter:{}}}}]);