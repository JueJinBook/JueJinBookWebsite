"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["36888"],{87910:function(e,s,c){c.r(s),c.d(s,{default:()=>P});var n=c(552676),i=c(740453);let d=c.p+"static/image/cab4305ee915e764f65637a758d07869.85aae1de.webp",a=c.p+"static/image/1fee7717f1193289f98ba50f24e07aa1.fba1795c.webp",r=c.p+"static/image/a8869d1e2c36cbaf2f7d2b00324a9148.a47726db.webp",t=c.p+"static/image/17d02eb2f27e0c9c1237e07e3ce8fe85.df043d8c.webp",p=c.p+"static/image/de2d458e27d7a71b62e8593d15de14c8.660f15ed.webp",j=c.p+"static/image/c6b5080e2144cdcbbf62844007b310f5.d5600d16.webp",l=c.p+"static/image/0b29d0e7932a29dd60b80b9dbc0dacf5.1f7c2ad8.webp",x=c.p+"static/image/59ecc91df8a99030a08e969d82d2a138.0860bec3.webp",h=c.p+"static/image/fc5ea4765556daad811ec70c2580e068.ea39d52f.webp",b=c.p+"static/image/b8119ee013130db0a3c8bbce31796546.ee8b62f5.webp",m=c.p+"static/image/bc7869467e1aea35028be7217dda5633.01da3794.webp",f=c.p+"static/image/33ed4b0ff96cc22ba90dc59b30db58c0.b9abb7ce.webp",g=c.p+"static/image/597e426ef608a8da98363f0f460d53e3.48954559.webp",o=c.p+"static/image/fcf660c56359ef1248dcd3f2059946e8.67ef85fe.webp",w=c.p+"static/image/d6d60a13399f9dc5ae8848e3f44c0220.a1c676bf.webp",E=c.p+"static/image/581bc6b04754ee9e85a0886e0c0803b8.ef48220c.webp",u=c.p+"static/image/7cb06b763ddfadaeb37c3817c7d4ebb8.ba48b15f.webp",B=c.p+"static/image/d811eb8404d64d930303b78391cd7028.b5dbde21.webp",_=c.p+"static/image/7ae70701c34c376ad269e9365a0626d9.0623496c.webp",A=c.p+"static/image/dd86a9ba29120bcf25b9336f5fd9b669.9cd8e786.webp",k=c.p+"static/image/a124588342512dae5ab8d93cee93a5b5.b6b20862.webp",S=c.p+"static/image/406357a8ea3fdba16541fc625a358fbe.a31efd38.webp",J=c.p+"static/image/50ad2d96ec48e716d2efe4c1993fb985.5b3e6069.webp";function F(e){let s=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"24如何灵活的调试-jest-测试用例",children:["24.如何灵活的调试 Jest 测试用例",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#24如何灵活的调试-jest-测试用例",children:"#"})]}),"\n",(0,n.jsx)(s.p,{children:"Jest 是一个前端测试框架，它可以组织和运行测试用例，并且提供了 mock、断言等 api。"}),"\n",(0,n.jsx)(s.p,{children:"比如这样："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:J,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"这是 nest 应用的一段测试代码，在 beforeEach 里面做了初始化逻辑，在每个 describe 里写不同的测试逻辑。"}),"\n",(0,n.jsx)(s.p,{children:"这样的测试代码在应用中有很多。"}),"\n",(0,n.jsx)(s.p,{children:"输入 jest 就会执行所有的测试代码："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:S,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"如果只是想跑某个测试文件的用例呢？"}),"\n",(0,n.jsx)(s.p,{children:"可以这样："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:k,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"jest 后面加上要跑的测试文件的就行。"}),"\n",(0,n.jsx)(s.p,{children:"那如果测试文件里有多个测试用例，想只跑某个测试用例呢？"}),"\n",(0,n.jsx)(s.p,{children:"比如这三个测试用例："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:A,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"可以通过 -t 来指定："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:_,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"-t 是 --testNamePattern 的缩写，可以指定要跑的用例名的正则。"}),"\n",(0,n.jsx)(s.p,{children:"jest 只会跑匹配的用例："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:B,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"知道了 jest 用例怎么跑，那有时我们想断点调试它怎么办呢？"}),"\n",(0,n.jsx)(s.p,{children:"node 调试都是在 .vscode/launch.json 里加一个调试配置："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:u,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"然后在 debug 面板点击启动调试："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:E,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"那跑 jest 怎么跑呢？"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:w,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"其实我们跑 jest 最终执行的是 node_modules/jest/bin/jest.js 这个文件，所以调试的时候就直接用 node 跑这个文件，传入参数就行。"}),"\n",(0,n.jsx)(s.p,{children:"还要指定日志输出位置为内置的终端，也就是 console 为 integratedTerminal。"}),"\n",(0,n.jsx)(s.p,{children:"打个断点，然后点击调试按钮："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:o,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"但你会发现它跑了多个 woker 进程，每个用例一个，这是 jest 优化性能的方式。"}),"\n",(0,n.jsx)(s.p,{children:"但调试的时候可以不用这种优化，直接在主进程跑就行。"}),"\n",(0,n.jsx)(s.p,{children:"可以加个 -i 的参数："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:g,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"-i 是 --runInBand 的缩写，这个参数的意思是不再用 worker 进程并行跑测试用例，而是在当前进程串行跑："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:f,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"看左侧的调用栈，明显能看出区别来："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:m,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"如果我们只想调试 root2 这个测试用例，那就可以加上对应的参数："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:b,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"加上文件名和用例名。"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:h,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"但这样每调试一个用例都得改下配置也太麻烦了，能不能我打开哪个文件，就跑哪个文件的用例呢？"}),"\n",(0,n.jsx)(s.p,{children:"可以的。"}),"\n",(0,n.jsx)(s.p,{children:"VSCode 调试配置支持变量，比如 ${file} 就代表当前文件。"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:x,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"跑起来可以看到，文件路径是对的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:l,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"这样就可以打开哪个调试那个了。"}),"\n",(0,n.jsx)(s.p,{children:"那想指定具体的测试用例呢？"}),"\n",(0,n.jsx)(s.p,{children:"vscode 还支持输入类型的变量。"}),"\n",(0,n.jsx)(s.p,{children:"在 inputs 部分声明一个输入的变量，指定描述信息、默认值。然后在调试配置部分通过 ${input:变量名} 引用："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:j,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"跑起来就是这样的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:p,alt:""})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"输入哪个用例的名字就跑哪个用例。"}),"\n",(0,n.jsx)(s.p,{children:"这样，就一个调试配置来调试任意测试用例了！"}),"\n",(0,n.jsx)(s.p,{children:"大家可能用过 Jest Runner 等 VSCode 插件："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:r,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"它会在每个测试用例旁边加一个运行和调试的按钮："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:a,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"原理就很容易懂了，点击不同位置的 debug，就是获取文件名和用例名传入调试配置。"}),"\n",(0,n.jsx)(s.p,{children:"这种插件是挺方便，但是太过黑盒，出了问题很难解决，不如自己写调试配置，各种 jest 运行的参数都可以自己加。"}),"\n",(0,n.jsx)(s.p,{children:"而且调试配置可以写的很灵活，比如 -t 后面支持正则，那 root、root2、root3 这三个用例想跑后两个，我们完全可以输入 root\\d 来匹配。"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:d,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"用那个 jest 的插件可以么？明显不能。"}),"\n",(0,n.jsxs)(s.h2,{id:"总结",children:["总结",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,n.jsx)(s.p,{children:"Jest 支持跑全部的测试用例，或者跑指定文件指定名字的用例，在 VSCode 里可以通过 node 调试的方式来调试。"}),"\n",(0,n.jsx)(s.p,{children:"通过调试配置的内置变量以及输入的变量，可以达到一个调试配置调试任意文件任意用例的效果。"}),"\n",(0,n.jsx)(s.p,{children:"相比第三方的 Jest 插件，自己写调试配置明显灵活、强大的多。"})]})}function C(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(F,{...e})}):F(e)}let P=C;C.__RSPRESS_PAGE_META={},C.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F24.%E5%A6%82%E4%BD%95%E7%81%B5%E6%B4%BB%E7%9A%84%E8%B0%83%E8%AF%95%20Jest%20%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"24.如何灵活的调试 Jest 测试用例",headingTitle:"24.如何灵活的调试 Jest 测试用例",frontmatter:{}}}}]);