"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["98323"],{794056:function(n,e,r){r.r(e),r.d(e,{default:()=>h});var s=r(552676),i=r(740453);function d(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",code:"code",pre:"pre",h3:"h3",br:"br"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"10搭建基于-nginx-的代理服务器",children:["10搭建基于 Nginx 的代理服务器",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#10搭建基于-nginx-的代理服务器",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://nginx.org/en/",target:"_blank",rel:"noopener noreferrer",children:"Nginx"})," 是俄罗斯人编写的十分轻量级的 HTTP 服务器，是一个高性能的 HTTP 和反向代理服务器。相较于 ",(0,s.jsx)(e.a,{href:"https://httpd.apache.org/",target:"_blank",rel:"noopener noreferrer",children:"Apache"}),"、",(0,s.jsx)(e.a,{href:"https://www.lighttpd.net/",target:"_blank",rel:"noopener noreferrer",children:"lighttpd"})," ，它具有占有内存少、稳定性高等优势。它最常见的用途是提供反向代理服务。"]}),"\n",(0,s.jsx)(e.p,{children:"在本小节中，我们将利用 Nginx 的反向代理及负载均衡能力。所谓的负载均衡，是当单台服务器的性能无法满足业务需求时，需横向添加多台服务器；负载均衡就是让访问流量均匀的落在这个服务器集群的每个服务器上。具体逻辑图如下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf4279defaf8f?w=749&h=545&f=png&s=27262",alt:""})}),"\n",(0,s.jsx)(e.p,{children:"App 客户端将请求发送至 Nginx，Nginx 收到请求后，将其转发给后端的服务器集群。在本小册中，我们的 Demo 只有一台虚拟机，现将 Nginx 和后端服务器放在一起，Nginx 架设在 Tornado 之前，其基本框架图如下。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/26/162fed7f862487ae?w=648&h=613&f=png&s=27863",alt:""})}),"\n",(0,s.jsxs)(e.h2,{id:"安装-nginx",children:["安装 Nginx",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#安装-nginx",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["输入 ",(0,s.jsx)(e.code,{children:"yum install nginx"})," 安装 Nginx，安装完成后，输入 ",(0,s.jsx)(e.code,{children:"nginx -v"})," 查看 Nginx 是否安装成功。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf42e5f0860bd?w=727&h=354&f=png&s=33791",alt:""})}),"\n",(0,s.jsxs)(e.p,{children:["这里显示安装已成功，版本号为 ",(0,s.jsx)(e.code,{children:"1.12.2"}),"。"]}),"\n",(0,s.jsxs)(e.h2,{id:"配置随系统自启动",children:["配置随系统自启动",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#配置随系统自启动",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"配置 Nginx 随系统自启动，即 Linux 系统启动时，Nginx 能自启动，而不是人为干预启动。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-shell",children:"chkconfig --levels 235 nginx on\nservice nginx start\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf4315115e6d2?w=1555&h=72&f=png&s=17810",alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf432baa6a329?w=658&h=49&f=png&s=7930",alt:""})}),"\n",(0,s.jsxs)(e.h2,{id:"配置-nginx",children:["配置 Nginx",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#配置-nginx",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["进入 ",(0,s.jsx)(e.code,{children:"/etc/nginx/"}),", 编辑 ",(0,s.jsx)(e.code,{children:"nginx.conf"})," 文件。"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf437db1850dc?w=964&h=157&f=png&s=17939",alt:""}),"\n在 ",(0,s.jsx)(e.code,{children:"nginx.conf"})," 中，增加后端服务器 IP 和端口，由于 Nginx 和服务器在同一台机器上，这里填入："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"upstream frontends {\n    server 127.0.0.1:8000;\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["当 Nginx 和后端服务器不在同一台机器上，并有多台后端服务器设备时，则配置具体服务器的 ",(0,s.jsx)(e.code,{children:"IP:端口"})," 即可，Nginx 会负载均衡的将流量均匀分配到这些服务器上。此时配置如下："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"upstream frontends {\n    server x.x.x.x:nnn;\n    server y.y.y.y:mmm;\n    server z.z.z.z:lll;\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["由于 Nginx 对大小超过 1MB 的文件上传有限制，这里将默认限制 1MB 修改为 50MB，即添加配置 ",(0,s.jsx)(e.code,{children:"client_max_body_size 50m;"}),"，具体位置如下图所示。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf43a5a748c1f?w=798&h=503&f=png&s=38078",alt:""})}),"\n",(0,s.jsxs)(e.p,{children:["在 ",(0,s.jsx)(e.code,{children:"nignx.conf"})," 文件中的 ",(0,s.jsx)(e.code,{children:"location"})," 下，添加如下代理配置，即所有收到的请求，都转发到 ",(0,s.jsx)(e.code,{children:"frontends"})," （如上所述的 ",(0,s.jsx)(e.code,{children:"upstream frontends"}),"）处理，具体如下："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"    proxy_pass_header Server;\n    proxy_set_header Host $http_host;\n    proxy_redirect false;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Scheme $scheme;\n    proxy_pass http://frontends;\n"})}),"\n",(0,s.jsx)(e.p,{children:"具体位置如下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf4a15297a1b6?w=773&h=421&f=png&s=34375",alt:""})}),"\n",(0,s.jsx)(e.p,{children:"至此，我们已完成了 Nginx 的配置。"}),"\n",(0,s.jsxs)(e.h2,{id:"其他配置项介绍",children:["其他配置项介绍",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#其他配置项介绍",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\n# worker_processes 一般设置与 cpu 个数相等，也可配置为auto\nworker_processes auto;\n# 全局错误日志及 pid 目录\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    # 单个后台 worker proces s进程的最大并发链接数 \n    worker_connections 1024;\n}\n\nhttp {\n    # 设置 log 格式\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    # 配置上游服务器，此处为 Tornado 服务器 IP+Port\n    upstream frontends {\n        server 127.0.0.1:8000;\n        #server 10.10.10.10:8001;\n    }\n\n    # 访问日志\n    access_log  /var/log/nginx/access.log  main;\n\n    # sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，普通应用，设置为 on 即可；\n    # keepalive_timeout 配置超时时间；\n    # types_hash_max_size 影响散列表的冲突率。types_hash_max_size 越大，就会消耗更多的内存，但散列key的冲突率会降低，检索速度就更快。types_hash_max_size 越小，消耗的内存就越小，但散列key的冲突率可能上升。\n    # client_max_body_size 客户端上传的body的最大值。\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n    client_max_body_size 50m; \n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n\n    server {\n        # 监听端口为 80\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  _;\n        # 默认网站根目录位置\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        # 设置默认请求代理，此处使用frontends，即请求代理至 Tronado 服务器\n        location / {\n            proxy_pass_header Server;\n            proxy_set_header Host $http_host;\n            proxy_redirect false;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_pass http://frontends;\n        }\n        \n        # 定义 404 错误页\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        # 定义 50x 错误页\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n}\n\n'})}),"\n",(0,s.jsxs)(e.h2,{id:"重启-nginx-服务",children:["重启 Nginx 服务",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#重启-nginx-服务",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"service nginx stop\nservice nginx start\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf43c1832618c?w=672&h=116&f=png&s=17417",alt:""})}),"\n",(0,s.jsxs)(e.p,{children:["接下来测试从 App 客户端向 Nginx 服务器发送 HTTP 请求，查看是否能正常转发至后端服务器上。在这里，我们看到 ",(0,s.jsx)(e.code,{children:"nginx.conf"})," 有如下配置，即表示其对外服务的端口号为 80。实际项目中，可以根据具体情况进行修改。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf44047e8a3ca?w=750&h=251&f=png&s=17718",alt:""})}),"\n",(0,s.jsxs)(e.h2,{id:"请求测试",children:["请求测试",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#请求测试",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["我们还是以上一小节 App 客户端请求加载 H5 页面为例。由于 Nginx 对外提供服务的端口号是 80，而 80 端口在 HTTP 请求中可以不用输入，此时客户端请求的 URL 为：\n",(0,s.jsx)(e.a,{href:"http://150.109.33.132/users/login?phone=18866668888&password=demo123456",target:"_blank",rel:"noopener noreferrer",children:"http://150.109.33.132/users/login?phone=18866668888&password=demo123456"})]}),"\n",(0,s.jsxs)(e.h3,{id:"服务端输出",children:["服务端输出",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#服务端输出",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162cf44249203218?w=1251&h=290&f=png&s=71079",alt:""})}),"\n",(0,s.jsxs)(e.h3,{id:"客户端加载结果",children:["客户端加载结果",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#客户端加载结果",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"至此，我们已完成了 Nginx 的学习及服务器端的配置。"}),"\n",(0,s.jsxs)(e.h2,{id:"nginx-配置下载",children:["Nginx 配置下载",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#nginx-配置下载",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["链接：",(0,s.jsx)(e.a,{href:"https://pan.baidu.com/s/1-3p1N08YY5rfALqocX8YZw",target:"_blank",rel:"noopener noreferrer",children:"百度网盘 - nginx.conf"}),(0,s.jsx)(e.br,{}),"\n","密码：xtmr"]}),"\n",(0,s.jsxs)(e.h2,{id:"小结",children:["小结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"本节我们完成了 Nginx 服务器的搭建，并通过一个简单的例子，讲解了 Nginx 作为反向代理服务器和负载均衡器的应用。"})]})}function t(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}let h=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Python%20%E8%BD%BB%E6%9D%BE%E8%87%AA%E5%BB%BA%20App%20%E6%9C%8D%E5%8A%A1%E5%99%A8%2F10%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8E%20Nginx%20%E7%9A%84%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8.md"]={toc:[{text:"安装 Nginx",id:"安装-nginx",depth:2},{text:"配置随系统自启动",id:"配置随系统自启动",depth:2},{text:"配置 Nginx",id:"配置-nginx",depth:2},{text:"其他配置项介绍",id:"其他配置项介绍",depth:2},{text:"重启 Nginx 服务",id:"重启-nginx-服务",depth:2},{text:"请求测试",id:"请求测试",depth:2},{text:"服务端输出",id:"服务端输出",depth:3},{text:"客户端加载结果",id:"客户端加载结果",depth:3},{text:"Nginx 配置下载",id:"nginx-配置下载",depth:2},{text:"小结",id:"小结",depth:2}],title:"10搭建基于 Nginx 的代理服务器",headingTitle:"10搭建基于 Nginx 的代理服务器",frontmatter:{}}}}]);