"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43020"],{426171:function(e,r,n){e.exports=n.p+"static/image/257da19e859170ab850f8a39f964f044.09540e4b.webp"},251032:function(e,r,n){n.r(r),n.d(r,{default:()=>B});var s=n(552676),i=n(740453);let a=n.p+"static/image/9ac97f919eeb76ed5426a4429321eca0.b6d83dd5.webp",c=n.p+"static/image/256f1aca0f8e6073ccafda00121fa59b.bcd86e71.webp",t=n.p+"static/image/b510e1ab3c3e0a8b842b767ac5123871.c62e1544.webp",d=n.p+"static/image/d2db7ea936b541a97cf3e3174226bc5d.dd06318e.webp",l=n.p+"static/image/55f80409d409d292520328bbb105bc69.329624b9.webp",o=n.p+"static/image/c418843ad94a2b4ce519fb21c8042ea3.8a132c3d.webp",h=n.p+"static/image/024875a873a2c184e2c81ce642078fc1.2c21486c.webp",p=n.p+"static/image/eceb71d32347c9aeb1938d531e3c9c13.e673871a.webp",m=n.p+"static/image/42b15cc6e7d695970c6a7b20e04c74cf.f35d3076.webp",x=n.p+"static/image/2a6c910474af8da1c2ec2748c5375a65.fe66a8f1.webp",j=n.p+"static/image/6a3b4f8f05ed6f2fdfdd8103e96e25ab.d569fe81.webp",f=n.p+"static/image/09fa66d20a63c9feaffbe851815170aa.80270ff6.webp";var w=n(426171);let u=n.p+"static/image/ef0ae39e489729150267b492040e2ee4.afad501a.webp",g=n.p+"static/image/6534d50d53fc1b396ce6fba10544af09.4f94554c.webp",b=n.p+"static/image/6b03b874fc2f0b8d4c72d6b224ef77d9.49d1ae1e.webp",v=n.p+"static/image/4ffbf01bce553b2f181c24028be5a753.c129b068.webp",N=n.p+"static/image/199854a30bca94500b0ea3593d0457c7.c0616356.webp",P=n.p+"static/image/cbe06f7d3313e59be786d522f06c2342.a11b1d13.webp",k=n.p+"static/image/91261be7aba8b7d932f86be77665ba94.f791216d.webp",_=n.p+"static/image/edbf3356ab2f56b30255d264d09b4eae.8995fa91.webp",y=n.p+"static/image/8c256559de774c611c3278579a13f1c3.a0dc4342.webp",S=n.p+"static/image/bbff5928b6b034e5a5d07c40465ea58b.14a0166e.webp",A=n.p+"static/image/1b5939a5282fcba2009336c505c2bba8.2723b884.webp",M=n.p+"static/image/29fdb82edb6c013054ecd71660f728f3.285bf005.webp",q=n.p+"static/image/96e820a07bca46e5bf664e90b3c64e92.09adac82.webp",I=n.p+"static/image/091249ed9b307af46ab830c2a6922190.8f01b94a.webp",R=n.p+"static/image/de4bf429f471fb71a8f14fa00b1ab948.b2060367.webp",U=n.p+"static/image/a0afbefb89be6c8d928c478b404e64d0.c87b15d6.webp",O=n.p+"static/image/f1cdf645d668b87530ba93d3ce79f84f.7bca8903.webp",E=n.p+"static/image/5143ff3cf727428564da742f05eba68f.eea6805d.webp",z=n.p+"static/image/b1254f0d750dc6e54c1851bf0f6d0488.df5ff02f.webp",C=n.p+"static/image/6377f2087f94177c1e943cc8cfd5e190.5864cd9a.webp",L=n.p+"static/image/d44a9f921df05f7c05af5b144186e2f1.6596b5e6.webp";function T(e){let r=Object.assign({blockquote:"blockquote",p:"p",h2:"h2",a:"a",h3:"h3",strong:"strong",pre:"pre",code:"code",img:"img",ol:"ol",li:"li",h4:"h4",ul:"ul",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"推荐学习指数：⭐️️⭐️️⭐️️"}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"1-前言",children:["1. 前言",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"11-orm",children:["1.1. ORM",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#11-orm",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["我们先从 ORM（Object Relational Mapping） 开始说起，中文译为 ",(0,s.jsx)(r.strong,{children:"“对象关系映射”。"})," 简单的来说，就是用操作对象的方式操作数据库。"]}),"\n",(0,s.jsx)(r.p,{children:"比如我们用 SQL 查询数据："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"SELECT * FROM users WHERE name = 'yayu';\n"})}),"\n",(0,s.jsx)(r.p,{children:"如果使用 ORM 库（ORM 是一种技术，有很多实现 ORM 的库，Prisma 是其中一个），查询语句可以改为："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'var orm = require("orm-library");\nvar user = orm("users").where({ name: "yayu" });\n'})}),"\n",(0,s.jsxs)(r.p,{children:["这里我们虚构了一个 ",(0,s.jsx)(r.code,{children:"orm-library"}),"库，语言用的是 JavaScript。所以 ORM 的好处就在于你可以用自己喜欢的语言来操作数据库，只要有对应的 ORM 库支持。"]}),"\n",(0,s.jsx)(r.p,{children:"除此之外，ORM 对数据库进行了抽象，你可以以很低的成本更换数据库比如从 PostgreSQL 切换为 MySQL。通常 ORM 库还会支持一些高级的功能，方便开发者使用。"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:L,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"12-技术选型",children:["1.2. 技术选型",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#12-技术选型",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["在 Node.js 下，常用的 ORM 库有 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm",title:"https://www.prisma.io/docs/orm",target:"_blank",rel:"noopener noreferrer",children:"Prisma"}),"、",(0,s.jsx)(r.a,{href:"https://sequelize.org/docs/v6/",title:"https://sequelize.org/docs/v6/",target:"_blank",rel:"noopener noreferrer",children:"Sequelize"}),"、",(0,s.jsx)(r.a,{href:"https://typeorm.io/",title:"https://typeorm.io/",target:"_blank",rel:"noopener noreferrer",children:"TypeORM"}),"、",(0,s.jsx)(r.a,{href:"https://orm.drizzle.team/",title:"https://orm.drizzle.team/",target:"_blank",rel:"noopener noreferrer",children:"Drizzle"}),"。",(0,s.jsx)(r.a,{href:"https://mongoosejs.com/",title:"https://mongoosejs.com/",target:"_blank",rel:"noopener noreferrer",children:"Mongoose"})," 也是一种 ORM，但它是基于 Node.js 和 MongoDB 的 ORM 库，而像前面提到的这些 ORM 库都是支持多种数据库的。"]}),"\n",(0,s.jsxs)(r.p,{children:["让我们看看它们的 ",(0,s.jsx)(r.a,{href:"https://npmtrends.com/drizzle-orm-vs-mongoose-vs-prisma-vs-sequelize-vs-typeorm",title:"https://npmtrends.com/drizzle-orm-vs-mongoose-vs-prisma-vs-sequelize-vs-typeorm",target:"_blank",rel:"noopener noreferrer",children:"npm trends"}),"："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"其中 Sequelize 是老牌的 ORM 库，但是对 TypeScript 支持不佳，后来有了 TypeORM，对 TypeScript 支持更好，但是 TypeORM 更新维护比较慢，后被对 TypeScript 支持更佳、开发体验更好的 Prisma 超越。"}),"\n",(0,s.jsx)(r.p,{children:"Mongoose 也是老牌的 ORM 库，专注于 MongoDB 数据库。Drizzle 是这一两年才发布的小鲜肉，正在茁壮成长，目前版本还在 0.x.x。"}),"\n",(0,s.jsx)(r.p,{children:"此外，多数 ORM 库只支持关系型数据库。所以如果你用 MongoDB 这种非关系型数据库，那在这里面能选的也就只有 Prisma 和 Mongoose 了。"}),"\n",(0,s.jsxs)(r.p,{children:["有一个",(0,s.jsx)(r.a,{href:"https://stateofdb.com/orms",title:"https://stateofdb.com/orms",target:"_blank",rel:"noopener noreferrer",children:"关于 ORM 库的调查"}),"："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:z,alt:""})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"此项调查包含了多个语言的 ORM，比如 Django 是 Python 的，Eloquent 是 PHP 的。所以在 Node.js 中，目前使用度和满意度最高的就是 Prisma、Drizzle、Mongoose 了。"}),"\n",(0,s.jsx)(r.p,{children:"在实际的项目开发中，理论上应该选择使用度更高、版本相对稳定的库。目前 Prisma 5.19.1，Drizzle 0.33.0。简而言之，初学者推荐用 Prisma。如果你用 MongoDB，可以选择 Mongoose。"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"多说一句：关于 Prisma 和 Drizzle，就我个人的感觉，Drizzle 写法更加灵活、性能更好，但配置相对复杂，样板代码更多，需要对 SQL 有良好的掌握，入门门槛更高。Prisima 更加友好，注重易用性，入门门槛低，我会建议对 ORM 和 SQL 不熟悉的同学从 Prisma 开始学起。"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"数据库我们继续选择 MySQL，常用的数据库也就是 Postgres、MongoDB、MySQL、Redis 了："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:O,alt:""})}),"\n",(0,s.jsxs)(r.h2,{id:"2-mysql",children:["2. MySQL",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#2-mysql",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"21-安装",children:["2.1. 安装",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#21-安装",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["首先是安装 mysql 包，下载地址：",(0,s.jsx)(r.a,{href:"https://dev.mysql.com/downloads/mysql/",title:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer",children:"dev.mysql.com/downloads/m…"})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"因为我个人的电脑是 macOS，所以讲一下 macOS 安装时会遇到的一些问题。"}),"\n",(0,s.jsxs)(r.p,{children:["查看“关于本机”，如果处理器是 Intel ，选择带 ",(0,s.jsx)(r.code,{children:"x86"}),"的包，如果芯片是 Apple M1，选择带 ",(0,s.jsx)(r.code,{children:"ARM"}),"的包。"]}),"\n",(0,s.jsx)(r.p,{children:"此外还要注意苹果系统的版本，下载包的名字包含了支持的 OS 系统版本。比如你的系统是 macOS 11，安装支持 macOS 13 的包，会出现报错："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"如果系统是 macOS 11，可以选择 8.0.28 版本："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:I,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"安装的过程中需要设置下 root 用户的密码，记住这个密码就行。"}),"\n",(0,s.jsx)(r.p,{children:"安装完成后，可以在“系统偏好设置”中查看到："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:q,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["点击进入 MySQL 界面，点击 ",(0,s.jsx)(r.code,{children:"Start MySQL Server"}),"即可启动 MySQL："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"22-配置环境变量",children:["2.2. 配置环境变量",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#22-配置环境变量",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"查看当前 Shell："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"echo $SHELL\n"})}),"\n",(0,s.jsxs)(r.p,{children:["如果是 ",(0,s.jsx)(r.code,{children:"/bin/bash"}),"，说明用的是 bash，如果是 ",(0,s.jsx)(r.code,{children:"/bin/zsh"}),"，说明用的是 zsh。"]}),"\n",(0,s.jsxs)(r.p,{children:["如果是 ",(0,s.jsx)(r.code,{children:"bash"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# 31-实战篇 ❘  Prisma\nvim ~/.bash_profile\n# 2. 添加\nexport PATH=${PATH}:/usr/local/mysql/bin\n# 3. 更新\nsource ~/.bash_profile\n"})}),"\n",(0,s.jsxs)(r.p,{children:["如果是 ",(0,s.jsx)(r.code,{children:"zsh"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"# 1. 更改\nvim ~/.zshrc\n# 2. 添加\nexport PATH=${PATH}:/usr/local/mysql/bin\n# 3. 更新\nsource ~/.zshrc\n"})}),"\n",(0,s.jsx)(r.p,{children:"此时在命令行中输入："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"mysql -u root -p\n"})}),"\n",(0,s.jsx)(r.p,{children:"输入安装时设置的密码，即可成功进入 MySQL CLI："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"23-使用-gui",children:["2.3. 使用 GUI",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#23-使用-gui",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"MySQL GUI 工具可以使用 Navicat，方便查看和操作数据："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsxs)(r.h2,{id:"3-prisma-介绍",children:["3. Prisma 介绍",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#3-prisma-介绍",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"现在让我们正式的介绍下 Prisma 吧。按照官方的介绍，它是下一代的 Node.js 和 TypeScript ORM："}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Next-generation Node.js and TypeScript ORM"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"它的优势在于："}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Prisma unlocks a new level of developer experience when working with databases thanks to its intuitive data model, automated migrations, type-safety & auto-completion."}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"简单的来说，就是开发体验更好：直观的数据模型、自动化迁移、类型安全、自动补全。"}),"\n",(0,s.jsxs)(r.p,{children:["比如你可以在 ",(0,s.jsx)(r.code,{children:"schema.prisma"}),"这个文件（Prisma 自定义的一种文件格式）中定义数据模型，就像这样："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["其中",(0,s.jsx)(r.code,{children:"model Post"})," 映射了数据库中的 Post 表，id、title、content、published 映射了表中的字段，字段后面的 Int、String 等表示字段类型，再后面的 @id、@default，这些是属性，我们稍后再讲。"]}),"\n",(0,s.jsx)(r.p,{children:"当你需要操作数据库时，Prisma 提供了 Prisma Client："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["Prisma 同时提供了 Prisma Migrate，这是 Prisma 的迁移系统。比如当你在 ",(0,s.jsx)(r.code,{children:"schema.prisma"}),"更改了数据模型，命令行运行 ",(0,s.jsx)(r.code,{children:"npx prisma migrate dev"}),"，prisma 就会根据你定义的数据模型，修改数据库。"]}),"\n",(0,s.jsxs)(r.p,{children:["Prisma 还提供了 Prisma Studio，这是 Prisma 提供的查看和编辑数据库数据的 GUI 工具。不同于 Navicat 这样的软件，Prisma Studio 的开启方式是在命令行运行 ",(0,s.jsx)(r.code,{children:"npx prisma studio"}),"，它会打开一个网页，展示数据库中的数据："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"Prisma 目前支持的语言和数据库有："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["好了，Prisma 的大致介绍就这些。",(0,s.jsx)(r.strong,{children:"Prisma Client"}),"、",(0,s.jsx)(r.strong,{children:"Prisma Migrate"}),"、",(0,s.jsx)(r.strong,{children:"Prisma Studio"})," 就是 Prisma 的主要组成部分了。接下来让我们在实战中具体体会吧！"]}),"\n",(0,s.jsxs)(r.h2,{id:"4-prisma-使用",children:["4. Prisma 使用",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#4-prisma-使用",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"41-创建文件",children:["4.1. 创建文件",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#41-创建文件",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["项目根目录安装 ",(0,s.jsx)(r.code,{children:"prisma"}),"作为开发依赖："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"npm install prisma --save-dev\n"})}),"\n",(0,s.jsx)(r.p,{children:"安装后运行："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"npx prisma init\n"})}),"\n",(0,s.jsx)(r.p,{children:"这一步会："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["创建一个 ",(0,s.jsx)(r.code,{children:"prisma"}),"文件夹，其中包含一个 ",(0,s.jsx)(r.code,{children:"schema.prisma"}),"文件，这就是定义数据模型的地方"]}),"\n",(0,s.jsxs)(r.li,{children:["创建一个",(0,s.jsx)(r.code,{children:".env"}),"文件，用于定义环境变量（如数据库地址）"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"42-连接-mysql-数据库",children:["4.2. 连接 MySQL 数据库",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#42-连接-mysql-数据库",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["修改 ",(0,s.jsx)(r.code,{children:"prisma/schema.prisma"}),"，因为默认的 ",(0,s.jsx)(r.code,{children:"provider"})," 是 ",(0,s.jsx)(r.code,{children:"postgrep"}),"，我们改成 ",(0,s.jsx)(r.code,{children:"mysql"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "mysql"\n  url      = env("DATABASE_URL")\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["修改 ",(0,s.jsx)(r.code,{children:".env"})," 中的 ",(0,s.jsx)(r.code,{children:"DATABASE_URL"}),"，此 URL 规则如下："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"按照此规则，我们的地址应该修改为："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'DATABASE_URL="mysql://root:admin@localhost:3306/svelteNotes"\n'})}),"\n",(0,s.jsxs)(r.p,{children:["其中 ",(0,s.jsx)(r.code,{children:"svelteNotes"})," 为我们的数据库名称。目前这个数据库我们在 MySQL 中还没有建立，所以我们来建一个。"]}),"\n",(0,s.jsxs)(r.p,{children:["一种方法是使用 MySQL GUI 工具，右键直接建立一个名为 ",(0,s.jsx)(r.code,{children:"svelteNotes"})," 的数据库。"]}),"\n",(0,s.jsx)(r.p,{children:"一种方法是使用命令行："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"# 访问数据库\nmysql -u root -p\n# 创建数据库\nCREATE DATABASE svelteNotes;\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["执行 ",(0,s.jsx)(r.code,{children:"npx prisma db pull"}),"，如果出现以下提示即表示连接成功："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"注：虽然是报错信息，显示数据库为空，但说明至少连接上了数据库。如果数据库不存在，就是另外一个报错了："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"43-定义数据模型",children:["4.3. 定义数据模型",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#43-定义数据模型",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"现在我们来定义数据模型，数据模型需要与数据库保持一致。我们有两种方式使其保持一致："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["手动修改数据模型，然后运行 ",(0,s.jsx)(r.code,{children:"npx prisma migrate dev"}),"修改数据库，使其保持一致"]}),"\n",(0,s.jsxs)(r.li,{children:["手动修改数据库，然后运行 ",(0,s.jsx)(r.code,{children:"npx prisma db pull"}),"修改数据模型，使其保持一致"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["现在我们修改下 ",(0,s.jsx)(r.code,{children:"prisma/schema.prisma"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "mysql"\n  url      = env("DATABASE_URL")\n}\n\nmodel User {\n  id       String @id @default(uuid())\n  username String\n  password String\n  notes    Note[]\n}\n\nmodel Note {\n  id        String   @id @default(cuid())\n  title     String   @db.VarChar(255)\n  content   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  author    User     @relation(fields: [authorId], references: [id])\n  authorId  String\n}\n\n'})}),"\n",(0,s.jsxs)(r.p,{children:["运行 ",(0,s.jsx)(r.code,{children:"npx prisma migrate dev"}),"，然后给这次 migrate 起一个名字（这个名字无所谓，一个标识而已）："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"再次查看数据库，User 表、Note 表和其中的字段都已建立："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["这个 Prisma schema 同步数据库的过程，就被称之为 ",(0,s.jsx)(r.strong,{children:"migration"}),"。每次迁移，都会生成一个迁移文件，存放在 ",(0,s.jsx)(r.code,{children:"prisma/migrations"}),"下。"]}),"\n",(0,s.jsxs)(r.p,{children:["接下来是第二种方式。现在我们直接修改数据库，比如在 Note 表添加一个 ",(0,s.jsx)(r.code,{children:"content"})," 字段："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["然后运行 ",(0,s.jsx)(r.code,{children:"npx prisma db pull"}),"，Prisma 会自动在 ",(0,s.jsx)(r.code,{children:"prisma/schema.prisma"})," 中同步该字段："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model Note {\n  // ...\n  content   String?  @db.VarChar(255)\n  // ...\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["这个从数据库推导出 Prisma schema 的过程就叫做 ",(0,s.jsx)(r.strong,{children:"Introspection"}),"，中文译为“内省”，指通过检查数据库的结构和元数据来了解数据库本身的特性和信息。"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Introspection is the process of getting the metadata of the database, such as object names, types of columns, and source code"}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["不过注意使用 ",(0,s.jsx)(r.code,{children:"npx prisma db pull"}),"的时候，还要再搭配使用 ",(0,s.jsx)(r.code,{children:"prisma generate"}),"更新 Prisma Client 后，你才能正确的通过 Prisma Client 操作数据库："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"44-语法高亮与自动格式化",children:["4.4. 语法高亮与自动格式化",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#44-语法高亮与自动格式化",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"多说一句：schema.prisma 因为是 Prisma 自定义的文件格式，所以文件默认无语法高亮"}),"，使用 VSCode 的同学可以下载 Prisma 这个插件以支持该文件语法高亮："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["安装该插件后，还可以打开 ",(0,s.jsx)(r.code,{children:"settings.json"}),"，添加 prisma 文件的自动格式化："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"效果如下："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsxs)(r.p,{children:["当然如果你不设置，也可以在根目录运行 ",(0,s.jsx)(r.code,{children:"npx prisma format"}),"格式化该文件。"]}),"\n",(0,s.jsxs)(r.h3,{id:"45-prisma-client",children:["4.5. Prisma Client",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#45-prisma-client",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["安装 ",(0,s.jsx)(r.code,{children:"@prisma/client"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"npm install @prisma/client\n"})}),"\n",(0,s.jsx)(r.p,{children:"我们在 Zod 和 Superforms 篇中只是实现了注册的数据验证，但实际上数据并为写入数据库。本篇我们将注册数据写入数据库中。那就让我们开始实现吧！本篇的代码将接着 Superforms 篇的实现。"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"schema.prisma"}),"的代码为："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "mysql"\n  url      = env("DATABASE_URL")\n}\n\nmodel User {\n  id       String @id @default(uuid())\n  username String\n  password String\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["注意：如果修改了 schema，运行 ",(0,s.jsx)(r.code,{children:"npx prisma migrate dev"}),"，将修改同步数据库，migrate 会自动更新 Prisma Client，所以无须再运行 ",(0,s.jsx)(r.code,{children:"prisma generate"}),"。"]}),"\n",(0,s.jsxs)(r.p,{children:["新建 ",(0,s.jsx)(r.code,{children:"lib/prisma.js"}),"，代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'import { PrismaClient } from "@prisma/client";\n\nconst globalForPrisma = global;\n\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== "production") globalForPrisma.prisma = prisma;\n\nexport async function addUser(username, password) {\n  const user = await prisma.user.create({\n    data: {\n      username,\n      password,\n      notes: {\n        create: [],\n      },\n    },\n  });\n\n  return {\n    name: username,\n    username,\n    userId: user.id,\n  };\n}\n\nexport async function getUser(userId) {\n  const user = await prisma.user.findFirst({\n    where: {\n      id: userId,\n    },\n    include: {\n      notes: true,\n    },\n  });\n  return {\n    username: user.username,\n    userId: user.id,\n  };\n}\n\nexport default prisma;\n'})}),"\n",(0,s.jsxs)(r.p,{children:["在这段代码中，我们使用了 ",(0,s.jsx)(r.code,{children:"const prisma = globalForPrisma.prisma || new PrismaClient()"}),"这种方式，这是为了避免开发环境下建立多个 Prisma Client 实例导致问题，详细参考",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/more/help-and-troubleshooting/help-articles/nextjs-prisma-client-dev-practices",title:"https://www.prisma.io/docs/orm/more/help-and-troubleshooting/help-articles/nextjs-prisma-client-dev-practices",target:"_blank",rel:"noopener noreferrer",children:"此篇说明"}),"。"]}),"\n",(0,s.jsxs)(r.p,{children:["在这段代码中，我们演示了如何增删改查数据库。注意我们获取 User 表的时候，要使用小写的 ",(0,s.jsx)(r.code,{children:"prisma.user"})," 获取。Prisma Client 具体 API 的用法可以参考 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference",target:"_blank",rel:"noopener noreferrer",children:"Prisma Client API reference"}),"，当然下节我会带大家过一遍 API。"]}),"\n",(0,s.jsxs)(r.p,{children:["修改 ",(0,s.jsx)(r.code,{children:"src/routes/signup2/+page.server.ts"}),"，代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'import type { Actions, PageServerLoad } from "./$types.js";\nimport { fail, redirect } from "@sveltejs/kit";\nimport { superValidate, message } from "sveltekit-superforms";\nimport { zod } from "sveltekit-superforms/adapters";\nimport { UserSchema } from "$lib/types";\nimport { addUser } from "$lib/prisma";\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const load: PageServerLoad = async () => {\n  return {\n    form: await superValidate(zod(UserSchema)),\n  };\n};\n\nexport const actions: Actions = {\n  default: async ({ cookies, request }) => {\n    const form = await superValidate(request, zod(UserSchema));\n    if (!form.valid) return fail(400, { form });\n\n    const { username, password } = form.data;\n    const user = await addUser(username, password);\n\n    cookies.set("sessionid", user.userId, { path: "/" });\n\n    redirect(303, "/");\n  },\n};\n'})}),"\n",(0,s.jsx)(r.p,{children:"在这段代码中，成功注册后，我们将 userId 写入 cookies 中。"}),"\n",(0,s.jsxs)(r.p,{children:["新建 ",(0,s.jsx)(r.code,{children:"svelte-zod-prisma/src/hooks.server.js"}),"，代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'import { redirect } from "@sveltejs/kit";\nimport { getUser } from "$lib/prisma";\n\nconst public_paths = ["/signup2"];\n\nfunction isPathAllowed(path) {\n  return public_paths.some(\n    (allowedPath) => path === allowedPath || path.startsWith(allowedPath + "/")\n  );\n}\n\nexport async function handle({ event, resolve }) {\n  let user = null;\n\n  if (event.cookies.get("sessionid")) {\n    user = await getUser(event.cookies.get("sessionid"));\n  }\n\n  const url = new URL(event.request.url);\n  if (!user && !isPathAllowed(url.pathname)) {\n    redirect(302, "/signup2");\n  }\n\n  if (user) {\n    event.locals.user = user;\n\n    // 登录用户尝试访问注册页面，重定向到主页\n    if (url.pathname == "/signup2") {\n      redirect(302, "/");\n    }\n  }\n\n  return resolve(event);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"在这段代码中，我们声明了公共路由，在未登录的情况下，访问其他路由的时候会重定向到注册页面（按理说应该是登录，这里我们将其简化了）。如果 Cookies 中有 sessionid，我们通过 sessionid 查找获取用户信息。"}),"\n",(0,s.jsxs)(r.p,{children:["修改 ",(0,s.jsx)(r.code,{children:"src/routes/+page.svelte"}),"，代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'<script>\n  import { enhance } from \'$app/forms\';\n  const { data } = $props();\n<\/script>\n\n<h1>欢迎 {data.user.username}！</h1>\n\n<form method="POST" use:enhance action="?/loginOut">\n  <button type="submit" class="text-blue-500 underline">登出</button>\n</form>\n'})}),"\n",(0,s.jsxs)(r.p,{children:["修改 ",(0,s.jsx)(r.code,{children:"src/routes/+page.server.ts"}),"，代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'import { error } from "@sveltejs/kit";\nimport { fail, redirect } from "@sveltejs/kit";\n\nexport async function load({ locals }) {\n  return {\n    user: locals.user,\n  };\n}\n\nexport const actions = {\n  loginOut: async (event) => {\n    event.cookies.delete("sessionid", { path: "/" });\n    event.locals.user = null;\n\n    redirect(303, "/signup2");\n  },\n};\n'})}),"\n",(0,s.jsx)(r.p,{children:"这里主要是设置了登出的处理。"}),"\n",(0,s.jsx)(r.p,{children:"浏览器效果如下："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"同时数据库中也多了对应的数据："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsxs)(r.h3,{id:"46-prisma-studio",children:["4.6. Prisma Studio",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#46-prisma-studio",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["在根目录运行 ",(0,s.jsx)(r.code,{children:"npx prisma studio"}),"，它会打开一个网页："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"你可以在这个页面查看和编辑数据库中的数据。"}),"\n",(0,s.jsxs)(r.h2,{id:"5-prisma-深入了解",children:["5. Prisma 深入了解",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#5-prisma-深入了解",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Prisma 的基本使用就这些内容，Prisma 的官方文档写得很好，再深入的部分其实看文档即可，所以我们这里讲讲作为初学者，接下来要学习的一些内容。"}),"\n",(0,s.jsxs)(r.h3,{id:"51-prisma-schema",children:["5.1. Prisma schema",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#51-prisma-schema",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"首先是数据模型的书写，举个例子："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model Post {\n  id  Int @id @default(autoincrement())\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"模型的每个字段，包含："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#model-fields",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#model-fields",target:"_blank",rel:"noopener noreferrer",children:"字段名称"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#model-fields",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#model-fields",target:"_blank",rel:"noopener noreferrer",children:"字段类型"})}),"\n",(0,s.jsxs)(r.li,{children:["（可选）",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/prisma-schema/data-model/models#type-modifiers",title:"https://www.prisma.io/docs/orm/prisma-schema/data-model/models#type-modifiers",target:"_blank",rel:"noopener noreferrer",children:"类型修饰符"}),"（type modifiers）"]}),"\n",(0,s.jsxs)(r.li,{children:["（可选）",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/prisma-schema/data-model/models#defining-attributes",title:"https://www.prisma.io/docs/orm/prisma-schema/data-model/models#defining-attributes",target:"_blank",rel:"noopener noreferrer",children:"属性"}),"（attributes）"]}),"\n"]}),"\n",(0,s.jsxs)(r.h4,{id:"511-字段类型",children:["5.1.1. 字段类型",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#511-字段类型",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["其中，字段类型有 ",(0,s.jsx)(r.code,{children:"String"}),"、",(0,s.jsx)(r.code,{children:"Boolean"}),"、",(0,s.jsx)(r.code,{children:"Int"}),"、",(0,s.jsx)(r.code,{children:"BigInt"}),"、",(0,s.jsx)(r.code,{children:"Float"}),"、",(0,s.jsx)(r.code,{children:"Decimal"}),"（存储精确小数值）、",(0,s.jsx)(r.code,{children:"DateTime"}),"、",(0,s.jsx)(r.code,{children:"Json"}),"、",(0,s.jsx)(r.code,{children:"Bytes"}),"（存储文件）、",(0,s.jsx)(r.code,{children:"Unsupported"}),"。字段类型还可以是数据库底层数据类型，通过 ",(0,s.jsx)(r.code,{children:"@db."})," 描述，比如 ",(0,s.jsx)(r.code,{children:"@db.VarChar(255)"}),", varchar 正是 MySQL 支持的底层数据类型。"]}),"\n",(0,s.jsxs)(r.h4,{id:"512-类型修饰符",children:["5.1.2. 类型修饰符",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#512-类型修饰符",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"类型修饰符有两个："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"[]"})," 表示字段是数组"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"?"})," 表示字段可选"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  name String?\n  favoriteColors String[]\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"目前 Prisma 不支持可选数组，也就是这两个类型修饰符不能同时用。如果你有需要，那就创建数据的时候创建一个空数组。"}),"\n",(0,s.jsxs)(r.h4,{id:"513-属性",children:["5.1.3. 属性",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#513-属性",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["再后面的 ",(0,s.jsx)(r.code,{children:"@id @default(autoincrement())"})," 这些就都是属性了。属性的作用是修改字段或块（model）的行为，影响字段的属性用 ",(0,s.jsx)(r.code,{children:"@"})," 作为前缀，影响块的属性用 ",(0,s.jsx)(r.code,{children:"@@"}),"作为前缀，举个例子："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'model User {\n  id        Int    @id @default(autoincrement())\n  firstName String @map("first_name")\n  @@map("users")\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["在这个例子中，",(0,s.jsx)(r.code,{children:"map"}),"的作用是映射："]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:'@map("first_name")'})," 表示",(0,s.jsx)(r.code,{children:"firstName"})," 字段映射数据库中的 ",(0,s.jsx)(r.code,{children:"first_name"})," 字段"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:'@@map("users")'}),"表示 ",(0,s.jsx)(r.code,{children:"User"})," 映射数据库的中的 ",(0,s.jsx)(r.code,{children:"users"})," 表"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"具体影响字段的属性有："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#id",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#id",target:"_blank",rel:"noopener noreferrer",children:"@id"}),"（设置主键 ",(0,s.jsx)(r.code,{children:"PRIMARY KEY"}),"）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#default",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#default",target:"_blank",rel:"noopener noreferrer",children:"@default"}),"（设置字段默认值）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#unique",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#unique",target:"_blank",rel:"noopener noreferrer",children:"@unique"}),"（唯一约束，表示该字段值唯一，设置后可以用 ",(0,s.jsx)(r.code,{children:"findUnique"})," 来查找）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#relation",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#relation",target:"_blank",rel:"noopener noreferrer",children:"@relation"}),"（设置外键 ",(0,s.jsx)(r.code,{children:"FOREIGN KEY"}),"/ ",(0,s.jsx)(r.code,{children:"REFERENCES"}),"，用于建立表与表之间的关联，很重要的概念，下节会具体讲）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#map",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#map",target:"_blank",rel:"noopener noreferrer",children:"@map"}),"（映射数据库中的字段）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#updatedat",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#updatedat",target:"_blank",rel:"noopener noreferrer",children:"@updatedAt"}),"（自动存储记录更新的时间）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#ignore",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#ignore",target:"_blank",rel:"noopener noreferrer",children:"@ignore"}),"（该字段会被忽略，不会生成到 Prisma Client 中）"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"影响块的属性有："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#id-1",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#id-1",target:"_blank",rel:"noopener noreferrer",children:"@@id"}),"：相当于关系型数据库中复合主键"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  firstName String\n  lastName  String\n  email     String  @unique\n  isAdmin   Boolean @default(false)\n\n  @@id([firstName, lastName])\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"firstName 和 lastName 共同组成主键，允许 firstName 或 lastName 单独重复，但不能一起重复。"}),"\n",(0,s.jsx)(r.p,{children:"当创建的时候，字段需要都创建："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.create({\n  data: {\n    firstName: "Alice",\n    lastName: "Smith",\n  },\n});\n'})}),"\n",(0,s.jsx)(r.p,{children:"查询的时候，使用生成的复合 id （firstName_lastName）进行查询："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.findUnique({\n  where: {\n    firstName_lastName: {\n      firstName: "Alice",\n      lastName: "Smith",\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#unique-1",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#unique-1",target:"_blank",rel:"noopener noreferrer",children:"@@unique"}),"：复合唯一约束"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"定义："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  id        Int     @default(autoincrement())\n  firstName String\n  lastName  String\n  isAdmin   Boolean @default(false)\n\n  @@unique([firstName, lastName])\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"查询："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.findUnique({\n  where: {\n    firstName_lastName: {\n      firstName: "Alice",\n      lastName: "Smith",\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#index",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#index",target:"_blank",rel:"noopener noreferrer",children:"@@index"}),"：创建数据库索引"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"可以创建多列索引："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model Post {\n  id      Int     @id @default(autoincrement())\n  title   String\n  content String?\n\n  @@index([title, content])\n}\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"4",children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#map-1",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#map-1",target:"_blank",rel:"noopener noreferrer",children:"@@map"}),"：映射数据库表名"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#ignore-1",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#ignore-1",target:"_blank",rel:"noopener noreferrer",children:"@@ignore"}),"：忽略此模型"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#schema",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#schema",target:"_blank",rel:"noopener noreferrer",children:"@@schema"}),"：在支持 multiSchema 的时候使用，比如搭配 supabase，为 model 添加授权相关的字段",(0,s.jsx)(r.code,{children:'@@schema("auth")'})]}),"\n"]}),"\n",(0,s.jsxs)(r.h4,{id:"514-属性函数",children:["5.1.4. 属性函数",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#514-属性函数",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"让我们再看下这个例子："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  id        Int    @id @default(autoincrement())\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"@default"})," 中的 ",(0,s.jsx)(r.code,{children:"autoincrement()"})," 被称为属性函数。属性函数有："]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#auto",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#auto",target:"_blank",rel:"noopener noreferrer",children:"auto()"}),"：由数据库自动生成，只用于 Mongodb 数据库（因为 Mongodb 的 _id 是自动生成的）："]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'model User {\n  id   String  @id @default(auto()) @map("_id") @db.ObjectId\n}\n'})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#autoincrement",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#autoincrement",target:"_blank",rel:"noopener noreferrer",children:"autoincrement()"}),"：自动增长，只用于关系型数据库："]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  id   Int    @id @default(autoincrement())\n  name String\n}\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#cuid",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#cuid",target:"_blank",rel:"noopener noreferrer",children:"cuid()"}),"：基于 ",(0,s.jsx)(r.a,{href:"https://github.com/paralleldrive/cuid",title:"https://github.com/paralleldrive/cuid",target:"_blank",rel:"noopener noreferrer",children:"cuid"})," 规范生成唯一标识符，适用于浏览器环境中（示例：tz4a98xxat96iws9zmbrgj3a）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#uuid",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#uuid",target:"_blank",rel:"noopener noreferrer",children:"uuid()"}),"：基于 ",(0,s.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier",title:"https://en.wikipedia.org/wiki/Universally_unique_identifier",target:"_blank",rel:"noopener noreferrer",children:"uuid"})," 规范生成唯一标识符（示例：9c5b94b1-35ad-49bb-b118-8e8fc24abf80）"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#now",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#now",target:"_blank",rel:"noopener noreferrer",children:"now()"}),"：创建记录的时间戳"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#dbgenerated",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#dbgenerated",target:"_blank",rel:"noopener noreferrer",children:"dbgenerated()"}),"：无法在 Prisma schema 中表示的默认值（如 random()）"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["除此之外，还有一个 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#enum",title:"https://www.prisma.io/docs/orm/reference/prisma-schema-reference#enum",target:"_blank",rel:"noopener noreferrer",children:"enum"})," 类型，很好理解，使用示例如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"enum Role {\n  USER\n  ADMIN\n}\n\nmodel User {\n  id   Int  @id @default(autoincrement())\n  role Role @default(USER)\n}\n"})}),"\n",(0,s.jsxs)(r.h3,{id:"52-relations",children:["5.2. Relations",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#52-relations",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"关系（relation）是指 Prisma schema 中的两个 model 建立连接。建立连接的方式是通过主键（PRIMARY KEY，简写 PK）和外键（FOREIGN KEY，简写 FK）。"}),"\n",(0,s.jsxs)(r.p,{children:["所谓主键，指的是数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的键，换句话说，主键是关系表中记录的唯一标识，也就是我们添加 ",(0,s.jsx)(r.code,{children:"@id"}),"属性的字段。"]}),"\n",(0,s.jsxs)(r.p,{children:["所谓外键，指的是指向其他表的主键的键，用于建立两张表的关联性。Prisma 用 ",(0,s.jsx)(r.code,{children:"@relation"}),"属性来建立关系。"]}),"\n",(0,s.jsxs)(r.h4,{id:"521-建立关联",children:["5.2.1. 建立关联",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#521-建立关联",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"以我们的项目为例，一张 User 表、一张 Note 表。因为一个作者可以写多篇笔记，所以 User 和 Note 的关系为一对多："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"如果我们要建立两个表之间的关系，写法如下："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-plain",children:"model User {\n  id       String @id @default(uuid())\n  notes    Note[]\n}\n\nmodel Note {\n  id        String   @id @default(cuid())\n  author    User     @relation(fields: [authorId], references: [id])\n  authorId  String\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Note 的 author 字段指向 User，其中 ",(0,s.jsx)(r.code,{children:"@relation(fields: [authorId], references: [id])"}),"表示 Note 的 authorId 字段与 User 的 id 字段建立关系，",(0,s.jsx)(r.strong,{children:"也就是这两个字段的值应该是一致的"}),"。"]}),"\n",(0,s.jsx)(r.p,{children:"像我们的项目的 schema 为："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:"model User {\n  id       String @id @default(uuid())\n  username String\n  password String\n  notes    Note[]\n}\n\nmodel Note {\n  id        String   @id @default(cuid())\n  title     String   @db.VarChar(255)\n  content   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  author    User     @relation(fields: [authorId], references: [id])\n  authorId  String\n}\n"})}),"\n",(0,s.jsxs)(r.h4,{id:"522-创建记录",children:["5.2.2. 创建记录",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#522-创建记录",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["当你通过 ",(0,s.jsx)(r.code,{children:"@relation"})," 建立了 User 表和 Note 表的关联后，你可以更便捷的进行一些操作，比如创建嵌套的记录："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.create({\n  data: {\n    username,\n    password,\n    notes: {\n      create: [\n        { title: "1", content: "1" },\n        { title: "2", content: "2" },\n      ],\n    },\n  },\n});\n'})}),"\n",(0,s.jsx)(r.p,{children:"此时 Note 表中也会有两条记录，并且两条记录的 authorId 会自动设置为刚创建的 user 记录的 id。"}),"\n",(0,s.jsxs)(r.h4,{id:"523-查询记录",children:["5.2.3. 查询记录",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#523-查询记录",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"当你查询 User 表的信息，可以返回 Note 表中的信息。当你通过以下代码查询时："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.findFirst({\n  where: {\n    username: "1",\n  },\n  include: {\n    notes: true,\n  },\n});\nconsole.log(user);\n'})}),"\n",(0,s.jsx)(r.p,{children:"打印的信息为："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsxs)(r.h4,{id:"524-connect",children:["5.2.4. connect",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#524-connect",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["不过使用关系的时候，要注意及时关联。比如当你创建了一条 note 时，要关联到对应的 user 中，为此你需要使用 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connect",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connect",target:"_blank",rel:"noopener noreferrer",children:"connect"})," 嵌套查询语法："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const result = await prisma.note.create({\n  data: {\n    title: "1",\n    content: "2",\n    author: {\n      connect: {\n        id: "1895c437",\n      },\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Prisma 会自动设置该 note 的 authorId 为 ",(0,s.jsx)(r.code,{children:"'1895c437'"}),"，并且关联到 id 为 ",(0,s.jsx)(r.code,{children:"'1895c437'"})," 的 user 上，这样当你通过 prisma.user 查询的时候，也会出现该 note 信息。"]}),"\n",(0,s.jsx)(r.p,{children:"也可以从 prisma.user 更新关联："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const updateAuthor = await prisma.user.update({\n  where: {\n    id: "1895c437",\n  },\n  data: {\n    notes: {\n      connect: {\n        id: "clrkpshqd0004aa0occr5a2qq",\n      },\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Prisma 会查询 id 为 ",(0,s.jsx)(r.code,{children:"'1895c437'"})," 的用户，然后将 id 为 ",(0,s.jsx)(r.code,{children:"clrkpshqd0004aa0occr5a2qq"})," 的 note 的 authorId 改为 ",(0,s.jsx)(r.code,{children:"'1895c437'"}),"，并建立两者的关联。"]}),"\n",(0,s.jsxs)(r.p,{children:["除了像这样一对多的关系，还有",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/one-to-one-relations",title:"https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/one-to-one-relations",target:"_blank",rel:"noopener noreferrer",children:"一对一"}),"，",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/many-to-many-relations",title:"https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/many-to-many-relations",target:"_blank",rel:"noopener noreferrer",children:"多对多"}),"的关系，详细请查阅文档。"]}),"\n",(0,s.jsxs)(r.h3,{id:"53-prisma-client",children:["5.3. Prisma Client",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#53-prisma-client",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["学习 Prisma Client，也就是学习具体如何操作数据库。完整的 API 参考 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference",target:"_blank",rel:"noopener noreferrer",children:"Prisma Client API reference"}),"。"]}),"\n",(0,s.jsxs)(r.h4,{id:"531-查询函数",children:["5.3.1. 查询函数",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#531-查询函数",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"查询函数有："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["增：",(0,s.jsx)(r.code,{children:"create()"}),"、",(0,s.jsx)(r.code,{children:"createMany()"})]}),"\n",(0,s.jsxs)(r.li,{children:["删：",(0,s.jsx)(r.code,{children:"delete()"}),"、",(0,s.jsx)(r.code,{children:"deleteMany()"})]}),"\n",(0,s.jsxs)(r.li,{children:["改：",(0,s.jsx)(r.code,{children:"update()"}),"、",(0,s.jsx)(r.code,{children:"upsert()"}),"（找不到就创建）、",(0,s.jsx)(r.code,{children:"updateMany()"})]}),"\n",(0,s.jsxs)(r.li,{children:["查：",(0,s.jsx)(r.code,{children:"findUnique()"}),"(需要有 @unique 属性)、",(0,s.jsx)(r.code,{children:"findUniqueOrThrow()"}),"（找不到就报错）、",(0,s.jsx)(r.code,{children:"findFirst()"}),"（找第一个）、",(0,s.jsx)(r.code,{children:"findFirstOrThrow()"}),"（找不到就报错）、",(0,s.jsx)(r.code,{children:"findMany()"})]}),"\n",(0,s.jsxs)(r.li,{children:["其他：",(0,s.jsx)(r.code,{children:"count()"}),"、",(0,s.jsx)(r.code,{children:"aggregate()"}),"（聚合）、",(0,s.jsx)(r.code,{children:"groupBy()"})]}),"\n"]}),"\n",(0,s.jsxs)(r.h4,{id:"532-查询参数",children:["5.3.2. 查询参数",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#532-查询参数",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["其查询参数除了 ",(0,s.jsx)(r.code,{children:"where"})," 用于条件查找之外，还有："]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"include"})," 用于定义返回的结果中包含的关系"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"select"})," 用于选择返回的字段"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"orderBy"})," 用于排序"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"distinct"})," 用于去重"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const usersWithPosts = await prisma.user.findMany({\n  orderBy: {\n    email: "asc",\n  },\n  include: {\n    posts: {\n      select: {\n        title: true,\n      },\n      orderBy: {\n        title: "asc",\n      },\n    },\n  },\n});\n'})}),"\n",(0,s.jsx)(r.p,{children:"在这个例子中："}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"返回所有的 User 记录，记录按 email 升序排列"}),"\n",(0,s.jsx)(r.li,{children:"对于每条记录，返回嵌套的 posts 信息，按 title 升序排列后，只返回 title 字段"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"简单的来说，就是返回所有用户的基本信息和文章标题数据。一个示例结果如下："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'[\n  {\n    "id": 2,\n    "email": "alice@prisma.io",\n    "name": "Alice",\n    "posts": [\n      {\n        "title": "Watch the talks from Prisma Day 2019"\n      }\n    ]\n  },\n  {\n    "id": 3,\n    "email": "ariadne@prisma.io",\n    "name": "Ariadne",\n    "posts": [\n      {\n        "title": "How to connect to a SQLite database"\n      },\n      {\n        "title": "My first day at Prisma"\n      }\n    ]\n  },\n  {\n    "id": 1,\n    "email": "bob@prisma.io",\n    "name": "Bob",\n    "posts": [\n      {\n        "title": "Follow Prisma on Twitter"\n      },\n      {\n        "title": "Subscribe to GraphQL Weekly for community news "\n      }\n    ]\n  }\n]\n'})}),"\n",(0,s.jsxs)(r.h4,{id:"533-嵌套查询",children:["5.3.3. 嵌套查询",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#533-嵌套查询",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["在嵌套查询里，有：",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#create-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#create-1",target:"_blank",rel:"noopener noreferrer",children:"create"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#createmany-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#createmany-1",target:"_blank",rel:"noopener noreferrer",children:"createMany"}),"、",(0,s.jsx)(r.a,{href:"/set",title:"set",children:"set"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connect",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connect",target:"_blank",rel:"noopener noreferrer",children:"connect"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connectorcreate",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#connectorcreate",target:"_blank",rel:"noopener noreferrer",children:"connectOrCreate"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#disconnect",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#disconnect",target:"_blank",rel:"noopener noreferrer",children:"disconnect"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#update-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#update-1",target:"_blank",rel:"noopener noreferrer",children:"update"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#upsert-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#upsert-1",target:"_blank",rel:"noopener noreferrer",children:"upsert"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#delete-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#delete-1",target:"_blank",rel:"noopener noreferrer",children:"delete"}),"、",(0,s.jsx)(r.a,{href:"/updateMany",title:"updateMany",children:"updateMany"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#deletemany-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#deletemany-1",target:"_blank",rel:"noopener noreferrer",children:"deleteMany"}),"，也就是如何处理关系表中的数据，示例代码如下："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const user = await prisma.user.create({\n  data: {\n    username,\n    password,\n    notes: {\n      create: [\n        { title: "1", content: "1" },\n        { title: "2", content: "2" },\n      ],\n    },\n  },\n});\n'})}),"\n",(0,s.jsx)(r.p,{children:"在这段代码中，创建一条 user 记录的同时，也创建了两条 note 记录并进行了关联。其他方法的作用也是类似。"}),"\n",(0,s.jsxs)(r.h4,{id:"534-筛选条件",children:["5.3.4. 筛选条件",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#534-筛选条件",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["筛选条件支持 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#equals",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#equals",target:"_blank",rel:"noopener noreferrer",children:"equals"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#not",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#not",target:"_blank",rel:"noopener noreferrer",children:"not"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#in",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#in",target:"_blank",rel:"noopener noreferrer",children:"in"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#notin",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#notin",target:"_blank",rel:"noopener noreferrer",children:"notIn"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#lt",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#lt",target:"_blank",rel:"noopener noreferrer",children:"lt"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#lte",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#lte",target:"_blank",rel:"noopener noreferrer",children:"lte"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#gt",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#gt",target:"_blank",rel:"noopener noreferrer",children:"gt"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#gte",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#gte",target:"_blank",rel:"noopener noreferrer",children:"gte"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#contains",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#contains",target:"_blank",rel:"noopener noreferrer",children:"contains"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#search",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#search",target:"_blank",rel:"noopener noreferrer",children:"search"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#mode",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#mode",target:"_blank",rel:"noopener noreferrer",children:"mode"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#startswith",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#startswith",target:"_blank",rel:"noopener noreferrer",children:"startsWith"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#endswith",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#endswith",target:"_blank",rel:"noopener noreferrer",children:"endsWith"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#and",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#and",target:"_blank",rel:"noopener noreferrer",children:"AND"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#or",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#or",target:"_blank",rel:"noopener noreferrer",children:"OR"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#not-1",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#not-1",target:"_blank",rel:"noopener noreferrer",children:"NOT"}),"。举个简单的例子："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const result = await prisma.user.findMany({\n  where: {\n    name: {\n      equals: "Eleanor",\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.p,{children:["这段代码的含义是查询 ",(0,s.jsx)(r.code,{children:"name"})," 等于 ",(0,s.jsx)(r.code,{children:"'Eleanor'"})," 的记录。"]}),"\n",(0,s.jsx)(r.p,{children:"举个复杂一点的例子："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const result = await prisma.post.findMany({\n  where: {\n    OR: [\n      {\n        title: {\n          contains: "Prisma",\n        },\n      },\n      {\n        title: {\n          contains: "databases",\n        },\n      },\n    ],\n    AND: {\n      published: false,\n    },\n  },\n});\n'})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"OR"})," 实现“或”语句，",(0,s.jsx)(r.code,{children:"AND"})," 实现 “并”语句，这段代码的意思是找出 ",(0,s.jsx)(r.code,{children:"title"})," 包含 ",(0,s.jsx)(r.code,{children:"Prisma"})," 或者 ",(0,s.jsx)(r.code,{children:"database"})," 并且 ",(0,s.jsx)(r.code,{children:"published"})," 为 ",(0,s.jsx)(r.code,{children:"false"})," 的记录。"]}),"\n",(0,s.jsxs)(r.h4,{id:"535-relation-filters",children:["5.3.5. Relation filters",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#535-relation-filters",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["最后还有 Relation filters，有 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#some",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#some",target:"_blank",rel:"noopener noreferrer",children:"some"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#every",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#every",target:"_blank",rel:"noopener noreferrer",children:"every"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#none",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#none",target:"_blank",rel:"noopener noreferrer",children:"none"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#is",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#is",target:"_blank",rel:"noopener noreferrer",children:"is"}),"、",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#isnot",title:"https://www.prisma.io/docs/orm/reference/prisma-client-reference#isnot",target:"_blank",rel:"noopener noreferrer",children:"isNot"}),"，举个例子："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const result = await prisma.user.findMany({\n  where: {\n    post: {\n      some: {\n        content: {\n          contains: "Prisma"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"这段代码的含义是获取文章中包含 Prisma 文字的 user 记录。"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-javascript",children:'const result = await prisma.post.findMany({\n  where: {\n    user: {\n        is: {\n          name: "yayu"\n        },\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:'这段代码的含义是获取用户名为 "yayu" 的 post 记录。'}),"\n",(0,s.jsxs)(r.h3,{id:"54-prisma-cli",children:["5.4. Prisma Cli",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#54-prisma-cli",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"最后再学习下 Prsima 的命令，运行："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"npx prisma --help\n"})}),"\n",(0,s.jsx)(r.p,{children:"可以查看到有哪些命令："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsx)(r.p,{children:"其中："}),"\n",(0,s.jsxs)(r.table,{children:["\n",(0,s.jsxs)(r.thead,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.code,{children:"npx prisma init"})}),"\n",(0,s.jsx)(r.th,{children:"初始化 Prisma"}),"\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#init",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#init",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.tbody,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma generate"})}),"\n",(0,s.jsx)(r.td,{children:"生成 Prisma Client"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#generate",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#generate",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma studio"})}),"\n",(0,s.jsx)(r.td,{children:"开启 Prisma Studio"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#studio",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#studio",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma validate"})}),"\n",(0,s.jsx)(r.td,{children:"检验 Prisma schema 文件"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#validate",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#validate",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma format"})}),"\n",(0,s.jsx)(r.td,{children:"格式化 Prisma Scheam 文件"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#format",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#format",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma version"})}),"\n",(0,s.jsx)(r.td,{children:"展示 Prisma 版本信息"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#version--v",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#version--v",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma debug"})}),"\n",(0,s.jsx)(r.td,{children:"展示 Prisma debug 信息"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#debug",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#debug",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["稍微有点复杂的是 ",(0,s.jsx)(r.code,{children:"db"})," 和 ",(0,s.jsx)(r.code,{children:"migrate"})," 命令："]}),"\n",(0,s.jsxs)(r.table,{children:["\n",(0,s.jsxs)(r.thead,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.code,{children:"npx prisma db pull"})}),"\n",(0,s.jsx)(r.th,{children:"连接数据库，同步到数据模型"}),"\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-pull",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-pull",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.tbody,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma db push"})}),"\n",(0,s.jsx)(r.td,{children:"数据模型同步到数据库"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-push",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-push",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma db seed"})}),"\n",(0,s.jsx)(r.td,{children:"给数据库填充点数据"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-seed",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-seed",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma db execute"})}),"\n",(0,s.jsx)(r.td,{children:"与数据库交互，执行 SQL 语句"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-execute",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#db-execute",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.table,{children:["\n",(0,s.jsxs)(r.thead,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate dev"})}),"\n",(0,s.jsx)(r.th,{children:"仅在开发环境下使用，迁移数据库"}),"\n",(0,s.jsx)(r.th,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-dev",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-dev",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.tbody,{children:["\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate reset"})}),"\n",(0,s.jsx)(r.td,{children:"仅在开发环境下使用，重置数据库"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-reset",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-reset",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate deploy"})}),"\n",(0,s.jsx)(r.td,{children:"常用于正式环境，将迁移文件更新到生产环境后，执行该命令，会应用所有尚未迁移过的文件"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-deploy",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-deploy",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate resolve"})}),"\n",(0,s.jsxs)(r.td,{children:["当 migrate 失败时用于回滚，详细参考 ",(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/prisma-migrate/workflows/patching-and-hotfixing#failed-migration",title:"https://www.prisma.io/docs/orm/prisma-migrate/workflows/patching-and-hotfixing#failed-migration",target:"_blank",rel:"noopener noreferrer",children:"Failed migration"})]}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-resolve",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-resolve",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate status"})}),"\n",(0,s.jsx)(r.td,{children:"当前的迁移状态，哪些迁移已应用，哪些迁移尚未应用"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-status",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-status",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n",(0,s.jsxs)(r.tr,{children:["\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"npx prisma migrate diff"})}),"\n",(0,s.jsx)(r.td,{children:"比较两个数据库 schema source 的差异"}),"\n",(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-diff",title:"https://www.prisma.io/docs/orm/reference/prisma-cli-reference#migrate-diff",target:"_blank",rel:"noopener noreferrer",children:"API 链接"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"6-总结",children:["6. 总结",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#6-总结",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"那么今天的内容就结束了，本篇主要是为大家介绍 Prisma，就让我们在不断的实践中加深理解吧！"}),"\n",(0,s.jsxs)(r.h2,{id:"7-参考链接",children:["7. 参考链接",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#7-参考链接",children:"#"})]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/orm/overview/introduction/what-is-prisma",title:"https://www.prisma.io/docs/orm/overview/introduction/what-is-prisma",target:"_blank",rel:"noopener noreferrer",children:"What is Prisma? (Overview)"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://blog.bitsrc.io/what-is-an-orm-and-why-you-should-use-it-b2b6f75f5e2a",title:"https://blog.bitsrc.io/what-is-an-orm-and-why-you-should-use-it-b2b6f75f5e2a",target:"_blank",rel:"noopener noreferrer",children:"blog.bitsrc.io/what-is-an-…"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-node-mysql",title:"https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-node-mysql",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)(r.a,{href:"http://www.prisma.io/docs/gettin%E2%80%A6",target:"_blank",rel:"noopener noreferrer",children:"www.prisma.io/docs/gettin…"})})}),"\n"]})]})}function D(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}let B=D;D.__RSPRESS_PAGE_META={},D.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F31-%E5%AE%9E%E6%88%98%E7%AF%87%20%E2%9D%98%20%20Prisma.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"1.1. ORM",id:"11-orm",depth:3},{text:"1.2. 技术选型",id:"12-技术选型",depth:3},{text:"2. MySQL",id:"2-mysql",depth:2},{text:"2.1. 安装",id:"21-安装",depth:3},{text:"2.2. 配置环境变量",id:"22-配置环境变量",depth:3},{text:"2.3. 使用 GUI",id:"23-使用-gui",depth:3},{text:"3. Prisma 介绍",id:"3-prisma-介绍",depth:2},{text:"4. Prisma 使用",id:"4-prisma-使用",depth:2},{text:"4.1. 创建文件",id:"41-创建文件",depth:3},{text:"4.2. 连接 MySQL 数据库",id:"42-连接-mysql-数据库",depth:3},{text:"4.3. 定义数据模型",id:"43-定义数据模型",depth:3},{text:"4.4. 语法高亮与自动格式化",id:"44-语法高亮与自动格式化",depth:3},{text:"4.5. Prisma Client",id:"45-prisma-client",depth:3},{text:"4.6. Prisma Studio",id:"46-prisma-studio",depth:3},{text:"5. Prisma 深入了解",id:"5-prisma-深入了解",depth:2},{text:"5.1. Prisma schema",id:"51-prisma-schema",depth:3},{text:"5.1.1. 字段类型",id:"511-字段类型",depth:4},{text:"5.1.2. 类型修饰符",id:"512-类型修饰符",depth:4},{text:"5.1.3. 属性",id:"513-属性",depth:4},{text:"5.1.4. 属性函数",id:"514-属性函数",depth:4},{text:"5.2. Relations",id:"52-relations",depth:3},{text:"5.2.1. 建立关联",id:"521-建立关联",depth:4},{text:"5.2.2. 创建记录",id:"522-创建记录",depth:4},{text:"5.2.3. 查询记录",id:"523-查询记录",depth:4},{text:"5.2.4. connect",id:"524-connect",depth:4},{text:"5.3. Prisma Client",id:"53-prisma-client",depth:3},{text:"5.3.1. 查询函数",id:"531-查询函数",depth:4},{text:"5.3.2. 查询参数",id:"532-查询参数",depth:4},{text:"5.3.3. 嵌套查询",id:"533-嵌套查询",depth:4},{text:"5.3.4. 筛选条件",id:"534-筛选条件",depth:4},{text:"5.3.5. Relation filters",id:"535-relation-filters",depth:4},{text:"5.4. Prisma Cli",id:"54-prisma-cli",depth:3},{text:"6. 总结",id:"6-总结",depth:2},{text:"7. 参考链接",id:"7-参考链接",depth:2}],title:"",headingTitle:"",frontmatter:{}}}}]);