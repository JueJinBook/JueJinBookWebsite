"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["81597"],{798734:function(e,c,s){s.r(c),s.d(c,{default:()=>h});var d=s(552676),i=s(740453);function n(e){let c=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",img:"img",pre:"pre",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(c.h1,{id:"14高级-5想丢弃的也不是最新的提交",children:["14高级 5：想丢弃的也不是最新的提交？",(0,d.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#14高级-5想丢弃的也不是最新的提交",children:"#"})]}),"\n",(0,d.jsxs)(c.p,{children:["假如有一个 ",(0,d.jsx)(c.code,{children:"commit"})," ，你在刚把它写完的时候并没有觉得它不好，可是在之后又写了几个提交以后，你突然灵光一现：「哎呀，那个 ",(0,d.jsx)(c.code,{children:"commit"})," 不该写，我要撤销！」"]}),"\n",(0,d.jsxs)(c.p,{children:["不是最新的提交，就不能用 ",(0,d.jsx)(c.code,{children:"reset --hard"})," 来撤销了。这种情况的撤销，就要用之前介绍过的一个指令：交互式 ",(0,d.jsx)(c.code,{children:"rebase"})," ——",(0,d.jsx)(c.code,{children:"rebase -i"}),"。"]}),"\n",(0,d.jsxs)(c.h2,{id:"用交互式-rebase-撤销提交",children:["用交互式 rebase 撤销提交",(0,d.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#用交互式-rebase-撤销提交",children:"#"})]}),"\n",(0,d.jsxs)(c.p,{children:["之前介绍过，交互式 ",(0,d.jsx)(c.code,{children:"rebase"})," 可以用来修改某些旧的 ",(0,d.jsx)(c.code,{children:"commit"}),"s。其实除了修改提交，它还可以用于撤销提交。比如下面这种情况："]}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fc7996318?w=536&h=354&f=jpeg&s=118972",alt:""})}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fc74f48c7?w=447&h=273&f=jpeg&s=16849",alt:""})}),"\n",(0,d.jsxs)(c.p,{children:["你想撤销倒数第二条 ",(0,d.jsx)(c.code,{children:"commit"}),"，那么可以使用 ",(0,d.jsx)(c.code,{children:"rebase -i"}),"："]}),"\n",(0,d.jsx)(c.pre,{children:(0,d.jsx)(c.code,{className:"language-shell",children:"git rebase -i HEAD^^\n"})}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fc7ac1154?w=554&h=261&f=jpeg&s=96953",alt:""})}),"\n",(0,d.jsxs)(c.p,{children:["然后就会跳到 ",(0,d.jsx)(c.code,{children:"commit"})," 序列的编辑界面，这个在之前的第 10 节里已经讲过了。和第 10 节一样，你需要修改这个序列来进行操作。不过不同的是，之前讲的修正 ",(0,d.jsx)(c.code,{children:"commit"})," 的方法是把要修改的 ",(0,d.jsx)(c.code,{children:"commit"})," 左边的 ",(0,d.jsx)(c.code,{children:"pick"})," 改成 ",(0,d.jsx)(c.code,{children:"edit"}),"，而如果你要撤销某个 ",(0,d.jsx)(c.code,{children:"commit"})," ，做法就更加简单粗暴一点：直接删掉这一行就好。"]}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fcf5f6607?w=542&h=240&f=jpeg&s=77581",alt:""})}),"\n",(0,d.jsxs)(c.p,{children:[(0,d.jsx)(c.code,{children:"pick"})," 的直接意思是「选取」，在这个界面的意思就是应用这个 ",(0,d.jsx)(c.code,{children:"commit"}),"。而如果把这一行删掉，那就相当于在 ",(0,d.jsx)(c.code,{children:"rebase"})," 的过程中跳过了这个 ",(0,d.jsx)(c.code,{children:"commit"}),"，从而也就把这个 ",(0,d.jsx)(c.code,{children:"commit"})," 撤销掉了。"]}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fce5804fd?w=548&h=330&f=gif&s=326602",alt:""})}),"\n",(0,d.jsxs)(c.p,{children:["现在再看 ",(0,d.jsx)(c.code,{children:"log"}),"，就会发现之前的倒数第二条 ",(0,d.jsx)(c.code,{children:"commit"})," 已经不在了。"]}),"\n",(0,d.jsx)(c.pre,{children:(0,d.jsx)(c.code,{className:"language-shell",children:"git log\n"})}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fc7eb3b31?w=528&h=220&f=jpeg&s=71201",alt:""})}),"\n",(0,d.jsxs)(c.h2,{id:"用-rebase---onto-撤销提交",children:["用 rebase --onto 撤销提交",(0,d.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#用-rebase---onto-撤销提交",children:"#"})]}),"\n",(0,d.jsxs)(c.p,{children:["除了用交互式 ",(0,d.jsx)(c.code,{children:"rebase"})," ，你还可以用 ",(0,d.jsx)(c.code,{children:"rebase --onto"})," 来更简便地撤销提交。"]}),"\n",(0,d.jsxs)(c.p,{children:[(0,d.jsx)(c.code,{children:"rebase"})," 加上 ",(0,d.jsx)(c.code,{children:"--onto"})," 选项之后，可以指定 ",(0,d.jsx)(c.code,{children:"rebase"})," 的「起点」。一般的 ",(0,d.jsx)(c.code,{children:"rebase"}),"，告诉 Git 的是「我要把当前 ",(0,d.jsx)(c.code,{children:"commit"})," 以及它之前的 ",(0,d.jsx)(c.code,{children:"commit"}),"s 重新提交到目标 ",(0,d.jsx)(c.code,{children:"commit"})," 上去，这其中，",(0,d.jsx)(c.code,{children:"rebase"})," 的「起点」是自动判定的：选取当前 ",(0,d.jsx)(c.code,{children:"commit"})," 和目标 ",(0,d.jsx)(c.code,{children:"commit"})," 在历史上的交叉点作为起点。"]}),"\n",(0,d.jsx)(c.p,{children:"例如下面这种情况："}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe24400508e3c8?w=515&h=360&f=jpeg&s=19522",alt:""})}),"\n",(0,d.jsx)(c.p,{children:"如果在这里执行："}),"\n",(0,d.jsx)(c.pre,{children:(0,d.jsx)(c.code,{className:"language-shell",children:"git rebase 第3个commit\n"})}),"\n",(0,d.jsxs)(c.p,{children:["那么 Git 会自动选取 ",(0,d.jsx)(c.code,{children:"3"})," 和 ",(0,d.jsx)(c.code,{children:"5"})," 的历史交叉点 ",(0,d.jsx)(c.code,{children:"2"})," 作为 ",(0,d.jsx)(c.code,{children:"rebase"})," 的起点，依次将 ",(0,d.jsx)(c.code,{children:"4"})," 和 ",(0,d.jsx)(c.code,{children:"5"})," 重新提交到 ",(0,d.jsx)(c.code,{children:"3"})," 的路径上去。"]}),"\n",(0,d.jsxs)(c.p,{children:["而 ",(0,d.jsx)(c.code,{children:"--onto"})," 参数，就可以额外给 rebase 指定它的起点。例如同样以上图为例，如果我只想把 ",(0,d.jsx)(c.code,{children:"5"})," 提交到 ",(0,d.jsx)(c.code,{children:"3"})," 上，不想附带上 ",(0,d.jsx)(c.code,{children:"4"}),"，那么我可以执行："]}),"\n",(0,d.jsx)(c.pre,{children:(0,d.jsx)(c.code,{className:"language-shell",children:"git rebase --onto 第3个commit 第4个commit branch1\n"})}),"\n",(0,d.jsxs)(c.p,{children:[(0,d.jsx)(c.code,{children:"--onto"})," 参数后面有三个附加参数：目标 ",(0,d.jsx)(c.code,{children:"commit"}),"、起点 ",(0,d.jsx)(c.code,{children:"commit"}),"（注意：rebase 的时候会把起点排除在外）、终点 ",(0,d.jsx)(c.code,{children:"commit"}),"。所以上面这行指令就会从 ",(0,d.jsx)(c.code,{children:"4"})," 往下数，拿到 ",(0,d.jsx)(c.code,{children:"branch1"})," 所指向的 ",(0,d.jsx)(c.code,{children:"5"}),"，然后把 ",(0,d.jsx)(c.code,{children:"5"})," 重新提交到 ",(0,d.jsx)(c.code,{children:"3"})," 上去。"]}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe24400d7d73d0?w=534&h=552&f=gif&s=199563",alt:""})}),"\n",(0,d.jsxs)(c.p,{children:["同样的，你也可以用 ",(0,d.jsx)(c.code,{children:"rebase --onto"})," 来撤销提交："]}),"\n",(0,d.jsx)(c.pre,{children:(0,d.jsx)(c.code,{className:"language-shell",children:"git rebase --onto HEAD^^ HEAD^ branch1\n"})}),"\n",(0,d.jsxs)(c.p,{children:["上面这行代码的意思是：以倒数第二个 ",(0,d.jsx)(c.code,{children:"commit"})," 为起点（起点不包含在 ",(0,d.jsx)(c.code,{children:"rebase"})," 序列里哟），",(0,d.jsx)(c.code,{children:"branch1"})," 为终点，",(0,d.jsx)(c.code,{children:"rebase"})," 到倒数第三个 ",(0,d.jsx)(c.code,{children:"commit"})," 上。"]}),"\n",(0,d.jsx)(c.p,{children:"也就是这样："}),"\n",(0,d.jsx)(c.p,{children:(0,d.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe243fce5804fd?w=548&h=330&f=gif&s=326602",alt:""})}),"\n",(0,d.jsxs)(c.h2,{id:"小结",children:["小结",(0,d.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,d.jsx)(c.p,{children:"这节的内容是「撤销过往的提交」。方法有两种："}),"\n",(0,d.jsxs)(c.ol,{children:["\n",(0,d.jsxs)(c.li,{children:["用 ",(0,d.jsx)(c.code,{children:"git rebase -i"})," 在编辑界面中删除想撤销的 ",(0,d.jsx)(c.code,{children:"commit"}),"s"]}),"\n",(0,d.jsxs)(c.li,{children:["用 ",(0,d.jsx)(c.code,{children:"git rebase --onto"})," 在 rebase 命令中直接剔除想撤销的 ",(0,d.jsx)(c.code,{children:"commit"}),"s"]}),"\n"]}),"\n",(0,d.jsxs)(c.p,{children:["方法有两种，理念是一样的：在 ",(0,d.jsx)(c.code,{children:"rebase"})," 的过程中去掉想撤销的 ",(0,d.jsx)(c.code,{children:"commit"}),"，让他它消失在历史中。"]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,i.ah)(),e.components);return c?(0,d.jsx)(c,{...e,children:(0,d.jsx)(n,{...e})}):n(e)}let h=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["Git%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97%2F14%E9%AB%98%E7%BA%A7%205%EF%BC%9A%E6%83%B3%E4%B8%A2%E5%BC%83%E7%9A%84%E4%B9%9F%E4%B8%8D%E6%98%AF%E6%9C%80%E6%96%B0%E7%9A%84%E6%8F%90%E4%BA%A4%EF%BC%9F.md"]={toc:[{text:"用交互式 rebase 撤销提交",id:"用交互式-rebase-撤销提交",depth:2},{text:"用 rebase --onto 撤销提交",id:"用-rebase---onto-撤销提交",depth:2},{text:"小结",id:"小结",depth:2}],title:"14高级 5：想丢弃的也不是最新的提交？",headingTitle:"14高级 5：想丢弃的也不是最新的提交？",frontmatter:{}}}}]);