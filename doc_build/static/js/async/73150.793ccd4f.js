"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["73150"],{857605:function(e,a,c){c.r(a),c.d(a,{default:()=>Q});var n=c(552676),s=c(740453);let p=c.p+"static/image/f28a6bf14dbe5851737929dae8c65cab.9e431371.webp",i=c.p+"static/image/3c41746427f42fcfd76b01de9746f0e0.011f615e.webp",d=c.p+"static/image/23bd6e17697df657bc52ed764dbd19e2.8a78452e.webp",t=c.p+"static/image/4a71bc1dea41de43aa656035f0fe5698.14dbf3a5.webp",r=c.p+"static/image/1a9933cacffd63a744639b4ee7064a7f.2154f06a.webp",h=c.p+"static/image/16c4a0e2d474a60b163206d88cec62e5.00f10580.webp",l=c.p+"static/image/e3b176a2f3a915394232e5db0998de46.cc520355.webp",x=c.p+"static/image/92b62448a9c6d44fdc4fbb65e6982771.8f2524e6.webp",j=c.p+"static/image/5a59eb584c76bb6abfc518950c60d26b.53232164.webp",g=c.p+"static/image/bee4f6ce917a3444d7a92aa0a802f561.565e452f.webp",b=c.p+"static/image/11fee780d9b26088306359a19f749aa4.fe87a91a.webp",m=c.p+"static/image/eb8d45d2cf21174fa068bdaa2cca595a.26a17e59.webp",f=c.p+"static/image/99e0a7eb541b07c1cf80761309676d62.757506c7.webp",o=c.p+"static/image/0415e3ffede149fdac00e5d5b62a1282.565198de.webp",k=c.p+"static/image/19ffb48b507526920498e0a5bce83c25.7522f964.webp",w=c.p+"static/image/294f16fba4b5661d76197d88388aae08.f603ccab.webp",u=c.p+"static/image/5599b022819ac29bd17fac40c5943cae.101453fb.webp",E=c.p+"static/image/a22130c2533e09536a03616efa1d86ed.8b2624c0.webp",_=c.p+"static/image/0632ed41ac6013236865c72253c4ada1.48031043.webp",A=c.p+"static/image/a93e50fd91c6912c8ef1f5b285a55272.2bc01bf5.webp",F=c.p+"static/image/3f17c6566de2a80adb0152bbbcf3cf2e.756dc368.webp",B=c.p+"static/image/f5315d57731dc9d024212488c71b2a16.df7524ab.webp",N=c.p+"static/image/7c98644ba81c94301581e4eb66d406c8.97245b21.webp",S=c.p+"static/image/d93d23d4d8eb9aa43424734d647f0249.c7afda55.webp",P=c.p+"static/image/53ff9fcf8069310118834f6e3cfb140f.9c8aa250.webp",T=c.p+"static/image/fabade230a416719c427ceaa6de5dae9.4e645e33.webp",y=c.p+"static/image/9f2a0f3ace349bfad818dd8e6bee463c.2a55e172.webp",C=c.p+"static/image/f8a2822ff6a86f184cc8319bd0cf88b5.7b4b95d1.webp",R=c.p+"static/image/7c8aade71a30a21817b74b978e99860f.2b262a84.webp",D=c.p+"static/image/7a017a62464d09b35cc4913c5416d1c6.da4952dd.webp",q=c.p+"static/image/4af6dadb43cbbe40e019ed44566ba4aa.47ee30ce.webp",v=c.p+"static/image/d330c0e317756747becca75c2d48d27e.366c9b9b.webp",G=c.p+"static/image/f08286edfda86aaf71ffc8d54544cacd.210e2510.webp",M=c.p+"static/image/eaacee374a6c5cb02c3b2ac42ba52f20.95db54b9.webp",O=c.p+"static/image/04b74c0a9c54f9b08885101f3d75b600.b0ce156f.webp",$=c.p+"static/image/231fecdf714953d3e91a515ade3755a1.06ddf52b.webp",z=c.p+"static/image/e6cb4be11afd62b1706688f1ef408996.123e967a.webp",H=c.p+"static/image/cc7db3e8d6635b9da8c41f9bbefab4ce.d286efd4.webp",I=c.p+"static/image/59e4d25045c0b5fb96d39d7c0566123d.1789c2d5.webp",J=c.p+"static/image/00a4b54226243f8ce4477aebfb9fac17.1f09b3c5.webp";function K(e){let a=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,s.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.h1,{id:"20实战案例调试-patch-package-源码",children:["20.实战案例：调试 patch-package 源码",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#20实战案例调试-patch-package-源码",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"有时候我们需要修改 node_modules 下的一些代码，但是 node_modules 不会提交到 git 仓库，改动保存不下来，怎么办呢？"}),"\n",(0,n.jsxs)(a.p,{children:["这时候可以用 ",(0,n.jsx)(a.a,{href:"https://github.com/ds300/patch-package#readme",target:"_blank",rel:"noopener noreferrer",children:"patch-package"})," 这个工具。"]}),"\n",(0,n.jsx)(a.p,{children:"比如我对 node_modules 下的 acorn 代码做了一些修改："}),"\n",(0,n.jsx)(a.p,{children:"加了一个 a.js 的文件："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:J,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"在项目目录下执行 npx patch-package acorn 之后，就会生成这样一个目录："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:I,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"在 patches 目录下的 xx.patch 文件里记录着对这个包的改动。"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:H,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"这个 patches 目录是可以提交到 git 仓库的，然后再次把项目拉下来的时候，执行下 npx patch-package 就会应用这次改动。"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:z,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"可以把它配到 postintsll 里，每次安装完依赖自动跑。"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:$,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"这样能保证每次拉取下来的代码都包含了对 node_modules 的改动。"}),"\n",(0,n.jsx)(a.p,{children:"如何使用我们学会了，那它是怎么实现的呢？"}),"\n",(0,n.jsx)(a.p,{children:"这节我们就来调试下 patch-package 的源码。"}),"\n",(0,n.jsxs)(a.h2,{id:"调试-patch-package-源码",children:["调试 patch-package 源码",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#调试-patch-package-源码",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"首先把代码下载下来："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"git clone git@github.com:ds300/patch-package.git\n"})}),"\n",(0,n.jsx)(a.p,{children:"安装依赖，然后执行 npm run build，你会在 dist 目录下看到编译产物。"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:O,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"它默认就是有 sourcemap 的，只不过是 base64 的方式内联的："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:M,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"因为它的编译配置是这样的："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:G,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"接下来开始调试："}),"\n",(0,n.jsx)(a.p,{children:"在 package.json 中可以看到 patch-package 命令的入口是 index.js："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:v,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"也就是 dist/index.js 就是要调试的入口文件。"}),"\n",(0,n.jsx)(a.p,{children:"探究它的实现原理要分为两各方面，一个是 patches 文件怎么生成的，一个是 patches 文件怎么被应用的。"}),"\n",(0,n.jsx)(a.p,{children:"我们分别来看一下："}),"\n",(0,n.jsxs)(a.h3,{id:"patches-文件怎么生成的",children:["patches 文件怎么生成的",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#patches-文件怎么生成的",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"看 patches 文件的内容就能看出来这是 git 的 diff："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:q,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"确实，patch-package 就是依赖 git diff 实现的 patches 文件生成。"}),"\n",(0,n.jsx)(a.p,{children:"生成这样的 patch 文件执行的是 patch-package xxx 命令，这里就是 node ./dist/index xxx"}),"\n",(0,n.jsx)(a.p,{children:"你可以先对 node_modules 下的某个包做下改动，然后执行 node ./dist/index xxx 来生成 patches 文件。"}),"\n",(0,n.jsx)(a.p,{children:"然后添加这样一个调试配置："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:D,alt:""})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",children:'{\n  "name": "调试 patch-package",\n  "program": "${workspaceFolder}/dist/index.js",\n  "request": "launch",\n  "skipFiles": [\n    "<node_internals>/**"\n  ],\n  "console": "integratedTerminal",\n  "args": [\n    "acorn"\n  ],\n  "type": "node"\n}\n'})}),"\n",(0,n.jsx)(a.p,{children:"这里的 args 里填写你修改过的 node_modules 下的包名，我这里改的是 acorn 包下的代码。"}),"\n",(0,n.jsx)(a.p,{children:"看下这个命令的打印："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:R,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"我们可以通过这些打印信息搜索对应的源码来打断点，比如搜索 Created file"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:C,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"定位到了源码，打个断点，然后 Debug 启动："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:y,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"没错，这就是打印那行信息的代码。"}),"\n",(0,n.jsx)(a.p,{children:"然后我们往上看一下，你会看到这些代码："}),"\n",(0,n.jsx)(a.p,{children:"首先 patch-package 会创建一个临时目录："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:T,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"然后在这个目录写入一个 package.json 文件，dependencies 就是命令行参数指定的包名："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:P,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"我们去这个目录看一下："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:S,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"确实，是有这样一个 package.json 的。"}),"\n",(0,n.jsx)(a.p,{children:"然后它会在这个目录下执行 yarn install 或者 npm install（patch-package 现在不支持 pnpm）："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:N,alt:""})}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:B,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"之后就进行 git 的 init、add、commit，生成一个基础的 commit。"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:F,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"然后把现在 node_modules 目录下的这个被修改过的包复制过去："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:A,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"之后再 git add，然后执行 git diff，就能拿到改动的 diff："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:_,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"这不就是 patches 文件的内容么："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:E,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"然后写到 patches 目录即可"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:u,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"patches 文件的生成还是挺简单的，就是在临时目录下创建了一个基础 commit，然后把新的内容复制过去，通过 git diff 生成的 patches 内容。"}),"\n",(0,n.jsx)(a.p,{children:"上面这些都是通过单步、断点调试得出的："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:w,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"那应用 patches 的内容是怎么实现的呢？"}),"\n",(0,n.jsxs)(a.h2,{id:"patches-如何被应用的",children:["patches 如何被应用的？",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#patches-如何被应用的",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"我又对 acorn 目录下的文件做了些修改，生成的 patches 文件是包含了增删改的："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:k,alt:""})}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:o,alt:""})}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:f,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"patches 文件里记录了对哪几行做了新增，哪几行做了删除，哪几行做了修改。"}),"\n",(0,n.jsx)(a.p,{children:"如果人工应用这个 patches 文件的话，不就是找到对应文件的对应行数，做反向的操作就可以了么？"}),"\n",(0,n.jsx)(a.p,{children:"没错，patch-package 也是这样实现的，不过是自动进行的："}),"\n",(0,n.jsx)(a.p,{children:"应用 patch 是执行 patch-package 命令，这里就是 node ./dist/index"}),"\n",(0,n.jsx)(a.p,{children:"所以添加一个这样的调试配置："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:m,alt:""})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",children:'{\n  "name": "调试 patch-package apply",\n  "program": "${workspaceFolder}/dist/index.js",\n  "request": "launch",\n  "skipFiles": [\n    "<node_internals>/**"\n  ],\n  "console": "integratedTerminal",\n  "type": "node"\n}\n'})}),"\n",(0,n.jsx)(a.p,{children:"同样，搜索下这行打印信息："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:b,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"打个断点："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:g,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"debug 跑起来，"}),"\n",(0,n.jsx)(a.p,{children:"然后 step into 这个函数："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:j,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"单步执行到这行代码："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:x,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"再 step into 进入函数内部："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:l,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"你会发现读取 patch 文件的代码，进入那个 readPatch 内部："}),"\n",(0,n.jsx)(a.p,{children:"会发现它读取 patches 文件之后会进行 parse："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:h,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"这个 parse 的实现就是对每一行的字符串做判断，进行不同的处理："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:r,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"最终能得到一个包含 diff 信息的对象，包含了对什么文件的哪些行做了什么修改："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"之后在 executeEffects 函数里对 patch 信息做了相应的处理："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:d,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"也就是根据不同的类型做了不同的操作："}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:i,alt:""})}),"\n",(0,n.jsx)(a.p,{children:"这样就把 patches 文件里的改动应用到了 node_modules 下的包里。"}),"\n",(0,n.jsx)(a.p,{children:"至此，我们通过调试 patch-package 源码理清了它的实现原理。"}),"\n",(0,n.jsxs)(a.p,{children:["前面说 patch-pakckage 不支持 pnpm，其实 pnpm 内置 ",(0,n.jsx)(a.a,{href:"https://pnpm.io/cli/patch",target:"_blank",rel:"noopener noreferrer",children:"patch"}),"、patch-commit 命令，作用和这个 patch-package 包一样。"]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)("img",{src:p,alt:""})}),"\n",(0,n.jsxs)(a.h2,{id:"总结",children:["总结",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"当我们需要对 node_modules 下的代码做改动的时候，可以通过 patch-package xxx 生成 patches 文件，它可以被提交到 git 仓库，然后再拉下来的代码就可以通过 patch-package 来应用改动。"}),"\n",(0,n.jsx)(a.p,{children:"实现原理要分为两部分来看："}),"\n",(0,n.jsx)(a.p,{children:"patches 文件的生成是在临时目录生成 package.json，下载依赖，生成一个 commit，然后把改动的代码复制过去，两者做 gif diff，就可以生成 patches 文件。"}),"\n",(0,n.jsx)(a.p,{children:"patches 文件的应用则是 patch-package 自己实现了它的 parse，拿到对什么文件的哪些行做什么修改的信息，之后根据不同做类型做不同的文件操作就可以了。"}),"\n",(0,n.jsx)(a.p,{children:"如果是 pnpm，那 patch-package 不支持，这时候用内置的 pnpm patch 命令就好了。"}),"\n",(0,n.jsx)(a.p,{children:"当然，更重要的是我们是通过自己调试源码来得出这些信息的，当你会调试源码之后，就可以自己去深入很多技术了。这也是为什么会调试源码是对工程师进阶很重要。"})]})}function L(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,s.ah)(),e.components);return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(K,{...e})}):K(e)}let Q=L;L.__RSPRESS_PAGE_META={},L.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F20.%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%B0%83%E8%AF%95%20patch-package%20%E6%BA%90%E7%A0%81.md"]={toc:[{text:"调试 patch-package 源码",id:"调试-patch-package-源码",depth:2},{text:"patches 文件怎么生成的",id:"patches-文件怎么生成的",depth:3},{text:"patches 如何被应用的？",id:"patches-如何被应用的",depth:2},{text:"总结",id:"总结",depth:2}],title:"20.实战案例：调试 patch-package 源码",headingTitle:"20.实战案例：调试 patch-package 源码",frontmatter:{}}}}]);