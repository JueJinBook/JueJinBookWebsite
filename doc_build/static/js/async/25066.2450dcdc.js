"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["25066"],{376015:function(e,n,t){t.r(n),t.d(n,{default:()=>j});var r=t(552676),s=t(740453);let c=t.p+"static/image/56e7f13f8b4a5929501dd2197ff7e107.056f9e04.webp",d=t.p+"static/image/656bdebd6f102f069f143bd2e41d69ac.1e9f23cb.webp",l=t.p+"static/image/ca1b8d33d315aa2ea7f09bcd5907e342.c019ce9a.webp",o=t.p+"static/image/447ef45f151b0eb1d3bd492e4d2e407f.ddb2d7f0.webp",i=t.p+"static/image/0423c1140136ba8785a61192847a0743.4437873b.webp",a=t.p+"static/image/55914c43b58e4301d74ba4293fecd3d2.c12807a9.webp",p=t.p+"static/image/4615f882ca9a2a34aad0100f0ad49388.7a74c62b.webp";function h(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h2:"h2",code:"code",pre:"pre",img:"img"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"11-语法篇---特殊用法",children:["11-语法篇 ❘  特殊用法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-语法篇---特殊用法",children:"#"})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"推荐学习指数：⭐️️，了解即可"}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"1-前言",children:["1. 前言",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["本篇我们介绍 Svelte 中的特殊用法，比如 ",(0,r.jsx)(n.code,{children:"$$props"}),"、",(0,r.jsx)(n.code,{children:"$$restProps"}),"、",(0,r.jsx)(n.code,{children:"@debug"}),"、",(0,r.jsx)(n.code,{children:"@html"})," 等。"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["注：",(0,r.jsx)(n.code,{children:"$$props"}),"、",(0,r.jsx)(n.code,{children:"$$restProps"})," 在 Svelte 5 中依然可用，但可被符文 $props 替代"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"2-props",children:["2. $$props",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-props",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["使用 ",(0,r.jsx)(n.code,{children:"$$props"})," 可以获取传递给组件的所有属性："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Button from \'./Button.svelte\'\n<\/script>\n\n<Button\n  className="custom"\n  type="primary"\n  disabled="true"\n  size="middle"\n  style="color:red"\n  />\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  console.log($$props)\n<\/script>\n\n<button {...$$props}>Button</button>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/fd99b064b16a4372a87c3d2308c9106a?version=4.2.18",title:"https://svelte.dev/repl/fd99b064b16a4372a87c3d2308c9106a?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"使用 $$props 常用于将未知属性传递给组件中的元素。"}),"\n",(0,r.jsx)(n.p,{children:"可是为什么要传未知属性给组件呢？"}),"\n",(0,r.jsx)(n.p,{children:"这其实也很常见，以 Ant Design 的 Button 组件为例，其组件属性说明就有这句："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsxs)(n.p,{children:["但原生 button 的属性还蛮多的，比如 autofocus、disabled、form、formaction、formenctype、formmethod、formnovalidate、formtarget 等等。如果一一声明，处理有些麻烦，倒不如直接 ",(0,r.jsx)(n.code,{children:"{...$$props}"}),"。"]}),"\n",(0,r.jsxs)(n.h2,{id:"3-restprops",children:["3. $$restProps",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-restprops",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$$restProps"})," 类似于 ",(0,r.jsx)(n.code,{children:"$$props"}),"，但仅包含未使用 ",(0,r.jsx)(n.code,{children:"exports"})," 声明的 props。让我们看个例子："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Button from \'./Button.svelte\'\n<\/script>\n\n<Button\n  className="custom"\n  type="primary"\n  disabled="true"\n  size="middle"\n  style="color:red"\n/>\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  export let className\n  console.log($$restProps)\n<\/script>\n\n<button class={`btn ${className}`} {...$$restProps}>Button</button>\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/61de21e02ca04d27b3af80f15d5b015d?version=4.2.18",title:"https://svelte.dev/repl/61de21e02ca04d27b3af80f15d5b015d?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:i,alt:""})}),"\n",(0,r.jsxs)(n.p,{children:["在这个例子中，button 元素本身有自己的 class，我们通过 ",(0,r.jsx)(n.code,{children:"export let className"})," 获取传入的类名，然后合并成新的类名，剩余的属性则直接传入元素中。"]}),"\n",(0,r.jsxs)(n.h2,{id:"4-html",children:["4. @html",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-html",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["类似于 React 的 ",(0,r.jsx)(n.code,{children:"dangerouslySetInnerHTML"}),"，注入 HTML 的时候不进行转义："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  const html = '<p>Text from App</p>'\n<\/script>\n\n<div>\n  {@html html}\n</div>\n\n<style>\n  :global(div p) {\n    color: burlywood\n  }\n</style>\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/102dfe570c4140b7b26d708101295646?version=4.2.18",title:"https://svelte.dev/repl/102dfe570c4140b7b26d708101295646?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsxs)(n.h2,{id:"5-debug",children:["5. @debug",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-debug",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@debug"})," 是 ",(0,r.jsx)(n.code,{children:"console.log"})," 的替代方案，当指定的变量发生改变的时候，它会打印日志，并在打开开发工具的时候暂停代码执行。比如："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let value = ''\n<\/script>\n\n<div>\n  <input type=\"text\" bind:value />\n</div>\n\n{@debug value}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/d334f47d190b456c9dbe7292bcc9d61f?version=4.2.18",title:"https://svelte.dev/repl/d334f47d190b456c9dbe7292bcc9d61f?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以同时 debug 多个值："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"{@debug var1, var2, ..., varN}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"6-const",children:["6. @const",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-const",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@const"})," 用于定义局部常量："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  export let boxes;\n<\/script>\n\n{#each boxes as box}\n  {@const area = box.width * box.height}\n  {box.width} * {box.height} = {area}\n{/each}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"{@const}"})," 只能作为 ",(0,r.jsx)(n.code,{children:"{#if}"}),"、",(0,r.jsx)(n.code,{children:"{:else if}"}),"、",(0,r.jsx)(n.code,{children:"{:else}"}),"、",(0,r.jsx)(n.code,{children:"{#each}"}),"、",(0,r.jsx)(n.code,{children:"{:then}"}),"、",(0,r.jsx)(n.code,{children:"{:catch}"}),"、",(0,r.jsx)(n.code,{children:"<Component />"})," 或者 ",(0,r.jsx)(n.code,{children:"<svelte:fragment />"}),"的直接子级。"]}),"\n",(0,r.jsxs)(n.h2,{id:"7-module-context",children:["7. Module Context",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-module-context",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["正常每个组件只能写一个 ",(0,r.jsx)(n.code,{children:"<script>"}),"，除非你再写一个 ",(0,r.jsx)(n.code,{children:'<script context="module">'}),"。这是什么作用呢？"]}),"\n",(0,r.jsx)(n.p,{children:"让我们看个例子："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Button, { totalComponents, alertTotal }from './Button.svelte'\n<\/script>\n\n<button on:click={() => {\n  alertTotal()\n}}>总计</button>\n\n{totalComponents}个\n\n<Button />\n\n<Button />\n\n<Button />\n\n<Button />\n\n\x3c!-- Button.svelte --\x3e\n<script context=\"module\">\n  export let totalComponents = 0;\n\n  // the export keyword allows this function to be imported with e.g.\n  // `import Example, { alertTotal } from './Example.svelte'`\n  export function alertTotal() {\n    alert(totalComponents);\n  }\n\n<\/script>\n\n<script>\n  totalComponents += 1;\n  console.log(`total number of times this component has been created: ${totalComponents}`);\n<\/script>\n\n<button on:click={() => {\n  totalComponents += 1;\n}}>按钮</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/8bb236c7da6a47568a0252664a52bdc8?version=4.2.18",title:"https://svelte.dev/repl/8bb236c7da6a47568a0252664a52bdc8?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:d,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这个例子很好的体现了 Module Context 的特性。"}),"\n",(0,r.jsxs)(n.p,{children:["具有 ",(0,r.jsx)(n.code,{children:'<script context="module">'}),"脚本只会在模块首次执行的时候运行一次，不像 ",(0,r.jsx)(n.code,{children:"<script>"})," 脚本每个组件实例都运行一次，所以可以用来存放一些多个组件实例间共享的值。"]}),"\n",(0,r.jsxs)(n.p,{children:["而且 ",(0,r.jsx)(n.code,{children:'<script context="module">'}),"中定义的变量不是响应式，修改也不会触发重新渲染。"]}),"\n",(0,r.jsxs)(n.p,{children:["此外，",(0,r.jsx)(n.code,{children:"<script>"}),"可以访问",(0,r.jsx)(n.code,{children:'<script context="module">'})," 中定义的变量，但反过来不行，也就是说 ",(0,r.jsx)(n.code,{children:'<script context="module">'})," 不能访问 ",(0,r.jsx)(n.code,{children:"<script>"})," 中的变量。"]}),"\n",(0,r.jsxs)(n.p,{children:["像在这个例子中，我们就是在 ",(0,r.jsx)(n.code,{children:'<script context="module">'})," 中定义了一个 ",(0,r.jsx)(n.code,{children:"totalComponents"})," 变量，用于统计该组件被实例化了几次。"]}),"\n",(0,r.jsxs)(n.p,{children:["除此之外，",(0,r.jsx)(n.code,{children:'<script context="module">'})," 脚本中导出的变量，会成为该编译模块的导出。在这个例子中，",(0,r.jsx)(n.code,{children:"Button.svelte"})," 导出："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<script context="module">\n  export let totalComponents = 0;\n\n  export function alertTotal() {\n    alert(totalComponents);\n  }\n\n<\/script>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["在 ",(0,r.jsx)(n.code,{children:"App.svelte"}),"中 ，就可以通过这样的方式导入："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  import Button, { totalComponents, alertTotal }from './Button.svelte'\n<\/script>\n"})}),"\n",(0,r.jsx)(n.p,{children:"让我们举个更加常见的场景。"}),"\n",(0,r.jsx)(n.p,{children:"假设现在有 4 首曲子，当播放一首时，应该暂停其他正在播放的曲子。此时就可以借助 Module Context 实现："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Audio from './Audio.svelte'\n<\/script>\n\n<Audio />\n\n<Audio />\n\n<Audio />\n\n<Audio />\n\n\x3c!-- Audio.svelte --\x3e\n<script context=\"module\">\n  let current;\n<\/script>\n\n<button on:click={(e) => {\n  e.currentTarget.textContent = '播放中'\n  if (e.currentTarget !== current) {\n    if (current) current.textContent = '播放'\n    current = e.currentTarget;\n  }\n\n}}>播放</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://svelte.dev/repl/93e4e56099254536a5dae5b6607e74d2?version=4.2.18",title:"https://svelte.dev/repl/93e4e56099254536a5dae5b6607e74d2?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:c,alt:""})}),"\n",(0,r.jsxs)(n.h2,{id:"8-最后",children:["8. 最后",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-最后",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"本篇我们介绍了 Svelte 中的一些特殊用法，都很实用，在项目开发中可能会用到，所以需要了解掌握。"})]})}function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}let j=x;x.__RSPRESS_PAGE_META={},x.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F11-%E8%AF%AD%E6%B3%95%E7%AF%87%20%E2%9D%98%20%20%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. $$props",id:"2-props",depth:2},{text:"3. $$restProps",id:"3-restprops",depth:2},{text:"4. @html",id:"4-html",depth:2},{text:"5. @debug",id:"5-debug",depth:2},{text:"6. @const",id:"6-const",depth:2},{text:"7. Module Context",id:"7-module-context",depth:2},{text:"8. 最后",id:"8-最后",depth:2}],title:"11-语法篇 ❘  特殊用法",headingTitle:"11-语法篇 ❘  特殊用法",frontmatter:{}}}}]);