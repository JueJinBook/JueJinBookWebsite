"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["25083"],{294625:function(e,n,c){c.r(n),c.d(n,{default:()=>C});var s=c(552676),a=c(740453);let d=c.p+"static/image/b52823abd0b278d309f65b7d9e16c381.253fdfaa.webp",l=c.p+"static/image/efbb703dde3c942cd10203f30a6492fb.7f3b8a61.webp",r=c.p+"static/image/981a2f81c1836d17056d99c3c1a3ee4f.eb24bc82.webp",i=c.p+"static/image/16616f18c14b778e25b54264243389a7.11d43906.webp",p=c.p+"static/image/f20d22567ab9892326625d209d812f80.1b57c138.webp",t=c.p+"static/image/9278612d34671a860ee2a53e4a21e020.c20d37c5.webp",j=c.p+"static/image/555b88a37023165aec1a0f2899c78451.8321d6e3.webp",h=c.p+"static/image/dec71745f709b57f42c85fd2fa0a7848.3afe3fcc.webp",x=c.p+"static/image/f718abff500b5330ffa153959feaf396.d65834d8.webp",m=c.p+"static/image/d91a3cc3b1a85a3be28f6ff702bee85a.1b20166a.webp",g=c.p+"static/image/139cf5b2fc71aa2a14c18eaaf86a5548.d823f113.webp",E=c.p+"static/image/7d18cf844103c886680d0eeba49c124f.63429d13.webp",o=c.p+"static/image/03e5248bc439794441d3c9a81605a1dc.935f9b8e.webp",b=c.p+"static/image/394bdc99c4f565b8c00aa8cb0804a3d4.ecaa8d7e.webp",f=c.p+"static/image/dfbd211394944b1b0762bc0b51715f08.4e857e0a.webp",u=c.p+"static/image/e5eb431859bac8cd2bd743b620382a85.6d8c6e8f.webp",T=c.p+"static/image/7bc456ddfe55a3b49edfd1026b537c7c.2c808467.webp",R=c.p+"static/image/f8e2e131ff7205e1627f70deadbc563e.c53ae94a.webp",S=c.p+"static/image/c48787b0981995347d0eb61459eeaf9f.6207cce4.webp",A=c.p+"static/image/58a7b0d8cde172568c02a8cfe5510de9.7c2dbb7a.webp",N=c.p+"static/image/6654a9968d51498e84c22ae907693e1f.6b91d6c7.webp";function _(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"49-子查询和-exists",children:["49. 子查询和 EXISTS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#49-子查询和-exists",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"我们学习了 select 的各种语法，包括 where、limit、order by、group by、having 等，再就是 avg、count、length 等函数。"}),"\n",(0,s.jsx)(n.p,{children:"还学了多个表的 join on 关联查询。"}),"\n",(0,s.jsx)(n.p,{children:"基于这些就已经可以写出复杂的查询了，但 sql 还支持更复杂的组合，sql 可以嵌套 sql，也就是子查询。"}),"\n",(0,s.jsx)(n.p,{children:"先看下现在 student 表的数据："}),"\n",(0,s.jsx)(n.p,{children:"点击左上角新建 sql 按钮，输入查询的 sql，点击执行："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from student;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后我们想查询学生表中成绩最高的学生的姓名和班级名称。"}),"\n",(0,s.jsx)(n.p,{children:"这是不是就要分成两个 sql 语句："}),"\n",(0,s.jsx)(n.p,{children:"先查询最高分："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT MAX(score) FROM student;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"再查询这个分数为这个最高分的学生："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT name, class FROM student WHERE score = 95;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"能不能把这两个 sql 合并呢？"}),"\n",(0,s.jsx)(n.p,{children:"可以的，这就是子查询："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT name, class FROM student WHERE score = (SELECT MAX(score) FROM student);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"比如查询成绩高于全校平均成绩的学生记录："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM student WHERE score > (SELECT AVG(score) FROM student);\n"})}),"\n",(0,s.jsx)(n.p,{children:"先一个 select 语句查询学生的平均分，然后查询分数大于这个平均分的学生。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:T,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"此外，子查询还有个特有的语法 EXISTS、NOT EXISTS。"}),"\n",(0,s.jsx)(n.p,{children:"我们用部门表和员工表来试一下："}),"\n",(0,s.jsx)(n.p,{children:"先查询下部门表和员工表的数据："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from department;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from employee;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"改一下员工的部门，点击 apply："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样就有的部门 2 个员工，有的部门 3 个员工，有的部门没有员工了。"}),"\n",(0,s.jsx)(n.p,{children:"然后实现这样一个查询："}),"\n",(0,s.jsx)(n.p,{children:"查询有员工的部门。"}),"\n",(0,s.jsx)(n.p,{children:"sql 可以这么写："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT name FROM department\n    WHERE EXISTS (\n        SELECT * FROM employee WHERE department.id = employee.department_id\n    );\n"})}),"\n",(0,s.jsx)(n.p,{children:"对每个 department，在子查询里查询它所有的 employee。"}),"\n",(0,s.jsx)(n.p,{children:"如果存在员工，那么条件成立，就返回这个部门的 name。"}),"\n",(0,s.jsx)(n.p,{children:"这就是 EXISTS 的作用：子查询返回结果，条件成立，反之不成立。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这就是所有有员工的部门。"}),"\n",(0,s.jsx)(n.p,{children:"还可以用 NOT EXISTS 来查询所有没有员工的部门："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT name FROM department\n    WHERE NOT EXISTS (\n            SELECT * FROM employee WHERE department.id = employee.department_id\n    );\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"子查询不止 select 里可以用，insert、update、delete 语句同样可以。"}),"\n",(0,s.jsx)(n.p,{children:"我们建个产品表："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE product (\n     id INT PRIMARY KEY,\n     name VARCHAR(50),\n     price DECIMAL(10,2),\n     category VARCHAR(50),\n     stock INT\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:"直接用这个 sql 建就好了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后插入几条数据："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"INSERT INTO product (id, name, price, category, stock)\n	VALUES \n		(1, 'iPhone12',6999.00, '手机',100),\n		(2, 'iPad Pro',7999.00, '平板电脑',50),\n		(3, 'MacBook Pro',12999.00, '笔记本电脑',30),\n		(4, 'AirPods Pro',1999.00, '耳机',200),\n		(5, 'Apple Watch',3299.00, '智能手表',80);\n"})}),"\n",(0,s.jsx)(n.p,{children:"选中 sql，点击执行："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后查询下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from product\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"查询的时候，可以用子查询，这个我们前面试过。"}),"\n",(0,s.jsx)(n.p,{children:"比如查询价格最高的产品的信息："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT name, price FROM product WHERE price = (SELECT MAX(price) FROM product);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"通过一个子查询查最高的价格，然后外层查询查价格为最高价格的产品。"}),"\n",(0,s.jsx)(n.p,{children:"除了 select 之外，增删改也是可以用子查询的。"}),"\n",(0,s.jsx)(n.p,{children:"比如我们把每个产品分类的分类名、平均价格查出来放入另一个 avg_price_by_category 表。"}),"\n",(0,s.jsx)(n.p,{children:"先创建这个表："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE avg_price_by_category (\n id INT AUTO_INCREMENT,\n category VARCHAR(50) NOT NULL,\n avg_price DECIMAL(10,2) NOT NULL,\n PRIMARY KEY (id)\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:"id 为主键，自增。"}),"\n",(0,s.jsx)(n.p,{children:"category 为 VARCHAR(50)，非空。"}),"\n",(0,s.jsx)(n.p,{children:"avg_price 为 DECIMAL(10,2) 也就是一共 10 位，小数点后占 2 位的数字。"}),"\n",(0,s.jsx)(n.p,{children:"点击执行："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后把 product 产品表里的分类和平均价格查出来插入这个表："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"INSERT INTO avg_price_by_category (category, avg_price) \n    SELECT category, AVG(price) FROM product GROUP BY category;\n"})}),"\n",(0,s.jsx)(n.p,{children:"点击执行："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后再查询现在的 avg_price_by_category 表："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from avg_price_by_category\n"})}),"\n",(0,s.jsx)(n.p,{children:"可以看到，确实插入了数据："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这就是 insert + select 结合使用的场景。"}),"\n",(0,s.jsx)(n.p,{children:"update 同样也可以使用 select 子查询。"}),"\n",(0,s.jsx)(n.p,{children:"比如之前的 department 和 employee 表，我们想把技术部所有人的 name 前加上 “技术-”，就可以这么写："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"UPDATE employee SET name = CONCAT('技术-', name) \n    WHERE department_id = (\n        SELECT id FROM department WHERE name = '技术部'\n    );\n"})}),"\n",(0,s.jsx)(n.p,{children:'查询名字等于技术部的 department 的 id，然后更新 department_id 为这个 id 的所有 employee 的名字为 CONCAT("技术-", name)。'}),"\n",(0,s.jsx)(n.p,{children:"执行这个 sql:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到技术部的员工的名字都改了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"接下来再试试 delete："}),"\n",(0,s.jsx)(n.p,{children:"删除技术部所有的员工。"}),"\n",(0,s.jsx)(n.p,{children:"可以这么写："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"DELETE FROM employee WHERE department_id\xa0=\xa0(\n    SELECT\xa0id\xa0FROM\xa0department\xa0WHERE\xa0name\xa0=\xa0'技术部'\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:"执行一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后再次查询："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from employee;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到技术部员工确实都没有了。"}),"\n",(0,s.jsx)(n.p,{children:"所以说，子查询在 select、insert、update、delete 里都可以用。"}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"sql 和 sql 可以组合来完成更复杂的功能，这种语法叫做子查询。"}),"\n",(0,s.jsx)(n.p,{children:"它还有个特有的关键字 EXISTS（和 NOT EXISTS），当子查询有返回结果的时候成立，没有返回结果的时候不成立。"}),"\n",(0,s.jsx)(n.p,{children:"子查询不止 select 可用，在 update、insert、delete 里也可以用。"}),"\n",(0,s.jsx)(n.p,{children:"灵活运用子查询，能写出功能更强大的 sql。"})]})}function q(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}let C=q;q.__RSPRESS_PAGE_META={},q.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F49.%20%E5%AD%90%E6%9F%A5%E8%AF%A2%E5%92%8C%20EXISTS.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"49. 子查询和 EXISTS",headingTitle:"49. 子查询和 EXISTS",frontmatter:{}}}}]);