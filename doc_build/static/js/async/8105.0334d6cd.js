"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["8105"],{721098:function(e,n,l){l.r(n),l.d(n,{default:()=>i});var s=l(552676),r=l(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",blockquote:"blockquote",h3:"h3",code:"code",strong:"strong",h4:"h4",pre:"pre",ul:"ul",li:"li"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"47云存储快速入门",children:["47.云存储快速入门",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#47云存储快速入门",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"75-云存储快速入门",children:["7.5 云存储快速入门",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#75-云存储快速入门",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"我们可以将图片、文档、音频、视频、文件等数据存储到云存储里，云存储默认支持CDN加速，并提供免费的CDN域名。CDN会将云存储的内容分发至最接近用户的节点，直接由服务节点快速响应，可以有效降低用户访问延迟。"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"云存储与云开发的用户身份验证无缝集成的，用户在小程序端上传文件时会有该用户的身份标识openid，以及云存储默认的权限是“所有用户可读，仅创建者可读写”，因此在使用云存储时，一是要先初始化云开发环境，二是要注意小程序端上传文件和管理端（控制台和云函数）上传文件的不同，三是要注意云存储的权限问题。"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"751-上传文件到云存储",children:["7.5.1 上传文件到云存储",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#751-上传文件到云存储",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["要在小程序端把图片上传到云存储，会使用到",(0,s.jsx)(n.code,{children:"wx.cloud.uploadFile"}),"，它可以把本地资源也就是临时文件里的文件上传到云存储里，而在前面的章节里我们了解到如何把图片上传并获取图片的临时路径；还有文件的云存储路径",(0,s.jsx)(n.strong,{children:"cloudPath"}),"，这个包含文件上传到云存储的目录以及文件名。"]}),"\n",(0,s.jsxs)(n.h4,{id:"1上传文件到云存储的案例",children:["1、上传文件到云存储的案例",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1上传文件到云存储的案例",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"使用开发者工具在file.wxml里添加以下代码，一个是绑定了事件处理函数的button，还有一个就是用来渲染上传之后图片的image组件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<button bindtap="chooseImg">选择并上传图片</button>\n<image mode="widthFix" src="{{imgurl}}"></image>\n'})}),"\n",(0,s.jsx)(n.p,{children:"然后在file.js的data里初始化imgurl，这里imgurl是一个空字符串，"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'data: {\n  imgurl: "",\n},\n'})}),"\n",(0,s.jsx)(n.p,{children:"然后在file.js里添加事件处理函数chooseImg，："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"chooseImg: function () {\n  const that = this\n  wx.chooseImage({\n    count: 1,\n    sizeType: ['compressed'],\n    sourceType: ['album', 'camera'],\n    success: function (res) {\n      console.log(\"上传文件的临时路径列表\",res.tempFilePaths) /\n      const filePath = res.tempFilePaths[0] //上传第一张图片\n      const cloudPath = `${Date.now()}-${Math.floor(Math.random(0, 1) * 1000)}` + filePath.match(/.[^.]+?$/)[0]\n      wx.cloud.uploadFile({\n        cloudPath,\n        filePath,\n        success: res => {\n          console.log('上传成功后获得的res：', res)\n          that.setData({\n            imgurl:res.fileID\n          })\n        },\n        fail:err=>{\n          console.log(err)\n        }\n      })\n    }\n  })\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["保存编译后，点击",(0,s.jsx)(n.strong,{children:"选择并上传图片"}),"的button上传一张图片，在控制台里我们可以看到",(0,s.jsx)(n.code,{children:"res.tempFilePaths"}),"是一个数组格式，而",(0,s.jsx)(n.code,{children:"wx.cloud.uploadFile"}),"的filePath是一个字符串，所以在上传时，把第一张图片的路径（字符串）赋值给了filePath。"]}),"\n",(0,s.jsxs)(n.h4,{id:"2文件后缀的处理",children:["2、文件后缀的处理",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2文件后缀的处理",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们知道一个文件由",(0,s.jsx)(n.strong,{children:"文件名称"}),"和",(0,s.jsx)(n.strong,{children:"文件后缀"}),"构成，比如tcb.jpg和cloudbase.png，jpeg说明图片的格式是JPG格式，而png说明图片是PNG格式。将文件上传到云存储时，如果文件名称相同",(0,s.jsx)(n.strong,{children:"且"}),"格式相同就是出现覆盖，如果我们随意更改了",(0,s.jsx)(n.strong,{children:"文件的后缀"}),"，大多数文件就会打不开。所以要把",(0,s.jsx)(n.strong,{children:"cloudPath云存储的路径"}),"需要我们把文件名和后缀给处理好。"]}),"\n",(0,s.jsx)(n.p,{children:"当我们把图片上传到小程序的临时文件后，我们可以查看一下临时路径是什么样子的，临时路径的文件名就不是原来的文件名，会变成一段长字符，但文件的格式还是原来的文件格式（后缀）："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"http://tmp/wx7124afdb64d578f5.o6zAJs291xB-a5G1FlXwylqTqNQ4.esN9ygu5Hmyfccd41d052e20322e6f3469de87f662a0.png\n"})}),"\n",(0,s.jsxs)(n.p,{children:["那",(0,s.jsx)(n.strong,{children:"cloudPath"}),"要输入文件的路径，就需要填写文件名和文件格式，这个要怎么处理呢？我们可以使用如下方式："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const cloudPath = 'my-image' + filePath.match(/.[^.]+?$/)[0]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["也就是它把上传的所有图片命名为",(0,s.jsx)(n.strong,{children:"my-image"}),"，而文件的后缀还是原来的文件后缀（也就是文件格式不变）。这里的",(0,s.jsx)(n.code,{children:"filePath.match(/.[^.]+?$/)[0]"}),"是",(0,s.jsx)(n.strong,{children:"字符串的正则处理"}),"，我们可以在开发者工具的控制台输入以下代码了解一下它的功能，打印可以得到临时文件的后缀，这里为",(0,s.jsx)(n.code,{children:".png"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const filepath="http://tmp/wx7124afdb64d578f5.o6zAJs291xB-a5G1FlXwylqTqNQ4.esN9ygu5Hmyfccd41d052e20322e6f3469de87f662a0.png"\nfilepath.match(/.[^.]+?$/)[0]\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"3文件名的处理",children:["3、文件名的处理",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3文件名的处理",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们要上传的图片、音视频、文档等文件，除了格式种类很多，我们不能随意更改（更改之后文件就打不开了），通过上面文件后缀名的处理，可以获取到文件原本的格式；但是文件的数量也有很多，这种把所有文件都命名为",(0,s.jsx)(n.strong,{children:"my-image"}),"的做法，会导致当文件的后缀相同时文件会被覆盖，如果不希望文件被覆盖，我们需要给文件命不同的名字，我们可以这样处理："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const cloudPath = `${Date.now()}-${Math.floor(Math.random(0, 1) * 1000)}` + filePath.match(/.[^.]+?$/)[0]\n"})}),"\n",(0,s.jsx)(n.p,{children:"给文件名加上时间戳和一个随机数，时间戳是以毫秒计算，而随机数是以1000内的正整数，除非1秒钟（1秒=1000毫秒）上传几十万张照片，不然文件名是不会重复的。"}),"\n",(0,s.jsxs)(n.p,{children:["编译之后，我们再次上传一张图片就会打印上传成功之后的res对象，里面包含",(0,s.jsx)(n.strong,{children:"图片在云存储里的fileID"}),"，而由于部分小程序组件（如image、video、cover-image等）和接口（如getBackgroundAudioManager、createInnerAudioContext、previewImage等），支持传入云文件的fileID。所以我们可以直接通过fileID把图片在小程序端渲染出来。"]}),"\n",(0,s.jsxs)(n.h3,{id:"752-下载和删除云存储里的文件",children:["7.5.2 下载和删除云存储里的文件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#752-下载和删除云存储里的文件",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在小程序端下载云存储里的文件调用的是",(0,s.jsx)(n.code,{children:"wx.cloud.downloadFile"}),"和",(0,s.jsx)(n.code,{children:"wx.cloud.deleteFile"}),"，这两个接口我们只需要传入云存储里的文件的fileID就可以。比如我们可以在控制台调用这些接口："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"wx.cloud.downloadFile({\n  fileID: 'cloud://xly-xrlur.786c-xly-xrlur-1300446086/1571902980622-737.xls' //换成自己云存储里的fileID\n})\n.then(res => {\n  console.log(res.tempFilePath)\n}).catch(error => {\n  console.log(error)\n})\n\nwx.cloud.deleteFile({\n  fileList: ['cloud://xly-xrlur.786c-xly-xrlur-1300446086/1571902980622-737.xls', 'cloud://xly-xrlur.786c-xly-xrlur-1300446086/1572315793628-366.png'],//换成自己云存储里的fileID\n}).then(res => {\n  console.log(res.fileList)\n}).catch(error => {\n  console.log(error)\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:"从云存储里下载的文件会被存储到小程序的临时路径，可以说小程序的临时路径是图片上传和下载的一个过渡存储空间，都需要先经过它，而不是直接上传。在小程序端删除文件的时候，注意文件的默认权限是“所有用户可读，仅创建者可读写”，所以如果不是用户通过小程序上传的文件，在小程序端是删除不了的，也就是说如果你的文件是通过控制台或云函数上传的，由于该文件没有上传者openID，就无法识别谁是创建者。"}),"\n",(0,s.jsxs)(n.h3,{id:"753-云函数上传图片到云存储",children:["7.5.3 云函数上传图片到云存储",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#753-云函数上传图片到云存储",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["云开发不仅在小程序端可以上传文件到云存储，还可以通过云函数也就是云端上传图片到云存储（这里会涉及到一点Node.js的知识）。注意云函数上传图片的API属于服务端API",(0,s.jsx)(n.code,{children:"cloud.downloadFile"}),"，与小程序端",(0,s.jsx)(n.code,{children:"wx.cloud.uploadFile"}),"有一些不同，我们先来看下面的案例。"]}),"\n",(0,s.jsxs)(n.p,{children:["使用开发者工具",(0,s.jsx)(n.strong,{children:"右键点击"}),"云函数根目录也就是cloudfunctions文件夹，选择",(0,s.jsx)(n.strong,{children:"新建Node.js云函数"}),"，云函数的名称命名为uploadimg，右键点击uploadimg文件夹，选择",(0,s.jsx)(n.strong,{children:"硬盘打开"}),"，然后拷贝一张图片如demo.jpg进去，文件结构如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"uploadimg云函数目录        \n├── index.js \n├── package.json \n├── demo.jpg\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后打开index.js，输入以下代码，这里的",(0,s.jsx)(n.code,{children:"fs"}),"、",(0,s.jsx)(n.code,{children:"path"}),"是Node.js的内置模块（内置模板不需要npm install就可以使用），这里先只需要简单的了解即可："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["在Node.js里，所有与文件操作都是通过",(0,s.jsx)(n.code,{children:"fs"}),"核心模块来实现的，包括文件目录的创建、删除、查询以及文件的读取和写入，下面的createReadStream方法类似于读取文件；"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"}),"模块提供了一些用于处理文件路径的API，比如下面的join方法用于连接路径；"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"__dirname"}),"是指当前模块的目录名。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\nconst fs = require('fs')\nconst path = require('path')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nexports.main = async (event, context) => {\n  const fileStream = fs.createReadStream(path.join(__dirname, 'demo.jpg'))\n  return await cloud.uploadFile({\n    cloudPath: 'tcbdemo.jpg',\n    fileContent: fileStream,\n  })\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后右键点击uploadimg文件夹，选择",(0,s.jsx)(n.strong,{children:"在终端中打开"}),"，输入npm install安装依赖，再点击uploadimg云函数目录，选择",(0,s.jsx)(n.strong,{children:"上传并部署所有文件"}),"（这时图片也一并上传到了云端）。"]}),"\n",(0,s.jsxs)(n.p,{children:["我们可以直接在开发者工具\bconsole控制台执行以下事件处理函数，通过调用",(0,s.jsx)(n.code,{children:"wx.cloud.callFunction"}),"来在小程序端调用uploadimg云函数，从而调用uploadFile API将服务端/云端的图片上传到云存储里面啦，可以打开云开发控制台的云存储查看是否有tcbdemo.jpg这张图片。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"uploadimg() {\n  wx.cloud.callFunction({\n    name: 'uploadimg',\n    success: res => {\n      console.log(res)\n    }\n  })\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["注意通过云函数上传到云存储的图片，是没有上传者openid的，在云存储里查看这张图片的详细信息，会看到",(0,s.jsx)(n.strong,{children:"上传者的Open ID"}),"为空。"]}),"\n",(0,s.jsxs)(n.h3,{id:"753-获取文件在云存储的https链接",children:["7.5.3 获取文件在云存储的https链接",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#753-获取文件在云存储的https链接",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"上传图片到云存储返回的是文件在云存储的fileID，而图片的下载地址，不过我们可以使用fileID换取云存储空间指定文件的https链接（云存储提供免费的CDN域名）。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"公有读的文件获取的 https 链接不会过期，比如默认情况下的权限就是公有读，获取的链接永久有效；"}),"\n",(0,s.jsx)(n.li,{children:"私有读的文件获取的 https 链接为临时链接，比如您可以结合用户身份认证和安全规则设置文件的权限为仅文件的上传创建者或管理员可读，此时只有通过了云开发身份验证的用户才有权限换取临时链接；"}),"\n",(0,s.jsx)(n.li,{children:"有效期可以动态设置，超过有效期再请求临时链接时会被拒绝，保证了文件的安全；"}),"\n",(0,s.jsx)(n.li,{children:"一次最多可以取 50 个，更多需分批处理。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["比如我们在小程序端调用",(0,s.jsx)(n.code,{children:"wx.cloud.getTempFileURL"})," 方法，只需要传入文件的fileID，就可以换取云存储空间指定文件的https链接，这个https链接我们可以在浏览器里打开，也可以做为图床来使用："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"wx.cloud.getTempFileURL({\n  fileList: ['cloud://xly-xrlur.786c-xly-xrlur-1300446086/1571902980622-737.xls', 'cloud://xly-xrlur.786c-xly-xrlur-1300446086/1572315793628-366.png'],\n})\n.then((res) => {\n  console.log(res.fileList);\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"754-fileid是云存储与数据库的纽带",children:["7.5.4 fileID是云存储与数据库的纽带",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#754-fileid是云存储与数据库的纽带",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["不经过数据库直接把文件上传到云存储里，这样文件的上传、删除、修改、查询是",(0,s.jsx)(n.strong,{children:"无法和具体的业务对应的"}),"，比如文章商品的配图、表单图片附件的添加与删除，都需要图片等资源能够与文章、商品、表单的ID能够一一对应才能进行管理（",(0,s.jsx)(n.strong,{children:"在数据库里才能对应"}),"），而这些文章、商品、表单又可以通过数据库与用户的ID、其他业务联系起来，可见数据库在云存储的管理上扮演着极其重要的角色。"]}),"\n",(0,s.jsxs)(n.p,{children:["每一个上传到云开发的文件都有一个全网唯一的fileID，而将fileID传入到云存储的API就可以对文件进行下载、删除、获取文件信息等操作，非常方便。从上面可以看出，云存储与数据库就是",(0,s.jsx)(n.strong,{children:"通过fileID来取得联系"}),"的，数据库",(0,s.jsx)(n.strong,{children:"只记录文件在云存储的fileID"}),"，我们可以访问数据库相应的fileID属性进行记录的增删改查操作，与此同时调用云存储的上传文件、下载文件、删除文件等API，这样云存储就被数据库给管理起来了。"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F47.%E4%BA%91%E5%AD%98%E5%82%A8%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.md"]={toc:[{text:"7.5 云存储快速入门",id:"75-云存储快速入门",depth:2},{text:"7.5.1 上传文件到云存储",id:"751-上传文件到云存储",depth:3},{text:"1、上传文件到云存储的案例",id:"1上传文件到云存储的案例",depth:4},{text:"2、文件后缀的处理",id:"2文件后缀的处理",depth:4},{text:"3、文件名的处理",id:"3文件名的处理",depth:4},{text:"7.5.2 下载和删除云存储里的文件",id:"752-下载和删除云存储里的文件",depth:3},{text:"7.5.3 云函数上传图片到云存储",id:"753-云函数上传图片到云存储",depth:3},{text:"7.5.3 获取文件在云存储的https链接",id:"753-获取文件在云存储的https链接",depth:3},{text:"7.5.4 fileID是云存储与数据库的纽带",id:"754-fileid是云存储与数据库的纽带",depth:3}],title:"47.云存储快速入门",headingTitle:"47.云存储快速入门",frontmatter:{}}}}]);