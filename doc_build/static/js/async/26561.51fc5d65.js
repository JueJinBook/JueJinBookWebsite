"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["26561"],{24321:function(e,n,t){e.exports=t.p+"static/image/f26cc0672d98fef0d57d4e2011e3a248.062274dd.webp"},465574:function(e,n,t){t.r(n),t.d(n,{default:()=>P});var a=t(552676),r=t(740453),o=t(24321);let i=t.p+"static/image/2451cfae04d78260124f00f85e759e34.0b9437c7.webp",s=t.p+"static/image/8e37a142e0ce1a68ec78d40f5a6bbccf.309dc220.gif",m=t.p+"static/image/2ad67f8132ad7ebc730c6700a490e057.10b827e6.webp",c=t.p+"static/image/c4d9ba4d74d4f62d9fb7f683df712390.52e22899.gif",g=t.p+"static/image/f01691e7a073bd37fa8d214d3be2eba1.e805ad51.webp",d=t.p+"static/image/13cd19a7adb3fc86649aa3163013bae1.278a7ec5.webp",l=t.p+"static/image/cbc09a92baa26ca89c5ed4f364ed47f2.befd7f10.webp",u=t.p+"static/image/2f296ce40461d792a13e0e3af577cb00.6bea8de6.webp",p=t.p+"static/image/b9151133b10c0f7267ea635371825df5.6cbf000a.webp",f=t.p+"static/image/34ead49226a95c941551744c4598e0d5.70380c74.webp",h=t.p+"static/image/5174d709ea2dc23aa201cdc3ce00c2c3.ee1c37c4.gif",b=t.p+"static/image/112d317c41b8da9aa4c16c32faba0fec.760bb2ec.webp",x=t.p+"static/image/22be3291800ddc926423992e0feed8cb.a09c4179.webp",j=t.p+"static/image/0f5ba5cfa651e550d31000733735edb4.f223205f.webp",S=t.p+"static/image/0ed73a5958422064844abbe49cae206c.7fd2e7ef.webp",k=t.p+"static/image/ac29b6095f00625b91b1a91cd5135649.67857291.webp",F=t.p+"static/image/426866fe120130707416914faa03086e.a4bbb966.webp",I=t.p+"static/image/248fd8a15296865923725f7dce64ebd8.59c19561.webp",T=t.p+"static/image/9a522defa10dccaeaac5b7ce4412b3ee.588f27a5.webp",D=t.p+"static/image/9679bc3670f12d74562615d665471e6a.0dce72e2.webp",R=t.p+"static/image/a89f67105161432857a9349551b10364.fccf06c0.webp",E=t.p+"static/image/61ee37af8827044d94785e7a125574b0.39f4d4f7.webp",B=t.p+"static/image/7046c4d6a5d8e7e9991709492ae88745.33af6b27.webp",y=t.p+"static/image/20d27de5d6422fc0a6c85ed6bc82464d.7ced01a5.webp";function N(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"126-会议室预订系统预定管理模块-用户端前端开发",children:["126. 会议室预订系统：预定管理模块-用户端前端开发",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#126-会议室预订系统预定管理模块-用户端前端开发",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"这节我们来写下预订管理模块的用户端。"}),"\n",(0,a.jsx)(n.p,{children:"把用户端代码跑起来，首先写下预订历史页面："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:y,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这个页面就是一个列表："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:B,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"我们先写上面的 form："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import { Button, DatePicker, Form, Input, TimePicker } from "antd";\nimport { useEffect } from "react";\nimport { useForm } from "antd/es/form/Form";\nimport \'./booking_history.css\';\n\nexport interface SearchBooking {\n    username: string;\n    meetingRoomName: string;\n    meetingRoomPosition: string;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n}\n\nexport function BookingHistory() {\n    const searchBooking = async (values: SearchBooking) => {\n        \n    }\n\n    const [form ]  = useForm();\n\n    useEffect(() => {\n        searchBooking({\n            username: \'\',\n            meetingRoomName: form.getFieldValue(\'meetingRoomName\'),\n            meetingRoomPosition: form.getFieldValue(\'meetingRoomPosition\'),\n            rangeStartDate: form.getFieldValue(\'rangeStartDate\'),\n            rangeStartTime: form.getFieldValue(\'rangeStartTime\'),\n            rangeEndDate: form.getFieldValue(\'rangeEndDate\'),\n            rangeEndTime: form.getFieldValue(\'rangeEndTime\')\n        });\n    }, []);\n\n    return <div id="bookingHistory-container">\n        <div className="bookingHistory-form">\n            <Form\n                form={form}\n                onFinish={searchBooking}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="会议室名称" name="meetingRoomName">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label="预定开始日期" name="rangeStartDate">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label="预定开始时间" name="rangeStartTime">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label="预定结束日期" name="rangeEndDate">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label="预定结束时间" name="rangeEndTime">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label="位置" name="meetingRoomPosition">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=" ">\n                    <Button type="primary" htmlType="submit">\n                        搜索预定历史\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"#bookingHistory-container {\n    padding: 20px;\n}\n#bookingHistory-container .bookingHistory-form {\n    margin-bottom: 40px;\n}\n#bookingHistory-container .ant-form-item {\n    margin: 10px;\n}\n\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:E,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"和后台管理的页面差不多，只不过这里没有 user 的搜索。"}),"\n",(0,a.jsx)(n.p,{children:"我们登录的时候把它放到了 localStorage 里，所以这里从 localStorage 取就行："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:R,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:D,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function getUserInfo() {\n    const userInfoStr = localStorage.getItem('user_info');\n\n    if(userInfoStr) {\n        return JSON.parse(userInfoStr);\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"然后在 interface.ts 写下用到的接口："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"export async function bookingList(searchBooking: SearchBooking, pageNo: number, pageSize: number) {\n\n    let bookingTimeRangeStart;\n    let bookingTimeRangeEnd;\n    \n    if(searchBooking.rangeStartDate && searchBooking.rangeStartTime) {\n        const rangeStartDateStr = dayjs(searchBooking.rangeStartDate).format('YYYY-MM-DD');\n        const rangeStartTimeStr = dayjs(searchBooking.rangeStartTime).format('HH:mm');\n        bookingTimeRangeStart = dayjs(rangeStartDateStr + ' ' + rangeStartTimeStr).valueOf()\n    }\n\n    if(searchBooking.rangeEndDate && searchBooking.rangeEndTime) {\n        const rangeEndDateStr = dayjs(searchBooking.rangeEndDate).format('YYYY-MM-DD');\n        const rangeEndTimeStr = dayjs(searchBooking.rangeEndTime).format('HH:mm');\n        bookingTimeRangeEnd = dayjs(rangeEndDateStr + ' ' + rangeEndTimeStr).valueOf()\n    }\n\n    return await axiosInstance.get('/booking/list', {\n        params: {\n            username: searchBooking.username,\n            meetingRoomName: searchBooking.meetingRoomName,\n            meetingRoomPosition: searchBooking.meetingRoomPosition,\n            bookingTimeRangeStart,\n            bookingTimeRangeEnd,\n            pageNo: pageNo,\n            pageSize: pageSize\n        }\n    });\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"这个就是当时后台管理的接口，没啥区别。"}),"\n",(0,a.jsx)(n.p,{children:"然后在页面调用下："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:T,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"interface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    room: MeetingRoomSearchResult\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const [pageNo, setPageNo] = useState<number>(1);\nconst [pageSize, setPageSize] = useState<number>(10);\nconst [bookingSearchResult, setBookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n\nconst searchBooking = async (values: SearchBooking) => {\n    const res = await bookingList({\n            ...values,\n            username: getUserInfo().username\n        }, pageNo, pageSize);\n\n    const { data } = res.data;\n    if(res.status === 201 || res.status === 200) {\n        setBookingSearchResult(data.bookings.map((item: BookingSearchResult) => {\n            return {\n                key: item.id,\n                ...item\n            }\n        }))\n    } else {\n        message.error(data || '系统繁忙，请稍后再试');\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"接口调用没啥问题："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:I,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:F,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后加上下面的表格："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:k,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:S,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这些和后台管理一样，直接复制过来就行："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import { Button, DatePicker, Form, Input, Table, TimePicker, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"antd/es/form/Form\";\nimport './booking_history.css';\nimport { bookingList } from \"../../interface/interfaces\";\nimport { MeetingRoomSearchResult } from \"../meeting_room_list/MeetingRoomList\";\nimport { ColumnsType } from \"antd/es/table\";\nimport dayjs from 'dayjs';\n\nexport interface SearchBooking {\n    username: string;\n    meetingRoomName: string;\n    meetingRoomPosition: string;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n}\n\ninterface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    room: MeetingRoomSearchResult\n}\n\nfunction getUserInfo() {\n    const userInfoStr = localStorage.getItem('user_info');\n\n    if(userInfoStr) {\n        return JSON.parse(userInfoStr);\n    }\n}\n\nexport function BookingHistory() {\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(10);\n    const [bookingSearchResult, setBookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n\n    const searchBooking = async (values: SearchBooking) => {\n        const res = await bookingList(values, pageNo, pageSize);\n\n        const { data } = res.data;\n        if(res.status === 201 || res.status === 200) {\n            setBookingSearchResult(data.bookings.map((item: BookingSearchResult) => {\n                return {\n                    key: item.id,\n                    ...item\n                }\n            }))\n        } else {\n            message.error(data || '系统繁忙，请稍后再试');\n        }\n    }\n\n    const [form ]  = useForm();\n\n    const changePage = function(pageNo: number, pageSize: number) {\n        setPageNo(pageNo);\n        setPageSize(pageSize);\n    }\n\n    useEffect(() => {\n        searchBooking({\n            username: getUserInfo().username,\n            meetingRoomName: form.getFieldValue('meetingRoomName'),\n            meetingRoomPosition: form.getFieldValue('meetingRoomPosition'),\n            rangeStartDate: form.getFieldValue('rangeStartDate'),\n            rangeStartTime: form.getFieldValue('rangeStartTime'),\n            rangeEndDate: form.getFieldValue('rangeEndDate'),\n            rangeEndTime: form.getFieldValue('rangeEndTime')\n        });\n    }, [pageNo, pageSize]);\n\n    const columns: ColumnsType<BookingSearchResult> = [\n        {\n            title: '会议室名称',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.name\n            }\n        },\n        {\n            title: '开始时间',\n            dataIndex: 'startTime',\n            render(_, record) {\n                return  dayjs(new Date(record.startTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'endTime',\n            render(_, record) {\n                return dayjs(new Date(record.endTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '审批状态',\n            dataIndex: 'status',\n            onFilter: (value, record) => record.status.startsWith(value as string),\n            filters: [\n                {\n                  text: '审批通过',\n                  value: '审批通过',\n                },\n                {\n                  text: '审批驳回',\n                  value: '审批驳回',\n                },\n                {\n                    text: '申请中',\n                    value: '申请中',\n                },\n                {\n                    text: '已解除',\n                    value: '已解除'\n                },\n              ],\n        },\n        {\n            title: '预定时间',\n            dataIndex: 'createTime',\n            render(_, record) {\n                return dayjs(new Date(record.createTime)).format('YYYY-MM-DD hh:mm:ss')\n            }\n        },\n        {\n            title: '备注',\n            dataIndex: 'note'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description'\n        },\n        {\n            title: '操作',\n            render: () => (\n                <div>\n                    \n                </div>\n            )\n        }\n    ];\n\n    return <div id=\"bookingHistory-container\">\n        <div className=\"bookingHistory-form\">\n            <Form\n                form={form}\n                onFinish={searchBooking}\n                name=\"search\"\n                layout='inline'\n                colon={false}\n            >\n                <Form.Item label=\"会议室名称\" name=\"meetingRoomName\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"预定开始日期\" name=\"rangeStartDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定开始时间\" name=\"rangeStartTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束日期\" name=\"rangeEndDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束时间\" name=\"rangeEndTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"位置\" name=\"meetingRoomPosition\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\" \">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        搜索预定历史\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className=\"bookingHistory-table\">\n            <Table columns={columns} dataSource={bookingSearchResult} pagination={ {\n                current: pageNo,\n                pageSize: pageSize,\n                onChange: changePage\n            }}/>\n        </div>\n    </div>\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"这样，列表就完成了："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:j,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后实现解除预定功能："}),"\n",(0,a.jsx)(n.p,{children:"在 interface.ts 添加 unbind 接口："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"export async function unbind(id: number) {\n    return await axiosInstance.get('/booking/unbind/' + id);\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"然后在页面调用下："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:x,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:b,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import { Button, DatePicker, Form, Input, Popconfirm, Table, TimePicker, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"antd/es/form/Form\";\nimport './booking_history.css';\nimport { bookingList, unbind } from \"../../interface/interfaces\";\nimport { MeetingRoomSearchResult } from \"../meeting_room_list/MeetingRoomList\";\nimport { ColumnsType } from \"antd/es/table\";\nimport dayjs from 'dayjs';\n\nexport interface SearchBooking {\n    username: string;\n    meetingRoomName: string;\n    meetingRoomPosition: string;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n}\n\ninterface BookingSearchResult {\n    id: number;\n    startTime: string;\n    endTime: string;\n    status: string;\n    note: string;\n    createTime: string;\n    updateTime: string;\n    room: MeetingRoomSearchResult\n}\n\nfunction getUserInfo() {\n    const userInfoStr = localStorage.getItem('user_info');\n\n    if(userInfoStr) {\n        return JSON.parse(userInfoStr);\n    }\n}\n\nexport function BookingHistory() {\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [pageSize, setPageSize] = useState<number>(10);\n    const [bookingSearchResult, setBookingSearchResult] = useState<Array<BookingSearchResult>>([]);\n    const [num, setNum] = useState(0);\n\n    const searchBooking = async (values: SearchBooking) => {\n        const res = await bookingList(values, pageNo, pageSize);\n\n        const { data } = res.data;\n        if(res.status === 201 || res.status === 200) {\n            setBookingSearchResult(data.bookings.map((item: BookingSearchResult) => {\n                return {\n                    key: item.id,\n                    ...item\n                }\n            }))\n        } else {\n            message.error(data || '系统繁忙，请稍后再试');\n        }\n    }\n\n    const [form ]  = useForm();\n\n    const changePage = function(pageNo: number, pageSize: number) {\n        setPageNo(pageNo);\n        setPageSize(pageSize);\n    }\n\n    useEffect(() => {\n        searchBooking({\n            username: getUserInfo().username,\n            meetingRoomName: form.getFieldValue('meetingRoomName'),\n            meetingRoomPosition: form.getFieldValue('meetingRoomPosition'),\n            rangeStartDate: form.getFieldValue('rangeStartDate'),\n            rangeStartTime: form.getFieldValue('rangeStartTime'),\n            rangeEndDate: form.getFieldValue('rangeEndDate'),\n            rangeEndTime: form.getFieldValue('rangeEndTime')\n        });\n    }, [pageNo, pageSize, num]);\n\n    async function changeStatus(id: number) {\n\n        const res = await unbind(id);\n\n        if(res.status === 201 || res.status === 200) {\n            message.success('状态更新成功');\n            setNum(Math.random());\n        } else {\n            message.error(res.data.data);\n        }\n    }\n\n    const columns: ColumnsType<BookingSearchResult> = [\n        {\n            title: '会议室名称',\n            dataIndex: 'room',\n            render(_, record) {\n                return record.room.name\n            }\n        },\n        {\n            title: '开始时间',\n            dataIndex: 'startTime',\n            render(_, record) {\n                return  dayjs(new Date(record.startTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'endTime',\n            render(_, record) {\n                return dayjs(new Date(record.endTime)).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '审批状态',\n            dataIndex: 'status',\n            onFilter: (value, record) => record.status.startsWith(value as string),\n            filters: [\n                {\n                  text: '审批通过',\n                  value: '审批通过',\n                },\n                {\n                  text: '审批驳回',\n                  value: '审批驳回',\n                },\n                {\n                    text: '申请中',\n                    value: '申请中',\n                },\n                {\n                    text: '已解除',\n                    value: '已解除'\n                },\n              ],\n        },\n        {\n            title: '预定时间',\n            dataIndex: 'createTime',\n            render(_, record) {\n                return dayjs(new Date(record.createTime)).format('YYYY-MM-DD hh:mm:ss')\n            }\n        },\n        {\n            title: '备注',\n            dataIndex: 'note'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description'\n        },\n        {\n            title: '操作',\n            render: (_, record) => (\n                record.status === '申请中' ? <div>\n                    <Popconfirm\n                        title=\"解除申请\"\n                        description=\"确认解除吗？\"\n                        onConfirm={() => changeStatus(record.id)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >  \n                        <a href=\"#\">解除预定</a>\n                    </Popconfirm>\n                </div> : null\n            )\n        }\n    ];\n\n    return <div id=\"bookingHistory-container\">\n        <div className=\"bookingHistory-form\">\n            <Form\n                form={form}\n                onFinish={searchBooking}\n                name=\"search\"\n                layout='inline'\n                colon={false}\n            >\n                <Form.Item label=\"会议室名称\" name=\"meetingRoomName\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"预定开始日期\" name=\"rangeStartDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定开始时间\" name=\"rangeStartTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束日期\" name=\"rangeEndDate\">\n                    <DatePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"预定结束时间\" name=\"rangeEndTime\">\n                    <TimePicker/>\n                </Form.Item>\n\n                <Form.Item label=\"位置\" name=\"meetingRoomPosition\">\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\" \">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        搜索预定历史\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className=\"bookingHistory-table\">\n            <Table columns={columns} dataSource={bookingSearchResult} pagination={ {\n                current: pageNo,\n                pageSize: pageSize,\n                onChange: changePage\n            }}/>\n        </div>\n    </div>\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"测试下："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:h,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"没啥问题。"}),"\n",(0,a.jsx)(n.p,{children:"如果没有合适的数据，就手动去数据库里改一下："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:f,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"接下来，还有一个添加预定的功能："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:p,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"当点击会议室列表的预定按钮的时候，会弹出这个窗口。"}),"\n",(0,a.jsx)(n.p,{children:"添加 src/meeting_room_list/CreateBookingModal.tsx"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import { DatePicker, Form, Input, InputNumber, Modal, Select, TimePicker, message } from "antd";\nimport { useForm } from "antd/es/form/Form";\nimport { bookingAdd } from "../../interface/interfaces";\nimport { MeetingRoomSearchResult } from "./MeetingRoomList";\n\ninterface CreateBookingModalProps {\n    isOpen: boolean;\n    handleClose: Function;\n    meetingRoom: MeetingRoomSearchResult;\n}\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 }\n}\n\nexport interface CreateBooking {\n    meetingRoomId: number;\n    rangeStartDate: Date;\n    rangeStartTime: Date;\n    rangeEndDate: Date;\n    rangeEndTime: Date;\n    note: string;\n}\n\nexport function CreateBookingModal(props: CreateBookingModalProps) {\n\n    const [form] = useForm<CreateBooking>();\n\n    const handleOk = async function() {\n      \n    }\n\n    return <Modal title="创建会议室" open={props.isOpen} onOk={handleOk} onCancel={() => props.handleClose()} okText={\'创建\'}>\n        <Form\n            form={form}\n            colon={false}\n            {...layout}\n        >\n            <Form.Item\n                label="会议室名称"\n                name="meetingRoomId"\n            >\n                {props.meetingRoom.name}\n            </Form.Item>\n            <Form.Item\n                label="预定开始日期"\n                name="rangeStartDate"\n                rules={[\n                    { required: true, message: \'请输入预定开始日期!\' },\n                ]}\n            >\n                <DatePicker/>\n            </Form.Item>\n            <Form.Item\n                label="预定开始时间"\n                name="rangeStartTime"\n                rules={[\n                    { required: true, message: \'请输入预定开始日期!\' },\n                ]}\n            >\n                <TimePicker/>\n            </Form.Item>\n            <Form.Item\n                label="预定结束日期"\n                name="rangeEndDate"\n                rules={[\n                    { required: true, message: \'请输入预定结束日期!\' },\n                ]}\n            >\n                <DatePicker/>\n            </Form.Item>\n            <Form.Item\n                label="预定结束时间"\n                name="rangeEndTime"\n                rules={[\n                    { required: true, message: \'请输入预定结束日期!\' },\n                ]}\n            >\n                <TimePicker/>\n            </Form.Item>\n            <Form.Item\n                label="备注"\n                name="note"\n            >\n                <Input />\n            </Form.Item>\n        </Form>\n    </Modal>\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"然后点击预定按钮的时候，显示这个弹窗："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:u,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"添加 isCreateModalOpen 的 state 来标识弹窗是否打开，并且记录点击的是哪个会议室："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:l,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\nconst [currentMeetingRoom, setCurrentMeetingRoom] =  useState<MeetingRoomSearchResult>();\n"})}),"\n",(0,a.jsx)(n.p,{children:"点击预定按钮的时候，打开弹窗，记录当前会议室："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"{\n    title: '操作',\n    render: (_, record) => (\n        <div>\n            <a href=\"#\" onClick={() => {\n                setIsCreateModalOpen(true);\n                setCurrentMeetingRoom(record);\n            }}>预定</a>\n        </div>\n    )\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"然后弹窗传入当前的会议室，并且点击关闭的时候关闭弹窗："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:g,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"{\n    currentMeetingRoom ? \n        <CreateBookingModal meetingRoom={currentMeetingRoom} isOpen={isCreateModalOpen} handleClose={() => {\n            setIsCreateModalOpen(false);\n        }}></CreateBookingModal>\n    : null\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"没啥问题："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:c,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后在 interface.ts 添加用到的接口："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:m,alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"export async function bookingAdd(booking: CreateBooking) {\n    const rangeStartDateStr = dayjs(booking.rangeStartDate).format('YYYY-MM-DD');\n    const rangeStartTimeStr = dayjs(booking.rangeStartTime).format('HH:mm');\n    const startTime = dayjs(rangeStartDateStr + ' ' + rangeStartTimeStr).valueOf()\n\n    const rangeEndDateStr = dayjs(booking.rangeEndDate).format('YYYY-MM-DD');\n    const rangeEndTimeStr = dayjs(booking.rangeEndTime).format('HH:mm');\n    const endTime = dayjs(rangeEndDateStr + ' ' + rangeEndTimeStr).valueOf()\n\n    return await axiosInstance.post('/booking/add', {\n        meetingRoomId: booking.meetingRoomId,\n        startTime,\n        endTime,\n        note: booking.note            \n    });\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"这里需要把日期时间做合并。"}),"\n",(0,a.jsx)(n.p,{children:"然后在组件里调用下："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const handleOk = async function() {\n    const values = form.getFieldsValue();\n    values.meetingRoomId = props.meetingRoom.id;\n\n    const res = await bookingAdd(values);\n\n    if(res.status === 201 || res.status === 200) {\n        message.success('预定成功');\n        form.resetFields();\n        props.handleClose();\n    } else {\n        message.error(res.data.data);\n    }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"没啥问题："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:s,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:i,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:o,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这样，预定、预订历史、取消预订就都完成了。"}),"\n",(0,a.jsxs)(n.p,{children:["案例代码上传了",(0,a.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_frontend_user",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,a.jsxs)(n.h2,{id:"总结",children:["总结",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"这节我们完成了预订历史、添加预定、取消预订的功能。"}),"\n",(0,a.jsx)(n.p,{children:"就是涉及到时间日期需要两个表单做合并处理，其余的倒是没啥难度。"}),"\n",(0,a.jsx)(n.p,{children:"至此，预订管理模块就完成了。"})]})}function v(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(N,{...e})}):N(e)}let P=v;v.__RSPRESS_PAGE_META={},v.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F126.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E9%A2%84%E5%AE%9A%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97-%E7%94%A8%E6%88%B7%E7%AB%AF%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"126. 会议室预订系统：预定管理模块-用户端前端开发",headingTitle:"126. 会议室预订系统：预定管理模块-用户端前端开发",frontmatter:{}}}}]);