"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["90419"],{754468:function(e,t,n){n.r(t),n.d(t,{default:()=>j});var a=n(552676),s=n(740453);let r=n.p+"static/image/48b9f2e02bfb95ecab8e48424e3b58ed.421921c1.webp",i=n.p+"static/image/15195c88a3540a0f2fc9bd31c6e6a21f.288a36a3.webp",o=n.p+"static/image/d8b7e51a829442589e0a25355cdf8d8c.c4701fe8.webp",d=n.p+"static/image/d2d25ef197d853315aa31e0a78cf0e25.e8ca6b46.webp",l=n.p+"static/image/cbf38ee287fe1492f858b23b9d3f4a58.c7355d30.webp",c=n.p+"static/image/d22b40befd24bee256aba2299818a14f.276d342f.webp",p=n.p+"static/image/4b759c1b3c053a8cf2c9e6a518041ba8.8ed012d3.webp",h=n.p+"static/image/f802d9eef9ea2c3ad276b401df6d1a48.0442ba3b.webp",m=n.p+"static/image/9e8c382da79c473a5225018e2c263165.3bfe6802.webp";function x(e){let t=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",code:"code",pre:"pre",img:"img",blockquote:"blockquote",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.h1,{id:"53实战篇-_-博客-_-seo",children:["53.实战篇 _ 博客 _ SEO",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#53实战篇-_-博客-_-seo",children:"#"})]}),"\n",(0,a.jsxs)(t.h2,{id:"前言",children:["前言",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"对于一个技术博客而言，SEO 非常重要，好的 SEO 会为你带来更多的流量。"}),"\n",(0,a.jsx)(t.p,{children:"可是问题在于，SEO 要做的事情非常多，一时间竟不知道如何开始优化。"}),"\n",(0,a.jsx)(t.p,{children:"所以本篇我们就梳理下 SEO 要做的事情。"}),"\n",(0,a.jsxs)(t.h2,{id:"1-开发时注意",children:["1. 开发时注意",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#1-开发时注意",children:"#"})]}),"\n",(0,a.jsxs)(t.h3,{id:"11-尽可能使用服务端组件",children:["1.1. 尽可能使用服务端组件",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#11-尽可能使用服务端组件",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"尽管搜索引擎也开始支持 JS 生成的内容，但还是尽可能使用服务端组件，将主体内容渲染成 HTML 返回给爬虫"}),"\n",(0,a.jsxs)(t.h3,{id:"12-尽可能使用-streaming",children:["1.2. 尽可能使用 Streaming",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#12-尽可能使用-streaming",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"使用 Streaming 并不会对 SEO 造成负面影响，相反，因为显著改善了首次页面呈现时间等性能指标，对 SEO 更好。"}),"\n",(0,a.jsxs)(t.h3,{id:"13-尽可能使用-image-组件",children:["1.3. 尽可能使用 Image 组件",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#13-尽可能使用-image-组件",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"Image 组件本身有尺寸优化、懒加载等功能，而且为了维持视觉稳定，它会在图片加载的时候自动阻止布局偏移，此外使用 Image 组件需要设置 alt 属性，这都有利于 SEO。"}),"\n",(0,a.jsxs)(t.h3,{id:"14-尽可能使用-font-组件",children:["1.4. 尽可能使用 Font 组件",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#14-尽可能使用-font-组件",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"Font 组件会在构建时获取外部字体文件，并自动使用 CSS size-adjust 属性对字体进行调整，以防止发生布局偏移。像谷歌公开表示过，CLS （Cumulative Layout Shift，累计布局偏移，网页整个生命周期内发生的所有意外布局偏移的得分总和）是一个重要指标。"}),"\n",(0,a.jsx)(t.p,{children:"简单来说，就是谷歌要求网页元素在加载期间不要“乱动”，比如点赞按钮本应该在下方，但因为文章还没有加载完毕，于是呈现在上方，文章加载完毕后，就被“挤”到下方，这就很不好。"}),"\n",(0,a.jsx)(t.p,{children:"Image 组件和 Font 组件默认都做了阻止布局偏移处理。"}),"\n",(0,a.jsx)(t.p,{children:"简而言之，优化 Next.js 应用程序的性能将直接影响 SEO。"}),"\n",(0,a.jsxs)(t.h2,{id:"2-添加-robotstxt-和-sitemapxml",children:["2. 添加 robots.txt 和 sitemap.xml",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#2-添加-robotstxt-和-sitemapxml",children:"#"})]}),"\n",(0,a.jsxs)(t.p,{children:["关于 robots.txt 和 sitemap.xml，我们已经在 ",(0,a.jsx)(t.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309078702511128626#heading-27",target:"_blank",rel:"noopener noreferrer",children:"《Metadata 篇 | 基于文件》"}),"介绍过。这里我们就直接开始讲如何做。"]}),"\n",(0,a.jsxs)(t.p,{children:["新建 ",(0,a.jsx)(t.code,{children:"data/siteMetadata.js"}),"，用于存储网站常用 SEO 字段，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const siteMetadata = {\n  siteUrl: 'https://yayujs.com'\n}\n\nexport default siteMetadata\n"})}),"\n",(0,a.jsxs)(t.p,{children:["为了方便引入，修改 ",(0,a.jsx)(t.code,{children:"jsconfig.json"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "paths": {\n      "@/data/*": ["data/*"],\n      "contentlayer/generated": ["./.contentlayer/generated"]\n    }\n  },\n  "include": [\n    "next-env.d.js",\n    "**/*.js",\n    "**/*.jsx",\n    ".next/types/**/*.js",\n    ".contentlayer/generated"\n  ]\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["新建 ",(0,a.jsx)(t.code,{children:"app/sitemap.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import { allPosts } from 'contentlayer/generated'\nimport siteMetadata from '@/data/siteMetadata'\n\nexport default function sitemap() {\n  const siteUrl = siteMetadata.siteUrl\n\n  const blogRoutes = allPosts\n    .map((post) => ({\n      url: `${siteUrl}${post.url}`,\n      lastModified: post.lastmod || post.date,\n    }))\n\n  const routes = ['', 'posts'].map((route) => ({\n    url: `${siteUrl}/${route}`,\n    lastModified: new Date().toISOString().split('T')[0],\n  }))\n\n  return [...routes, ...blogRoutes]\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["这里我们动态生成了所有页面地址，当你访问 ",(0,a.jsx)(t.a,{href:"http://localhost:3000/sitemap.xml",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/sitemap.xml"})," 时，效果如下："]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,a.jsxs)(t.p,{children:["新建 ",(0,a.jsx)(t.code,{children:"app/robots.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import siteMetadata from '@/data/siteMetadata'\n\nexport default function robots() {\n  return {\n    rules: {\n      userAgent: '*',\n      allow: '/',\n    },\n    sitemap: `${siteMetadata.siteUrl}/sitemap.xml`,\n    host: siteMetadata.siteUrl,\n  }\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["当你访问 ",(0,a.jsx)(t.a,{href:"http://localhost:3000/robots.txt",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/robots.txt"})," 时，效果如下："]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,a.jsxs)(t.h2,{id:"3-设置每个页面的-metadata",children:["3. 设置每个页面的 Metadata",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#3-设置每个页面的-metadata",children:"#"})]}),"\n",(0,a.jsxs)(t.h3,{id:"31-基础字段",children:["3.1. 基础字段",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#31-基础字段",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"为了方便爬取，每个页面都需要设置 title、description 等属性，除了这两个属性还有哪些属性要设置呢？"}),"\n",(0,a.jsxs)(t.p,{children:["关键看搜索引擎会用到哪些字段，这个可以参考 Google 的官方文档",(0,a.jsx)(t.a,{href:"https://developers.google.com/search/docs/crawling-indexing/special-tags?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:"《Google 支持的 meta 标记和属性》"}),"。简而言之，最常用的有："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-html",children:'<meta name="description" content="A description of the page">\n<meta name="robots" content="..., ...">\n<meta name="googlebot" content="..., ...">\n'})}),"\n",(0,a.jsxs)(t.p,{children:["注：keywords 这种属性，Google 已经废弃不用了，参考",(0,a.jsx)(t.a,{href:"https://developers.google.com/search/blog/2009/09/google-does-not-use-keywords-meta-tag?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:"《Google 不会将关键字元标记用于网页排名》"}),"。"]}),"\n",(0,a.jsxs)(t.h3,{id:"32-网站规范化字段",children:["3.2. 网站规范化字段",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#32-网站规范化字段",children:"#"})]}),"\n",(0,a.jsx)(t.p,{children:"除此之外，还应该有："}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-html",children:'<link rel="canonical" href="https://example.com/dresses/green-dresses" />\n<link rel="alternate" type="application/rss+xml" href="http://example.com/rss.xml" />\n'})}),"\n",(0,a.jsxs)(t.p,{children:["前者用于网站规范化，参考",(0,a.jsx)(t.a,{href:"https://developers.google.com/search/docs/crawling-indexing/consolidate-duplicate-urls?hl=zh-cn",target:"_blank",rel:"noopener noreferrer",children:'《如何使用 rel="canonical" 及其他方法指定规范网址》'}),"。后者用于网站的 RSS 订阅（如果有的话）。"]}),"\n",(0,a.jsxs)(t.h3,{id:"33-open-graph-protocol-字段",children:["3.3. Open Graph protocol 字段",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#33-open-graph-protocol-字段",children:"#"})]}),"\n",(0,a.jsxs)(t.p,{children:["再然后要支持  Open Graph protocol，介绍参考",(0,a.jsx)(t.a,{href:"https://juejin.cn/post/7073416301720371213",target:"_blank",rel:"noopener noreferrer",children:"《VuePress 博客之 SEO 优化（四） Open Graph protocol》"}),"。"]}),"\n",(0,a.jsx)(t.p,{children:"就是我们常见的 og: 开头的字段："}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'<meta property="og:url" content="http://www.nytimes.com/2015/02/19/arts/international/when-great-minds-dont-think-alike.html" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="When Great Minds Don’t Think Alike" />\n<meta property="og:description" content="How much does culture influence creative thinking?" />\n<meta property="og:image" content="http://static01.nyt.com/images/2015/02/19/arts/international/19iht-btnumbers19A/19iht-btnumbers19A-facebookJumbo-v2.jpg" />\n'})}),"\n",(0,a.jsx)(t.p,{children:"因为我们是博客，自然是选择 og 的 article 类型："}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,a.jsx)(t.p,{children:"最终生成的字段示例如下："}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,a.jsxs)(t.h3,{id:"34-其他字段",children:["3.4. 其他字段",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#34-其他字段",children:"#"})]}),"\n",(0,a.jsxs)(t.p,{children:["最后还有一些其他字段，比如 ",(0,a.jsx)(t.a,{href:"https://developer.twitter.com/en/docs/twitter-for-websites/cards/guides/getting-started",target:"_blank",rel:"noopener noreferrer",children:"Twitter Card"}),"，用于在 Twitter 进行分享展示，视情况添加。"]}),"\n",(0,a.jsx)(t.p,{children:"至于在 Next.js 中如何添加，我们会和下一节一起实现。"}),"\n",(0,a.jsxs)(t.h2,{id:"4-添加-json-ld-数据",children:["4. 添加 JSON-LD 数据",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#4-添加-json-ld-数据",children:"#"})]}),"\n",(0,a.jsxs)(t.p,{children:["英文全程：JavaScript Object Notation for Linked Data，官方地址：",(0,a.jsx)(t.a,{href:"https://link.juejin.cn?target=https%3A%2F%2Fjson-ld.org%2F",target:"_blank",rel:"noopener noreferrer",children:"json-ld.org/"}),"，简单的来说，就是用来描述网页的类型和内容，方便搜索引擎做展现。"]}),"\n",(0,a.jsx)(t.p,{children:"比如如果我们在 Google 搜索 「Chocolate in a mug」，我们会看到这样的搜索结果："}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:l,alt:""})}),"\n",(0,a.jsx)(t.p,{children:"我们打开页面，就可以看到搜索展示的内容对应了 application/ld+json 中的内容："}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsxs)(t.p,{children:["注：关于 JSON-LD，参考",(0,a.jsx)(t.a,{href:"https://juejin.cn/post/7073749684656799780",target:"_blank",rel:"noopener noreferrer",children:"《VuePress 博客之 SEO 优化（五）添加 JSON-LD 数据》"})]}),"\n",(0,a.jsxs)(t.p,{children:["修改 ",(0,a.jsx)(t.code,{children:"data/siteMetadata.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"const siteMetadata = {\n  siteUrl: 'https://yayujs.com',\n  title: '冴羽的技术博客',\n  description: '冴羽的技术博客，分享技术、个人成长等内容',\n  author: '冴羽',\n  locale: 'zh-CN',\n  socialBanner: 'https://cdna.artstation.com/p/assets/images/images/028/138/058/large/z-w-gu-bandageb5f.jpg?1593594749'\n}\n\nexport default siteMetadata\n"})}),"\n",(0,a.jsx)(t.p,{children:"这里我们添加了 SEO 常用的字段，方便复用以及作为默认值。其中 socialBanner 用于 og 或者 twitter 分享时的 image 默认图片。"}),"\n",(0,a.jsxs)(t.p,{children:["修改 ",(0,a.jsx)(t.code,{children:"app/layout.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import siteMetadata from '@/data/siteMetadata'\nimport \"./globals.css\";\n\nexport const metadata = {\n  metadataBase: new URL(siteMetadata.siteUrl),\n  title: {\n    default: siteMetadata.title,\n    template: `%s | ${siteMetadata.title}`,\n  },\n  description: siteMetadata.description,\n  openGraph: {\n    title: siteMetadata.title,\n    description: siteMetadata.description,\n    url: './',\n    siteName: siteMetadata.title,\n    images: [siteMetadata.socialBanner],\n    locale: 'zh_CN',\n    type: 'website',\n  },\n  alternates: {\n    canonical: './',\n    types: {\n      'application/rss+xml': `${siteMetadata.siteUrl}/feed.xml`,\n    },\n  },\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: {\n      index: true,\n      follow: true,\n      'max-video-preview': -1,\n      'max-image-preview': 'large',\n      'max-snippet': -1,\n    },\n  },\n  twitter: {\n    title: siteMetadata.title,\n    card: 'summary_large_image',\n    images: [siteMetadata.socialBanner],\n  },\n}\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang={siteMetadata.locale}>\n      <body>{children}</body>\n    </html>\n  );\n}\n\n"})}),"\n",(0,a.jsxs)(t.p,{children:["此时访问 ",(0,a.jsx)(t.a,{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/"}),"，效果如下："]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:o,alt:"截屏2024-05-13 17.30.15.png"})}),"\n",(0,a.jsx)(t.p,{children:"因为写在了根布局中，这些元数据相当于默认值。"}),"\n",(0,a.jsxs)(t.p,{children:["如果你要修改某个页面的元数据，比如修改 ",(0,a.jsx)(t.code,{children:"app/posts/page.js"}),"，添加代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"export const generateMetadata = ({ params }) => {\n  return { \n    title: \"博客列表\",\n    description: \"这是博客列表页面\",\n    openGraph: {\n      title: '博客列表',\n      description: '这是博客列表页面'\n    }\n  }\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["此时访问 ",(0,a.jsx)(t.a,{href:"http://localhost:3000/posts",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/posts"}),"，效果如下："]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:i,alt:"截屏2024-05-13 17.33.49.png"})}),"\n",(0,a.jsx)(t.p,{children:"最为复杂的应该是具体的文章页面，因为我们需要通过 FrontMatter 设置页面的元数据，并且我们使用了 Contentlayer 校验 FrontMatter 的值。"}),"\n",(0,a.jsxs)(t.p,{children:["修改 ",(0,a.jsx)(t.code,{children:"contentlayer.config.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport remarkGfm from 'remark-gfm'\nimport rehypePrismPlus from 'rehype-prism-plus'\nimport siteMetadata from './data/siteMetadata'\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    description: { type: 'string' },\n    lastmod: { type: 'date' },\n    images: { type: 'json' },\n    canonicalUrl: { type: 'string' },\n  },\n  computedFields: {\n    url: { type: 'string', resolve: (post) => `/posts/${post._raw.flattenedPath}` },\n    structuredData: {\n      type: 'json',\n      resolve: (doc) => ({\n        '@context': 'https://schema.org',\n        '@type': 'BlogPosting',\n        headline: doc.title,\n        datePublished: doc.date,\n        dateModified: doc.lastmod || doc.date,\n        description: doc.description,\n        image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\n        url: `${siteMetadata.siteUrl}/posts/${doc._raw.flattenedPath}`,\n      }),\n    },\n  },\n}))\n\nexport default makeSource({ \n  contentDirPath: 'posts', \n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [[rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],],\n  }\n})\n"})}),"\n",(0,a.jsx)(t.p,{children:"我们定义了一些 FrontMatter 的字段，并基于此和 siteMetadata 的字段计算当前文章的 JSON-LD 数据。"}),"\n",(0,a.jsxs)(t.p,{children:["修改 ",(0,a.jsx)(t.code,{children:"app/posts/[id]/page.js"}),"，代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import { allPosts } from 'contentlayer/generated'\nimport { useMDXComponent } from 'next-contentlayer/hooks'\nimport { notFound } from 'next/navigation'\nimport dayjs from \"dayjs\";\nimport siteMetadata from '@/data/siteMetadata'\n\nexport async function generateStaticParams() {\n  return allPosts.map((post) => ({\n    id: post._raw.flattenedPath,\n  }))\n}\nexport const generateMetadata = ({ params }) => {\n  const post = allPosts.find((post) => post._raw.flattenedPath === params.id)\n  if (!post) throw new Error(`Post not found for id: ${params.id}`)\n\n  const publishedAt = new Date(post.date).toISOString()\n  const modifiedAt = new Date(post.lastmod || post.date).toISOString()\n\n  let imageList = [siteMetadata.socialBanner]\n  if (post.images) {\n    imageList = typeof post.images === 'string' ? [post.images] : post.images\n  }\n  const ogImages = imageList.map((img) => {\n    return {\n      url: img.includes('http') ? img : siteMetadata.siteUrl + img,\n    }\n  })\n\n  const authors = post?.authors || [siteMetadata.author]\n  \n  return {\n    title: post.title,\n    description: post.description,\n    openGraph: {\n      title: post.title,\n      description: post.description,\n      siteName: siteMetadata.title,\n      locale: 'zh_CN',\n      type: 'article',\n      publishedTime: publishedAt,\n      modifiedTime: modifiedAt,\n      url: './',\n      images: ogImages,\n      authors: authors\n    },\n    twitter: {\n      card: 'summary_large_image',\n      title: post.title,\n      description: post.description,\n      images: imageList,\n    },\n  }\n}\n\nconst Page = ({ params }) => {\n  const post = allPosts.find((post) => post._raw.flattenedPath === params.id)\n  if (!post) notFound()\n  const MDXContent = useMDXComponent(post.body.code)\n  const jsonLd = post.structuredData\n  return (\n    <>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}\n      />\n      <article className=\"mx-auto max-w-xl py-8 prose prose-slate\">\n        <div className=\"mb-8 text-center\">\n          <time dateTime={post.date} className=\"mb-1 text-xs text-gray-600\">\n            {dayjs(post.date).format('DD/MM/YYYY')}\n          </time>\n          <h1 className=\"text-3xl font-bold\">{post.title}</h1>\n        </div>\n        <MDXContent />\n      </article>\n    </>\n  )\n}\n\nexport default Page\n"})}),"\n",(0,a.jsx)(t.p,{children:"我们根据文章页面的设置的 FrontMatter 数据动态生成页面元数据。"}),"\n",(0,a.jsxs)(t.p,{children:["修改 ",(0,a.jsx)(t.code,{children:"posts/first.mdx"}),"，添加 FrontMatter 代码如下："]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"---\ntitle: 使用 Next.js App Router 常犯的 10 个错误\ndate: 2024-05-01\nlastmod: 2024-05-02\ndescription: 本篇介绍了使用 Next.js App Router 常犯的 10 个错误\nimages: [https://cdnb.artstation.com/p/assets/images/images/007/367/401/large/z-w-gu-dsassd2.jpg?1505659743]\n---\n\n"})}),"\n",(0,a.jsxs)(t.p,{children:["此时访问 ",(0,a.jsx)(t.a,{href:"http://localhost:3000/posts/first",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/posts/first"}),"，效果如下："]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)("img",{src:r,alt:"截屏2024-05-13 17.48.13.png"})}),"\n",(0,a.jsxs)(t.h2,{id:"5-直接添加站点",children:["5. 直接添加站点",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#5-直接添加站点",children:"#"})]}),"\n",(0,a.jsxs)(t.p,{children:["不用等待 Google 慢慢收录，你可以直接将站点提交给 Google、百度等搜索引擎，参考 ",(0,a.jsx)(t.a,{href:"https://juejin.cn/post/7072291456462880782#heading-7",target:"_blank",rel:"noopener noreferrer",children:"《VuePress 博客之 SEO 优化（一） sitemap 与搜索引擎收录》"})]}),"\n",(0,a.jsxs)(t.h2,{id:"6-项目源码",children:["6. 项目源码",(0,a.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#6-项目源码",children:"#"})]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"功能实现：博客添加 SEO"}),"\n",(0,a.jsxs)(t.li,{children:["源码地址：",(0,a.jsx)(t.a,{href:"https://github.com/mqyqingfeng/next-app-demo/tree/next-blog-2",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/mqyqingfeng/next-app-demo/tree/next-blog-2"})]}),"\n",(0,a.jsxs)(t.li,{children:["下载代码：",(0,a.jsx)(t.code,{children:"git clone -b next-blog-2 git@github.com:mqyqingfeng/next-app-demo.git"})]}),"\n"]}),"\n"]})]})}function g(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}let j=g;g.__RSPRESS_PAGE_META={},g.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F53.%E5%AE%9E%E6%88%98%E7%AF%87%20_%20%E5%8D%9A%E5%AE%A2%20_%20SEO.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. 开发时注意",id:"1-开发时注意",depth:2},{text:"1.1. 尽可能使用服务端组件",id:"11-尽可能使用服务端组件",depth:3},{text:"1.2. 尽可能使用 Streaming",id:"12-尽可能使用-streaming",depth:3},{text:"1.3. 尽可能使用 Image 组件",id:"13-尽可能使用-image-组件",depth:3},{text:"1.4. 尽可能使用 Font 组件",id:"14-尽可能使用-font-组件",depth:3},{text:"2. 添加 robots.txt 和 sitemap.xml",id:"2-添加-robotstxt-和-sitemapxml",depth:2},{text:"3. 设置每个页面的 Metadata",id:"3-设置每个页面的-metadata",depth:2},{text:"3.1. 基础字段",id:"31-基础字段",depth:3},{text:"3.2. 网站规范化字段",id:"32-网站规范化字段",depth:3},{text:"3.3. Open Graph protocol 字段",id:"33-open-graph-protocol-字段",depth:3},{text:"3.4. 其他字段",id:"34-其他字段",depth:3},{text:"4. 添加 JSON-LD 数据",id:"4-添加-json-ld-数据",depth:2},{text:"5. 直接添加站点",id:"5-直接添加站点",depth:2},{text:"6. 项目源码",id:"6-项目源码",depth:2}],title:"53.实战篇 _ 博客 _ SEO",headingTitle:"53.实战篇 _ 博客 _ SEO",frontmatter:{}}}}]);