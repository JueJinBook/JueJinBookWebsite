"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["89227"],{631443:function(e,c,n){e.exports=n.p+"static/image/51a27974bcd806928b86bdeb0d8d24e4.492cea25.gif"},327822:function(e,c,n){e.exports=n.p+"static/image/c02cea08596a6e1d14cfc72cda9d4234.092e76ca.webp"},24321:function(e,c,n){e.exports=n.p+"static/image/f26cc0672d98fef0d57d4e2011e3a248.062274dd.webp"},338753:function(e,c,n){n.r(c),n.d(c,{default:()=>O});var i=n(552676),s=n(740453);let a=n.p+"static/image/2be35811a8a6bf6b1bf9e8a5e65a2c08.35f4f905.webp";var d=n(631443);let r=n.p+"static/image/730b9a2ef4e7f9169ba27fe29e5c9588.467afcbe.webp",p=n.p+"static/image/6d96487318cca15ffca6fa0b7b06c8af.b115fb12.webp",l=n.p+"static/image/14e8ca6952881529454b405087d8a59c.1ce4fd86.webp",t=n.p+"static/image/90243da4979755382ef88953b459e8f0.8cd87df7.webp",x=n.p+"static/image/e295afcc23e3dd38b23891d6772f2547.4c939caf.webp",j=n.p+"static/image/a3d8fa04d380a25224df2c800b56f57a.23a360d5.webp",h=n.p+"static/image/b9bc15faa96274fd00d8a1e6d3f86ce4.50ad4e81.webp",g=n.p+"static/image/f40aa7881d1b7e666368c1ff81c49ad5.da174846.webp",f=n.p+"static/image/42ffdbd3d8c2484e7296ac7cf397962d.809f9ea0.webp",b=n.p+"static/image/8e99ff008aac42e3c4592601a326ebd9.c05caf26.webp",o=n.p+"static/image/a758c0a0d8c67ade9fe456baa6efbda0.68a547e1.webp",m=n.p+"static/image/08131af735ee8e132e51003fd1b1575a.b1efccab.webp",u=n.p+"static/image/7778a15b6c2200480b4a5fc20c905bd7.93cd67c1.webp",w=n.p+"static/image/8c748d61b702c031c92043aa46c119ce.4800e582.webp",E=n.p+"static/image/cdef2c7eeb56db1b064f2d9aab86a764.aceac595.webp",k=n.p+"static/image/580a610a620b40fd986908f5449ee361.19a5da16.webp",A=n.p+"static/image/9173773f229ef972a2d204b429f0de42.a42d22e9.webp";var B=n(327822);let _=n.p+"static/image/8530eba3983d409a0480f251529b7fe6.b6c38aa6.webp",S=n.p+"static/image/69d7d95779e12ce975c188f74214cffb.68df3142.webp",R=n.p+"static/image/c55f3cb43414cbe0731323162205a822.9ae27915.webp",C=n.p+"static/image/cc558b263a6688ad8b0845280dff047e.309dc220.gif";var T=n(24321);let v=n.p+"static/image/2dc84c2025e60fcb6516e7ddced21d17.b6909b28.webp",y=n.p+"static/image/251bcd6a6e71a5bb09f542d155ccee02.e0f8626d.webp",M=n.p+"static/image/91920cd394521f355e1df4c4e3770287.d61822da.webp",N=n.p+"static/image/2119d2627447e7bf8fc1a66f872f4158.dc187557.webp";function P(e){let c=Object.assign({h1:"h1",a:"a",p:"p",img:"img"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(c.h1,{id:"139-会议室预定系统项目总结",children:["139. 会议室预定系统：项目总结",(0,i.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#139-会议室预定系统项目总结",children:"#"})]}),"\n",(0,i.jsx)(c.p,{children:"学完了 Nest 基础、MySQL、TypeORM、Docker & Docker Compose、Minio、passport 等技术之后，我们做了这个实战项目。"}),"\n",(0,i.jsx)(c.p,{children:"这个项目是会议室预定系统，分为用户端和管理端。"}),"\n",(0,i.jsx)(c.p,{children:"用户端登录之后可以查看可预定的会议室，预定会议室，查看预定历史等。"}),"\n",(0,i.jsx)(c.p,{children:"管理端则是用户、会议室、预定记录等的管理，还有统计分析。"}),"\n",(0,i.jsx)(c.p,{children:"当然，具体做什么项目不重要，我们主要是通过这个实战案例把前面学过的技术综合运用一遍。"}),"\n",(0,i.jsx)(c.p,{children:"比如之前你对 Nginx 的理解只是可以做反向代理、可以托管静态资源，但不知道它在整个链路的什么位置。"}),"\n",(0,i.jsx)(c.p,{children:"而现在，你写过 nginx 的配置文件，并且在阿里云上把它部署并跑了起来。"}),"\n",(0,i.jsx)(c.p,{children:"你对它的理解就更加深入和立体了。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:N,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:_,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"为了聚焦在 Nest 和后端技术，前端部分我们尽量简化，界面都是用 antd 写的，没什么复杂的样式："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:M,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:y,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"交互上也都比较单调，基本都是表格、表单。"}),"\n",(0,i.jsx)(c.p,{children:"实际上，预定会议室的功能一般都是和日历结合，比如 Google Calendar："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:v,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"可以直观的查看哪些时间段是没有被预定的，然后预定。"}),"\n",(0,i.jsx)(c.p,{children:"而不是选择一个时间段预定，如果已经预订了提示该时间段已被预定："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:T,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:C,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"这样体验不好。"}),"\n",(0,i.jsx)(c.p,{children:"不过不重要，我们的重点在于后端部分。"}),"\n",(0,i.jsx)(c.p,{children:"前端的交互大家可以自己去完善。"}),"\n",(0,i.jsx)(c.p,{children:"回顾下我们做这个项目的整个过程："}),"\n",(0,i.jsx)(c.p,{children:"首先我们做了需求分析，分析了下有哪些功能，并画了原型图。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:R,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:S,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"分了用户管理、会议室管理、预定管理、统计这 4 个模块。"}),"\n",(0,i.jsx)(c.p,{children:"这一步主要是明确做什么。"}),"\n",(0,i.jsx)(c.p,{children:"最后我们做出来的也是符合这些需求分析和原型图的。"}),"\n",(0,i.jsx)(c.p,{children:"然后我们设计了下技术方案，做了技术选型："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:_,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"数据库设计："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:B,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"分析了下接口："}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:A,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"接下来进入开发："}),"\n",(0,i.jsx)(c.p,{children:"我们是按照每个模块先写后端，再写前端的顺序来开发的。"}),"\n",(0,i.jsx)(c.p,{children:"比如先开发用户模块后端部分，再开发用户模块前端部分。"}),"\n",(0,i.jsx)(c.p,{children:"然后开发会议室模块后端部分，再开发会议室模块前端部分。"}),"\n",(0,i.jsx)(c.p,{children:"我们首先创建后端项目，引入 typeorm 和 redis，实现了用户注册。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:k,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"基于 @nestjs/config 包的  ConfigModule 把配置抽离到了 .env 文件里。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:E,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"之后实现了登录和双 token 的无感刷新。"}),"\n",(0,i.jsx)(c.p,{children:"加上了登录和权限的 Guard 来做鉴权，通过 @RequireLogin、@RequirePermission 的自定义装饰器在 handler 上声明，只有声明的才会做鉴权。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:w,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"然后添加了 interceptor 对响应格式做转换，改成 {code、message、data} 的格式。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:u,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"并且还用 interceptor 实现了接口访问的日志记录。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:m,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"然后实现了修改信息、修改密码的接口。"}),"\n",(0,i.jsx)(c.p,{children:"用到的 userId 通过 @UserInfo 自定义装饰器从 request.user 来取。"}),"\n",(0,i.jsx)(c.p,{children:"接下来实现了冻结用户和用户列表接口。"}),"\n",(0,i.jsx)(c.p,{children:"通过自定义 exception filter，catch 了 HTTPException，返回了自定义格式的响应，统一了响应格式。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:o,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:b,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"加上了 swaggger 接口文档。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:f,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"至此，用户管理模块的后端代码就完成了。"}),"\n",(0,i.jsx)(c.p,{children:"然后写了用户管理模块的前端代码："}),"\n",(0,i.jsx)(c.p,{children:"引入了 React Router 来做路由，引入了 antd 来做 UI 组件库，引入了 axios 来发请求。"}),"\n",(0,i.jsx)(c.p,{children:"写了登录、注册、首页、修改密码、修改个人信息的页面。"}),"\n",(0,i.jsx)(c.p,{children:"这里还实现了头像上传的功能。"}),"\n",(0,i.jsx)(c.p,{children:"接下来又写了管理端的页面。"}),"\n",(0,i.jsx)(c.p,{children:"然后又分别实现了会议室模块、预定模块、统计模块的后端代码和前端页面。"}),"\n",(0,i.jsx)(c.p,{children:"之后加上了 docker-compose.yml 和 Nest 应用的 Dockerfile，部署到了阿里云。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:g,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"我们买了一台阿里云服务器，在服务器上安装 git 来下载项目代码，然后安装 docker compose，在项目目录下执行 docker compose up 把服务跑起来就行了。"}),"\n",(0,i.jsx)(c.p,{children:"部署成功之后，我们的服务就可以在世界各地访问了。"}),"\n",(0,i.jsx)(c.p,{children:"然后又加上了 nginx 部署了前端项目，用它来做静态资源托管和 nest 服务的反向代理。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:j,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"通过 Dockerfile 的多阶段构建，第一个阶段 npm run build 出产物，第二个阶段把产物和 nginx 配置文件复制过去跑 nginx 服务。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:x,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"之后用 docker build 构建出镜像，把它上传到阿里云镜像仓库。"}),"\n",(0,i.jsx)(c.p,{children:"在另一边的 docker compose 配置文件里添加这个 nginx 的容器配置。"}),"\n",(0,i.jsx)(c.p,{children:"这样服务端那边就可以用 docker compose up 一次性跑起 nginx、nest、mysql、redis 等容器，前后端服务一键启动。"}),"\n",(0,i.jsx)(c.p,{children:"这样，前后端代码就都部署完了。"}),"\n",(0,i.jsx)(c.p,{children:"生产环境我们会把 sychonize 关掉，用 migration 来创建表和初始化数据。"}),"\n",(0,i.jsx)(c.p,{children:"我们加上了 migration 的 npm scripts，然后创建了几个 migration。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:t,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:p,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"在服务器上执行 migration:run 就会创建数据库表并插入初始化数据。"}),"\n",(0,i.jsx)(c.p,{children:"之后我们把文件上传从基于 multer 实现，保存在项目目录下，换成了基于 minio 实现的 OSS 服务。"}),"\n",(0,i.jsx)(c.p,{children:"我们是用前端直传 OSS，然后把文件 url 发给应用服务器的方式。"}),"\n",(0,i.jsx)(c.p,{children:"这样，文件就都保存在了 minio 服务里，可以更方便的管理。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:r,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"然后又实现了 google 登录，基于 passport 的 passport-google-oauth20 的策略来实现的。"}),"\n",(0,i.jsx)(c.p,{children:"在 callback 的路由里，基于 google 返回的信息做了自动注册，如果用户已经注册过，就直接返回登录信息。"}),"\n",(0,i.jsx)(c.p,{children:"并且 callback 里会重定向到网站首页，通过 cookie 携带 userInfo、accessToken、refreshToken 等信息。"}),"\n",(0,i.jsx)(c.p,{children:"前端代码再处理下 cookie，同步登录状态就好了。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:d,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"然后集成了 winston 日志框架，日志会在 console、file 打印，并且还可以发送到别的日志服务。"}),"\n",(0,i.jsx)(c.p,{children:(0,i.jsx)("img",{src:a,alt:""})}),"\n",(0,i.jsx)(c.p,{children:"最后我们对代码做了一些优化。"}),"\n",(0,i.jsx)(c.p,{children:"至此，我们的第一个项目实战就完成了。"}),"\n",(0,i.jsx)(c.p,{children:"项目做什么不重要，重要的是把用到的技术融会贯通，知道这些技术都是干什么的。"}),"\n",(0,i.jsx)(c.p,{children:"并且知道一个全栈项目从需求分析到开发到部署的整个流程。"}),"\n",(0,i.jsx)(c.p,{children:"如果你要自己做一个全栈项目，这些技术你能够用起来了么？"})]})}function D(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,s.ah)(),e.components);return c?(0,i.jsx)(c,{...e,children:(0,i.jsx)(P,{...e})}):P(e)}let O=D;D.__RSPRESS_PAGE_META={},D.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F139.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E7%B3%BB%E7%BB%9F%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93.md"]={toc:[],title:"139. 会议室预定系统：项目总结",headingTitle:"139. 会议室预定系统：项目总结",frontmatter:{}}}}]);