"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["31855"],{762726:function(n,e,t){n.exports=t.p+"static/image/39005221d8ad2f047cb7702aedf9af8f.0834d1cb.webp"},465279:function(n,e,t){n.exports=t.p+"static/image/ff2b30a930d2dad36c608576254253f9.b765a74e.webp"},776709:function(n,e,t){t.r(e),t.d(e,{default:()=>K});var c=t(552676),i=t(740453);let s=t.p+"static/image/0a68360d927d45522d6a74af8888d2c4.7d539e40.gif",a=t.p+"static/image/5ca0eca67b5b91eeda41b8a99cd47530.179da6f8.webp",r=t.p+"static/image/e3d50fb21741baa70ea1555b26edca0b.475e113c.webp",d=t.p+"static/image/ad0ebed02709807fbff004d91e109e5e.b25ed0a2.gif",l=t.p+"static/image/6e84666dcb23cc11caf231ac052a6bdb.7d3717b9.webp",p=t.p+"static/image/411442b83648db62d69218501d143a4c.a0f164f6.webp",o=t.p+"static/image/bac05ea622b5b78dee9e044273d18c10.b4714483.webp",x=t.p+"static/image/888f5017d04db2628bfd7014ad587b7b.eba6be22.gif",j=t.p+"static/image/691ace4ae755d326638ba427889400d0.e575da7c.webp",m=t.p+"static/image/e13e7160ca698a29d2f1ac91c3b39c59.845fcc84.webp",h=t.p+"static/image/7a33457c6faca92bf7457e927d3ffa0a.70e48c80.webp",g=t.p+"static/image/6b844062c6f9e878233f1eb5b114e0d9.71d97384.gif",u=t.p+"static/image/ece0fd63e645d8449212d85f8486da22.8dcbd4de.webp",f=t.p+"static/image/10ebcde2b674ebb446fbe71d977fd58e.ac69c691.webp",y=t.p+"static/image/9cfd7434ec0f53765bf50e80b8d3b854.098cec10.webp";var b=t(762726);let k=t.p+"static/image/e39f85d617d89075ceb66f8de406cb87.156a8d81.webp",v=t.p+"static/image/67ddd58374d0a08719cc26652a4d7032.1de03e9c.webp",S=t.p+"static/image/39adcc041897f105d7dfd136dfdf98cc.6e446355.webp",A=t.p+"static/image/a045a649fb3592f89788f9d92c08c3fe.71d97384.gif",w=t.p+"static/image/fcf1a9da77010da81d94c8ec34fbf334.2d619d54.webp",T=t.p+"static/image/abb5ccaef5046181c48ea647d8c36b2c.5ec57ab0.webp",q=t.p+"static/image/4a95cd3f4cf7e2fdeb43fe3a2390ca65.16c8f06d.webp";var _=t(465279);let E=t.p+"static/image/2fdd58cbf6e49fa70797e3f206882d5a.fc999cbe.webp";function C(n){let e=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,i.ah)(),n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(e.h1,{id:"第84章audiocontext实现在线钢琴",children:["第84章—AudioContext实现在线钢琴",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#第84章audiocontext实现在线钢琴",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"\uFEFF前面学了 AudioContext，它可以通过调整波形、频率产生不同的声音。"}),"\n",(0,c.jsx)(e.p,{children:"这节我们就用它来实现一个在线钢琴。"}),"\n",(0,c.jsx)(e.p,{children:"css 我们用过 CSS Modules、用过 tailwind，这节用 css in js 方法 styled-components 来写。"}),"\n",(0,c.jsx)(e.p,{children:"创建个项目："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:"npx create-vite online-piano\n"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:E,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"安装 styled-components"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"npm install\n\nnpm install --save styled-components\n"})}),"\n",(0,c.jsx)(e.p,{children:"去掉 index.css 和 StrictMode："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:_,alt:""})}),"\n",(0,c.jsx)(e.p,{children:"然后改下 App.tsx："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"import { styled, createGlobalStyle, css } from \"styled-components\"\n\nfunction App() {\n\n  const keys: Record<string, { frequency: number }> = {\n    A: {\n      frequency: 196\n    },\n    S: {\n      frequency: 220\n    },\n    D: {\n      frequency: 246\n    },\n    F: {\n      frequency: 261\n    },\n    G: {\n      frequency: 293\n    },\n    H: {\n      frequency: 329\n    },\n    J: {\n      frequency: 349\n    },\n    K: {\n      frequency: 392\n    }\n  }\n\n  const GlobalStyles = createGlobalStyle`\n    body {\n      background: #000;\n    }\n  `;\n\n\n  const KeysStyle = styled.div`\n    width: 800px;\n    height: 400px;\n    margin: 40px auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    overflow: hidden;\n  `\n  const textStyle = css`\n    line-height: 500px;\n    text-align: center;\n    font-size: 50px;\n  `\n\n  const KeyStyle = styled.div`\n    border: 4px solid black;\n    background: #fff;\n    flex: 1;\n    ${textStyle}\n\n    &:hover {\n      background: #aaa;\n    }\n  `\n\n  const play = (key: string) => {\n    const frequency = keys[key]?.frequency;\n    if(!frequency) {\n      return;\n    }\n\n\n  }\n\n  return <KeysStyle as='section'>\n    {\n      Object.keys(keys).map((item: any) => {\n        return  <KeyStyle as='div' key={item}>\n          <div onClick={() => play(item)}>\n            <span>{item}</span>\n          </div>\n        </KeyStyle>\n      })\n    }\n    <GlobalStyles />\n  </KeysStyle>\n}\n\nexport default App\n"})}),"\n",(0,c.jsx)(e.p,{children:"这里用一个对象来保存所有的 key 和对应的频率。"}),"\n",(0,c.jsx)(e.p,{children:"用 styled-components 来写样式。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:q,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"这里用到 3 个 styled-components 的 api："}),"\n",(0,c.jsx)(e.p,{children:"用 styled.xxx 写样式组件。"}),"\n",(0,c.jsx)(e.p,{children:"用 createGlobalStyle 写全局样式。"}),"\n",(0,c.jsx)(e.p,{children:"用 css 创建复用的 css 片段。"}),"\n",(0,c.jsx)(e.p,{children:"样式组件自然就是可以当作组件来用的："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:T,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"这也是用了 styled-components 的代码的特点。"}),"\n",(0,c.jsx)(e.p,{children:"可以用 as 修改渲染的标签。"}),"\n",(0,c.jsx)(e.p,{children:"跑起来看下："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:"npm run start:dev\n"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:w,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"看下效果："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:A,alt:"2024-08-30 21.49.47.gif"})}),"\n",(0,c.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,c.jsx)(e.p,{children:"打开控制台看下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:S,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"可以看到，className 是编译过的，完全不用担心样式冲突问题。"}),"\n",(0,c.jsx)(e.p,{children:"这就是 styled-components 的好处之一。"}),"\n",(0,c.jsx)(e.p,{children:"这样，样式部分就写完了。"}),"\n",(0,c.jsx)(e.p,{children:"然后我们来写 Audio 部分："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"const context = useMemo(()=> {\n    return new AudioContext();\n}, []);\n\nconst play = (key: string) => {\n    const frequency = keys[key]?.frequency;\n    if(!frequency) {\n      return;\n    }\n\n    const osc = context.createOscillator();\n    osc.type = 'sine';\n\n    const gain = context.createGain();\n    osc.connect(gain);\n    gain.connect(context.destination);\n\n    osc.frequency.value = frequency;\n    gain.gain.setValueAtTime(0, context.currentTime);\n    gain.gain.linearRampToValueAtTime(1, context.currentTime + 0.01);\n\n    osc.start(context.currentTime);\n\n    gain.gain.exponentialRampToValueAtTime(0.001, context.currentTime + 1);\n    osc.stop(context.currentTime + 1);\n}\n"})}),"\n",(0,c.jsx)(e.p,{children:"我们从上到下看下代码："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:k,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"首先，创建 AudioContext，这个不需要每次渲染都创建，所以用 useMemo 包裹。"}),"\n",(0,c.jsx)(e.p,{children:"然后创建 oscillator 节点、gain 节点、destination 节点，连接起来。"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"这些我们比较熟悉了。"}),"\n",(0,c.jsx)(e.p,{children:"重点是下面部分："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"前面我们用 GainNode 修改音量的方式都是直接改 value。"}),"\n",(0,c.jsx)(e.p,{children:"其实它可以按照某种规律修改音量。"}),"\n",(0,c.jsx)(e.p,{children:"我们在 currentTime 当前时间设置音量为 0"}),"\n",(0,c.jsx)(e.p,{children:"然后 0.01 秒后设置为 1，也就是声音是逐渐变大的（linear 是线性）"}),"\n",(0,c.jsx)(e.p,{children:"然后在 1 秒后设置音量为 0.01，也就是声音指数级的变小。（exponential 是指数级）"}),"\n",(0,c.jsx)(e.p,{children:"这样，按每个键声音都是一秒，但这一秒内有音量从小到大再到小的变化。"}),"\n",(0,c.jsx)(e.p,{children:"大概是这样变化的："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"这样听起来就很自然。"}),"\n",(0,c.jsx)(e.p,{children:"正好 start 到 stop 间隔 1 秒，就是按照上面的规律变化的音量："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"我们试一下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:g,alt:"2024-08-30 21.49.47.gif"})}),"\n",(0,c.jsx)(e.p,{children:"声音是这样的："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://lf-activity-static.juejin.cn/obj/juejin-activity-static/user_book/2788017216685118_1725027188795_5197.mp3",target:"_blank",rel:"noopener noreferrer",children:"jaudio"})}),"\n",(0,c.jsx)(e.p,{children:"是不是很自然！"}),"\n",(0,c.jsx)(e.p,{children:"如果没有音量变化是什么样呢？"}),"\n",(0,c.jsx)(e.p,{children:"注释掉试试："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"听下现在的声音："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://lf-activity-static.juejin.cn/obj/juejin-activity-static/user_book/2788017216685118_1725027422304_7077.mp3",target:"_blank",rel:"noopener noreferrer",children:"jaudio"})}),"\n",(0,c.jsx)(e.p,{children:"音量完全没变化，听起来就不好听。"}),"\n",(0,c.jsx)(e.p,{children:"现在我们可以点击对应的键来演奏音乐了。"}),"\n",(0,c.jsx)(e.p,{children:"但这样不方便，我们再加上键盘控制："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"监听 keydown 事件，调用 play 方法传入 key 就可以了。"}),"\n",(0,c.jsx)(e.p,{children:"但按键盘不会触发 hover 效果，所以我们手动加一下 className 来显示按下的效果。"}),"\n",(0,c.jsx)(e.p,{children:"在 global style 加一下这个全局的 className："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"全局 className 不会被编译。"}),"\n",(0,c.jsx)(e.p,{children:"试一下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:x,alt:"2024-08-30 22.09.23.gif"})}),"\n",(0,c.jsx)(e.p,{children:"这样，按键盘就可以弹奏了。"}),"\n",(0,c.jsx)(e.p,{children:"然后我们用它来演奏几首歌曲："}),"\n",(0,c.jsx)(e.p,{children:"从网上找下歌曲的简谱："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"这里我们就只演奏第一句吧"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"我们定义了简谱数字和键的对应关系。"}),"\n",(0,c.jsx)(e.p,{children:"然后不同的时间按下不同的键就可以了。"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"import { useEffect, useMemo } from \"react\";\nimport { styled, createGlobalStyle, css } from \"styled-components\"\n\nfunction App() {\n\n  const keys: Record<string, { frequency: number }> = {\n    A: {\n      frequency: 196\n    },\n    S: {\n      frequency: 220\n    },\n    D: {\n      frequency: 246\n    },\n    F: {\n      frequency: 261\n    },\n    G: {\n      frequency: 293\n    },\n    H: {\n      frequency: 329\n    },\n    J: {\n      frequency: 349\n    },\n    K: {\n      frequency: 392\n    }\n  }\n\n  const GlobalStyles = createGlobalStyle`\n    body {\n      background: #000;\n    }\n    .pressed {\n      background: #aaa;\n    }\n  `;\n\n\n  const KeysStyle = styled.div`\n    width: 800px;\n    height: 400px;\n    margin: 40px auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    overflow: hidden;\n  `\n  const textStyle = css`\n    line-height: 500px;\n    text-align: center;\n    font-size: 50px;\n  `\n\n  const KeyStyle = styled.div`\n    border: 4px solid black;\n    background: #fff;\n    flex: 1;\n    ${textStyle}\n\n    &:hover {\n      background: #aaa;\n    }\n  `\n\n  const context = useMemo(()=> {\n    return new AudioContext();\n  }, []);\n\n  const play = (key: string) => {\n    const frequency = keys[key]?.frequency;\n    if(!frequency) {\n      return;\n    }\n\n    const osc = context.createOscillator();\n    osc.type = 'sine';\n    osc.frequency.value = frequency;\n  \n    const gain = context.createGain();\n    osc.connect(gain);\n    gain.connect(context.destination);\n  \n    gain.gain.setValueAtTime(0, context.currentTime);\n    gain.gain.linearRampToValueAtTime(1, context.currentTime + 0.01);\n\n    osc.start(context.currentTime);\n  \n    gain.gain.exponentialRampToValueAtTime(0.001, context.currentTime + 1);\n    osc.stop(context.currentTime + 1);\n\n    document.getElementById(`key-${key}`)?.classList.add('pressed');\n    setTimeout(()=> {\n      document.getElementById(`key-${key}`)?.classList.remove('pressed');\n    }, 100)\n  }\n\n  useEffect(()=> {\n    document.addEventListener('keydown', (e) => {\n      play(e.key.toUpperCase());\n    })\n  }, []);\n\n  const map: Record<number, string> = {\n    1: 'A',\n    2: 'S',\n    3: 'D',\n    4: 'F',\n    5: 'G',\n    6: 'H',\n    7: 'J',\n    8: 'K'\n  }\n\n  function playSong1() {\n    const music = [\n        [6, 1000],\n        [5, 1000],\n        [3, 1000],\n        [5, 1000],\n        [8, 1000],\n        [6, 500],\n        [5, 500],\n        [6, 1000]\n    ];\n\n    let startTime = 0;\n    music.forEach((item) => {\n      setTimeout(() => {\n        play(map[item[0]]);\n      }, startTime);\n      startTime += item[1]\n    })   \n  }\n\n  return <div>\n    <KeysStyle as='section'>\n      {\n        Object.keys(keys).map((item: any) => {\n          return  <KeyStyle as='div' key={item}>\n            <div onClick={() => play(item)} id={`key-${item}`}>\n              <span>{item}</span>\n            </div>\n          </KeyStyle>\n        })\n      }\n      <GlobalStyles />\n    </KeysStyle>\n    <div className='songs'>\n      <button onClick={() => playSong1()}>世上只有妈妈好</button>\n    </div>\n  </div>\n}\n\nexport default App\n"})}),"\n",(0,c.jsx)(e.p,{children:"听一下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:d,alt:"2024-08-30 22.36.06.gif"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://lf-activity-static.juejin.cn/obj/juejin-activity-static/user_book/2788017216685118_1725028699155_9504.mp3",target:"_blank",rel:"noopener noreferrer",children:"jaudio"})}),"\n",(0,c.jsx)(e.p,{children:"再加一首《奢香夫人》："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:r,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,c.jsx)(e.p,{children:"抽取一个 playMusic 的方法，并且 startTime 缩短一半。"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"function playMusic(music: number[][]) {\n    let startTime = 0;\n    music.forEach((item) => {\n      setTimeout(() => {\n        play(map[item[0]]);\n      }, startTime * 0.5);\n      startTime += item[1]\n    }) \n}\n\nfunction playSong2() {\n    const music = [\n        [6, 1000],\n        [6, 1000],\n        [6, 1000],\n        [3, 500],\n        [6, 500],\n        [5, 1000],\n        [3, 500],\n        [2, 500],\n        [3, 1000]\n    ];\n\n    playMusic(music)\n}\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"<button onClick={() => playSong2()}>奢香夫人</button>\n"})}),"\n",(0,c.jsx)(e.p,{children:"听一下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)("img",{src:s,alt:"2024-08-30 23.03.28.gif"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://lf-activity-static.juejin.cn/obj/juejin-activity-static/user_book/2788017216685118_1725030624858_9137.mp3",target:"_blank",rel:"noopener noreferrer",children:"jaudio"})}),"\n",(0,c.jsx)(e.p,{children:"至此，我们的在线钢琴就完成了。"}),"\n",(0,c.jsxs)(e.p,{children:["案例代码上传了",(0,c.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/react-course-code/tree/main/online-piano",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,c.jsxs)(e.h2,{id:"总结",children:["总结",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"上节学了 AudioContext 的振荡器调音，这节我们基于 AudioContext 实现了一个在线钢琴。"}),"\n",(0,c.jsx)(e.p,{children:"不同键只是振动频率不同，然后按下的时候设置音量有个从小到大再到小的变化就好了。"}),"\n",(0,c.jsx)(e.p,{children:"我们用 styled-components 写的样式，它是通过组件的方式来使用某段样式。"}),"\n",(0,c.jsx)(e.p,{children:"我们监听了 keydown 事件，触发不同键的按下的处理。"}),"\n",(0,c.jsx)(e.p,{children:"然后根据简谱，通过不同 setTimeout 实现了乐曲的自动播放。"}),"\n",(0,c.jsx)(e.p,{children:"做完这个案例，我们会对 AudioContext 有更深的理解。"})]})}function G(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(C,{...n})}):C(n)}let K=G;G.__RSPRESS_PAGE_META={},G.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC84%E7%AB%A0%E2%80%94AudioContext%E5%AE%9E%E7%8E%B0%E5%9C%A8%E7%BA%BF%E9%92%A2%E7%90%B4.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第84章—AudioContext实现在线钢琴",headingTitle:"第84章—AudioContext实现在线钢琴",frontmatter:{}}}}]);