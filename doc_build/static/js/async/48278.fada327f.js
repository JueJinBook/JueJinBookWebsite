"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["48278"],{699995:function(e,s,n){n.r(s),n.d(s,{default:()=>d});var i=n(552676),a=n(740453);function t(e){let s=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",pre:"pre",code:"code",blockquote:"blockquote",strong:"strong"},(0,a.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h1,{id:"52渲染网络数据到页面",children:["52.渲染网络数据到页面",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#52渲染网络数据到页面",children:"#"})]}),"\n",(0,i.jsxs)(s.h2,{id:"82-渲染网络数据到页面",children:["8.2 渲染网络数据到页面",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#82-渲染网络数据到页面",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"在这一章里，我们会来介绍如何将网络获取到的数据渲染到页面，以及如何根据点击的文章实现跨页面的渲染，最后实现一个简单的知乎日报小程序。"}),"\n",(0,i.jsxs)(s.h3,{id:"821-将数据渲染到页面",children:["8.2.1 将数据渲染到页面",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#821-将数据渲染到页面",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"既然我们已经从知乎日报的API取得了数据，那渲染数据的方法以及如何实现跨页面渲染，在前面的章节我们已经就有所了解了。使用开发者工具在request.wxml里输入weui的列表样式（需要引入weui框架哦）："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<view class="page__bd">\n  <view class="weui-panel weui-panel_access">\n    <view class="weui-panel__bd" wx:for="{{stories}}" wx:for-item="stories" wx:key="*item">\n      <navigator url="" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">\n        <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">\n          <image class="weui-media-box__thumb" mode="widthFix" src="{{stories.images[0]}}" sytle="height:auto"></image>\n        </view>\n        <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">\n          <view class="weui-media-box__title">{{stories.title}}</view>\n        </view>\n      </navigator>\n    </view>\n  </view>\n</view>\n'})}),"\n",(0,i.jsx)(s.p,{children:"然后再在request.js的data里声明date、stories、top_stories的初始值（使用的变量和API的字段尽量保持一致，这样就不容易混乱）"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:'data: {\n  date:"",\n  stories:[],\n  top_stories:[],\n},\n'})}),"\n",(0,i.jsx)(s.p,{children:"在onLoad生命周期函数里将数据通过setData的方式给赋值给data："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"onLoad: function (options) {\n  let that=this\n  wx.request({\n    url: 'https://news-at.zhihu.com/api/4/news/latest', \n    header: {\n      'content-type': 'application/json' \n    },\n    success(res) {\n      let date=res.data.date\n      let stories=res.data.stories\n      let top_stories = res.data.top_stories\n      that.setData({\n        date,stories,top_stories\n      })\n    }\n  })\n},\n"})}),"\n",(0,i.jsx)(s.p,{children:"编译之后，我们就能看到知乎日报的数据就渲染在页面上了。"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"小任务："}),"  top_stories\xa0是界面顶部轮播的显示内容，制作一个swiper轮播，将top_stories里的内容渲染到轮播上。"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"打开开发者工具调试工具栏的AppData标签页，就能看到从网络API里获取到的数据。也可以在此处编辑数据，并及时地反馈到界面上。如果AppData里有数据，可以确认页面已经取得res里的data数据，如果数据没有渲染到页面，说明列表渲染可能有误。通过这种方式可以诊断页面渲染问题所在。"}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"821-详情页数据渲染",children:["8.2.1 详情页数据渲染",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#821-详情页数据渲染",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"前面我们获取的只是知乎的最新文章列表，那文章里面的内容呢？通过API文档以及我们通过链接访问的结果来看，我们只需要取得了文章的ID，就能从API里获取到文章的详情页内容："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"https://news-at.zhihu.com/api/4/news/9714883  //9714883是文章的ID\n"})}),"\n",(0,i.jsx)(s.p,{children:"使用开发者工具新建一个story页面，然后在story.wxml里输入以下代码:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<view class="page__bd">\n  <view class="weui-article">\n    <view class="weui-article__h1">{{title}}</view>\n    <view class="weui-article__section">\n      <view class="weui-article__section">\n          <view class="weui-article__p">\n            <image class="weui-article__img" src="{{image}}" mode="widthFix" style="width:100%" />\n            </view>\n            <view class="weui-article__p">                      \n              {{body}}                \n          </view>\n          <view class="weui-article__p">\n            知乎链接：{{share_url}}\n          </view>\n      </view> \n    </view>     \n  </view>   \n</view>\n'})}),"\n",(0,i.jsx)(s.p,{children:"然后再在request.js的data里声明title、body、image、share_url的初始值："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:'data: {\n  title:"",\n  body:"",\n  image:"",\n  share_url:"",\n},\n'})}),"\n",(0,i.jsx)(s.p,{children:"在onLoad生命周期函数里调用wx.request获取文章详情页的数据，并通过setData的方式给赋值给data："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"onLoad: function (options) {\n  let stories_id=9714883\n  let that = this\n  wx.request({\n    url: 'https://news-at.zhihu.com/api/4/news/'+stories_id,\n    header: {\n      'content-type': 'application/json'\n    },\n    success(res) {\n      let title = res.data.title\n      let body=res.data.body\n      let image=res.data.image\n      let share_url=res.data.share_url\n      that.setData({\n        title,body,image,share_url\n      })\n    }\n  })\n},\n"})}),"\n",(0,i.jsx)(s.p,{children:"编译之后，发现数据虽然渲染出来了，但是存在“乱码”（是HTML标签），那这个要如何处理呢？这个就涉及到小程序的富文本解析了。"}),"\n",(0,i.jsxs)(s.h3,{id:"823-html标签解析rich-text",children:["8.2.3 HTML标签解析rich-text",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#823-html标签解析rich-text",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"只需要将富文本对象放在rich-text的nodes里，就能将富文本解析出来了，比如将上面的{{body}}替换成以下代码。"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<rich-text nodes="{{body}}"></rich-text>\n'})}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["小程序富文本解析的方案还有：Comi ，腾讯 Omi 团队开发的小程序代码高亮和 markdown 渲染组件，",(0,i.jsx)(s.a,{href:"https://github.com/Tencent/omi/blob/master/tutorial/comi-principle.md#%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer",children:"Github地址"}),"，具体效果可以在微信小程序里搜索",(0,i.jsx)(s.strong,{children:"omiCloud"}),"；以及wxPrase，微信小程序富文本解析自定义组件，支持HTML及markdown解析，",(0,i.jsx)(s.a,{href:"https://github.com/icindy/wxParse",target:"_blank",rel:"noopener noreferrer",children:"Github地址"}),"，当你遇到更加复杂的富文本解析时，可以来深入了解。"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"824-跨页面数据渲染",children:["8.2.4 跨页面数据渲染",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#824-跨页面数据渲染",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"上面我们只是渲染了单篇文章的详情页，那如何点击文章列表就能渲染与之相应的文章详情页呢？这就回到了我们之前学过的跨页面数据渲染。"}),"\n",(0,i.jsx)(s.p,{children:"首先把request页面置于首页，然后再给request.wxml里的navigator组件的链接上携带文章的id："}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:'url="/pages/story/story?id={{stories.id}}"\n'})}),"\n",(0,i.jsx)(s.p,{children:"当点击request页面的链接时，链接携带的数据就会传到story页面的生命周期函数onLoad的options对象里，将options里的id，赋值给stories_id，也就是将文章id 9714883修改为options.id"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"let stories_id=options.id\n"})}),"\n",(0,i.jsx)(s.p,{children:"这样再来点击request页面的链接，不同的链接就会渲染不同的文章详情。"})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),e.components);return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let d=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F52.%E6%B8%B2%E6%9F%93%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E5%88%B0%E9%A1%B5%E9%9D%A2.md"]={toc:[{text:"8.2 渲染网络数据到页面",id:"82-渲染网络数据到页面",depth:2},{text:"8.2.1 将数据渲染到页面",id:"821-将数据渲染到页面",depth:3},{text:"8.2.1 详情页数据渲染",id:"821-详情页数据渲染",depth:3},{text:"8.2.3 HTML标签解析rich-text",id:"823-html标签解析rich-text",depth:3},{text:"8.2.4 跨页面数据渲染",id:"824-跨页面数据渲染",depth:3}],title:"52.渲染网络数据到页面",headingTitle:"52.渲染网络数据到页面",frontmatter:{}}}}]);