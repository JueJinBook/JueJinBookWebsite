"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["79303"],{117682:function(e,n,s){s.r(n),s.d(n,{default:()=>L});var i=s(552676),r=s(740453);let c=s.p+"static/image/68117e1e7693fb883c572f7ce0c82c22.71bacdd0.gif",d=s.p+"static/image/e74c3c0a4002f5b369f193e129df408e.96075dc3.webp",a=s.p+"static/image/ca77167f349b6f347c47b8c190c67c42.869a7f37.webp",l=s.p+"static/image/0e510c72d5665c1c8cdc5edd53910061.383b4bff.webp",t=s.p+"static/image/1830e1d2944c378b5d457aae9b77ab10.f3266601.webp",o=s.p+"static/image/ec60f8961bb1d7df1ce2f60d6442464f.be774e52.webp",h=s.p+"static/image/98b907c84d78da57b3a008ab41bcac7c.ca688f3c.webp",p=s.p+"static/image/d85cb9a06243814a063d66e97e73cfc2.e2eb658d.webp",x=s.p+"static/image/5a1cc0ea72b4782a196f158d22edcb0e.4a41d0b3.webp",j=s.p+"static/image/8995bca5f6ea9943bce8d28280da0c26.758c4091.gif",g=s.p+"static/image/20b72276482e4b2ab68d79c9e8e97c20.e71d3f59.gif",u=s.p+"static/image/08e88467d248805c966cf87c5f780060.62a20b33.gif",m=s.p+"static/image/fade3ee41b0a658e4c335d09ee0202eb.0e99d37e.gif",f=s.p+"static/image/4f6fe13c07c8c87c855be5bafbacb385.6fb9be82.gif",b=s.p+"static/image/1a0acd5dc79c8ae89d927c1fffe3dee9.ee8237c2.webp",A=s.p+"static/image/6b29bceb80670aa3c6608d7ebea9aa7a.f2ec78a3.webp",C=s.p+"static/image/f7915246d73ba4851992866bb48c9b3c.d2e5133a.webp",y=s.p+"static/image/c37d77e76cddb3bcf283817bb857ee04.6bc057c1.webp",N=s.p+"static/image/2ee4efb74033bfef11873312faafc2fb.ec7ec5fd.webp",v=s.p+"static/image/434eb22ff001e3482ba18426f40ea355.bdd3edfa.webp",k=s.p+"static/image/3dc486d2438f8250ed2dd52111f6e83a.e37b8d55.webp";function D(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",code:"code",strong:"strong",pre:"pre",ol:"ol",li:"li",img:"img",ul:"ul",blockquote:"blockquote"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"5路由篇-_-动态路由路由组平行路由和拦截路由",children:["5.路由篇 _ 动态路由、路由组、平行路由和拦截路由",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5路由篇-_-动态路由路由组平行路由和拦截路由",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"前言",children:["前言",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"实际项目开发的时候，有的路由场景会比较复杂，比如数据库里的文章有很多，我们不可能一一去定义路由，此时该怎么办？组织代码的时候，有的路由是用于移动端，有的路由是用于 PC 端，该如何组织代码？如何有条件的渲染页面，比如未授权的时候显示登录页？如何让同一个路由根据不同的场景展示不同的内容？"}),"\n",(0,i.jsx)(n.p,{children:"本篇我们会一一解决这些问题，在此篇，你将会感受到 App Router 强大的路由功能。"}),"\n",(0,i.jsxs)(n.h2,{id:"1-动态路由dynamic-routes",children:["1. 动态路由（Dynamic Routes）",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-动态路由dynamic-routes",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"有的时候，你并不能提前知道路由的地址，就比如根据 URL 中的 id 参数展示该 id 对应的文章内容，文章那么多，我们不可能一一定义路由，这个时候就需要用到动态路由。"}),"\n",(0,i.jsxs)(n.h3,{id:"11-foldername",children:["1.1. [folderName]",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-foldername",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["使用动态路由，你需要将文件夹的名字用方括号括住，比如 ",(0,i.jsx)(n.code,{children:"[id]"}),"、",(0,i.jsx)(n.code,{children:"[slug]"}),"。这个路由的名字会作为 ",(0,i.jsx)(n.code,{children:"params"})," prop 传给",(0,i.jsx)(n.strong,{children:"布局"}),"、 ",(0,i.jsx)(n.strong,{children:"页面"}),"、 ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7308914343129645065#heading-4",target:"_blank",rel:"noopener noreferrer",children:"路由处理程序"})})," 以及 ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309079119902277669#heading-3",target:"_blank",rel:"noopener noreferrer",children:"generateMetadata"})})," 函数。"]}),"\n",(0,i.jsxs)(n.p,{children:["举个例子，我们在 ",(0,i.jsx)(n.code,{children:"app/blog"})," 目录下新建一个名为 ",(0,i.jsx)(n.code,{children:"[slug]"})," 的文件夹，在该文件夹新建一个 ",(0,i.jsx)(n.code,{children:"page.js"})," 文件，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// app/blog/[slug]/page.js\nexport default function Page({ params }) {\n  return <div>My Post: {params.slug}</div>\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"效果如下："}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/blog/a"}),"的时候，",(0,i.jsx)(n.code,{children:"params"})," 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: 'a' }"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/blog/yayu"}),"的时候，",(0,i.jsx)(n.code,{children:"params"})," 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: 'yayu' }"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"以此类推。"}),"\n",(0,i.jsxs)(n.h3,{id:"12-foldername",children:["1.2. [...folderName]",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12-foldername",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["在命名文件夹的时候，如果你在方括号内添加省略号，比如 ",(0,i.jsx)(n.code,{children:"[...folderName]"}),"，这表示捕获所有后面所有的路由片段。"]}),"\n",(0,i.jsxs)(n.p,{children:["也就是说，",(0,i.jsx)(n.code,{children:"app/shop/[...slug]/page.js"}),"会匹配 ",(0,i.jsx)(n.code,{children:"/shop/clothes"}),"，也会匹配 ",(0,i.jsx)(n.code,{children:"/shop/clothes/tops"}),"、",(0,i.jsx)(n.code,{children:"/shop/clothes/tops/t-shirts"}),"等等。"]}),"\n",(0,i.jsxs)(n.p,{children:["举个例子，",(0,i.jsx)(n.code,{children:"app/shop/[...slug]/page.js"}),"的代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// app/shop/[...slug]/page.js\nexport default function Page({ params }) {\n  return <div>My Shop: {JSON.stringify(params)}</div>\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"效果如下："}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a"}),"的时候，",(0,i.jsx)(n.code,{children:"params"})," 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a'] }"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a/b"}),"的时候，",(0,i.jsx)(n.code,{children:"params"})," 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a', 'b'] }"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a/b/c"}),"的时候，",(0,i.jsx)(n.code,{children:"params"})," 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a', 'b', 'c'] }"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"以此类推。"}),"\n",(0,i.jsxs)(n.h3,{id:"13-foldername",children:["1.3. [[...folderName]]",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#13-foldername",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["在命名文件夹的时候，如果你在双方括号内添加省略号，比如 ",(0,i.jsx)(n.code,{children:"[[...folderName]]"}),"，这表示可选的捕获所有后面所有的路由片段。"]})}),"\n",(0,i.jsxs)(n.p,{children:["也就是说，",(0,i.jsx)(n.code,{children:"app/shop/[[...slug]]/page.js"}),"会匹配 ",(0,i.jsx)(n.code,{children:"/shop"}),"，也会匹配 ",(0,i.jsx)(n.code,{children:"/shop/clothes"}),"、 ",(0,i.jsx)(n.code,{children:"/shop/clothes/tops"}),"、",(0,i.jsx)(n.code,{children:"/shop/clothes/tops/t-shirts"}),"等等。"]}),"\n",(0,i.jsxs)(n.p,{children:["它与上一种的区别就在于，不带参数的路由也会被匹配（就比如 ",(0,i.jsx)(n.code,{children:"/shop"}),"）"]}),"\n",(0,i.jsxs)(n.p,{children:["举个例子，",(0,i.jsx)(n.code,{children:"app/shop/[[...slug]]/page.js"}),"的代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// app/shop/[[...slug]]/page.js\nexport default function Page({ params }) {\n  return <div>My Shop: {JSON.stringify(params)}</div>\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"效果如下："}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop"}),"的时候，params 的值为 ",(0,i.jsx)(n.code,{children:"{}"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a"}),"的时候，params 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a'] }"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a/b"}),"的时候，params 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a', 'b'] }"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["当你访问 ",(0,i.jsx)(n.code,{children:"/shop/a/b/c"}),"的时候，params 的值为 ",(0,i.jsx)(n.code,{children:"{ slug: ['a', 'b', 'c'] }"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"以此类推。"}),"\n",(0,i.jsxs)(n.h2,{id:"2-路由组route-groups",children:["2. 路由组（Route groups）",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-路由组route-groups",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["在 ",(0,i.jsx)(n.code,{children:"app"}),"目录下，文件夹名称通常会被映射到 URL 中，但你可以将文件夹标记为路由组，阻止文件夹名称被映射到 URL 中。"]}),"\n",(0,i.jsx)(n.p,{children:"使用路由组，你可以将路由和项目文件按照逻辑进行分组，但不会影响 URL 路径结构。路由组可用于比如："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"按站点、意图、团队等将路由分组"}),"\n",(0,i.jsx)(n.li,{children:"在同一层级中创建多个布局，甚至是创建多个根布局"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["那么该如何标记呢？把文件夹用括号括住就可以了，就比如 ",(0,i.jsx)(n.code,{children:"(dashboard)"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"举些例子："}),"\n",(0,i.jsxs)(n.h3,{id:"21-按逻辑分组",children:["2.1. 按逻辑分组",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-按逻辑分组",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"将路由按逻辑分组，但不影响 URL 路径："})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:k,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["你会发现，最终的 URL 中省略了带括号的文件夹（上图中的",(0,i.jsx)(n.code,{children:"(marketing)"}),"和",(0,i.jsx)(n.code,{children:"(shop)"}),"）。"]}),"\n",(0,i.jsxs)(n.h3,{id:"22-创建不同布局",children:["2.2. 创建不同布局",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-创建不同布局",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"借助路由组，即便在同一层级，也可以创建不同的布局："})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["在这个例子中，",(0,i.jsx)(n.code,{children:"/account"})," 、",(0,i.jsx)(n.code,{children:"/cart"}),"、",(0,i.jsx)(n.code,{children:"/checkout"})," 都在同一层级。但是 ",(0,i.jsx)(n.code,{children:"/account"}),"和 ",(0,i.jsx)(n.code,{children:"/cart"}),"使用的是 ",(0,i.jsx)(n.code,{children:"/app/(shop)/layout.js"}),"布局和",(0,i.jsx)(n.code,{children:"app/layout.js"}),"布局，",(0,i.jsx)(n.code,{children:"/checkout"}),"使用的是 ",(0,i.jsx)(n.code,{children:"app/layout.js"})]}),"\n",(0,i.jsxs)(n.h3,{id:"23-创建多个根布局",children:["2.3. 创建多个根布局",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23-创建多个根布局",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"创建多个根布局："})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:N,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["创建多个根布局，你需要删除掉 ",(0,i.jsx)(n.code,{children:"app/layout.js"})," 文件，然后在每组都创建一个 ",(0,i.jsx)(n.code,{children:"layout.js"}),"文件。创建的时候要注意，因为是根布局，所以要有 ",(0,i.jsx)(n.code,{children:"<html>"})," 和 ",(0,i.jsx)(n.code,{children:"<body>"})," 标签。"]}),"\n",(0,i.jsx)(n.p,{children:"这个功能很实用，比如你将前台购买页面和后台管理页面都放在一个项目里，一个 C 端，一个 B 端，两个项目的布局肯定不一样，借助路由组，就可以轻松实现区分。"}),"\n",(0,i.jsx)(n.p,{children:"再多说几点："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"路由组的命名除了用于组织之外并无特殊意义。它们不会影响 URL 路径。"}),"\n",(0,i.jsxs)(n.li,{children:["注意不要解析为相同的 URL 路径。举个例子，因为路由组不影响 URL 路径，所以  ",(0,i.jsx)(n.code,{children:"(marketing)/about/page.js"}),"和 ",(0,i.jsx)(n.code,{children:"(shop)/about/page.js"}),"都会解析为 ",(0,i.jsx)(n.code,{children:"/about"}),"，这会导致报错。"]}),"\n",(0,i.jsxs)(n.li,{children:["创建多个根布局的时候，因为删除了顶层的 ",(0,i.jsx)(n.code,{children:"app/layout.js"}),"文件，访问 ",(0,i.jsx)(n.code,{children:"/"}),"会报错，所以",(0,i.jsx)(n.code,{children:"app/page.js"}),"需要定义在其中一个路由组中。"]}),"\n",(0,i.jsxs)(n.li,{children:["跨根布局导航会导致页面完全重新加载，就比如使用 ",(0,i.jsx)(n.code,{children:"app/(shop)/layout.js"}),"根布局的 ",(0,i.jsx)(n.code,{children:"/cart"})," 跳转到使用 ",(0,i.jsx)(n.code,{children:"app/(marketing)/layout.js"}),"根布局的 ",(0,i.jsx)(n.code,{children:"/blog"})," 会导致页面重新加载（full page load）。"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["注：当定义多个根布局的时候，使用 ",(0,i.jsx)(n.code,{children:"app/not-found.js"}),"会出现问题。具体参考 ",(0,i.jsx)(n.a,{href:"https://juejin.cn/post/7351321244125265930",target:"_blank",rel:"noopener noreferrer",children:"《Next.js v14 如何为多个根布局自定义不同的 404 页面？竟然还有些麻烦！欢迎探讨》"})]}),"\n",(0,i.jsxs)(n.h2,{id:"3-平行路由parallel-routes",children:["3. 平行路由（Parallel Routes）",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-平行路由parallel-routes",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"平行路由可以使你在同一个布局中同时或者有条件的渲染一个或者多个页面（类似于 Vue 的插槽功能）。"}),"\n",(0,i.jsxs)(n.h3,{id:"31-用途-1条件渲染",children:["3.1. 用途 1：条件渲染",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-用途-1条件渲染",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"举个例子，在后台管理页面，需要同时展示团队（team）和数据分析（analytics）页面："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["平行路由的使用方式是将文件夹以 ",(0,i.jsx)(n.code,{children:"@"}),"作为开头进行命名，比如在上图中就定义了两个插槽 ",(0,i.jsx)(n.code,{children:"@team"})," 和 ",(0,i.jsx)(n.code,{children:"@analytics"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["插槽会作为 props 传给共享的父布局。在上图中，",(0,i.jsx)(n.code,{children:"app/layout.js"})," 从 props 中获取了 ",(0,i.jsx)(n.code,{children:"@team"})," 和 ",(0,i.jsx)(n.code,{children:"@analytics"})," 两个插槽的内容，并将其与 children 并行渲染："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// app/layout.js\n// 这里我们用了 ES6 的解构，写法更简洁一点\nexport default function Layout({ children, team, analytics }) {\n  return (\n    <>\n      {children}\n      {team}\n      {analytics}\n    </>\n  )\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["注：从这张图也可以看出，",(0,i.jsx)(n.code,{children:"children"})," prop 其实就是一个隐式的插槽，",(0,i.jsx)(n.code,{children:"/app/page.js"}),"相当于 ",(0,i.jsx)(n.code,{children:"app/@children/page.js"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"除了让它们同时展示，你也可以根据条件判断展示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:C,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"在这个例子中，先在布局中获取用户的登录状态，如果登录，显示 dashboard 页面，没有登录，显示 login 页面。这样做的一大好处就在于代码完全分离。"}),"\n",(0,i.jsxs)(n.h3,{id:"32-用途-2独立路由处理",children:["3.2. 用途 2：独立路由处理",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-用途-2独立路由处理",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"平行路由可以让你为每个路由定义独立的错误处理和加载界面："})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:A,alt:"image.png"})}),"\n",(0,i.jsxs)(n.h3,{id:"33-用途-3子导航",children:["3.3. 用途 3：子导航",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-用途-3子导航",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["注意我们描述 team 和 analytics 时依然用的是“页面”这个说法，因为它们就像书写正常的页面一样使用 page.js。除此之外，它们也能像正常的页面一样，添加子页面，比如我们在 ",(0,i.jsx)(n.code,{children:"@analytics"})," 下添加两个子页面：",(0,i.jsx)(n.code,{children:"/page-views"}),"\xa0and\xa0",(0,i.jsx)(n.code,{children:"/visitors"}),"："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["平行路由跟路由组一样，不会影响 URL，所以 ",(0,i.jsx)(n.code,{children:"/@analytics/page-views/page.js"})," 对应的地址是 ",(0,i.jsx)(n.code,{children:"/page-views"}),"，",(0,i.jsx)(n.code,{children:"/@analytics/visitors/page.js"})," 对应的地址是 ",(0,i.jsx)(n.code,{children:"/visitors"}),"，你可以导航至这些路由："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// app/layout.js\nimport Link from "next/link";\n\nexport default function RootLayout({ children, analytics }) {\n  return (\n    <html>\n      <body>\n        <nav>\n          <Link href="/">Home</Link>\n          <br />\n          <Link href="/page-views">Page Views</Link>\n          <br />\n          <Link href="/visitors">Visitors</Link>\n        </nav>\n        <h1>root layout</h1>\n        {analytics}\n        {children}\n      </body>\n    </html>\n  );\n}\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["当导航至这些子页面的时候，子页面的内容会取代 ",(0,i.jsx)(n.code,{children:"/@analytics/page.js"})," 以 props 的形式注入到布局中，效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:f,alt:"parallel-routers.gif"})}),"\n",(0,i.jsxs)(n.p,{children:["线上查看代码和效果：",(0,i.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/parallel-routes-vg2lw3?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt4etrxk00073b6hve8nzgfn%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt4etrxj00023b6hbh7tjkti%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt4etrxj00043b6h3xt2fybf%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt4etrxj00063b6hk3nfgk8s%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt4etrxj00023b6hbh7tjkti%2522%253A%257B%2522id%2522%253A%2522clt4etrxj00023b6hbh7tjkti%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clt4etrxj00063b6hk3nfgk8s%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4etrxj00053b6hvo4o5bbu%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252F%2522%257D%255D%252C%2522id%2522%253A%2522clt4etrxj00063b6hk3nfgk8s%2522%252C%2522activeTabId%2522%253A%2522clt4etrxj00053b6hvo4o5bbu%2522%257D%252C%2522clt4etrxj00043b6h3xt2fybf%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4etrxj00033b6hkff9eafm%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt4etrxj00043b6h3xt2fybf%2522%252C%2522activeTabId%2522%253A%2522clt4etrxj00033b6hkff9eafm%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Parallel Routes"})]}),"\n",(0,i.jsx)(n.p,{children:"这也就是说，每个插槽都可以有自己独立的导航和状态管理，就像一个小型应用一样。这种特性适合于构建复杂的应用如 dashboard。"}),"\n",(0,i.jsx)(n.p,{children:"最后，让我们总结一下使用平行路由的优势："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"使用平行路由可以将单个布局拆分为多个插槽，使代码更易于管理，尤其适用于团队协作的时候"}),"\n",(0,i.jsx)(n.li,{children:"每个插槽都可以定义自己的加载界面和错误状态，比如某个插槽加载速度比较慢，那就可以加一个加载效果，加载期间，也不会影响其他插槽的渲染和交互。当出现错误的时候，也只会在具体的插槽上出现错误提示，而不会影响页面其他部分，有效改善用户体验"}),"\n",(0,i.jsxs)(n.li,{children:["每个插槽都可以有自己独立的导航和状态管理，这使得插槽的功能更加丰富，比如在上面的例子中，我们在 ",(0,i.jsx)(n.code,{children:"@analytics"})," 插槽下又建了查看页面 PV 的 ",(0,i.jsx)(n.code,{children:"/page-views"}),"、查看访客的 ",(0,i.jsx)(n.code,{children:"/visitors"}),"，使得同一个插槽区域可以根据路由显示不同的内容"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"那你可能要问了，我就不使用平行路由，我就完全使用拆分组件的形式，加载状态和错误状态全都自己处理，子路由也统统自己处理，可不可以？"}),"\n",(0,i.jsx)(n.p,{children:"当然是可以的，只要不嫌麻烦的话……"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"注意：使用平行路由的时候，热加载有可能会出现错误。如果出现了让你匪夷所思的情况，重新运行 npm run dev 或者构建生产版本查看效果"})}),"\n",(0,i.jsxs)(n.h3,{id:"34-defaultjs",children:["3.4. default.js",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-defaultjs",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"为了让大家更好的理解平行路由，我们写一个示例代码。项目结构如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"app\n├─ @analytics\n│   └─ page-views\n│   │    └─ page.js\n│   └─ visitors\n│   │     └─ page.js\n│   └─ page.js\n├─ @team\n│  └─ page.js\n├─ layout.js\n└─ page.js\n"})}),"\n",(0,i.jsxs)(n.p,{children:["其中 ",(0,i.jsx)(n.code,{children:"app/layout.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import Link from "next/link";\nimport "./globals.css";\n\nexport default function RootLayout({ children, team, analytics }) {\n  return (\n    <html>\n      <body className="p-6">\n        <div className="p-10 mb-6 bg-sky-600 text-white rounded-xl">\n          Parallel Routes Examples\n        </div>\n        <nav className="flex items-center justify-center gap-10 text-blue-600 mb-6">\n          <Link href="/">Home</Link>\n          <Link href="/page-views">Page Views</Link>\n          <Link href="/visitors">Visitors</Link>\n        </nav>\n        <div className="flex gap-6">\n          {team}\n          {analytics}\n        </div>\n        {children}\n      </body>\n    </html>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["注意：这里我们为了样式好看，使用了 Tailwind CSS，使用方式参考 《",(0,i.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309076792760303654#heading-5",target:"_blank",rel:"noopener noreferrer",children:"样式篇 | Tailwind CSS、CSS-in-JS 与 Sass"}),"》。对于不熟悉的同学，照样拷贝代码即可，顶多样式不生效，但并不影响这里的逻辑。"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'export default function Page() {\n  return (\n    <div className="p-10 mt-6 bg-sky-600 text-white rounded-xl">\n      Hello, App!\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/@analytics/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-indigo-500 text-white flex items-center justify-center">Hello, Analytics!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/@analytics/page-views/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-indigo-600 text-white flex items-center justify-center">Hello, Analytics Page Views!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/@analytics/visitors/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-indigo-700 text-white flex items-center justify-center">Hello, Analytics Visitors!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/@team/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-sky-500 text-white flex items-center justify-center">Hello, Team!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["其实各个 ",(0,i.jsx)(n.code,{children:"page.js"})," 代码差异不大，主要是做了一点样式和文字区分。"]}),"\n",(0,i.jsxs)(n.p,{children:["此时访问 ",(0,i.jsx)(n.code,{children:"/"}),"，效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:m,alt:"parallel-routers-1.gif"})}),"\n",(0,i.jsxs)(n.p,{children:["到这里其实还只是上节例子的样式美化版。现在，点击 ",(0,i.jsx)(n.code,{children:"Visitors"})," 链接导航至 ",(0,i.jsx)(n.code,{children:"/visitors"})," 路由，然后刷新页面，此时你会发现，页面出现了 404 错误："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:u,alt:"parallel-routers-2.gif"})}),"\n",(0,i.jsxs)(n.p,{children:["这是为什么呢？为什么我们从首页导航至 ",(0,i.jsx)(n.code,{children:"/visitors"})," 的时候可以正常显示？而直接进入 ",(0,i.jsx)(n.code,{children:"/visitors"})," 就会出现 404 错误呢？"]}),"\n",(0,i.jsxs)(n.p,{children:["先说说为什么从首页导航至 ",(0,i.jsx)(n.code,{children:"/visitors"})," 的时候可以正常显示？这是因为 Next.js 默认会追踪每个插槽的状态，具体插槽中显示的内容其实跟导航的类型有关："]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["如果是软导航（Soft Navigation，比如通过 ",(0,i.jsx)(n.code,{children:"<Link />"})," 标签），在导航时，Next.js 将执行部分渲染，更改插槽的内容，如果它们与当前 URL 不匹配，维持之前的状态"]}),"\n",(0,i.jsx)(n.li,{children:"如果是硬导航（Hard Navigation，比如浏览器刷新页面），因为 Next.js 无法确定与当前 URL 不匹配的插槽的状态，所以会渲染 404 错误"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["简单的来说，访问 ",(0,i.jsx)(n.code,{children:"/visitors"})," 本身就会造成插槽内容与当前 URL 不匹配，按理说要渲染 404 错误，但是在软导航的时候，为了更好的用户体验，如果 URL 不匹配，Next.js 会继续保持该插槽之前的状态，而不渲染 404 错误。"]}),"\n",(0,i.jsxs)(n.p,{children:["那么问题又来了？不是写了 ",(0,i.jsx)(n.code,{children:"app/@analytics/visitors/page.js"})," 吗？怎么会不匹配呢？对于 ",(0,i.jsx)(n.code,{children:"@analytics"})," 而言，确实是匹配的，但是对于 ",(0,i.jsx)(n.code,{children:"@team"})," 和 ",(0,i.jsx)(n.code,{children:"children"})," 就不匹配了！"]}),"\n",(0,i.jsxs)(n.p,{children:["也就是说，当你访问 ",(0,i.jsx)(n.code,{children:"/visitors"})," 的时候，读取的不仅仅是 ",(0,i.jsx)(n.code,{children:"app/@analytics/visitors/page.js"}),"，还有 ",(0,i.jsx)(n.code,{children:"app/@team/visitors/page.js"})," 和 ",(0,i.jsx)(n.code,{children:"app/visitors/page.js"}),"。不信我们新建这两个文件测试一下。"]}),"\n",(0,i.jsxs)(n.p,{children:["新建 ",(0,i.jsx)(n.code,{children:"app/@team/visitors/page.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-indigo-700 text-white flex items-center justify-center">Hello, Team Visitors!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["新建 ",(0,i.jsx)(n.code,{children:"app/visitors/page.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export default function Page() {\n  return (\n    <div className="p-10 mt-6 bg-sky-600 text-white rounded-xl">\n      Hello, App Visitors!\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["此时再访问 ",(0,i.jsx)(n.code,{children:"/visitors"}),"，刷新一下页面试试，效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:"parallel-routers-3.gif"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["线上效果：",(0,i.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/parallel-routes-slot-gjyc7y?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt5a2jx700073b6h8sdhy13i%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt5a2jx600023b6h0guni4v9%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt5a2jx700043b6h261hqftc%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt5a2jx700063b6hujk33tpm%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B40%252C60%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt5a2jx600023b6h0guni4v9%2522%253A%257B%2522id%2522%253A%2522clt5a2jx600023b6h0guni4v9%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clt5a2jx700063b6hujk33tpm%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt5a2jx700053b6h614uvyna%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fvisitors%2522%257D%255D%252C%2522id%2522%253A%2522clt5a2jx700063b6hujk33tpm%2522%252C%2522activeTabId%2522%253A%2522clt5a2jx700053b6h614uvyna%2522%257D%252C%2522clt5a2jx700043b6h261hqftc%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt5a2jx700033b6hk6jghx9f%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt5a2jx700043b6h261hqftc%2522%252C%2522activeTabId%2522%253A%2522clt5a2jx700033b6hk6jghx9f%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Parallel Routes Slot"})]}),"\n",(0,i.jsxs)(n.li,{children:["源码地址：",(0,i.jsx)(n.a,{href:"https://github.com/mqyqingfeng/next-app-demo/tree/next-parallel-2",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/mqyqingfeng/next-app-demo/tree/next-parallel-2"})]}),"\n",(0,i.jsxs)(n.li,{children:["下载代码：",(0,i.jsx)(n.code,{children:"git clone -b next-parallel-2 git@github.com:mqyqingfeng/next-app-demo.git"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"那么问题又来了，如果我在某一个插槽里新建了一个路由，我难道还要在其他插槽里也新建这个路由吗？这岂不是很麻烦？"}),"\n",(0,i.jsx)(n.p,{children:"为了解决这个问题，Next.js 提供了 default.js。当发生硬导航的时候，Next.js 会为不匹配的插槽呈现 default.js 中定义的内容，如果 default.js 没有定义，再渲染 404 错误。"}),"\n",(0,i.jsxs)(n.p,{children:["现在删除 ",(0,i.jsx)(n.code,{children:"app/@team/visitors/page.js"})," 和 ",(0,i.jsx)(n.code,{children:"app/visitors/page.js"}),"，改用 default.js："]}),"\n",(0,i.jsxs)(n.p,{children:["新建 ",(0,i.jsx)(n.code,{children:"app/@team/default.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'export default function Page() {\n    return <div className="h-60 flex-1 rounded-xl bg-indigo-700 text-white flex items-center justify-center">Hello, Team Default!</div>\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["新建 ",(0,i.jsx)(n.code,{children:"app/default.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'export default function Page() {\n  return (\n    <div className="p-10 mt-6 bg-sky-600 text-white rounded-xl">\n      Hello, App Default!\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"此时效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:"parallel-routers-4.gif"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["线上效果：",(0,i.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/parallel-routes-slot-default-6xf2fl?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt5ik79y00073b6hf3l3fzbg%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt5ik79y00023b6hn97lfg2a%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt5ik79y00043b6h22zpnrac%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt5ik79y00063b6h4xgmbxtp%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt5ik79y00023b6hn97lfg2a%2522%253A%257B%2522id%2522%253A%2522clt5ik79y00023b6hn97lfg2a%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clt5ik79y00063b6h4xgmbxtp%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt5ik79y00053b6hh4drcmyn%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fvisitors%2522%257D%255D%252C%2522id%2522%253A%2522clt5ik79y00063b6h4xgmbxtp%2522%252C%2522activeTabId%2522%253A%2522clt5ik79y00053b6hh4drcmyn%2522%257D%252C%2522clt5ik79y00043b6h22zpnrac%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt5ik79y00033b6h3hj0kx19%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt5ik79y00043b6h22zpnrac%2522%252C%2522activeTabId%2522%253A%2522clt5ik79y00033b6h3hj0kx19%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Parallel Routes Default"})]}),"\n",(0,i.jsxs)(n.li,{children:["源码地址：",(0,i.jsx)(n.a,{href:"https://github.com/mqyqingfeng/next-app-demo/tree/next-parallel-3",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/mqyqingfeng/next-app-demo/tree/next-parallel-3"})]}),"\n",(0,i.jsxs)(n.li,{children:["下载代码：",(0,i.jsx)(n.code,{children:"git clone -b next-parallel-3 git@github.com:mqyqingfeng/next-app-demo.git"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"4-拦截路由intercepting-routes",children:["4. 拦截路由（Intercepting Routes）",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-拦截路由intercepting-routes",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"拦截路由允许你在当前路由拦截其他路由地址并在当前路由中展示内容。"}),"\n",(0,i.jsxs)(n.h3,{id:"41-效果展示",children:["4.1 效果展示",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-效果展示",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["让我们直接看个案例，打开 ",(0,i.jsx)(n.a,{href:"https://dribbble.com/",target:"_blank",rel:"noopener noreferrer",children:"dribbble.com"})," 这个网站，你可以看到很多美图："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"现在点击任意一张图片："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"此时页面弹出了一层 Modal，Modal 中展示了该图片的具体内容。如果你想要查看其他图片，点击右上角的关闭按钮，关掉 Modal 即可继续浏览。值得注意的是，此时路由地址也发生了变化，它变成了这张图片的具体地址。如果你喜欢这张图片，直接复制当前的地址分享给朋友即可。"}),"\n",(0,i.jsx)(n.p,{children:"而当你的朋友打开时，其实不需要再以 Modal 的形式展现，直接展示这张图片的具体内容即可。现在刷新下该页面，你会发现页面的样式不同了："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"在这个样式里没有 Modal，就是展示这张图片的内容。"}),"\n",(0,i.jsxs)(n.p,{children:["同样一个路由地址，却展示了不同的内容。这就是拦截路由的效果。如果你在 ",(0,i.jsx)(n.code,{children:"dribbble.com"})," 想要访问 ",(0,i.jsx)(n.code,{children:"dribbble.com/shots/xxxxx"}),"，此时会拦截 ",(0,i.jsx)(n.code,{children:"dribbble.com/shots/xxxxx"})," 这个路由地址，以 Modal 的形式展现。而当直接访问 ",(0,i.jsx)(n.code,{children:"dribbble.com/shots/xxxxx"})," 时，则是原本的样式。"]}),"\n",(0,i.jsx)(n.p,{children:"示意图如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["这是另一个拦截路由的 Demo 演示：",(0,i.jsx)(n.a,{href:"https://nextjs-app-route-interception.vercel.app/",target:"_blank",rel:"noopener noreferrer",children:"https://nextjs-app-route-interception.vercel.app/"})]}),"\n",(0,i.jsx)(n.p,{children:"了解了拦截路由的效果，让我们再思考下使用拦截路由的意义是什么。"}),"\n",(0,i.jsx)(n.p,{children:"简单的来说，就是希望用户继续停留在重要的页面上。比如上述例子中的图片流页面，开发者肯定是希望用户能够持续在图片流页面浏览，如果点击一张图片就跳转出去，会打断用户的浏览体验，如果点击只展示一个 Modal，分享操作又会变得麻烦一点。拦截路由正好可以实现这样一种平衡。又比如任务列表页面，点击其中一项任务，弹出 Modal 让你能够编辑此任务，同时又可以方便的分享任务内容。"}),"\n",(0,i.jsxs)(n.h3,{id:"42-实现方式",children:["4.2 实现方式",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-实现方式",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["那么这个效果该如何实现呢？在 Next.js 中，实现拦截路由需要你在命名文件夹的时候以 ",(0,i.jsx)(n.code,{children:"(..)"})," 开头，其中："]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(.)"})," 表示匹配同一层级"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(..)"})," 表示匹配上一层级"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(..)(..)"})," 表示匹配上上层级。"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(...)"})," 表示匹配根目录"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"但是要注意的是，这个匹配的是路由的层级而不是文件夹路径的层级，就比如路由组、平行路由这些不会影响 URL 的文件夹就不会被计算层级。"}),"\n",(0,i.jsx)(n.p,{children:"看个例子："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/feed/(..)photo"}),"对应的路由是 ",(0,i.jsx)(n.code,{children:"/feed/photo"}),"，要拦截的路由是 ",(0,i.jsx)(n.code,{children:"/photo"}),"，两者只差了一个层级，所以使用 ",(0,i.jsx)(n.code,{children:"(..)"}),"。"]}),"\n",(0,i.jsxs)(n.h3,{id:"43-示例代码",children:["4.3 示例代码",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-示例代码",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"我们写个 demo 来实现这个效果，目录结构如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"app\n├─ layout.js\n├─ page.js\n├─ data.js\n├─ default.js\n├─ @modal\n│  ├─ default.js\n│  └─ (.)photo\n│     └─ [id]\n│        └─ page.js\n└─ photo\n   └─ [id]\n      └─ page.js\n"})}),"\n",(0,i.jsx)(n.p,{children:"虽然涉及的文件很多，但每个文件的代码都很简单。"}),"\n",(0,i.jsxs)(n.p,{children:["先 Mock 一下图片的数据，",(0,i.jsx)(n.code,{children:"app/data.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'export const photos = [\n  { id: "1", src: "http://placekitten.com/210/210" },\n  { id: "2", src: "http://placekitten.com/330/330" },\n  { id: "3", src: "http://placekitten.com/220/220" },\n  { id: "4", src: "http://placekitten.com/240/240" },\n  { id: "5", src: "http://placekitten.com/250/250" },\n  { id: "6", src: "http://placekitten.com/300/300" },\n  { id: "7", src: "http://placekitten.com/500/500" },\n];\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/page.js"}),"代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import Link from "next/link";\nimport { photos } from "./data";\n\nexport default function Home() {\n  return (\n    <main className="flex flex-row flex-wrap">\n      {photos.map(({ id, src }) => (\n        <Link key={id} href={`/photo/${id}`}>\n          <img width="200" src={src} className="m-1" />\n        </Link>\n      ))}\n    </main>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app/layout.js"})," 代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import "./globals.css";\n\nexport default function Layout({ children, modal }) {\n  return (\n    <html>\n      <body>\n        {children}\n        {modal}\n      </body>\n    </html>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["此时访问 ",(0,i.jsx)(n.code,{children:"/"}),"，效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["现在我们再来实现下单独访问图片地址时的效果，新建 ",(0,i.jsx)(n.code,{children:"app/photo/[id]/page.js"}),"，代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { photos } from "../../data";\n\nexport default function PhotoPage({ params: { id } }) {\n  const photo = photos.find((p) => p.id === id);\n  return <img className="block w-1/4 mx-auto mt-10" src={photo.src} />;\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["访问 ",(0,i.jsx)(n.code,{children:"/photo/6"}),"，效果如下："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,i.jsxs)(n.p,{children:["现在我们开始实现拦截路由，为了和单独访问图片地址时的样式区分，我们声明另一种样式效果。",(0,i.jsx)(n.code,{children:"app/@modal/(.)photo/[id]/page.js"})," 代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { photos } from "../../../data";\n\nexport default function PhotoModal({ params: { id } }) {\n  const photo = photos.find((p) => p.id === id)\n  return (\n    <div className="flex h-60 justify-center items-center fixed bottom-0 bg-slate-300 w-full">\n      <img className="w-52" src={photo.src} />\n    </div>\n  )\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["因为用到了平行路由，所以我们需要设置 default.js。",(0,i.jsx)(n.code,{children:"app/default.js"})," 和 ",(0,i.jsx)(n.code,{children:"app/@modal/default.js"}),"的代码都是："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export default function Default() {\n  return null\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"最终的效果如下："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:c,alt:"intercepting-routers-5.gif"})}),"\n",(0,i.jsxs)(n.p,{children:["你可以看到，在 ",(0,i.jsx)(n.code,{children:"/"}),"路由下，访问 ",(0,i.jsx)(n.code,{children:"/photo/5"}),"，路由会被拦截，并使用 ",(0,i.jsx)(n.code,{children:"@modal/(.)photo/[id]/page.js"})," 的样式。"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["线上查看代码和效果：",(0,i.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/intercepting-routes-6ngfhx",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Intercepting Routes"})]}),"\n",(0,i.jsxs)(n.li,{children:["源码地址：",(0,i.jsx)(n.a,{href:"https://github.com/mqyqingfeng/next-app-demo/tree/Intercepting-Routes",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/mqyqingfeng/next-app-demo/tree/Intercepting-Routes"})]}),"\n",(0,i.jsxs)(n.li,{children:["下载代码：",(0,i.jsx)(n.code,{children:"git clone -b Intercepting-Routes git@github.com:mqyqingfeng/next-app-demo.git"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"小结",children:["小结",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"恭喜你，完成了本节内容的学习！"}),"\n",(0,i.jsx)(n.p,{children:"这一节我们介绍了动态路由、路由组、平行路由、拦截路由，它们的共同特点就需要对文件名进行修饰。其中动态路由用来处理动态的链接，路由组用来组织代码，平行路由和拦截路由则是处理实际开发中会遇到的场景问题。平行路由和拦截路由初次理解的时候可能会有些难度，但只要你跟着文章中的 demo 手敲一遍，相信你一定能够快速理解和掌握！"}),"\n",(0,i.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes",target:"_blank",rel:"noopener noreferrer",children:"Routing: Dynamic Routes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/route-groups",target:"_blank",rel:"noopener noreferrer",children:"Routing: Route Groups"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/parallel-routes",target:"_blank",rel:"noopener noreferrer",children:"Routing: Parallel Routes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes",target:"_blank",rel:"noopener noreferrer",children:"Routing: Intercepting Routes"})}),"\n"]})]})}function B(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}let L=B;B.__RSPRESS_PAGE_META={},B.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F5.%E8%B7%AF%E7%94%B1%E7%AF%87%20_%20%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E3%80%81%E8%B7%AF%E7%94%B1%E7%BB%84%E3%80%81%E5%B9%B3%E8%A1%8C%E8%B7%AF%E7%94%B1%E5%92%8C%E6%8B%A6%E6%88%AA%E8%B7%AF%E7%94%B1.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. 动态路由（Dynamic Routes）",id:"1-动态路由dynamic-routes",depth:2},{text:"1.1. [folderName]",id:"11-foldername",depth:3},{text:"1.2. [...folderName]",id:"12-foldername",depth:3},{text:"1.3. [[...folderName]]",id:"13-foldername",depth:3},{text:"2. 路由组（Route groups）",id:"2-路由组route-groups",depth:2},{text:"2.1. 按逻辑分组",id:"21-按逻辑分组",depth:3},{text:"2.2. 创建不同布局",id:"22-创建不同布局",depth:3},{text:"2.3. 创建多个根布局",id:"23-创建多个根布局",depth:3},{text:"3. 平行路由（Parallel Routes）",id:"3-平行路由parallel-routes",depth:2},{text:"3.1. 用途 1：条件渲染",id:"31-用途-1条件渲染",depth:3},{text:"3.2. 用途 2：独立路由处理",id:"32-用途-2独立路由处理",depth:3},{text:"3.3. 用途 3：子导航",id:"33-用途-3子导航",depth:3},{text:"3.4. default.js",id:"34-defaultjs",depth:3},{text:"4. 拦截路由（Intercepting Routes）",id:"4-拦截路由intercepting-routes",depth:2},{text:"4.1 效果展示",id:"41-效果展示",depth:3},{text:"4.2 实现方式",id:"42-实现方式",depth:3},{text:"4.3 示例代码",id:"43-示例代码",depth:3},{text:"小结",id:"小结",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"5.路由篇 _ 动态路由、路由组、平行路由和拦截路由",headingTitle:"5.路由篇 _ 动态路由、路由组、平行路由和拦截路由",frontmatter:{}}}}]);