"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["58278"],{38173:function(e,c,d){d.r(c),d.d(c,{default:()=>h});var s=d(552676),i=d(740453);function r(e){let c=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",pre:"pre",img:"img",h3:"h3",blockquote:"blockquote",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(c.h1,{id:"12高级-3写错的不是最新的提交而是倒数第二个",children:["12高级 3：写错的不是最新的提交，而是倒数第二个？",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#12高级-3写错的不是最新的提交而是倒数第二个",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"commit --amend"})," 可以修复最新 ",(0,s.jsx)(c.code,{children:"commit"})," 的错误，但如果是倒数第二个 ",(0,s.jsx)(c.code,{children:"commit"})," 写错了，怎么办？"]}),"\n",(0,s.jsxs)(c.h2,{id:"rebase--i交互式-rebase",children:["rebase -i：交互式 rebase",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#rebase--i交互式-rebase",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["如果不是最新的 ",(0,s.jsx)(c.code,{children:"commit"})," 写错，就不能用 ",(0,s.jsx)(c.code,{children:"commit --amend"})," 来修复了，而是要用 ",(0,s.jsx)(c.code,{children:"rebase"}),"。不过需要给 ",(0,s.jsx)(c.code,{children:"rebase"})," 也加一个参数：",(0,s.jsx)(c.code,{children:"-i"}),"。"]}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"rebase -i"})," 是 ",(0,s.jsx)(c.code,{children:"rebase --interactive"})," 的缩写形式，意为「交互式 rebase」。"]}),"\n",(0,s.jsxs)(c.p,{children:["所谓「交互式 rebase」，就是在 ",(0,s.jsx)(c.code,{children:"rebase"})," 的操作执行之前，你可以指定要 ",(0,s.jsx)(c.code,{children:"rebase"})," 的 ",(0,s.jsx)(c.code,{children:"commit"})," 链中的每一个 ",(0,s.jsx)(c.code,{children:"commit"})," 是否需要进一步修改。"]}),"\n",(0,s.jsx)(c.p,{children:"那么你就可以利用这个特点，进行一次「原地 rebase」。"}),"\n",(0,s.jsxs)(c.p,{children:["例如你是在写错了 ",(0,s.jsx)(c.code,{children:"commit"})," 之后，又提交了一次才发现之前写错了："]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-shell",children:"git log\n"})}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd00a27f45?w=614&h=290&f=jpeg&s=115583",alt:""})}),"\n",(0,s.jsxs)(c.h3,{id:"开启交互式-rebase-过程",children:["开启交互式 rebase 过程",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#开启交互式-rebase-过程",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["现在再用 ",(0,s.jsx)(c.code,{children:"commit --amend"})," 已经晚了，但可以用 ",(0,s.jsx)(c.code,{children:"rebase -i"}),"："]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-shell",children:"git rebase -i HEAD^^\n"})}),"\n",(0,s.jsxs)(c.blockquote,{children:["\n",(0,s.jsxs)(c.p,{children:["说明：在 Git 中，有两个「偏移符号」： ",(0,s.jsx)(c.code,{children:"^"})," 和 ",(0,s.jsx)(c.code,{children:"~"}),"。"]}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"^"})," 的用法：在 ",(0,s.jsx)(c.code,{children:"commit"})," 的后面加一个或多个 ",(0,s.jsx)(c.code,{children:"^"})," 号，可以把 ",(0,s.jsx)(c.code,{children:"commit"})," 往回偏移，偏移的数量是 ",(0,s.jsx)(c.code,{children:"^"})," 的数量。例如：",(0,s.jsx)(c.code,{children:"master^"})," 表示 ",(0,s.jsx)(c.code,{children:"master"})," 指向的 ",(0,s.jsx)(c.code,{children:"commit"})," 之前的那个 ",(0,s.jsx)(c.code,{children:"commit"}),"； ",(0,s.jsx)(c.code,{children:"HEAD^^"}),"  表示 ",(0,s.jsx)(c.code,{children:"HEAD"})," 所指向的 ",(0,s.jsx)(c.code,{children:"commit"})," 往前数两个 ",(0,s.jsx)(c.code,{children:"commit"}),"。"]}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"~"})," 的用法：在 ",(0,s.jsx)(c.code,{children:"commit"})," 的后面加上 ",(0,s.jsx)(c.code,{children:"~"})," 号和一个数，可以把 ",(0,s.jsx)(c.code,{children:"commit"})," 往回偏移，偏移的数量是 ",(0,s.jsx)(c.code,{children:"~"})," 号后面的数。例如：",(0,s.jsx)(c.code,{children:"HEAD~5"})," 表示 ",(0,s.jsx)(c.code,{children:"HEAD"})," 指向的 ",(0,s.jsx)(c.code,{children:"commit"}),"往前数 5 个 ",(0,s.jsx)(c.code,{children:"commit"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(c.p,{children:["上面这行代码表示，把当前 ",(0,s.jsx)(c.code,{children:"commit"})," （ ",(0,s.jsx)(c.code,{children:"HEAD"})," 所指向的 ",(0,s.jsx)(c.code,{children:"commit"}),"） ",(0,s.jsx)(c.code,{children:"rebase"})," 到 ",(0,s.jsx)(c.code,{children:"HEAD"})," 之前 2 个的 ",(0,s.jsx)(c.code,{children:"commit"})," 上："]}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd00522381?w=568&h=352&f=gif&s=182502",alt:""})}),"\n",(0,s.jsxs)(c.p,{children:["如果没有 ",(0,s.jsx)(c.code,{children:"-i"})," 参数的话，这种「原地 rebase」相当于空操作，会直接结束。而在加了 ",(0,s.jsx)(c.code,{children:"-i"})," 后，就会跳到一个新的界面："]}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd04f46d6e?w=590&h=409&f=jpeg&s=137238",alt:""})}),"\n",(0,s.jsxs)(c.h3,{id:"编辑界面选择-commit-和对应的操作",children:["编辑界面：选择 commit 和对应的操作",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#编辑界面选择-commit-和对应的操作",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["这个编辑界面的最顶部，列出了将要「被 rebase」的所有 ",(0,s.jsx)(c.code,{children:"commit"}),"s，也就是倒数第二个 ",(0,s.jsx)(c.code,{children:"commit"})," 「增加常见笑声集合」和最新的 ",(0,s.jsx)(c.code,{children:"commit"}),"「增加常见哭声集合」。需要注意，这个排列是正序的，旧的 ",(0,s.jsx)(c.code,{children:"commit"})," 会排在上面，新的排在下面。"]}),"\n",(0,s.jsx)(c.p,{children:"这两行指示了两个信息："}),"\n",(0,s.jsxs)(c.ol,{children:["\n",(0,s.jsxs)(c.li,{children:["需要处理哪些 ",(0,s.jsx)(c.code,{children:"commit"}),"s；"]}),"\n",(0,s.jsx)(c.li,{children:"怎么处理它们。"}),"\n"]}),"\n",(0,s.jsxs)(c.p,{children:["你需要修改这两行的内容来指定你需要的操作。每个 ",(0,s.jsx)(c.code,{children:"commit"})," 默认的操作都是 ",(0,s.jsx)(c.code,{children:"pick"})," （从图中也可以看出），表示「直接应用这个 ",(0,s.jsx)(c.code,{children:"commit"}),"」。所以如果你现在直接退出编辑界面，那么结果仍然是空操作。"]}),"\n",(0,s.jsxs)(c.p,{children:["但你的目标是修改倒数第二个 ",(0,s.jsx)(c.code,{children:"commit"}),"，也就是上面的那个「增加常见笑声集合」，所以你需要把它的操作指令从 ",(0,s.jsx)(c.code,{children:"pick"})," 改成 ",(0,s.jsx)(c.code,{children:"edit"})," 。 ",(0,s.jsx)(c.code,{children:"edit"}),' 的意思是「应用这个 commit，然后停下来等待继续修正」。其他的操作指令，在这个界面里都已经列举了出来（下面的 "Commands…" 部分文字），你可以自己研究一下。']}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd020c87f6?w=535&h=254&f=jpeg&s=86065",alt:""})}),"\n",(0,s.jsxs)(c.p,{children:["把 ",(0,s.jsx)(c.code,{children:"pick"})," 修改成 ",(0,s.jsx)(c.code,{children:"edit"})," 后，就可以退出编辑界面了："]}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd007159fa?w=454&h=169&f=jpeg&s=44688",alt:""})}),"\n",(0,s.jsxs)(c.p,{children:["上图的提示信息说明，",(0,s.jsx)(c.code,{children:"rebase"})," 过程已经停在了第二个 ",(0,s.jsx)(c.code,{children:"commit"})," 的位置，那么现在你就可以去修改你想修改的内容了。"]}),"\n",(0,s.jsxs)(c.h3,{id:"修改写错的-commit",children:["修改写错的 commit",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#修改写错的-commit",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["修改完成之后，和上节里的方法一样，用 ",(0,s.jsx)(c.code,{children:"commit --amend"})," 来把修正应用到当前最新的 ",(0,s.jsx)(c.code,{children:"commit"}),"："]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-shell",children:"git add 笑声\ngit commit --amend\n"})}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd04de0d40?w=407&h=96&f=jpeg&s=41778",alt:""})}),"\n",(0,s.jsxs)(c.h3,{id:"继续-rebase-过程",children:["继续 rebase 过程",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#继续-rebase-过程",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["在修复完成之后，就可以用 ",(0,s.jsx)(c.code,{children:"rebase --continue"})," 来继续 ",(0,s.jsx)(c.code,{children:"rebase"})," 过程，把后面的 ",(0,s.jsx)(c.code,{children:"commit"})," 直接应用上去。"]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-shell",children:"git rebase --continue\n"})}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd54455c29?w=459&h=61&f=jpeg&s=29623",alt:""})}),"\n",(0,s.jsxs)(c.p,{children:["然后，这次交互式 ",(0,s.jsx)(c.code,{children:"rebase"})," 的过程就完美结束了，你的那个倒数第二个写错的 ",(0,s.jsx)(c.code,{children:"commit"})," 就也被修正了："]}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.img,{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fdf5fd4e7d5257?w=548&h=348&f=gif&s=266072",alt:""})}),"\n",(0,s.jsxs)(c.p,{children:["实质上，交互式 ",(0,s.jsx)(c.code,{children:"rebase"})," 并不是必须应用在「原地 rebase」上来修改写错的 ",(0,s.jsx)(c.code,{children:"commit"})," ，这只不过是它最常见的用法。你同样也可以把它用在分叉的 ",(0,s.jsx)(c.code,{children:"commit"})," 上，不过这个你就可以自己去研究一下了。"]}),"\n",(0,s.jsxs)(c.h2,{id:"小结",children:["小结",(0,s.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsxs)(c.p,{children:["这节介绍了交互式 ",(0,s.jsx)(c.code,{children:"rebase"}),"，它可以在 ",(0,s.jsx)(c.code,{children:"rebase"})," 开始之前指定一些额外操作。交互式 ",(0,s.jsx)(c.code,{children:"rebase"})," 最常用的场景是修改写错的 ",(0,s.jsx)(c.code,{children:"commit"}),"，但也可以用作其他用途。它的大致用法："]}),"\n",(0,s.jsxs)(c.ol,{children:["\n",(0,s.jsxs)(c.li,{children:["使用方式是 ",(0,s.jsx)(c.code,{children:"git rebase -i 目标commit"}),"；"]}),"\n",(0,s.jsxs)(c.li,{children:["在编辑界面中指定需要操作的 ",(0,s.jsx)(c.code,{children:"commit"}),"s 以及操作类型；"]}),"\n",(0,s.jsxs)(c.li,{children:["操作完成之后用 ",(0,s.jsx)(c.code,{children:"git rebase --continue"})," 来继续 ",(0,s.jsx)(c.code,{children:"rebase"})," 过程。"]}),"\n"]})]})}function n(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,i.ah)(),e.components);return c?(0,s.jsx)(c,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}let h=n;n.__RSPRESS_PAGE_META={},n.__RSPRESS_PAGE_META["Git%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97%2F12%E9%AB%98%E7%BA%A7%203%EF%BC%9A%E5%86%99%E9%94%99%E7%9A%84%E4%B8%8D%E6%98%AF%E6%9C%80%E6%96%B0%E7%9A%84%E6%8F%90%E4%BA%A4%EF%BC%8C%E8%80%8C%E6%98%AF%E5%80%92%E6%95%B0%E7%AC%AC%E4%BA%8C%E4%B8%AA%EF%BC%9F.md"]={toc:[{text:"rebase -i：交互式 rebase",id:"rebase--i交互式-rebase",depth:2},{text:"开启交互式 rebase 过程",id:"开启交互式-rebase-过程",depth:3},{text:"编辑界面：选择 commit 和对应的操作",id:"编辑界面选择-commit-和对应的操作",depth:3},{text:"修改写错的 commit",id:"修改写错的-commit",depth:3},{text:"继续 rebase 过程",id:"继续-rebase-过程",depth:3},{text:"小结",id:"小结",depth:2}],title:"12高级 3：写错的不是最新的提交，而是倒数第二个？",headingTitle:"12高级 3：写错的不是最新的提交，而是倒数第二个？",frontmatter:{}}}}]);