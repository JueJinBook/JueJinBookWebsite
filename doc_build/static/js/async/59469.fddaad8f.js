"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["59469"],{996244:function(e,n,s){s.r(n),s.d(n,{default:()=>M});var c=s(552676),r=s(740453);let i=s.p+"static/image/1ca8eb5c1d6ce323dce82a575376ad0f.ea6852db.webp",a=s.p+"static/image/908255ef881b92476d65b0ba767a586d.e8bf85b4.webp",d=s.p+"static/image/cb04b0c3f4565e836472620c49ffe767.d1723c2c.webp",l=s.p+"static/image/44b9cddc2a30702a1e9feb6d2f75e399.60886293.webp",t=s.p+"static/image/dbfade24f61382a4cc8d6cd7f49e58fa.53719b30.webp",h=s.p+"static/image/1c3482cce5643b6d6c4dfb63e60c53b5.f4157f67.webp",p=s.p+"static/image/f0363f34cb52dda1f1d1a2ae82c41b44.f026d10b.webp",j=s.p+"static/image/2d2473ce93c5943155502058bde95694.a8a9e4fe.webp",o=s.p+"static/image/a4b4a9b4bab09c23b3ec7b87a84fb4b9.55e762c4.webp",x=s.p+"static/image/5ac2b984eeaeb498092abfa4ecc8f2ab.44c13934.webp",g=s.p+"static/image/eec3659b5aba0a7e609f9da6ce75fe68.75e3bbc9.webp",b=s.p+"static/image/49651352f8a7c4805ca8fbdbc0a7d4c6.659c0afb.webp",m=s.p+"static/image/ff1ddfb217c460fe6806afb4b1d535ad.507142c8.webp",u=s.p+"static/image/352d1d179f60993882de8874d2233342.100836a9.webp",f=s.p+"static/image/fefc1ac2e6ee4d83b6e7dd9ceadaf35a.7e1158ad.webp",v=s.p+"static/image/3d114178f6c9ade47a840051acaf7c1a.d16b03b1.webp",E=s.p+"static/image/346a337d79f0e1622803aaea577880ec.703305a7.gif",R=s.p+"static/image/06d17c293257fd26ed389631cbd7d64c.c0e0d4ab.webp",w=s.p+"static/image/04a016316c8eb8ecfc4339bf95b5b571.c4155951.gif",k=s.p+"static/image/e496e56b075f5b1ba02bb4adabcdb194.40d96bee.webp",y=s.p+"static/image/91b3f82b33b2b1d9a5ebefcbeeacf13c.ebcfc983.webp",C=s.p+"static/image/cb162b72d02f41bc15f35180992313bf.ef36bf18.webp",S=s.p+"static/image/1a76ac5c2e42dc9ee5409632eb8c9dd2.00178dbe.webp",A=s.p+"static/image/78b288329c795d8e6647d2a46e5a3f2a.0ee27cb1.webp",T=s.p+"static/image/820f71b1f6d3cc73021328dd17439ea5.5e55fa12.webp",N=s.p+"static/image/57840ae2dd9425dca7b2de57551af321.28f5746a.webp",I=s.p+"static/image/4dfc1bf3f387d5d923498a12d2eb0754.4a30b0ea.webp",_=s.p+"static/image/9a9aa97683c165d26dac780fd6637814.79202abe.gif",B=s.p+"static/image/d90e54d92cbbf62ffec794df66af0b21.2eba680a.webp",J=s.p+"static/image/35c7469c36fb54f8e576a6d8626b3a0d.773a45c8.webp",L=s.p+"static/image/438cc3b764c2be6af97d5922aa9a98bd.32b10ea4.webp";function W(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,r.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"92-nest-的-3-种定时任务",children:["92. Nest 的 3 种定时任务",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#92-nest-的-3-种定时任务",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"定时任务，顾名思义就是你可以设定个时间，任务会在设定的时间自动执行。"}),"\n",(0,c.jsx)(n.p,{children:"比如上节我们在 redis 里存取数据，然后通过定时任务在凌晨 4 点刷入数据库。"}),"\n",(0,c.jsx)(n.p,{children:"这节我们就更全面的学下定时任务吧。"}),"\n",(0,c.jsx)(n.p,{children:"新建个 nest 项目："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest new schedule-task\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:L,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后安装定时任务的包："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save @nestjs/schedule\n"})}),"\n",(0,c.jsx)(n.p,{children:"在 AppModule 里引入："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:J,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后就可以创建定时任务了。"}),"\n",(0,c.jsx)(n.p,{children:"我们创建个 service："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest g service task --flat --no-spec\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:B,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"通过 @Cron 声明任务执行时间："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Injectable()\nexport class TaskService {\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  handleCron() {\n    console.log('task execute');\n  }\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"把服务跑起来试下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm run start:dev\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:_,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到，任务每 5s 都会执行。"}),"\n",(0,c.jsx)(n.p,{children:"当然，也可以注入其他模块的 service。"}),"\n",(0,c.jsx)(n.p,{children:"我们创建个 aaa 模块："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest g resource aaa\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:I,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"把 AaaService 导出："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:N,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后在 TaskService 注入："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { AaaService } from './aaa/aaa.service';\n\n@Injectable()\nexport class TaskService {\n\n  @Inject(AaaService)\n  private aaaService: AaaService;\n\n  @Cron(CronExpression.EVERY_5_SECONDS)\n  handleCron() {\n    console.log('task execute：', this.aaaService.findAll());\n  }\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"这样就可以定时执行 AaaService 的方法："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:T,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"上节我们定时把 redis 数据刷入数据库就是这样做的。"}),"\n",(0,c.jsx)(n.p,{children:"我们设置的每 5s 执行一次，其实是一个 cron 表达式："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"cron 表达式有这 7 个字段："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"其中年是可选的，所以一般都是 6 个。"}),"\n",(0,c.jsx)(n.p,{children:"每个字段都可以写 * ，比如秒写 * 就代表每秒都会触发，日期写 * 就代表每天都会触发。"}),"\n",(0,c.jsx)(n.p,{children:"但当你指定了具体的日期的时候，星期得写 ？"}),"\n",(0,c.jsx)(n.p,{children:"比如表达式是"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"7 12 13 10 * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"就是每月 10 号的 13:12:07 执行这个定时任务。"}),"\n",(0,c.jsx)(n.p,{children:"但这时候你不知道是星期几，如果写 * 代表不管哪天都会执行，这时候就要写 ?，代表忽略星期。"}),"\n",(0,c.jsx)(n.p,{children:"同样，你指定了星期的时候，日期也可能和它冲突，这时候也要指定 ?"}),"\n",(0,c.jsx)(n.p,{children:"但只有日期和星期可以指定 ？，因为只有这俩字段是相互影响的。"}),"\n",(0,c.jsx)(n.p,{children:"除了指定一个值外，还可以指定范围，比如分钟指定 20-30，"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 20-30 * * * *\n"})}),"\n",(0,c.jsx)(n.p,{children:"这个表达式就是从 20 到 30 的每分钟每个第 0 秒都会执行。"}),"\n",(0,c.jsx)(n.p,{children:"当然也可以指定枚举值，通过 , 分隔"}),"\n",(0,c.jsx)(n.p,{children:"比如每小时的第 5 和 第 10 分钟的第 0 秒执行定时任务："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 5,10 * * * *\n"})}),"\n",(0,c.jsx)(n.p,{children:"而且还可以通过 / 指定每隔多少时间触发一次。"}),"\n",(0,c.jsx)(n.p,{children:"比如从第 5 分钟开始，每隔 10 分钟触发一次："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 5/10 * * * *\n"})}),"\n",(0,c.jsx)(n.p,{children:"此外，日期和星期还支持几个特殊字符："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:C,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"L 是 last，L 用在星期的位置就是星期六："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * ? * L\n"})}),"\n",(0,c.jsx)(n.p,{children:"L 用在日期的位置就是每月最后一天："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * L * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"W 代表工作日 workday，只能用在日期位置，代表从周一到周五"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * W * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"当你指定 2W 的时候，代表每月的第而个工作日："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * 2W * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"LW 可以在指定日期时连用，代表每月最后一个工作日："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * LW * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"星期的位置还可以用 4#3 表示每个月第 3 周的星期三："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * ? * 4#3\n"})}),"\n",(0,c.jsx)(n.p,{children:"同理，每个月的第二周的星期天就是这样："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"* * * ? * 1#2\n"})}),"\n",(0,c.jsx)(n.p,{children:"此外，星期几除了可以用从 1（星期天） 到 7（星期六） 的数字外，还可以用单词的前三个字母：SUN, MON, TUE, WED, THU, FRI, SAT"}),"\n",(0,c.jsx)(n.p,{children:"我们来看几个例子："}),"\n",(0,c.jsx)(n.p,{children:"每隔 5 秒执行一次:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"*/5 * * * * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"每天 5-15 点整点触发："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 0 5-15 * * ?  \n"})}),"\n",(0,c.jsx)(n.p,{children:"每天 10 点、14 点、16 点触发："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 0 10,14,16 * * ?   \n"})}),"\n",(0,c.jsx)(n.p,{children:"每个星期三中午12点："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 0 12 ? * WED\n"})}),"\n",(0,c.jsx)(n.p,{children:"每周二、四、六下午五点："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 0 17 ? * TUES,THUR,SAT\n"})}),"\n",(0,c.jsx)(n.p,{children:"每月最后一天 22 点执行一次："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 0 22 L * ?\n"})}),"\n",(0,c.jsx)(n.p,{children:"2023 年至 2025 年的每月的最后一个星期五上午 9:30 触发"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 30 9 ? * 6L 2023-2025 \n"})}),"\n",(0,c.jsx)(n.p,{children:"每月的第三个星期五上午 10:15 触发："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"0 15 10 ? * 6#3 \n"})}),"\n",(0,c.jsx)(n.p,{children:"基本就这些语法。"}),"\n",(0,c.jsx)(n.p,{children:"但自己写这样的 cron 表达式还是挺麻烦的，所以 Nest 提供了一些常量可以直接用："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这个 @Cron 装饰器还有第二个参数，可以指定定时任务的名字，还有时区："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:k,alt:""})}),"\n",(0,c.jsxs)(n.p,{children:["时区的名字可以在",(0,c.jsx)(n.a,{href:"https://momentjs.com/timezone/",target:"_blank",rel:"noopener noreferrer",children:"这里"}),"查："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"除了 @Cron 之外，你还可以用 @Interval 指定任务的执行间隔，参数是毫秒值："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:R,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"@Interval('task2', 500)\ntask2() {\n    console.log('task2');\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"还可以用 @Timeout 指定多长时间后执行一次："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"@Timeout('task3', 3000)\ntask3() {\n    console.log('task3');\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"综上，我们可以通过 @Cron、@Interval、@Timeout 创建 3 种定时任务。"}),"\n",(0,c.jsx)(n.p,{children:"我们知道了怎么声明定时任务，那能不能管理定时任务，也就是对它做增删改呢？"}),"\n",(0,c.jsx)(n.p,{children:"当然是可以的。"}),"\n",(0,c.jsx)(n.p,{children:"我们在 AppModule 里注入 SchedulerRegistry，然后在 onApplicationBootstrap 的声明周期里拿到所有的 cronJobs 打印下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"@Inject(SchedulerRegistry)\nprivate schedulerRegistry: SchedulerRegistry;\n\nonApplicationBootstrap() {\n    const jobs = this.schedulerRegistry.getCronJobs();\n    console.log(jobs);\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"可以看到，拿到了我们声明的 task1 的定时任务："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这样看不方便，我们加一下调试配置："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n    "type": "node",\n    "request": "launch",\n    "name": "debug nest",\n    "runtimeExecutable": "npm",\n    "args": [\n        "run",\n        "start:dev",\n    ],\n    "skipFiles": [\n        "<node_internals>/**"\n    ],\n    "console": "integratedTerminal",\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"打个断点："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"把之前的服务停掉，点击 debug 启动："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"代码会在断点处断住："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这样就方便多了。"}),"\n",(0,c.jsx)(n.p,{children:"切换到 debug console 就可以动态执行表达式："}),"\n",(0,c.jsx)(n.p,{children:"比如拿到所有的 interval 定时任务的名字："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"再根据名字拿到具体的 interval 定时任务："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"this.schedulerRegistry.getIntervals()\n\nthis.schedulerRegistry.getInterval('task2')\n"})}),"\n",(0,c.jsx)(n.p,{children:"timeout 和 cron 类型的定时任务也是同理："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"this.schedulerRegistry.getTimeouts();\n\nthis.schedulerRegistry.getTimeout('task3')\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"this.schedulerRegistry.getCronJobs()\n\nthis.schedulerRegistry.getCronJob('task1')\n"})}),"\n",(0,c.jsx)(n.p,{children:"当然，它还有增加和删除定时任务的 api："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"我们来写个具体的案例："}),"\n",(0,c.jsx)(n.p,{children:"把声明的 3 个 task 删掉，再动态添加 3 个："}),"\n",(0,c.jsx)(n.p,{children:"自己创建定时任务，需要安装 cron 的包："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save cron\n"})}),"\n",(0,c.jsx)(n.p,{children:"然后实现下删除定时任务的逻辑："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"onApplicationBootstrap() {\n    const crons = this.schedulerRegistry.getCronJobs();\n    \n    crons.forEach((item, key) => {\n      item.stop();\n      this.schedulerRegistry.deleteCronJob(key);\n    });\n\n    const intervals = this.schedulerRegistry.getIntervals();\n    intervals.forEach(item => {\n      const interval = this.schedulerRegistry.getInterval(item);\n      clearInterval(interval);\n\n      this.schedulerRegistry.deleteInterval(item);\n    });\n\n    const timeouts = this.schedulerRegistry.getTimeouts();\n    timeouts.forEach(item => {\n      const timeout = this.schedulerRegistry.getTimeout(item);\n      clearTimeout(timeout);\n\n      this.schedulerRegistry.deleteTimeout(item);\n    });\n\n    console.log(this.schedulerRegistry.getCronJobs());\n    console.log(this.schedulerRegistry.getIntervals());\n    console.log(this.schedulerRegistry.getTimeouts());\n  }\n"})}),"\n",(0,c.jsx)(n.p,{children:"为什么停掉 CronJob 用 job.stop 而停掉 timeout 和 interval 用 clearTimeout 和 clearInterval 呢？"}),"\n",(0,c.jsx)(n.p,{children:"因为 timeout 和 interval 本来就是基于 setTimeout、setInterval 的原生 api 封装出来的啊！"}),"\n",(0,c.jsx)(n.p,{children:"而 CronJob 则是基于 cron 包。"}),"\n",(0,c.jsx)(n.p,{children:"跑起来试下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm run start:dev\n"})}),"\n",(0,c.jsx)(n.p,{children:"确实没有定时任务执行了："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"当然，还可以动态添加定时任务："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:a,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const job = new CronJob(`0/5 * * * * *`, () => {\n  console.log('cron job');\n});\n\nthis.schedulerRegistry.addCronJob('job1', job);\njob.start();\n\nconst interval = setInterval(() => {\n  console.log('interval job')\n}, 3000);\nthis.schedulerRegistry.addInterval('job2', interval);\n\nconst timeout = setTimeout(() => {\n  console.log('timeout job');\n}, 5000);\nthis.schedulerRegistry.addTimeout('job3', timeout);\n"})}),"\n",(0,c.jsx)(n.p,{children:"这里也可以看出来 CronJob 是基于 cron 包封装的，而 interval 和 timeout 就是用的原生 api。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"跑起来可以看到，定时任务确实都添加成功了。"}),"\n",(0,c.jsx)(n.p,{children:"也就是说，我们可以注入 SchedulerRegistry 来动态增删定时任务。"}),"\n",(0,c.jsxs)(n.p,{children:["案例代码上传了",(0,c.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/schedule-task",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,c.jsxs)(n.h2,{id:"总结",children:["总结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"这节我们学习了定时任务，用到 @nestjs/scheduler 这个包。"}),"\n",(0,c.jsx)(n.p,{children:"主要有 cron、timeout、interval 这  3 种任务。"}),"\n",(0,c.jsx)(n.p,{children:"其中 cron 是依赖 cron 包实现的，而后两种则是对原生 api 的封装。"}),"\n",(0,c.jsx)(n.p,{children:"我们学习了 cron 表达式，还是挺复杂的，当然，你也可以直接用 CronExpression 的一些常量。"}),"\n",(0,c.jsx)(n.p,{children:"此外，你还可以注入 SchedulerRegistery 来对定时任务做增删改查。"}),"\n",(0,c.jsx)(n.p,{children:"定时任务里可以注入 service，来定时执行一些逻辑，在特定业务场景下是很有用的。"})]})}function D(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(W,{...e})}):W(e)}let M=D;D.__RSPRESS_PAGE_META={},D.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F92.%20Nest%20%E7%9A%84%203%20%E7%A7%8D%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"92. Nest 的 3 种定时任务",headingTitle:"92. Nest 的 3 种定时任务",frontmatter:{}}}}]);