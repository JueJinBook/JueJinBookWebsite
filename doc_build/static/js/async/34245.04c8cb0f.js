"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["34245"],{531807:function(e,n,a){e.exports=a.p+"static/image/78b8dd9d854b2721aa444a3e091b5938.deb42d06.webp"},294492:function(e,n,a){e.exports=a.p+"static/image/89f42b711c86d06491d1443c87f2f8f9.c6bbe632.webp"},804140:function(e,n,a){e.exports=a.p+"static/image/cfea6e59caaaa1a744f790ae9c1ffd64.5a14fb34.webp"},647254:function(e,n,a){a.r(n),a.d(n,{default:()=>T});var s=a(552676),r=a(740453);let t=a.p+"static/image/571b7cc60f4590909ab097f719326c0b.365e10e5.gif",o=a.p+"static/image/57dcc627ee73ae6b42b5324acfcd1d04.4c812aec.webp",c=a.p+"static/image/82d8be5be1bf8a62342879e7debb0410.a008f967.webp",i=a.p+"static/image/8e659b9d714ce3e0bb5ae24ab65258ce.d86b89b5.webp",d=a.p+"static/image/25b6197b2d257f26fd99b051dad94ec9.5b5b6974.gif",l=a.p+"static/image/7664acb5012a0d6a77191771f74072a6.c4fb72f9.webp",p=a.p+"static/image/4fb8343c5b4138691aba01f63bd7daa0.6cfa7465.webp",m=a.p+"static/image/e52b3de9279b4523a26be2b0e7372196.2f75a7d3.gif",h=a.p+"static/image/436b32aeec4b9bdd2394f3a0f5d9ad76.a28dfbd8.webp",x=a.p+"static/image/2428b9029612486ef701c1486cde3e53.8f3de0f3.webp",g=a.p+"static/image/4ae9bf53a3013d5b4c45264c7d9b6d6b.1c202f68.gif",j=a.p+"static/image/bcaaaba9c9785e9cb2fcfaf5d9e16b13.a93a28be.webp",u=a.p+"static/image/a48e72075ccbcd018bf8ca9e140b44d6.6d1ec729.webp",f=a.p+"static/image/a58eedc114578ed1952b818364d4c914.a1c4f81f.gif",b=a.p+"static/image/13c7ee8cb4643a27e9bc812642d9ec4e.c3189c71.webp",k=a.p+"static/image/5c04f8791ab818450c46878b30557c34.f616d149.webp",B=a.p+"static/image/179e2a89d699512dac3ad72ebc2d274b.0f7d4933.webp",C=a.p+"static/image/0a514de80075cc8f18decdcdfd50bbe8.964c7eee.gif",v=a.p+"static/image/ac62f9cb08dbd0b20bc9047b6e04b829.e3018361.webp",F=a.p+"static/image/c0708079c925b94a4b195d69a82eb462.9f17dac4.gif",M=a.p+"static/image/9437b8dfc45b5b34788a52a179536aff.517356fa.webp",E=a.p+"static/image/5af873505c767ba836f37441d69301be.f3186fdd.gif",w=a.p+"static/image/d14b1e3973623bcec2d53c4f9df08e1b.ef1eb62d.webp",I=a.p+"static/image/bad7519d762864bd190c5f8cf9d4a877.9301361a.webp",O=a.p+"static/image/a7362933527b5d4e59abd6c8c78c5983.8e6edba7.gif",A=a.p+"static/image/78e5a43ebd27d4eaa2cf156a3a5cde2d.dbfb1ea7.webp";var y=a(804140),N=a(294492),U=a(531807);function P(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"32-图书管理系统图书模块前端开发--图书增删改",children:["32. 图书管理系统：图书模块前端开发--图书增删改",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-图书管理系统图书模块前端开发--图书增删改",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这节我们来写图书新增、修改、删除、详情功能："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们创建一个新的组件："}),"\n",(0,s.jsx)(n.p,{children:"BookManage/CreateBookModal.tsx"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { Button, Form, Input, Modal, message, TextArea } from "antd";\nimport { useForm } from "antd/es/form/Form";\nimport TextArea from "antd/es/input/TextArea";\n\ninterface CreateBookModalProps {\n    isOpen: boolean;\n    handleClose: Function\n}\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 }\n}\n\nexport interface CreateBook {\n    name: string;\n    author: string;\n    description: string;\n    cover: string;\n}\n\nexport function CreateBookModal(props: CreateBookModalProps) {\n\n    const [form] = useForm<CreateBook>();\n\n    const handleOk = async function() {\n\n    }\n\n    return <Modal title="新增图书" open={props.isOpen} onOk={handleOk} onCancel={() => props.handleClose()} okText={\'创建\'}>\n        <Form\n            form={form}\n            colon={false}\n            {...layout}\n        >\n            <Form.Item\n                label="图书名称"\n                name="name"\n                rules={[\n                    { required: true, message: \'请输入图书名称!\' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label="作者"\n                name="author"\n                rules={[\n                    { required: true, message: \'请输入图书作者!\' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label="描述"\n                name="description"\n                rules={[\n                    { required: true, message: \'请输入图书描述!\' },\n                ]}\n            >\n                <TextArea/>\n            </Form.Item>\n            <Form.Item\n                label="封面"\n                name="cover"\n                rules={[\n                    { required: true, message: \'请上传图书封面!\' },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n        </Form>\n    </Modal>\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"创建一个 Modal，包含一个 Form，有 4 个字段：name、author、description、cover。"}),"\n",(0,s.jsx)(n.p,{children:"传入 isOpen 来控制 Modal 开启，handleClose 处理关闭的回调。"}),"\n",(0,s.jsx)(n.p,{children:"在 BookManage/index.tsx 调用下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const [isCreateBookModalOpen, setCraeteBookModalOpen] = useState(false);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"<CreateBookModal isOpen={isCreateBookModalOpen} handleClose={() => {\n    setCraeteBookModalOpen(false);\n}}></CreateBookModal>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:O,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"接下来在 interfaces/index.ts 里添加 /book/create 接口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:I,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export async function create(book: CreateBook) {\n    return await axiosInstance.post('/book/create', {\n        name: book.name,\n        author: book.author,\n        description: book.description,\n        cover: book.cover\n    });\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"然后在 CreateBookModal 组件调用下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const handleOk = async function() {\n    await form.validateFields();\n\n    const values = form.getFieldsValue();\n\n    try {\n        const res = await create(values);\n\n        if(res.status === 201 || res.status === 200) {\n            message.success('创建成功');\n            form.resetFields();\n            props.handleClose();\n        }\n    } catch(e: any) {\n        message.error(e.response.data.message);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"测试下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"添加成功，刷新页面就可以看到新的图书了。"}),"\n",(0,s.jsx)(n.p,{children:"只是这个封面的路径还没上传文件。"}),"\n",(0,s.jsx)(n.p,{children:"我们在 handleClose 的回调里调用下 setState 触发刷新："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样创建成功就会自动刷新列表："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后我们来做一下文件上传："}),"\n",(0,s.jsx)(n.p,{children:"新建 BookManage/Coverupload.tsx"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { InboxOutlined } from "@ant-design/icons";\nimport { message } from "antd";\nimport Dragger, { DraggerProps } from "antd/es/upload/Dragger";\n\ninterface CoverUploadProps {\n    value?: string;\n    onChange?: Function\n}\n\nlet onChange: Function;\n\nconst props: DraggerProps = {\n    name: \'file\',\n    action: \'http://localhost:3000/book/upload\',\n    method: \'post\',\n    onChange(info) {\n        const { status } = info.file;\n        if (status === \'done\') {\n            onChange(info.file.response);\n            message.success(`${info.file.name} 文件上传成功`);\n        } else if (status === \'error\') {\n            message.error(`${info.file.name} 文件上传失败`);\n        }\n    }\n};\n\nconst dragger = <Dragger {...props}>\n    <p className="ant-upload-drag-icon">\n        <InboxOutlined />\n    </p>\n    <p className="ant-upload-text">点击或拖拽文件到这个区域来上传</p>\n</Dragger>\n\nexport function CoverUpload(props: CoverUploadProps) {\n\n    onChange = props.onChange!\n\n    return props?.value ? <div>\n        <img src={\'http://localhost:3000/\' + props.value} alt="封面" width="100" height="100"/>\n        {dragger}\n    </div>: <div>\n        {dragger}\n    </div>\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"用 antd 的 Dragger 组件做拖拽上传。"}),"\n",(0,s.jsx)(n.p,{children:"当拖拽文件过去的时候，会自动上传，然后在 onChange 方法里拿到上传状态来做提示。"}),"\n",(0,s.jsx)(n.p,{children:"我们在 CreateBookModal 里用一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"试下效果："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"封面上传成功。"}),"\n",(0,s.jsx)(n.p,{children:"在服务器 uploads 目录下也可以看到这个文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样，新增图书功能就完成了。"}),"\n",(0,s.jsx)(n.p,{children:"我们继续来做下修改："}),"\n",(0,s.jsx)(n.p,{children:"和新增差不多，创建一个 BookManage/UpdateBookModal.tsx 组件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { Button, Form, Input, Modal, message } from "antd";\nimport { useForm } from "antd/es/form/Form";\nimport TextArea from "antd/es/input/TextArea";\nimport { CoverUpload } from "./CoverUpload";\n\ninterface UpdateBookModalProps {\n    id: number;\n    isOpen: boolean;\n    handleClose: Function\n}\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 }\n}\n\nexport interface UpdateBook {\n    id: number;\n    name: string;\n    author: string;\n    description: string;\n    cover: string;\n}\n\nexport function UpdateBookModal(props: UpdateBookModalProps) {\n\n    const [form] = useForm<UpdateBook>();\n\n    const handleOk = async function() {\n\n    }\n\n    return <Modal title="更新图书" open={props.isOpen} onOk={handleOk} onCancel={() => props.handleClose()} okText={\'更新\'}>\n        <Form\n            form={form}\n            colon={false}\n            {...layout}\n        >\n            <Form.Item\n                label="图书名称"\n                name="name"\n                rules={[\n                    { required: true, message: \'请输入图书名称!\' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label="作者"\n                name="author"\n                rules={[\n                    { required: true, message: \'请输入图书作者!\' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label="描述"\n                name="description"\n                rules={[\n                    { required: true, message: \'请输入图书描述!\' },\n                ]}\n            >\n                <TextArea/>\n            </Form.Item>\n            <Form.Item\n                label="封面"\n                name="cover"\n                rules={[\n                    { required: true, message: \'请上传图书封面!\' },\n                ]}\n            >\n                <CoverUpload></CoverUpload>\n            </Form.Item>\n        </Form>\n    </Modal>\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"和 CreateBookModal 的区别是参数多了个 id。"}),"\n",(0,s.jsx)(n.p,{children:"在页面里引入下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"就是声明一个 isUpdateModalOpen 的 state 来控制弹窗的显示隐藏。"}),"\n",(0,s.jsx)(n.p,{children:"然后声明一个 updateId 的 state 来记录当前更新的 id。"}),"\n",(0,s.jsx)(n.p,{children:"点击图书的编辑按钮的时候，设置 updateId，并打开弹窗。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const [isUpdateBookModalOpen, setUpdateBookModalOpen] = useState(false);\nconst [updateId, setUpdateId] = useState(0);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"<UpdateBookModal id={updateId} isOpen={isUpdateBookModalOpen} handleClose={() => {\n    setUpdateBookModalOpen(false);\n    setName('');\n}}></UpdateBookModal>\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<a href="#" onClick={() => {\n    setUpdateId(book.id);\n    setUpdateBookModalOpen(true);\n}}>编辑</a>\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后在弹窗里根据 id 请求下数据："}),"\n",(0,s.jsx)(n.p,{children:"在 interfaces/index.ts 里加一下接口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export async function detail(id: number) {\n    return await axiosInstance.get(`/book/${id}`);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function query() {\n    if(!props.id) {\n        return;\n    }\n    try{\n        const res = await detail(props.id);\n        const { data } = res;\n        debugger;\n        if(res.status === 200 || res.status === 201) {\n            form.setFieldValue('id', data.id);\n            form.setFieldValue('name', data.name);\n            form.setFieldValue('author', data.author);\n            form.setFieldValue('description', data.description);\n            form.setFieldValue('cover', data.cover);\n        } \n    } catch(e: any){\n        message.error(e.response.data.message);\n    }\n}\n\nuseEffect(() => {\n    query();\n}, [props.id]);\n"})}),"\n",(0,s.jsx)(n.p,{children:"试一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后点击更新按钮时候调用下更新接口："}),"\n",(0,s.jsx)(n.p,{children:"改下 interfaces/index.ts"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export async function update(book: UpdateBook) {\n    return await axiosInstance.put('/book/update', {\n        id: book.id,\n        name: book.name,\n        author: book.author,\n        description: book.description,\n        cover: book.cover\n    });\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"组件里调用下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const handleOk = async function() {\n    await form.validateFields();\n\n    const values = form.getFieldsValue();\n\n    try {\n        const res = await update({...values, id: props.id});\n\n        if(res.status === 201 || res.status === 200) {\n            message.success('更新成功');\n            props.handleClose();\n        }\n    } catch(e: any) {\n        message.error(e.response.data.message);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"试下效果："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"更新成功。"}),"\n",(0,s.jsx)(n.p,{children:"但是我们要手动刷新下页面，因为 name 没变，没触发重新请求："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"改一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"加一个随机数的状态，当这个状态变了就重新请求。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样就好了。"}),"\n",(0,s.jsx)(n.p,{children:"更新功能完成了。"}),"\n",(0,s.jsx)(n.p,{children:"详情也是一样的弹窗，比较简单，和更新差不多，我们就不实现了。"}),"\n",(0,s.jsx)(n.p,{children:"再来实现下删除："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点击按钮按钮的有个二次确认的弹窗，确认后执行删除逻辑："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<Popconfirm\n    title="图书删除"\n    description="确认删除吗？"\n    onConfirm={() => handleDelete(book.id)}\n    okText="Yes"\n    cancelText="No"\n>  \n    <a href="#">删除</a>\n</Popconfirm>\n'})}),"\n",(0,s.jsx)(n.p,{children:"在 interfaces/index.ts 加一下删除接口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export async function deleteBook(id: number) {\n    return await axiosInstance.delete(`/book/delete/${id}`);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"在组件里调用下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function handleDelete(id: number) {\n    try {\n        await deleteBook(id);        \n        message.success('删除成功');\n        setNum(Math.random())\n    } catch(e: any) {\n        message.error(e.response.data.message);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"删除功能完成。"}),"\n",(0,s.jsxs)(n.p,{children:["案例代码上传了",(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/book-management-system-frontend/",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这节我们实现了图书的新增、编辑、删除功能。"}),"\n",(0,s.jsx)(n.p,{children:"用 antd 的 Modal 创建弹窗，在父组件里通过 isOpen 控制显示隐藏，并做 onClose 时的处理。"}),"\n",(0,s.jsx)(n.p,{children:"然后用 antd 的 Dragger 实现了封面图片的上传。"}),"\n",(0,s.jsx)(n.p,{children:"创建图书的弹窗就是输入内容后调用 /book/create 接口。"}),"\n",(0,s.jsx)(n.p,{children:"更新图书的弹窗就是打开弹窗的时候根据 id 查询内容，点更新的时候调用 /book/udpate 接口。"}),"\n",(0,s.jsx)(n.p,{children:"删除的时候用 Popconfirm 组件做下二次确认。"}),"\n",(0,s.jsx)(n.p,{children:"这样，图书模块的前端部分就完成了。"})]})}function _(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}let T=_;_.__RSPRESS_PAGE_META={},_.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F32.%20%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E5%9B%BE%E4%B9%A6%E6%A8%A1%E5%9D%97%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91--%E5%9B%BE%E4%B9%A6%E5%A2%9E%E5%88%A0%E6%94%B9.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"32. 图书管理系统：图书模块前端开发--图书增删改",headingTitle:"32. 图书管理系统：图书模块前端开发--图书增删改",frontmatter:{}}}}]);