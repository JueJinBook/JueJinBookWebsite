"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["60322"],{479837:function(e,n,c){c.r(n),c.d(n,{default:()=>k});var i=c(552676),s=c(740453);let d=c.p+"static/image/a383f303af1f2ca735eeeea97e00267f.2df2ac25.webp",a=c.p+"static/image/f8c571f8a0d6ab8fe23107d9d6cb1ccb.9a4107ce.webp",r=c.p+"static/image/26f25bb5ad762f9572df38186fc60427.60f6fe22.webp",p=c.p+"static/image/d51dd08f227c92f68051f95a355c97ba.c5dc49ec.webp",t=c.p+"static/image/05d64d5cd65d329d2616bcedcd62ee63.da30d8db.webp",l=c.p+"static/image/ac249cb45e4bc0a85172f52d556cbaf0.a617163f.webp",j=c.p+"static/image/0972de77f6c426c866dd1f60df2f0260.691d7780.webp",h=c.p+"static/image/fea3a617a9622661d2973b304c77e0e2.0e6a94fc.webp",x=c.p+"static/image/954d9875e26a56527454aa6e47d6bacd.4396760e.webp",m=c.p+"static/image/9c5e96cf31bc6c3fe8c35b9db8ee31c6.4d576679.webp",o=c.p+"static/image/ffaee5fe2b60c7878583d5ba9254d92c.25bc9f76.webp",b=c.p+"static/image/3ce3db8ed6071a0b6b5b08cce07769a6.38d28415.webp",u=c.p+"static/image/ea7f2c3a4715a7f89aafe0cc3b473a02.a251981a.webp",f=c.p+"static/image/3cf8b6d9f228041292a9748595de9a3c.a1062ab0.webp",g=c.p+"static/image/6d5a668a2c7e00b33952d1460bf0a7f7.fe6d73f7.webp",v=c.p+"static/image/b8631c623c65c4fae9896dbc705d5afa.4e692400.webp",E=c.p+"static/image/f610b2bcc2a324d8017d8102cba1ba56.4e0ae4dc.webp",w=c.p+"static/image/4ad5c60fc7ca6cf60050928ea9a5e56c.a84f4f48.webp",_=c.p+"static/image/e2411ae2b5bc015c53fb40522034bd08.337ca68f.webp";function A(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"21实战案例调试-vite-源码",children:["21.实战案例：调试 Vite 源码",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21实战案例调试-vite-源码",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Vite 这两年比较火，大家应该都接触过它，但很少有人调试过它的源码。而想要深入理解它的原理，调试源码是必不可少的一步。"}),"\n",(0,i.jsx)(n.p,{children:"这节我们就一起来调试下 Vite 的源码。"}),"\n",(0,i.jsx)(n.p,{children:"首先，用 create-vue 创建一个 vite + vue3 的项目："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npm init vue@3\n"})}),"\n",(0,i.jsx)(n.p,{children:"然后进入项目目录，安装依赖。"}),"\n",(0,i.jsx)(n.p,{children:"之后把 vite 的开发服务跑起来："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npm run dev\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:_,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"那么问题来了，vite 跑 dev server 的过程都执行了什么逻辑？"}),"\n",(0,i.jsx)(n.p,{children:"这就要调试源码来找答案了。"}),"\n",(0,i.jsx)(n.p,{children:"创建 .vscode/launch.json 的配置文件，添加一个 npm 类型的调试配置："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:w,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"指定用调试的方式跑 npm run dev："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:E,alt:""})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "name": "Launch via NPM",\n    "request": "launch",\n    "runtimeArgs": [\n        "run-script",\n        "dev"\n    ],\n    "runtimeExecutable": "npm",\n    "console": "integratedTerminal",\n    "skipFiles": [\n        "<node_internals>/**"\n    ],\n    "type": "node"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"其他的都是默认配置，但要指定下 console 为 integratedTerminal，这样会把日志打在我们平时用的那个集成终端里。不然默认是打在这里的："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:v,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"可以在 vite.config.js 这里打个断点："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"因为这个 defineConfig 肯定是被 vite 调用的，我们可以看下 vite 处理配置的代码。"}),"\n",(0,i.jsx)(n.p,{children:"调试的方式跑，代码会在这里断住："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:f,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"往下执行一步，就进入到 vite 源码了，这就是读取配置的相关代码。"}),"\n",(0,i.jsx)(n.p,{children:"但是现在的代码是被编译过的，可读性很差。所以我们要通过 sourcemap 来把它映射到源码再调试。"}),"\n",(0,i.jsx)(n.p,{children:"可以调用栈看到这部分代码是 node_modules/vite/dist/node 下的："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:u,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"去 node_modules 下看了下，并没有 sourcemap："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:b,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"那去哪里找 sourcemap 呢？"}),"\n",(0,i.jsx)(n.p,{children:"这时就只能通过源码 build 了。"}),"\n",(0,i.jsx)(n.p,{children:"从 github 把 vite 下载下来："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone git@github.com:vitejs/vite.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"安装依赖，然后执行 pnpm run build，就可以在每个包下的 dist 目录看到 build 产物："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"默认是没 sourcemap 的，想生成 sourcemap 要改下配置。"}),"\n",(0,i.jsx)(n.p,{children:"vite 是用 rollup 打包的，每个包下都有个 rollup.config.ts 文件，"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:m,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"搜一下 sourcemap，会找到一个 createNodeConfig 的函数，这里就是配置 node 部分的代码是否生成 sourcemap 的地方："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"vite 编译会生成三部分代码，一部分是浏览器里的，也就是 client 目录下的，一部分是 node 跑的，是 esm 的模块，还有一部分是 node 跑的 cjs 的模块。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"上面搜到的就是 node 部分代码的打包配置。"}),"\n",(0,i.jsx)(n.p,{children:"搜一下这个 isProduction，发现当命令行有 --watch 参数的时候，isProduction 就是 false："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"而这个参数只有这个包需要，所以 cd ./packages/vite，然后执行 npm run build --watch"}),"\n",(0,i.jsx)(n.p,{children:"或者更简单一点，直接把 sourcemap 改成 true"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"这时候你就会发现生成的代码有 sourcemap 了！"}),"\n",(0,i.jsx)(n.p,{children:"把这个 dist 目录复制到测试项目的 node_modules/vite 下，覆盖原来的 dist。"}),"\n",(0,i.jsx)(n.p,{children:"然后重新跑调试："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"你会发现调试还是编译后的源码。"}),"\n",(0,i.jsx)(n.p,{children:"但这个文件明明关联了 sourcemap 的："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:r,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"这是为什么呢？"}),"\n",(0,i.jsx)(n.p,{children:"这是因为默认 VSCode Node Debugger 会忽略 node_modules 下的 sourcemap："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:a,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"resolveSourceMapLocations 是配置去哪里找 sourcemap 的，默认把 node_modules 排除了。去掉那行配置即可。"}),"\n",(0,i.jsx)(n.p,{children:"再次调试，你就会发现调试的是 vite 的 ts 源码了！"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"可以调用栈中找到关心的部分打个断点看下对应的逻辑。"}),"\n",(0,i.jsx)(n.p,{children:"至此，我们就成功的调试了 vite 的源码。"}),"\n",(0,i.jsxs)(n.h2,{id:"总结",children:["总结",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"这节我们调试了 vite 的源码。"}),"\n",(0,i.jsx)(n.p,{children:"用 create-vue 创建了 vite+vue3 的项目，然后调试的方式跑 npm run dev，在 vite.config.js 里断住。"}),"\n",(0,i.jsx)(n.p,{children:"但这时候调用栈中的代码是被编译过的 js。"}),"\n",(0,i.jsx)(n.p,{children:"我们把 vite 源码下下来，修改 rollup 配置，build 出带有 sourcemap 的代码。用它覆盖原来的 node_modules 下的 vite 代码。"}),"\n",(0,i.jsx)(n.p,{children:"重新调试，调用栈中就是 sourcemap 之后的 ts 代码。"}),"\n",(0,i.jsx)(n.p,{children:"这样就能愉快的断点调试 vite 源码了。"})]})}function B(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(A,{...e})}):A(e)}let k=B;B.__RSPRESS_PAGE_META={},B.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F21.%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%B0%83%E8%AF%95%20Vite%20%E6%BA%90%E7%A0%81.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"21.实战案例：调试 Vite 源码",headingTitle:"21.实战案例：调试 Vite 源码",frontmatter:{}}}}]);