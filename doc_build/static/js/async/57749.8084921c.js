"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["57749"],{53679:function(e,n,s){s.r(n),s.d(n,{default:()=>j});var i=s(552676),r=s(740453);let d=s.p+"static/image/42d1faf5203be1a94d1fa67b4422d093.85ec99bd.webp",c=s.p+"static/image/9753b97a60a6f493dc76dadf23b3074e.a61802e1.webp",l=s.p+"static/image/b43481216c1134d8ca032de763e015a1.aec6965d.webp",t=s.p+"static/image/960086eddeac16829241bb90d698d014.10a76b90.webp",h=s.p+"static/image/73674acadf7c2349b8e164418f571261.a1b93c14.webp";function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",img:"img",blockquote:"blockquote",pre:"pre",h4:"h4",ol:"ol",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"10vite2-构建项目及原理分析",children:["10.Vite2 构建项目及原理分析",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#10vite2-构建项目及原理分析",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"前言",children:["前言",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Vite"}),"（法语意思是 “快”，发音为 /vit/，类似 veet）是一种全新的前端构建工具。你可以把它理解为一个开箱即用的开发服务器 + 打包工具的组合，但是更轻更快。"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Vite"})," 利用浏览器原生的 ",(0,i.jsx)(n.code,{children:"ES"})," 模块支持和用编译到原生的语言开发的工具（如 esbuild）来提供一个快速且现代的开发体验。在前面的章节我们已经学习过如何用 ",(0,i.jsx)(n.code,{children:"Vite"})," 初始化一个项目。但是很多时候，我们不能只是会用，也要知道为什么要用它，它到底比起 ",(0,i.jsx)(n.code,{children:"Webpack"}),"，有什么优势。"]}),"\n",(0,i.jsx)(n.p,{children:"带着这几个问题，我们开始本章节的学习。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://cn.vitejs.dev",target:"_blank",rel:"noopener noreferrer",children:"Vite 中文文档"})}),"\n",(0,i.jsxs)(n.h2,{id:"es-module",children:["ES module",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#es-module",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules?spm=a2c6h.12873639.0.0.58f832acSuXjmc",target:"_blank",rel:"noopener noreferrer",children:"ES module"})," 是 ",(0,i.jsx)(n.code,{children:"Vite"})," 的核心，我们先来看看 ",(0,i.jsx)(n.code,{children:"ES module"})," 的浏览器支持情况。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["上述图片出自网站：",(0,i.jsx)(n.a,{href:"https://caniuse.com",target:"_blank",rel:"noopener noreferrer",children:"https://caniuse.com"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["可以看到主流浏览器 Edge、Firefox、Chrome、Safari、Opera 的较新版本都已经支持了 ",(0,i.jsx)(n.code,{children:"ES module"}),"，除了万恶的 IE 浏览器。"]}),"\n",(0,i.jsxs)(n.p,{children:["它最大的特点就是在浏览器端直接使用 ",(0,i.jsx)(n.code,{children:"export"})," 和 ",(0,i.jsx)(n.code,{children:"import"})," 的方式进行导入和导出模块，前提必须在 ",(0,i.jsx)(n.code,{children:"script"})," 标签里设置 ",(0,i.jsx)(n.code,{children:"type=module"}),"。大致使用如下所示："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<script type=\"module\">\n  import { name } from './foo.js'\n<\/script>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["上述代码运行时，浏览器会发起 http 请求，请求 http server 托管的 ",(0,i.jsx)(n.code,{children:"foo.js"}),"，在 ",(0,i.jsx)(n.code,{children:"foo.js"})," 内，我们可以使用 ",(0,i.jsx)(n.code,{children:"export"})," 导出模块："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// foo.js\nexport const name = 'Nick'\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"vite-如何利用-es-module",children:["Vite 如何利用 ES module",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vite-如何利用-es-module",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["我们通过 ",(0,i.jsx)(n.code,{children:"Vite"})," 初始化一个 ",(0,i.jsx)(n.code,{children:"vue3-vite"})," 项目，在页面中打开控制台，点击 ",(0,i.jsx)(n.code,{children:"Sources"}),"，如下所示："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["红框内就是引入了 ",(0,i.jsx)(n.code,{children:"type=module"})," 属性，并且 src 引入 ",(0,i.jsx)(n.code,{children:"/src/main.js"}),"，我们打开它如下所示："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"script 标签内的内容如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { createApp } from '/node_modules/.vite/vue.js?v=5f7bc028'\nimport App from '/src/App.vue'\n\ncreateApp(App).mount('#app')\n"})}),"\n",(0,i.jsx)(n.p,{children:"从上述代码我们可以得到一些信息："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"createApp"})," 方法是从 ",(0,i.jsx)(n.code,{children:"http://localhost:3001/node_modules/.vite/vue.js?v=5f7bc028"})," 中获取的。"]}),"\n",(0,i.jsxs)(n.li,{children:["入口页面 ",(0,i.jsx)(n.code,{children:"App.vue"})," 是从 ",(0,i.jsx)(n.code,{children:"http://localhost:3001/src/App.vue"})," 中获取的。"]}),"\n",(0,i.jsxs)(n.li,{children:["通过 ",(0,i.jsx)(n.code,{children:"createApp"})," 方法，将应用挂在到了 ",(0,i.jsx)(n.code,{children:"#app"})," 下。"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"createApp"})," 是 ",(0,i.jsx)(n.code,{children:"Vue 3"})," 新增的 ",(0,i.jsx)(n.code,{children:"API"}),"，它用于创建应用。",(0,i.jsx)(n.code,{children:"Vue 2"})," 时代的创建应用需要将代码通过 ",(0,i.jsx)(n.code,{children:"webpack"})," 工具打包之后才能在浏览器运行，而 Vite 通过 ",(0,i.jsx)(n.code,{children:"ES module"})," 的能力，省去了打包过程，直接在浏览器内通过 ",(0,i.jsx)(n.code,{children:"/node_modules/.vite/vue.js?v=5f7bc028"})," 的形式引入代码。"]}),"\n",(0,i.jsxs)(n.p,{children:["通过 ",(0,i.jsx)(n.code,{children:"webpack"})," 打包实现编译，很难做到按需加载，因为都是静态资源，不管模块代码是否被使用到，都会被打包到 ",(0,i.jsx)(n.code,{children:"bundle"})," 文件里。随着业务量增大，打包后的 ",(0,i.jsx)(n.code,{children:"bundle"})," 随之越来越大。后来为了减小 ",(0,i.jsx)(n.code,{children:"bundle"})," 的体积，开发者们使用 ",(0,i.jsx)(n.code,{children:"import()"})," 的方式实现按需加载的形式，但是被引入的模块依然需要提前打包，后来使用 ",(0,i.jsx)(n.code,{children:"tree shaking"})," 等方式去掉未使用到的代码块。但是上述的努力均没能比 ",(0,i.jsx)(n.code,{children:"Vite"})," 更加优雅，",(0,i.jsx)(n.code,{children:"Vite"})," 可以在需要某个模块的时候动态引入，并且不需要提前打包。要注意的是，目前 ",(0,i.jsx)(n.code,{children:"Vite"})," 这种形式只能用于开发环境，但是就这样已经能大大的提升开发的效率了，这就足够了。"]}),"\n",(0,i.jsxs)(n.h2,{id:"viteconfigjs-常用配置介绍",children:["vite.config.js 常用配置介绍",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#viteconfigjs-常用配置介绍",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["和 ",(0,i.jsx)(n.code,{children:"Vue CLI"})," 初始化项目需要通过 ",(0,i.jsx)(n.code,{children:"vue.config.js"})," 配置一样，",(0,i.jsx)(n.code,{children:"Vite"})," 也需要通过 ",(0,i.jsx)(n.code,{children:"vite.config.js"})," 去配置。当然，你不一定非要配置，但是在需要某些特殊情况的适合，还是需要用到的，学习一下，以备不时之需。"]}),"\n",(0,i.jsxs)(n.p,{children:["我们用上面创建的 ",(0,i.jsx)(n.code,{children:"vue3-vite"})," 作为实践例子，逐一介绍较常见的配置项。"]}),"\n",(0,i.jsxs)(n.h4,{id:"plugins",children:["plugins",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#plugins",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["插件配置，接收一个数组，在数组内执行需要的插件。插件能帮助我们完成很多事情，比如 ",(0,i.jsx)(n.code,{children:"Vite 2"})," 默认通过 ",(0,i.jsx)(n.code,{children:"@vitejs/plugin-vue"})," 支持 ",(0,i.jsx)(n.code,{children:"vue"}),"，书写形式如下所示："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()]  \n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"插件分为两个类型，一个是官方的，一个是社区的："}),"\n",(0,i.jsxs)(n.table,{children:["\n",(0,i.jsxs)(n.thead,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.th,{children:"官方插件"}),"\n",(0,i.jsx)(n.th,{children:"社区插件"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.tbody,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://cn.vitejs.dev/plugins/",target:"_blank",rel:"noopener noreferrer",children:"在线地址"})}),"\n",(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/vitejs/awesome-vite",target:"_blank",rel:"noopener noreferrer",children:"在线地址"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["希望大家也能积极踊跃的参与社区插件的贡献，让 ",(0,i.jsx)(n.code,{children:"Vite"})," 能火起来。"]}),"\n",(0,i.jsxs)(n.h4,{id:"base",children:["base",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#base",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"base"})," 配置项在开发或生产环境服务的 公共基础路径，打完包后在 /dist/index.html 中体现。默认值是 ",(0,i.jsx)(n.code,{children:"/"}),"，我们不妨把值设置成 ",(0,i.jsx)(n.code,{children:"./"}),"，如下所示："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()]  \n  base: './'\n})\n"})}),"\n",(0,i.jsxs)(n.p,{children:["尝试着运行 ",(0,i.jsx)(n.code,{children:"npm run build"}),"，得到打包后的文件如下所示："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:c,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["静态资源的引入形式如上图所示，如果不加 ",(0,i.jsx)(n.code,{children:"./"})," 路径，则在 ",(0,i.jsx)(n.code,{children:"index.html"})," 内，引入的路径就会是绝对路径 ",(0,i.jsx)(n.code,{children:"/xxx/xxx"})," 的形式。通过启动 ",(0,i.jsx)(n.code,{children:"web"})," 服务的形式将 ",(0,i.jsx)(n.code,{children:"index.html"})," 启动，如下所示："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:""})}),"\n",(0,i.jsxs)(n.h4,{id:"resolvealias",children:["resolve.alias",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resolvealias",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"此配置想必大家也不陌生，就是为了方便在组件内部引用文件时，方便书写。配置如下所示："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport path from 'path'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()]  \n  base: './',\n  resolve: {\n    // 别名设置\n    alias: {\n      '@': path.resolve(__dirname, '/src')\n    }\n  }\n})\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Vite 1.0 是需要用 ",(0,i.jsx)(n.code,{children:"/@/"})," ，加斜杠的形式，Vite 2 后，便优化了。"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"resolveextensions",children:["resolve.extensions",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resolveextensions",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["导入文件时，需要省略的扩展名列表，不过官方建议是尽量不要将 ",(0,i.jsx)(n.code,{children:".vue"})," 给省略了。配置如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()]  \n  base: './',\n  resolve: {\n    // 别名设置\n    alias: {\n      '@': path.resolve(__dirname, '/src')\n    },\n    extensions: ['.mjs', '.js', '.ts', '.jsx', '.tsx', '.json'] // 默认值\n  }\n})\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"server",children:["server",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#server",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"该配置内置多种开发时常用的选项，我们通过代码来分析："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()]  \n  base: './',\n  resolve: {\n    // 别名设置\n    alias: {\n      '@': path.resolve(__dirname, '/src')\n    },\n    extensions: ['.mjs', '.js', '.ts', '.jsx', '.tsx', '.json'] // 默认值\n  },\n  server: {\n    // 指定服务器主机名\n    host: '0.0.0.0',\n    // 开发环境启动的端口号\n    port: 3008,\n    // 是否在开发环境下自动打开应用程序\n    open: true,\n    // 代理\n    proxy: {\n      '/api': {\n        target: 'http://jsonplaceholder.typicode.com',\n        changeOrigin: true,\n        rewrite: (path) => path.replace(/^\\/api/, '')\n      }\n    }\n  }\n})\n"})}),"\n",(0,i.jsxs)(n.p,{children:["和 ",(0,i.jsx)(n.code,{children:"webpack-dev-server"})," 的配置相差不大，同学们几乎可以无缝对接。"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"文档最近更新时间：2022 年 9 月 20 日。"}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}let j=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["Vue3%20%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%2F10.Vite2%20%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%8F%8A%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"ES module",id:"es-module",depth:2},{text:"Vite 如何利用 ES module",id:"vite-如何利用-es-module",depth:4},{text:"vite.config.js 常用配置介绍",id:"viteconfigjs-常用配置介绍",depth:2},{text:"plugins",id:"plugins",depth:4},{text:"base",id:"base",depth:4},{text:"resolve.alias",id:"resolvealias",depth:4},{text:"resolve.extensions",id:"resolveextensions",depth:4},{text:"server",id:"server",depth:4}],title:"10.Vite2 构建项目及原理分析",headingTitle:"10.Vite2 构建项目及原理分析",frontmatter:{}}}}]);