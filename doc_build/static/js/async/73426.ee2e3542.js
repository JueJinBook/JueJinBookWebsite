"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["73426"],{687662:function(e,n,a){a.r(n),a.d(n,{default:()=>d});var i=a(552676),l=a(740453);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h3:"h3",h4:"h4",pre:"pre",code:"code",img:"img",blockquote:"blockquote"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"49相册文件夹管理",children:["49.相册文件夹管理",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#49相册文件夹管理",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在小程序端创建一个相册/文件夹，需要考虑三个方面，一是相册/文件夹在云存储里是怎么创建的；二是相册/文件夹在数据库里的表现形式；三是小程序端页面应该怎么交互才算是创建了一个相册/文件夹。将小程序端要展示的交互界面（功能）转化为函数的逻辑（含API）与以不同形式存储的数据类型是应用开发的核心。"}),"\n",(0,i.jsxs)(n.h3,{id:"771-相册文件夹的表现形式",children:["7.7.1 相册文件夹的表现形式",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#771-相册文件夹的表现形式",children:"#"})]}),"\n",(0,i.jsxs)(n.h4,{id:"1相册文件夹在数据库里的表现形式",children:["1、相册/文件夹在数据库里的表现形式",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1相册文件夹在数据库里的表现形式",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"尽管相册/文件夹在小程序端的页面交互看来非常复杂，但是它在数据库的形式看起来却非常简单，根据前面的数据库设计，创建一个相册/文件夹在数据库里只是把该相册/文件夹的名称更新到该用户在数据库的记录对应的字段（albumName、folderName）里："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'"albums": [  \n  {\n    "albumName": "风景", \n    "photos": [ ]\n  },\n  {\n    "albumName": "家庭", \n    "photos": [ ]\n  }\n],\n"folders": [  \n  {\n    "folderName": "工作周报",\n    "files": [ ]\n  },\n  {\n    "folderName": "电子书", \n    "files": [ ]\n  }\n]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["将UI交互里的元素比如分类、标题、图标、图片、时间、标签、按钮等等，能够转化为数据库的集合、记录、字段以及字段数据类型的设计是开发项目非常关键的一步。\n",(0,i.jsx)(n.img,{src:"https://i.hackweek.org/img//7/albumfolder.jpg",alt:"相册文件夹在数据库的表现形式"})]}),"\n",(0,i.jsxs)(n.h4,{id:"2云存储的二级目录",children:["2、云存储的二级目录",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2云存储的二级目录",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["在云存储里应该怎样创建一个二级目录呢？我们可以在调用",(0,i.jsx)(n.code,{children:"wx.cloud.uploadFile"}),"接口时在cloudPath的前面加一个文件路径就可以了，比如："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const cloudPath = `cloudbase/${Date.now()}-${Math.floor(Math.random(0, 1) * 1000)}` + filePath.match(/.[^.]+?$/)[0]\n"})}),"\n",(0,i.jsx)(n.p,{children:"也就是说直接在cloudPath里添加二级目录即可，这段代码会自动在云存储里创建一个cloudbase的二级目录，不必手动创建。"}),"\n",(0,i.jsx)(n.p,{children:"不过相册小程序可能使用的用户会比较多，如果是使用用户创建的相册/文件夹名称来作为云存储的二级目录存在两个问题，一是不推荐使用中文名称（文件目录和文件名），二是可能用户创建的名称会重复。比较好的方式是使用用户的openID作为云存储的二级目录名来区分不同用户，而用户在小程序端创建的文件夹和相册名称可以不必体现在云存储的文件结构上（也可以体现，但非必要），也就是说一个用户所有的照片、文件可以都放在一个文件夹里。而且存储在云存储的相册名、文件名也建议修改为时间戳、随机数构成的名称。"}),"\n",(0,i.jsx)(n.p,{children:"用户在小程序端创建的相册/文件夹（文件结构、名称），无论是在数据库还是在云存储的文件夹结构上并没有直接的体现。哪个用户创建了哪些相册/文件夹以及每个相册/文件夹里都有一些什么文件，都是使用数据库来进行联系和管理的。"}),"\n",(0,i.jsxs)(n.h3,{id:"772-相册文件夹的渲染",children:["7.7.2 相册/文件夹的渲染",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#772-相册文件夹的渲染",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"前面我们已经在folder.js通过数据库请求的方式获取了相册/文件夹的数据UserData（也就是该用户在集合里的整个记录），并把userData赋值给了app.js的全局对象globalData。在渲染数据到页面之前，我们可以使用云开发控制台数据库标签页里的高级操作往数据库里添加一些假数据。"}),"\n",(0,i.jsx)(n.p,{children:"要将数据渲染到页面，首先我们要善于通过打印的方式来了解到底有没有返回数据，返回了哪些数据，返回的数据是什么结构、什么类型的，尤其是文档型数据库，它返回的数据有多层嵌套，处理数据时要勤于打印，不能乱猜乱蒙。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://i.hackweek.org/img//7/WX20200908-084625@2x.png",alt:"获取到的数据结果"})}),"\n",(0,i.jsxs)(n.p,{children:["比如这里的userData就是一个数组Array，通过符号的",(0,i.jsx)(n.code,{children:"[]"}),"以及展开的数据结构就能了解，而在folder页面要渲染的是userData数组第一项里的folders数组里的值，folder.wxml页面的渲染代码如下："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<block wx:for="{{userData[0].folders}}" wx:for-item="folder" wx:key="item">\n    <view>文件名：{{folder.folderName}}</view>\n    <view>文件夹内文件数量：{{folder.files.length}}</view>\n</block>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["而相册album和文件夹folder在数据渲染的处理方式是一样的，只是在UI设计的外观（CSS）和交互（事件处理）上有所不同。这里的",(0,i.jsx)(n.code,{children:"folder.files.length"}),"用到的是JavaScript的Aarray的属性。"]}),"\n",(0,i.jsx)(n.p,{children:"由于数据库里是没有数据的，所以小程序端页面渲染是空白的，不过我们借助于JavaScript函数、数据库脚本或云开发控制台等方式就能往数据库里添加一些模拟的“假数据”，比如我们在云开发控制台的数据库标签页里的高级操作脚本执行如下代码："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'db.collection(\'clouddisk\').where({\n  //注意由于管理端（如云开发控制台）没有用户的登录态，所以不能使用\'{openid}\'，可以使用_id或填写自己的openid\n  _openid:\'oUL-m5FuRmuVmxvbYOGuXbuEDsn8\' //换成自己的openid\n})\n.update({\n  data:{\n    "albums": [{\n      "albumName": "风景", \n      "photos": [ ]\n      }],\n    "folders": [{\n      "folderName": "工作周报",\n      "files": []  //空文件夹，只有文件夹名\n    },\n    {\n      "folderName": "电子书", \n      "files": [{   //有两个文件\n        "name": "傲慢与偏见",  \n        "fileID": "", \n        "comments": "中英双语版"\n      },{\n        "name": "史记",  \n        "fileID": "",\n        "comments": "史圣司马迁，二十四史之首"\n      }]\n    }]\n  }\n})\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"773-ui交互与相册文件夹的创建",children:["7.7.3 UI交互与相册/文件夹的创建",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#773-ui交互与相册文件夹的创建",children:"#"})]}),"\n",(0,i.jsxs)(n.h4,{id:"1ui交互与weui组件",children:["1、UI交互与WeUI组件",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1ui交互与weui组件",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"尽管从开发的角度讲，我们可以直接往数据库里添加数据并渲染到前端，不过对于用户而言，在小程序端除了需要使用CSS美化页面以外，还需要一定的交互。比如在创建文件夹时，我们希望通过点击一个button按钮，弹出一个新建文件夹窗口，我们在这个窗口里输入文件夹名称，点击“确定”就可以创建文件夹，创建文件夹之后，这个弹出的窗口自动关闭。"}),"\n",(0,i.jsx)(n.p,{children:"这些交互我们可以通过JavaScript来控制WeUI封装好的组件、小程序API等来完成，"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'//在folder.wxml里输入以下代码\n<button bindtap="showDialog">新建文件夹</button>\n<mp-dialog title="新建文件夹" show="{{dialogShow}}" bindbuttontap="createFolder" buttons="{{buttons}}">\n  <input name="name" placeholder=\'请输入文件夹名\' auto-focus value=\'{{inputValue}}\' bindinput=\'keyInput\'></input>\n</mp-dialog>\n\n//在folder.json里引入WeUI封装的一些组件，你可以视情况将没有用到的部分组件给删掉\n{\n  "usingComponents": {\n    "mp-cells": "/weui-miniprogram/cells/cells",\n    "mp-cell": "/weui-miniprogram/cell/cell",\n    "mp-slideview": "/weui-miniprogram/slideview/slideview",\n    "mp-dialog": "/weui-miniprogram/dialog/dialog",\n    "mp-form": "/weui-miniprogram/form/form",\n    "mp-toptips": "/weui-miniprogram/toptips/toptips"\n  },\n  "navigationBarTitleText": "文件夹列表"\n}\n\n//在folder.js里输入以下代码\nPage({\n  data: {\n    userData:[],\n    dialogShow:false,\n    showOneButtonDialog: false,\n    buttons: [{text: \'取消\'}, {text: \'确定\'}],\n    oneButton: [{text: \'确定\'}],\n    inputValue:""\n  },\n  onLoad: function (options) {\n  },\n  showDialog(){\n    this.setData({\n      dialogShow:true\n    })\n  },\n'})}),"\n",(0,i.jsx)(n.p,{children:"通过前面的分析可知，在小程序端创建相册/文件夹，只需要更新数据库的字段，而不需要操作云存储，我们来看具体的代码实现。"}),"\n",(0,i.jsxs)(n.h4,{id:"2使用push更新操作符",children:["2、使用push更新操作符",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2使用push更新操作符",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在folde.js里输入以下代码，首先我们需要获取input里面输入的文件名，然后将文件名使用数组更新指令push到数据库的folders字段，这就相当于创建了一个文件夹了："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'  keyInput(e) {\n    this.setData({ inputValue: e.detail.value })\n  },\n\n  async createFolder(e){\n    const folderName = this.data.inputValue\n    if(e.detail.index === 0){\n      this.setData({\n        dialogShow:false\n      })\n    }else{\n      this.setData({\n        dialogShow:false\n      })\n      const result = await db.collection("clouddisk").where({\n        _openid:\'{openid}\'\n      })\n      .update({\n        data:{\n          folders:_.push([{"folderName":folderName,files:[]}])\n        }\n      })\n      console.log("数据更新结果",result)\n      wx.reLaunch({\n        url: \'/pages/folder/folder\'\n      })\n    }\n  },\n})\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["每个用户都会在数据库里创建一个记录，而在对数据库进行增删改查时，我们都会使用",(0,i.jsx)(n.code,{children:".where({_openid:'{openid}'})"}),"让用户只能操作属于自己的那条记录，所以用户只能看到自己创建的相册/文件夹，也只能对创建的相册/文件夹有操作权限，用户与用户之间不会出现冲突。这种数据库的设计只适用于网盘这种对权限有要求的场景，如果你希望用户A上传的相册/文件夹能被其他用户看到（查询），或用户B能够操作（增加或删除）用户A上传的相册/文件夹，就需要调整一下权限了。"]}),"\n"]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let d=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F49.%E7%9B%B8%E5%86%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E7%AE%A1%E7%90%86.md"]={toc:[{text:"7.7.1 相册文件夹的表现形式",id:"771-相册文件夹的表现形式",depth:3},{text:"1、相册/文件夹在数据库里的表现形式",id:"1相册文件夹在数据库里的表现形式",depth:4},{text:"2、云存储的二级目录",id:"2云存储的二级目录",depth:4},{text:"7.7.2 相册/文件夹的渲染",id:"772-相册文件夹的渲染",depth:3},{text:"7.7.3 UI交互与相册/文件夹的创建",id:"773-ui交互与相册文件夹的创建",depth:3},{text:"1、UI交互与WeUI组件",id:"1ui交互与weui组件",depth:4},{text:"2、使用push更新操作符",id:"2使用push更新操作符",depth:4}],title:"49.相册文件夹管理",headingTitle:"49.相册文件夹管理",frontmatter:{}}}}]);