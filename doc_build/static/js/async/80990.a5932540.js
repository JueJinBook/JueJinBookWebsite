"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["80990"],{835250:function(e,n,s){s.r(n),s.d(n,{default:()=>C});var i=s(552676),r=s(740453);let c=s.p+"static/image/88bdd44dc45cae8dcfb6fda9aee53cd4.edc61bf2.webp",d=s.p+"static/image/7fd8eb72f1d3a50faf3f7e354456e541.b2ac0aa8.webp",l=s.p+"static/image/99d55fe0d4b2326e04dd6df87d77b56c.aaec956c.webp",a=s.p+"static/image/15bb39539b455b99a0765a754019dac0.5d6f2068.webp",h=s.p+"static/image/0e35ca702a4ba354151d1b4cab67888f.de9e5134.webp",o=s.p+"static/image/147c8f25d47142eace0ba13a30adbeca.894e240c.webp",t=s.p+"static/image/de52af46db15f59d6c395bde24c5e4a6.c4ba6a4a.webp",j=s.p+"static/image/8824c368429b818c9cc308b29e26259f.8bbc7af9.webp",x=s.p+"static/image/e49d26e3f6716bc5e062ed37d91712f6.b396918c.webp",p=s.p+"static/image/2a3d13e42d8340cd73bd0bb55389fdff.e1c92acd.webp",m=s.p+"static/image/2d5ff01cf83d5ff05ae6933cac1ff165.c3a7b760.webp",g=s.p+"static/image/5c64376c0758878ec6276faefd9215e7.a1b87d65.webp",f=s.p+"static/image/9a5e216e784b9b1755fcc0f057269660.d1b6fa8e.webp",b=s.p+"static/image/fc6897f7a4190719a6d7ce49dd97adf3.8011c701.webp";function u(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",img:"img",ol:"ol",li:"li",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"24-chrome翻译插件实战--2-快速项目搭建",children:["24-Chrome翻译插件实战 ｜ 2. 快速项目搭建",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24-chrome翻译插件实战--2-快速项目搭建",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"本章我们将从零开始搭建翻译助手浏览器插件项目，并完成设置页面的实现。通过 Cursor 的 Yolo 模式，我们可以快速完成项目初始化和基础功能开发，大大提高开发效率。本文将详细介绍从项目搭建、页面开发到打包测试的完整流程，帮助你掌握浏览器插件开发的基本技能。"}),"\n",(0,i.jsxs)(n.h2,{id:"使用-yolo-模式快速初始化项目",children:["使用 Yolo 模式快速初始化项目",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-yolo-模式快速初始化项目",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["项目开始前，我们可以打开 Cursor 的 Yolo 模式。这样 Cursor 会自动完成整个初始化过程，我们几乎不需要参与。设置路径是：",(0,i.jsx)(n.code,{children:"Cursor"})," -> ",(0,i.jsx)(n.code,{children:"首选项"})," -> ",(0,i.jsx)(n.code,{children:"Cursor Settings"})," -> ",(0,i.jsx)(n.code,{children:"Features"})," -> ",(0,i.jsx)(n.code,{children:"Yolo"}),"。"]}),"\n",(0,i.jsx)(n.p,{children:"建议在禁止命令中添加 rm 命令，因为之前曾发生过误删整个项目的情况。这也是我们一直强调版本控制重要性的原因。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"接下来，我们需要："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'打开实现步骤文档，选中"阶段一：基础架构搭建"部分'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"使用 Command + i 快捷键，将选中内容添加到右侧聊天窗口"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["选择 Agent 模式，推荐使用 ",(0,i.jsx)(n.code,{children:"Claude 3.7 Sonnet"})," 或 ",(0,i.jsx)(n.code,{children:"Claude 3.5 Sonnet"})," 模型"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"输入简单提示词："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"根据 @需求文档.md @技术方案.md 完成阶段一：基础架构搭建\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"初始化过程中，你可能需要确认一些信息，按提示操作即可。整个过程很少需要人工干预。"}),"\n",(0,i.jsx)(n.p,{children:"下图展示了初始化完成后的项目目录结构和 Cursor 给出的总结："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,i.jsxs)(n.h2,{id:"实现翻译助手的设置功能",children:["实现翻译助手的设置功能",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实现翻译助手的设置功能",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"完成基础架构后，我们开始实现设置页面："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'打开实现步骤文档，选中"阶段二：设置管理与设置页面"部分'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"使用 Command + i 快捷键，将内容添加到聊天窗口"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"根据页面与功能的关联关系，将相关页面文件和模块文件拖到聊天窗口中"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"等待 Cursor 完成任务"}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"打包浏览器插件",children:["打包浏览器插件",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#打包浏览器插件",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Cursor 完成代码编写后，我们需要将项目打包成 Chrome 浏览器插件格式。"}),"\n",(0,i.jsxs)(n.p,{children:["虽然可以直接用 ",(0,i.jsx)(n.code,{children:"npm run build"})," 命令打包，但建议先让 Cursor 帮我们完成这个任务。如果打包过程出现错误，Cursor 会自动修复。"]}),"\n",(0,i.jsx)(n.p,{children:"打包步骤："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["准备一个图片作为插件图标，命名为 ",(0,i.jsx)(n.code,{children:"icon.png"})," 并放到项目根目录（icon 是 Chrome 浏览器插件的必须文件）"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"在 Cursor 聊天窗口输入提示词，并将图标拖入输入框："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:" 打包文件需要上传 Chrome 浏览器进行测试，icon 请使用 @icon.png\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["打包完成后，项目根目录下会生成 ",(0,i.jsx)(n.code,{children:"dist"})," 文件夹，里面包含所有打包文件。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,i.jsxs)(n.h2,{id:"在-chrome-中安装和测试插件",children:["在 Chrome 中安装和测试插件",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#在-chrome-中安装和测试插件",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"安装步骤："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["在 Chrome 浏览器打开 ",(0,i.jsx)(n.code,{children:"chrome://extensions/"})," 页面"]}),"\n",(0,i.jsx)(n.li,{children:'点击"加载已解压的扩展程序"按钮'}),"\n",(0,i.jsxs)(n.li,{children:["选择项目根目录下的 ",(0,i.jsx)(n.code,{children:"dist"})," 文件夹（不需要压缩，直接选择即可）"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"安装完成后，你可以在 Chrome 扩展程序列表中看到我们的插件。插件名称和描述是 Cursor 在打包时自动提取的项目信息。如需修改，可以在聊天窗口中提示 Cursor 帮忙调整。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,i.jsxs)(n.h2,{id:"测试翻译助手设置页面",children:["测试翻译助手设置页面",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试翻译助手设置页面",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"现在我们来测试插件功能："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["打开 Chrome 浏览器，找一个英文网页（我们主要测试英译中功能），我的测试用网页：",(0,i.jsx)(n.a,{href:"https://article.arunangshudas.com/how-do-you-monitor-a-node-js-application-in-production-7a14cfc41367",title:"https://article.arunangshudas.com/how-do-you-monitor-a-node-js-application-in-production-7a14cfc41367",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.code,{children:"https://article.arunangshudas.com/how-do-you-monitor-a-node-js-application-in-production-7a14cfc41367"})})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'点击浏览器地址栏右侧的"扩展程序"图标，然后点击"DeepSeek翻译助手"'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"首先会打开翻译助手主页面。虽然我们只计划先做设置页面，但 Cursor 也已经帮我们实现了主页面"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'点击"设置"按钮，进入设置页面'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"在设置页面中，我们可以看到实现的功能与之前设计的布局很接近，但还有一些细节需要调整"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["输入 DeepSeek API Key 后，设置成功保存（获取 API Key 的方法请参考之前文章 ",(0,i.jsx)(n.a,{href:"/",children:"TODO"}),"）"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,i.jsxs)(n.h2,{id:"总结与展望",children:["总结与展望",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结与展望",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在本章中，我们成功完成了翻译助手浏览器插件的基础架构搭建和设置页面实现。通过 Cursor 的 Yolo 模式，我们大大简化了开发流程，让 AI 辅助我们完成了大部分代码编写工作。"}),"\n",(0,i.jsx)(n.p,{children:"我们的主要成果包括："}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"使用 Yolo 模式快速初始化项目架构"}),"\n",(0,i.jsx)(n.li,{children:"实现了设置页面，支持 DeepSeek API Key 的配置和保存"}),"\n",(0,i.jsx)(n.li,{children:"完成了插件打包和安装流程"}),"\n",(0,i.jsx)(n.li,{children:"初步测试了插件的基本功能"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"目前我们已经完成了设置页面的实现，但还不能测试翻译功能。在下一章中，我们将继续开发翻译功能模块，实现网页内容的实时翻译，并优化用户体验。通过这个项目，你将全面掌握浏览器插件开发的完整流程和技巧。"})]})}function E(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}let C=E;E.__RSPRESS_PAGE_META={},E.__RSPRESS_PAGE_META["Cursor%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%EF%BC%9AAI%20%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%99%BA%E8%83%BD%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%2F24-Chrome%E7%BF%BB%E8%AF%91%E6%8F%92%E4%BB%B6%E5%AE%9E%E6%88%98%20%EF%BD%9C%202.%20%E5%BF%AB%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA.md"]={toc:[{text:"使用 Yolo 模式快速初始化项目",id:"使用-yolo-模式快速初始化项目",depth:2},{text:"实现翻译助手的设置功能",id:"实现翻译助手的设置功能",depth:2},{text:"打包浏览器插件",id:"打包浏览器插件",depth:2},{text:"在 Chrome 中安装和测试插件",id:"在-chrome-中安装和测试插件",depth:2},{text:"测试翻译助手设置页面",id:"测试翻译助手设置页面",depth:2},{text:"总结与展望",id:"总结与展望",depth:2}],title:"24-Chrome翻译插件实战 ｜ 2. 快速项目搭建",headingTitle:"24-Chrome翻译插件实战 ｜ 2. 快速项目搭建",frontmatter:{}}}}]);