"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["50469"],{524563:function(e,n,i){i.r(n),i.d(n,{default:()=>V});var c=i(552676),d=i(740453);let r=i.p+"static/image/5fdb0ac62ee3f9674a14d14340bbd5f7.69d0130d.gif",s=i.p+"static/image/b5fd3658f0d97777d2bea85e2a396fed.7e3ac4bd.webp",o=i.p+"static/image/26469e40439fbadf93a823f50a8c8d97.44b3c16b.gif",l=i.p+"static/image/01d92380c6b918278b27258546eb24dc.1138f20a.gif",h=i.p+"static/image/737eaf87c00bde8458e74dc04f863741.06f4b709.gif",x=i.p+"static/image/927507d0d1f0979a5a11c79e9e4e2712.e40eb8a5.gif",t=i.p+"static/image/ec6faa921db828d6d50a8cfe4af69bb3.c928346d.webp",j=i.p+"static/image/c7b1f252ebbe1e42cd4ecfed030a8ec8.8c2ccd94.webp",a=i.p+"static/image/45735ee06780c4a3b9d1fc2a4fcc4d95.1bc10d94.gif",p=i.p+"static/image/c3c4dedb1e8bf39c61ae1a642d3a183f.50808dfb.gif",b=i.p+"static/image/0070e65f20548f766d07646a96d6a8c1.4de907b8.gif",g=i.p+"static/image/36ba212969bb493fe68f44b5bb3229e0.73c24e58.webp",w=i.p+"static/image/8d229501ba5e66f39509c3971502b1c7.3ccba652.webp",v=i.p+"static/image/716e951e2368899d5e77407ae578291d.74cfef6b.webp",m=i.p+"static/image/1fae57c6d528325c288c2182fda70ad4.226ba71f.webp",f=i.p+"static/image/565b81d92d1a1bf664d27c25a87bbe3c.e0c595a6.webp",u=i.p+"static/image/a7030a3a759e73eb3b7903ee5d57609e.e9637fd7.webp",k=i.p+"static/image/70f0fdc0ce62f382d4acc649e86e6482.2a9fe40d.webp",S=i.p+"static/image/8c817e3a004385f11ee52bd9e992cf4d.daddbc42.webp",B=i.p+"static/image/7eca1f2c9ca374751ee3b637323fe394.ed1422ad.webp",N=i.p+"static/image/ad1214db53fa810f6abef2b3ff5a13dd.3b74d9d7.gif",_=i.p+"static/image/e8a044949a065976f034776ce92dc464.ffec6d17.webp",C=i.p+"static/image/432e0f9080c51c2e98ef7b918fecfbd9.41149650.webp",G=i.p+"static/image/4237f958b9f0585c75340b4506181cfa.1b7f0c82.webp",q=i.p+"static/image/3764e7bb5f93a5a23df6cbb352543c9f.0555bb96.webp";function y(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",img:"img",ul:"ul",li:"li",pre:"pre",blockquote:"blockquote",h3:"h3",strong:"strong"},(0,d.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"第41章css的object-view-box",children:["第41章—CSS的object-view-box",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第41章css的object-view-box",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["\uFEFFCSS 为 Web 开发者提供了多种不同",(0,c.jsx)(n.a,{href:"https://juejin.cn/book/7199571709102391328/section/7199845888997457959",target:"_blank",rel:"noopener noreferrer",children:"裁剪图片或元素"}),"的技术，比如 CSS 的 ",(0,c.jsx)(n.code,{children:"clip"})," 、",(0,c.jsx)(n.code,{children:"object-fit"})," 、",(0,c.jsx)(n.code,{children:"image()"})," 和 ",(0,c.jsx)(n.a,{href:"https://juejin.cn/book/7223230325122400288/section/7259668885224456252",target:"_blank",rel:"noopener noreferrer",children:"CSS Clipping（clip-path）与 CSS Masking（mask）"}),"等。除此之外，",(0,c.jsx)(n.a,{href:"https://github.com/WICG/view-transitions/issues/120",target:"_blank",rel:"noopener noreferrer",children:"@Jake Archibald 提出了一个新的功能，即 CSS 的 object-view-box"})," 。它允许你对元素的内容进行缩放或平移，从表现形式上看，它既有点类似于 CSS 的 ",(0,c.jsx)(n.code,{children:"clip-path"})," 属性的表现，又有点类似于带有 ",(0,c.jsx)(n.code,{children:"viewBox"})," 的 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的行为。在这节课中，我将与大家一起探讨 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的使用，它能给 Web 开发者带来哪些便利，Web 开发者在使用的时候需要注意哪些细节？"]}),"\n",(0,c.jsxs)(n.h2,{id:"需求与痛苦",children:["需求与痛苦",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#需求与痛苦",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"Web 开发人员经常需要在开发过程中处理图像。有时，在 Web 上的不同部分对图像进行缩放和定位时会令 Web 开发者感到头痛与沮丧，甚至可能会让事情变得更为复杂。如下图所示，有一张较大版本的原始大图，需要在不同的终端（比如笔记本电脑、平板和手机端）上呈现不同区域的图片内容。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:q,alt:"img"})}),"\n",(0,c.jsx)(n.p,{children:"目前，我们可以通过以下方式之一来解决这个问题："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["使用 ",(0,c.jsx)(n.code,{children:"<img>"})," ，并将其放置在一个容器内"]}),"\n",(0,c.jsx)(n.li,{children:"将图片用作背景图，并根据需要调整背景图的位置和大小"}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"先来看第一种解决方案。"}),"\n",(0,c.jsx)(n.p,{children:"假设你的原图如下所示："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:G,alt:"img"})}),"\n",(0,c.jsxs)(n.p,{children:["你需要在 HTML 中把 ",(0,c.jsx)(n.code,{children:"<img>"})," 放置在一个容器中，比如 ",(0,c.jsx)(n.code,{children:"<figure>"})," ："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-HTML",children:'<figure>\n \xa0 \xa0<img src="hero.png" alt="" />\n</figure>\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:"@layer figure {\n \xa0  figure {\n \xa0 \xa0 \xa0  overflow: hidden;\n \xa0 \xa0 \xa0  position: relative;\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0& img {\n \xa0 \xa0 \xa0 \xa0 \xa0  position: absolute;\n \xa0 \xa0 \xa0  }\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0&.desktop {\n \xa0 \xa0 \xa0 \xa0 \xa0  width: 558px;\n \xa0 \xa0 \xa0 \xa0 \xa0  height: 316px;\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0& img {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  left: -3.2%;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  top: -5.7%;\n \xa0 \xa0 \xa0 \xa0 \xa0  }\n \xa0 \xa0 \xa0  }\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0&.tablet {\n \xa0 \xa0 \xa0 \xa0 \xa0  width: 338px;\n \xa0 \xa0 \xa0 \xa0 \xa0  height: 402px;\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0& img {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  top: -1%;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  left: -35%;\n \xa0 \xa0 \xa0 \xa0 \xa0  }\n \xa0 \xa0 \xa0  }\n \xa0 \xa0 \xa0 \xa0&.iphone {\n \xa0 \xa0 \xa0 \xa0 \xa0  width: 262px;\n \xa0 \xa0 \xa0 \xa0 \xa0  height: 372px;\n \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0& img {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  left: -60%;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  top: -5.5%;\n \xa0 \xa0 \xa0 \xa0 \xa0  }\n \xa0 \xa0 \xa0  }\n \xa0  }\n}\n"})}),"\n",(0,c.jsxs)(n.p,{children:["上面示例中，简单的使用 ",(0,c.jsx)(n.code,{children:".desktop"})," 、",(0,c.jsx)(n.code,{children:".tablet"})," 和 ",(0,c.jsx)(n.code,{children:".iphone"})," 来模拟了原图在笔记本电脑、平板和手端端的展示："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:C,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/JjwJoJr",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/JjwJoJr"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["另外一种方式就是将图片当作背景图，通过改变它的位置（",(0,c.jsx)(n.code,{children:"background-position"}),"）来实现："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:"@layer figure {\n \xa0 \xa0figure {\n \xa0 \xa0 \xa0 \xa0overflow: hidden;\n \xa0 \xa0 \xa0 \xa0outline: 4px solid orange;\n \xa0 \xa0 \xa0 \xa0background: var(--bg) no-repeat;\n \xa0 \xa0 \xa0 \xa0background-size: 800 auto;\n \xa0 \xa0\n \xa0 \xa0 \xa0  &.desktop {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0width: 558px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0height: 316px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0background-position: -10px -20px;\n \xa0 \xa0 \xa0  }\n \xa0 \xa0\n \xa0 \xa0 \xa0  &.tablet {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0width: 338px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0height: 402px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0background-position: -100px -10px;\n \xa0 \xa0 \xa0  }\n \xa0 \xa0 \xa0 \xa0\n \xa0 \xa0 \xa0  &.iphone {\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0width: 262px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0height: 372px;\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0background-position: -150px -6px;\n \xa0 \xa0 \xa0  }\n \xa0  }\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:_,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/bGORNON",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/bGORNON"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["这两种方法都可以正常工作。当然，在 CSS 中还存有其他的解决方案，比如 ",(0,c.jsx)(n.code,{children:"clip-path"})," 或 ",(0,c.jsx)(n.code,{children:"mask"})," 之类，但没有一个方案可以像 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 简单和干净。"]}),"\n",(0,c.jsxs)(n.h2,{id:"object-view-box-是什么",children:["object-view-box 是什么？",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#object-view-box-是什么",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.a,{href:"https://w3c.github.io/csswg-drafts/css-images-5/#propdef-object-view-box",target:"_blank",rel:"noopener noreferrer",children:"W3C 规范是这样描述 object-view-box"})," ："]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"object-view-box"})," property specifies a “view box” over an element, similar to the ",(0,c.jsx)(n.code,{children:"<svg viewBox>"})," attribute, zooming or panning over the element’s contents."]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["大致的意思是，CSS 的 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性为元素指定了一个视窗框（View Box），这个视窗框有点类似于 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性，可以对元素的内容进行缩放或平移。也就是说，CSS 的 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性通过指定元素上的一个视窗框来实现元素内容缩放或平移，使我们能够调整位置和缩放，以满足我们的特定需求。"]}),"\n",(0,c.jsxs)(n.p,{children:["简而言之，就像相机镜头可以调整以放大或缩小或在视野之外平移一样，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性允许我们放大元素的特定部分或在元素周围平移以显示元素的不同部分。"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:N,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://2019.wattenberger.com/guide/scaling-svg",target:"_blank",rel:"noopener noreferrer",children:"https://2019.wattenberger.com/guide/scaling-svg"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["注意，上图是调整 ",(0,c.jsx)(n.code,{children:"<svg>"})," 的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 参数的效果。CSS 的 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 与上图有相似的效果。"]}),"\n",(0,c.jsxs)(n.h2,{id:"svg-的-viewbox",children:["SVG 的 viewBox",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#svg-的-viewbox",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:B,alt:"img"})}),"\n",(0,c.jsxs)(n.p,{children:["为了能更好的理解和用好 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性，我们有必要花一点时间来了解一下 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性。这一点非常重要。"]}),"\n",(0,c.jsxs)(n.p,{children:["SVG 中有一空间概念，它可分为 ",(0,c.jsx)(n.code,{children:"viewport"})," 和 ",(0,c.jsx)(n.code,{children:"viewBox"})," 两个部分，你可以把 ",(0,c.jsx)(n.code,{children:"viewport"})," 比作一个相框，而 ",(0,c.jsx)(n.code,{children:"viewBox"})," 比作相片："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:"img"})}),"\n",(0,c.jsxs)(n.p,{children:["正如你所看到的，其中 ",(0,c.jsx)(n.code,{children:"viewport"})," 的大小就是相框的大小，也就是你的眼睛看得到的范围，不管你的相片有多大，你所能看到的就是相框范围内的大小，而 ",(0,c.jsx)(n.code,{children:"viewBox"})," 则是这张照片的大小。如果相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）和照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）一样大的时候，不会有什么问题。可是，当相框比照片小的时候或大的时候，麻烦就来了，即相片放置在相框中要花很多时间去思考，相片在相框中要如何放置才能有一个较好的效果。"]}),"\n",(0,c.jsxs)(n.p,{children:["也就是说，相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）除了能控制照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）的大小之外，还能够控制照片（",(0,c.jsx)(n.code,{children:"viewport"}),"）要如何在相框（",(0,c.jsx)(n.code,{children:"viewBox"}),"）中摆放。"]}),"\n",(0,c.jsxs)(n.p,{children:["上面我们所说的相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）和照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）都是发生在 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素上的，它们分别对应着："]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）由 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素上的 ",(0,c.jsx)(n.code,{children:"width"})," 和 ",(0,c.jsx)(n.code,{children:"height"})," 属性来决定（也可以在 CSS 中定义它的大小）"]}),"\n",(0,c.jsxs)(n.li,{children:["照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）由 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素上的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性决定，它包含了 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 、",(0,c.jsx)(n.code,{children:"<min-y>"})," 、",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 四个参数，即 ",(0,c.jsx)(n.code,{children:'viewBox = "<min-x> <min-y> width height"'})," 。其中 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,c.jsx)(n.code,{children:"<min-y>"})," 用来控制照片要如何在相框中摆放，",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 用来控制照片的大小"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"例如："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="600" height="800" viewBox="0 0 600 800" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="600" height="800" xlink:href="https://picsum.photos/800/600?random=1" />\n</svg>\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:k,alt:"img"})}),"\n",(0,c.jsx)(n.p,{children:"在实际使用的时候，你可能会碰到三种情形："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）与照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）相等"]}),"\n",(0,c.jsxs)(n.li,{children:["相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）比照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）大"]}),"\n",(0,c.jsxs)(n.li,{children:["相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）比照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）小"]}),"\n"]}),"\n",(0,c.jsxs)(n.h3,{id:"相框viewport与照片viewbox相等",children:["相框（viewport）与照片（viewBox）相等",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相框viewport与照片viewbox相等",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["默认情况下，",(0,c.jsx)(n.code,{children:"<svg>"})," 的 ",(0,c.jsx)(n.code,{children:"viewport"})," （相框）和 ",(0,c.jsx)(n.code,{children:"viewBox"})," （照片）是相等的。例如："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsx)(n.p,{children:"相片会很完整的融入到相框中："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/ExGXPPN",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ExGXPPN"})]}),"\n"]}),"\n",(0,c.jsxs)(n.h3,{id:"相框viewport比照片viewbox大",children:["相框（viewport）比照片（viewBox）大",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相框viewport比照片viewbox大",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["假设 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 参数值小于 ",(0,c.jsx)(n.code,{children:"width"})," 和 ",(0,c.jsx)(n.code,{children:"height"})," 属性值时，那么就会出现相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）比照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）大的情形。"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="0 0 400 300" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsxs)(n.p,{children:["上面的代码表示相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）的尺寸是 ",(0,c.jsx)(n.code,{children:"800 x 600"})," ，而照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）的尺寸则是 ",(0,c.jsx)(n.code,{children:"400 x 300"})," 。照片设定的尺寸比相框小，它会在原本的照片上裁剪一小块区域（在这里是 ",(0,c.jsx)(n.code,{children:"400 x 300"}),"），然后再将裁剪出来的区域放大，并且填满相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）的大小，即 ",(0,c.jsx)(n.code,{children:"800 x 600"})," ："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/oNJwxWV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNJwxWV"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["不难发现，照片先按照 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 进行裁剪，相当于得到了一张新的照片，然后新照片会自动放大到填满整个相框。因此，最终看到的效果照片被裁剪且放大了。"]}),"\n",(0,c.jsxs)(n.p,{children:["也就是说，",(0,c.jsx)(n.strong,{children:"当相框（"})," ",(0,c.jsx)(n.code,{children:"viewport"})," ",(0,c.jsxs)(n.strong,{children:["）的尺寸比照片（",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"viewBox"})})}),"）的尺寸更大时，照片（",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"viewBox"})})}),"）会自动尽可能去填满整个相框（",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"viewport"})})}),"）"]}),"。"]}),"\n",(0,c.jsxs)(n.h3,{id:"相框viewport比照片viewbox小",children:["相框（viewport）比照片（viewBox）小",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#相框viewport比照片viewbox小",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["同样的，你可以通过设置 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 参数比它的 ",(0,c.jsx)(n.code,{children:"width"})," 和 ",(0,c.jsx)(n.code,{children:"height"})," 属性值大。这个时候就会出现相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）比照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）小的情形。"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="0 0 1200 900" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsxs)(n.p,{children:["这个时候，它会先把这张照片的底图放大（这里是 ",(0,c.jsx)(n.code,{children:"1200 x 900"}),"），但是图案大小不变，然后再尽可能的将照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）塞入相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）中（这里是 ",(0,c.jsx)(n.code,{children:"800 x 600"}),"）："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/yLGXJYx",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLGXJYx"})]}),"\n"]}),"\n",(0,c.jsxs)(n.h3,{id:"调整照片viewbox的位置",children:["调整照片（viewBox）的位置",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调整照片viewbox的位置",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["前面展示的都是调整照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）尺寸的，其实还可以调整照片的位置，即通过调整 ",(0,c.jsx)(n.code,{children:"<svg>"})," 的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,c.jsx)(n.code,{children:"<min-y>"})," 来调整照片在相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）的位置。"]}),"\n",(0,c.jsxs)(n.p,{children:["例如，我们设置 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 的 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 参数的值为 ",(0,c.jsx)(n.code,{children:"200"})," ，即 ",(0,c.jsx)(n.code,{children:'viewBox = "200 0 800 600"'})," ，那么照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）会向左移动 ",(0,c.jsx)(n.code,{children:"200"})," 个单位："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="200 0 800 600" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/KKbqNvq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/KKbqNvq"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["最终看到的照片变小了，沿着 ",(0,c.jsx)(n.code,{children:"x"})," 轴移出相框（",(0,c.jsx)(n.code,{children:"viewport"}),"）的那 ",(0,c.jsx)(n.code,{children:"200"})," 个单位被裁掉了。"]}),"\n",(0,c.jsxs)(n.p,{children:["同时还可以通过改变 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性的 ",(0,c.jsx)(n.code,{children:"<min-y>"})," 参数，使得照片同时在 ",(0,c.jsx)(n.code,{children:"x"})," 轴和 ",(0,c.jsx)(n.code,{children:"y"})," 轴移动照片："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="200 200 800 600" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsxs)(n.p,{children:["最终照片沿着 ",(0,c.jsx)(n.code,{children:"x"})," 轴向左，沿着 ",(0,c.jsx)(n.code,{children:"y"})," 轴向上，同时移出相框 ",(0,c.jsx)(n.code,{children:"200"})," 个单位，而且这 ",(0,c.jsx)(n.code,{children:"200 x 200"})," 个单位的区域都会被裁掉："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/vYvZrLP",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/vYvZrLP"})]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"​​"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-SVG",children:'<svg width="800" height="600" viewBox="-200 -200 800 600" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n \xa0 \xa0<image \xa0width="800" height="600" xlink:href="https://picsum.photos/id/64/800/600" />\n</svg>\n'})}),"\n",(0,c.jsxs)(n.p,{children:["你会看到照片（",(0,c.jsx)(n.code,{children:"viewBox"}),"）同时沿着 ",(0,c.jsx)(n.code,{children:"x"})," 轴向右和 ",(0,c.jsx)(n.code,{children:"y"})," 轴向下移出相框（",(0,c.jsx)(n.code,{children:"viewport"}),"） ",(0,c.jsx)(n.code,{children:"200"})," 个单位，照片被裁剪了："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/GRPEGyg",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/GRPEGyg"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["在 SVG 中，通过 ",(0,c.jsx)(n.code,{children:"<svg>"})," 元素的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性中的四个参数值，其中 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,c.jsx)(n.code,{children:"<min-y>"})," 控制照片的位移，可以达到裁剪的效果；",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 控制大小，可以达到缩放的效果。不过，",(0,c.jsx)(n.code,{children:"viewBox"})," 实际上影响的是 SVG 的坐标系统，因此呈现给你的视觉效果和你的直觉是相反的。例如，当 ",(0,c.jsx)(n.code,{children:"<min-x>"})," 和 ",(0,c.jsx)(n.code,{children:"<min-y>"})," 越大时，实际上看到的是照片往左上方移动，即左上方区域被裁剪，反之照片则往右下角移动，照片的右下角被裁剪；同样地，当你设定的 ",(0,c.jsx)(n.code,{children:"<width>"})," 和 ",(0,c.jsx)(n.code,{children:"<height>"})," 越大时，实际上看到的照片会缩小，反之则放大。"]}),"\n",(0,c.jsxs)(n.p,{children:["注意，SVG 的 ",(0,c.jsx)(n.code,{children:"viewBox"})," 和坐标系统是一个复杂的知识体系，这方面的知识已经超出这节课的范畴，这里不再过多的阐述，不过你可以使用 ",(0,c.jsx)(n.a,{href:"https://www.sarasoueidan.com/demos/interactive-svg-coordinate-system/index.html",target:"_blank",rel:"noopener noreferrer",children:"@Sara Soueidan 提供的一个 Demo"}),"，切身体验一下 ",(0,c.jsx)(n.code,{children:"viewBox"})," 属性各参数是如何影响 SVG 坐标系统的，视觉上的所看到的效果是哪何变化的："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://www.sarasoueidan.com/demos/interactive-svg-coordinate-system/index.html",target:"_blank",rel:"noopener noreferrer",children:"https://www.sarasoueidan.com/demos/interactive-svg-coordinate-system/index.html"})]}),"\n"]}),"\n",(0,c.jsxs)(n.h2,{id:"如何使用-object-view-box",children:["如何使用 object-view-box",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#如何使用-object-view-box",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["CSS 的 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的使用与 ",(0,c.jsx)(n.a,{href:"https://juejin.cn/book/7223230325122400288/section/7259668885224456252",target:"_blank",rel:"noopener noreferrer",children:"CSS 的 clip-path"})," 有点相似，但 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性只能用于",(0,c.jsx)(n.a,{href:"https://html.spec.whatwg.org/#replaced-elements",target:"_blank",rel:"noopener noreferrer",children:"可替换元素"}),"（Replaced Elements），比如 ",(0,c.jsx)(n.code,{children:"<audio>"})," 、 ",(0,c.jsx)(n.code,{children:"<canvas>"})," 、",(0,c.jsx)(n.code,{children:"<``embed>"})," 、",(0,c.jsx)(n.code,{children:"<``iframe>"})," 、",(0,c.jsx)(n.code,{children:"<``img>"})," 、 ",(0,c.jsx)(n.code,{children:"<input>"})," （",(0,c.jsx)(n.code,{children:"type"})," 属性必须为 ",(0,c.jsx)(n.code,{children:"image"}),"）、",(0,c.jsx)(n.code,{children:"<``object>"})," 和 ",(0,c.jsx)(n.code,{children:"<video>"})," 等。"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"object-view-box"})," 属性可接受的值主要有："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"object-view-box = none | <basic-shape-rect>\n​\n<basic-shape-rect> = <inset()> | <rect()> | <xywh()>\n"})}),"\n",(0,c.jsxs)(n.p,{children:["它的默认值是 ",(0,c.jsx)(n.code,{children:"none"})," ，",(0,c.jsx)(n.code,{children:"object-view-box"})," 不会对元素做任何处理。其次，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的值还可以是 ",(0,c.jsx)(n.code,{children:"inset()"})," 、",(0,c.jsx)(n.code,{children:"rect()"})," 和 ",(0,c.jsx)(n.code,{children:"xywh()"})," 函数，只不过，我们接下来的内容将主要围绕着 ",(0,c.jsx)(n.code,{children:"inset()"})," 函数展开。"]}),"\n",(0,c.jsxs)(n.p,{children:["在介绍 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性如何使用之前，有几个前提条件得先了解。"]}),"\n",(0,c.jsxs)(n.p,{children:["首先，要是设置 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 的元素没有",(0,c.jsx)(n.a,{href:"https://www.w3.org/TR/css-images-3/#natural-width",target:"_blank",rel:"noopener noreferrer",children:"自然宽度"}),"（Natural Width）又没有",(0,c.jsx)(n.a,{href:"https://www.w3.org/TR/css-images-3/#natural-height",target:"_blank",rel:"noopener noreferrer",children:"自然高度"}),"（Natural Height），那么 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 取值为 ",(0,c.jsx)(n.code,{children:"<basic-shape-rect>"})," 时（比如 ",(0,c.jsx)(n.code,{children:"inset()"})," 函数），不会起任何作用，它的表现形式就类似于 ",(0,c.jsx)(n.code,{children:"none"})," 。例如："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-HTML",children:'<div class="container">\n \xa0 \xa0<div class="box"></div>\n</div>\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:".container {\n \xa0  width: 50vw;\n \xa0  aspect-ratio: 21 / 9;\n \xa0  outline: 2px solid #90face;\n \xa0 \xa0\n \xa0  .box {\n \xa0 \xa0 \xa0  width: 100%;\n \xa0 \xa0 \xa0  height: 100%;\n \xa0 \xa0 \xa0  object-view-box: inset(25%);\n \xa0  }\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/KKbqBXx",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/KKbqBXx"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["正如你所看到的，上面示例中的 ",(0,c.jsx)(n.code,{children:".box"})," 元素没有自然宽度和自然高度。如果你将上面示例中的 ",(0,c.jsx)(n.code,{children:"div.box"})," 换成 ",(0,c.jsx)(n.code,{children:"img"})," ，效果则完全不同，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性会为 ",(0,c.jsx)(n.code,{children:"img"})," 元素指定一个视图框，图片将根据运用的 ",(0,c.jsx)(n.code,{children:"inset()"})," 值进行裁剪和放大："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:a,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/NWegBzz",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWegBzz"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["注意，一般情况下，只有可替换元素才具有自然宽度和自然高度，例如示例中的 ",(0,c.jsx)(n.code,{children:"img"})," 元素。"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"object-view-box"})," 属性会根据元素（比如 ",(0,c.jsx)(n.code,{children:"img"})," ）的自然尺寸，将 ",(0,c.jsx)(n.code,{children:"<basic-shape-rect>"})," 解析为一个参考框，以获取元素的视图框（View Box）。比如，上面示例中的图片的自然宽高是 ",(0,c.jsx)(n.code,{children:"1024px x 768px"})," ，",(0,c.jsx)(n.code,{children:"object-view-box"})," 基于该尺寸为元素 ",(0,c.jsx)(n.code,{children:"img"})," 创建了一个 ",(0,c.jsx)(n.code,{children:"1024px x 768px"})," 的视图框："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:"img"})}),"\n",(0,c.jsxs)(n.p,{children:["在此情况之下，元素会被视为具有与视图框宽度和高度相等的自然尺寸。如果元素具有自然的宽高比，那么现在它被视为具有与视图框相同的宽高比。对元素内容的尺寸或位置的进一步调整，比如 ",(0,c.jsx)(n.code,{children:"object-position"})," 或 ",(0,c.jsx)(n.code,{children:"object-fit"})," ，都会在视图框上执行。"]}),"\n",(0,c.jsx)(n.p,{children:"当元素绘制时，其内容会被缩放或平移，以使元素内容相对于视图框的最终大小和位置保持与确定视图框时相同的位置和大小。"}),"\n",(0,c.jsxs)(n.p,{children:["有了这个基础，要理解 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的使用就容易得多。例如 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的值为 ",(0,c.jsx)(n.code,{children:"inset()"})," 函数，你可以使用它来控制四个边缘。它和 ",(0,c.jsx)(n.code,{children:"clip-path"})," 属性的 ",(0,c.jsx)(n.code,{children:"inset()"})," 函数非常相似，可以用来指定元素的 ",(0,c.jsx)(n.code,{children:"top"})," 、",(0,c.jsx)(n.code,{children:"right"})," 、",(0,c.jsx)(n.code,{children:"bottom"})," 和 ",(0,c.jsx)(n.code,{children:"left"})," 属性的值，按照顺序排列。它遵循与 ",(0,c.jsx)(n.code,{children:"padding"})," 和 ",(0,c.jsx)(n.code,{children:"margin"})," 属性相同的语法（TRBL规则），允许接受 ",(0,c.jsx)(n.code,{children:"1 ~ 4"})," 个值："]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["一个值，将表示 ",(0,c.jsx)(n.code,{children:"top"})," 、",(0,c.jsx)(n.code,{children:"right"})," 、",(0,c.jsx)(n.code,{children:"bottom"})," 和 ",(0,c.jsx)(n.code,{children:"left"})," 的值相等"]}),"\n",(0,c.jsxs)(n.li,{children:["两个值，其中第一个值将用于 ",(0,c.jsx)(n.code,{children:"top"})," 和 ",(0,c.jsx)(n.code,{children:"bottom"})," ，第二个值将用于 ",(0,c.jsx)(n.code,{children:"right"})," 和 ",(0,c.jsx)(n.code,{children:"left"})]}),"\n",(0,c.jsxs)(n.li,{children:["三个值，其中第一个值将用于 ",(0,c.jsx)(n.code,{children:"top"})," ，第二个值将用于 ",(0,c.jsx)(n.code,{children:"right"})," 和 ",(0,c.jsx)(n.code,{children:"left"})," ，第三个值将用于 ",(0,c.jsx)(n.code,{children:"bottom"})]}),"\n",(0,c.jsxs)(n.li,{children:["四个值，其中第一个值将用于 ",(0,c.jsx)(n.code,{children:"top"})," ，第二个值将用于 ",(0,c.jsx)(n.code,{children:"right"})," ，第三个值将用于 ",(0,c.jsx)(n.code,{children:"bottom"})," ，第四个值将用于 ",(0,c.jsx)(n.code,{children:"left"})]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:"img"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:".element {\n \xa0 \xa0object-view-box: inset(180px); /* T = R = B = L = 180px */\n}\n​\n.element {\n \xa0 \xa0object-view-box: inset(180px \xa0200px); /* T = B = 180px, R = L = 200px*/\n}\n​\n.element {\n \xa0 \xa0object-view-box: inset(180px 200px 100px); /* T = 180px, R = L = 200px, B = 100px*/\n}\n​\n.element {\n \xa0 \xa0object-view-box: inset(180px 200px 100px 50px); /* T = 180px, R = 200px, B = 100px, L = 50px*/\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/abPwRKR",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/abPwRKR"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["注意，虽然 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 和 ",(0,c.jsx)(n.code,{children:"clip-path"})," 的 ",(0,c.jsx)(n.code,{children:"inset()"})," 函数使用方式相似，但它们最终结果是有本质上的区别的。其中 ",(0,c.jsx)(n.code,{children:"clip-path"})," 只是将图片进行裁剪了，而 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 会先对图片进行裁剪，然后会再对图片进行缩放，并且缩放到与视图框大小相同："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:".object-view-box {\n \xa0 \xa0object-view-box: inset(5% 10% 15% 20%);\n}\n​\n.clip-path {\n \xa0 \xa0clip-path: inset(5% 10% 15% 20%);\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/JjwJmez",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/JjwJmez"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["正如你所看到的，CSS 的 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性的 ",(0,c.jsx)(n.code,{children:"inset()"})," 的值将基于原始图像的宽度和高度，从而产生一个裁剪后的图像。它将帮助我们绘制一个插入式矩形，并控制四个边缘，类似于处理边距（",(0,c.jsx)(n.code,{children:"margin"}),"）或填充（",(0,c.jsx)(n.code,{children:"padding"}),"）。"]}),"\n",(0,c.jsxs)(n.p,{children:["我们在使用可替换元素，比如 ",(0,c.jsx)(n.code,{children:"img"})," ，可能裁剪出来的图像宽高比会与图像自然宽高比不一致。此时又将会发生什么呢？我们通过一个简单的示例来验证，它将会发生什么？例如，我们有三张图片："]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["第一张是 ",(0,c.jsx)(n.code,{children:"800px x 600px"})," ，自然宽高比是 ",(0,c.jsx)(n.code,{children:"4:3"})]}),"\n",(0,c.jsxs)(n.li,{children:["第二张是 ",(0,c.jsx)(n.code,{children:"800px x 800px"})," ，自然宽高比是 ",(0,c.jsx)(n.code,{children:"1:1"})]}),"\n",(0,c.jsxs)(n.li,{children:["第三张是 ",(0,c.jsx)(n.code,{children:"600px x 800px"})," ，自然宽高比是 ",(0,c.jsx)(n.code,{children:"3:4"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["将这三张图片分别裁剪成 ",(0,c.jsx)(n.code,{children:"4:3"})," 、",(0,c.jsx)(n.code,{children:"1:1"})," 和 ",(0,c.jsx)(n.code,{children:"3:4"})," ，并且 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 设置统一的值为 ",(0,c.jsx)(n.code,{children:"inset(25% 20% 15% 0%)"})," ："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:".figure-1 {\n \xa0 \xa0width: 400px;\n \xa0 \xa0aspect-ratio: 4 / 3;\n \xa0 \xa0object-view-box: inset(25% 20% 15% 0%);\n}\n​\n.figure-2 {\n \xa0 \xa0width: 400px;\n \xa0 \xa0aspect-ratio: 1 : 1;\n \xa0 \xa0object-view-box: inset(25% 20% 15% 0%);\n}\n​\n.figure-3 {\n \xa0 \xa0width: 400px;\n \xa0 \xa0aspect-ratio: 3 / 4；\n \xa0 \xa0object-view-box: inset(25% 20% 15% 0%);\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/yLGXQax",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLGXQax"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["不难发现，图片变形了。我们可以在运用 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 的元素上显式设置 ",(0,c.jsx)(n.code,{children:"object-fit"})," 属性的值为 ",(0,c.jsx)(n.code,{children:"cover"})," ，这样就可以避免图形变形："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:"figure img {\n \xa0 \xa0object-view-box: inset(25% 20% 15% 0%);\n \xa0 \xa0object-fit: cover; /* 避免图片变形 */\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/abPwQYb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/abPwQYb"})]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["使用 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 除了可以对图片进行裁剪之外，还可以对图片进行缩放处理。例如："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-CSS",children:"/* Zoomed In*/\n.zoomed-in {\n \xa0 \xa0object-view-box: inset(10%);\n \xa0 \xa0object-fit: cover;\n}\n​\n/* Zoomed Out */\n.zoomed-out {\n \xa0 \xa0object-view-box: inset(-10%);\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:s,alt:"img"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"inset()"})," 值为正值时，图片会放大，反之则缩小。你可以尝试在下面的 Demo 中拖动滑块，它将从视觉上向你呈现 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 是如何对图片进行缩放的。"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:r,alt:"img"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["Demo 地址：",(0,c.jsx)(n.a,{href:"https://codepen.io/airen/full/YzdQRdV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/YzdQRdV"})]}),"\n"]}),"\n",(0,c.jsxs)(n.h2,{id:"小结",children:["小结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["简单地说，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性允许你在不使用额外 HTML 元素或复杂的 CSS 的情况下，实现对可替换元素（例如 ",(0,c.jsx)(n.code,{children:"img"}),"）的裁剪和缩放。它的使用方式和 ",(0,c.jsx)(n.code,{children:"clip-path"})," 属性极其相似，不同之处是，",(0,c.jsx)(n.code,{children:"clip-path"})," 不会对裁剪之后的图像进行缩放，而 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 会在指定的视图框（View Box）对图像进行缩放。"]}),"\n",(0,c.jsxs)(n.p,{children:["如果你使用 ",(0,c.jsx)(n.code,{children:"object-view-box"})," 对可替换元素，比如 ",(0,c.jsx)(n.code,{children:"img"})," 或 ",(0,c.jsx)(n.code,{children:"video"})," 进行裁剪与缩放时，碰到了图形变形的情况之下，可以使用 ",(0,c.jsx)(n.code,{children:"objec-fit: cover"})," 来避免它。"]}),"\n",(0,c.jsxs)(n.p,{children:["另外，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性对于需要在不同情况下以不同方式缩放和定位图像的应用程序非常有用，例如电子商务网站上的交互功能或响应式设计中的图像控制。"]}),"\n",(0,c.jsxs)(n.p,{children:["总之，",(0,c.jsx)(n.code,{children:"object-view-box"})," 属性提供了一种简单且本地的方法来控制元素的图像裁剪和缩放，使开发人员能够更轻松地实现视觉效果和交互功能。"]})]})}function R(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(y,{...e})}):y(e)}let V=R;R.__RSPRESS_PAGE_META={},R.__RSPRESS_PAGE_META["%E7%8E%B0%E4%BB%A3CSS%2F%E7%AC%AC41%E7%AB%A0%E2%80%94CSS%E7%9A%84object-view-box.md"]={toc:[{text:"需求与痛苦",id:"需求与痛苦",depth:2},{text:"object-view-box 是什么？",id:"object-view-box-是什么",depth:2},{text:"SVG 的 viewBox",id:"svg-的-viewbox",depth:2},{text:"相框（viewport）与照片（viewBox）相等",id:"相框viewport与照片viewbox相等",depth:3},{text:"相框（viewport）比照片（viewBox）大",id:"相框viewport比照片viewbox大",depth:3},{text:"相框（viewport）比照片（viewBox）小",id:"相框viewport比照片viewbox小",depth:3},{text:"调整照片（viewBox）的位置",id:"调整照片viewbox的位置",depth:3},{text:"如何使用 object-view-box",id:"如何使用-object-view-box",depth:2},{text:"小结",id:"小结",depth:2}],title:"第41章—CSS的object-view-box",headingTitle:"第41章—CSS的object-view-box",frontmatter:{}}}}]);