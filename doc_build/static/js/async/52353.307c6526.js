"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["52353"],{706820:function(e,i,n){n.r(i),n.d(i,{default:()=>s});var a=n(552676),r=n(740453);function d(e){let i=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ol:"ol",li:"li",img:"img"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i.h1,{id:"19进阶-6api-高可用方案",children:["19进阶 6：API 高可用方案",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#19进阶-6api-高可用方案",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"本小节为可选小节。因为该方案需要有至少两台服务器，没有多台服务器的读者只需要了解即可。"}),"\n",(0,a.jsxs)(i.h2,{id:"方案介绍",children:["方案介绍",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案介绍",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Nginx 自带负载均衡功能，并且当 Nginx 后端某个服务器挂掉后，Nginx 会自动剔除该服务器，将请求转发到可用的服务器，通过这种方式实现了后端 API 服务的高可用（HA）。但是 Nginx 是单点的，如果 Nginx 挂了，后端的所有服务器就都不能访问，所以在实际生产环境中，也需要对 Nginx 做高可用。"}),"\n",(0,a.jsx)(i.p,{children:"Keepalived 是一个高性能的服务器高可用或热备解决方案，Keepalived 主要来防止服务器单点故障的发生问题，可以通过 Keepalived 对前端 Nginx 实现高可用。Keepalived + Nginx 的高可用方案具有如下特点："}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsx)(i.li,{children:"服务功能强大"}),"\n",(0,a.jsx)(i.li,{children:"维护简单"}),"\n"]}),"\n",(0,a.jsxs)(i.h2,{id:"keepalived-简介",children:["Keepalived 简介",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#keepalived-简介",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Keepalived 以 VRRP 协议为基础来实现高可用性。VRRP（Virtual Router Redundancy Protocol，虚拟路由冗余协议）是用于实现路由器冗余的协议，它将两台或多台路由器设备虚拟成一个设备，对外提供虚拟路由器 IP（一个或多个），如下图所示。"}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{src:"https://user-gold-cdn.xitu.io/2018/6/5/163cec3864bd8244?w=2316&h=663&f=png&s=101125",alt:""})}),"\n",(0,a.jsx)(i.p,{children:"在上图中，将 Nginx + Keepalived 部署在两台服务器上，拥有两个真实的 IP（IP1 和 IP2），通过一定的技术（如 LVS）虚拟出一个虚拟 IP（VIP），外界请求通过访问 VIP 来访问服务。在两台 Nginx + Keepalived 的服务器上，同一时间只有一台会接管 VIP（叫做 Master）提供服务，另一台（叫做 Slave）会检测 Master 的心跳，当发现 Master 停止心跳后，Slave 会自动接管 VIP 以提供服务（此时，Slave 变成 Master）。通过这种方式来实现 Nginx 的高可用，通过第 19 节可以知道，Nginx 可以对后台 API 服务器做高可用，这样通过 Nginx + Keepalived 的组合方案就实现了整个 API 集群的高可用。"}),"\n",(0,a.jsxs)(i.h2,{id:"部署",children:["部署",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#部署",children:"#"})]}),"\n",(0,a.jsxs)(i.p,{children:["Keepalived + Nginx 的部署方案网上有很多详细的教程。因为小册篇幅限制，这里不再详细说明，读者如需了解，请参考 ",(0,a.jsx)(i.a,{href:"https://blog.csdn.net/xyang81/article/details/52556886",target:"_blank",rel:"noopener noreferrer",children:"Keepalived+Nginx实现高可用（HA）"}),"。"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,r.ah)(),e.components);return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}let s=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Go%20%E8%AF%AD%E8%A8%80%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%9A%84%20RESTful%20API%20%E6%9C%8D%E5%8A%A1%2F19%E8%BF%9B%E9%98%B6%206%EF%BC%9AAPI%20%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88.md"]={toc:[{text:"方案介绍",id:"方案介绍",depth:2},{text:"Keepalived 简介",id:"keepalived-简介",depth:2},{text:"部署",id:"部署",depth:2}],title:"19进阶 6：API 高可用方案",headingTitle:"19进阶 6：API 高可用方案",frontmatter:{}}}}]);