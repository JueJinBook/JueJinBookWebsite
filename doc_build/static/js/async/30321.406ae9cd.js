"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["30321"],{586701:function(e,n,a){a.r(n),a.d(n,{default:()=>I});var i=a(552676),d=a(740453);let c=a.p+"static/image/27db69cb2e6f22d9fe8febfa69681558.f0914db4.webp",s=a.p+"static/image/d4e5330212df16f61b97ef72cde86437.06bf542a.webp",r=a.p+"static/image/73538b77b8cf4cba5904c94943c177f4.414e783c.webp",h=a.p+"static/image/e974d1194e95ca0154f7a32bc0b04f67.77b77cdc.webp",l=a.p+"static/image/d297d46df4cbc320e5a2d10fcb23219e.db8f7111.webp",t=a.p+"static/image/6cb773de2cddbec72cc90619e74b56ca.24d01e86.webp",x=a.p+"static/image/68b9d4e3555c2c9818dccfc10f365fbf.f19671e1.webp",j=a.p+"static/image/0384350435d6e7e3a6b900c789152115.f0ce928c.webp",p=a.p+"static/image/2a049ee8a3c0888e1fa61214ab4d078b.b2717377.webp",m=a.p+"static/image/798a20121ace293eb6956015cc89a88d.0053c288.webp",o=a.p+"static/image/9f6a9f8fcfb5ba611312d8cf41a1e5e7.60b0248d.webp",b=a.p+"static/image/53bd567d96f8ceda141dff9586a1399e.2b2b03b8.webp",v=a.p+"static/image/7adfedb80eedb8317377c4d1251e2b87.de26e052.webp",g=a.p+"static/image/59d33a76a06423a5c906260394be50d1.16845846.webp",f=a.p+"static/image/a90e0dcf0bf52f3eacb3b0daf276d332.aff911db.webp",E=a.p+"static/image/c6b4bbf95fb69d7753ad52e133a480d7.8b82097f.webp",D=a.p+"static/image/e5688077de836a9d52b5fc0d4d44ef72.9056f326.webp",A=a.p+"static/image/8bc95ff178b06e6feb6469a74fcdbcb4.4ef26bc0.webp",u=a.p+"static/image/9530ec89b9dc2eb1c385691748d6aa49.3309a7fb.webp",M=a.p+"static/image/2568da1145e53592ddfc8a37282f70c0.09419333.webp";function J(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h4:"h4",code:"code",img:"img",pre:"pre",blockquote:"blockquote",ol:"ol",li:"li",ul:"ul"},(0,d.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"14基础运行环境和开发工具准备",children:["14.基础运行环境和开发工具准备",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#14基础运行环境和开发工具准备",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"工欲善其事必先利其器，本章节将会介绍如何搭建 Spring Boot 项目的基础开发环境，包括 JDK 的安装和配置、 Maven 的安装和配置，以及开发工具 IDEA 的安装和基本配置。"}),"\n",(0,i.jsxs)(n.h2,{id:"jdk-安装和配置",children:["JDK 安装和配置",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#jdk-安装和配置",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Spring Boot 2.x 及以上版本要求 Java 8 作为最低版本，因此学习和开发 Spring Boot 2.x 版本项目前需要安装 JDK 8 或者以上版本，而目前大部分公司或者 Java 开发者也依然使用 Java 8，因此笔者选择该版本进行安装及配置。"}),"\n",(0,i.jsxs)(n.h4,{id:"下载安装包",children:["下载安装包",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#下载安装包",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"JDK 的安装包可以在 Oracle 官网免费下载，在下载之前，需要确定所使用电脑的系统信息，这里以 Windows 系统为例。在电脑桌面上用鼠标右击“计算机”/“此电脑”，然后点开属性面板，之后可以在“属性”栏中看到“系统属性”，如果是 64 位操作系统，则需要下载对应的 64 位 JDK 安装包，如果是 32 位操作系统，则需要下载对应的 32 位 JDK 安装包。"}),"\n",(0,i.jsx)(n.p,{children:"打开浏览器，并在地址栏中输入如下地址："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html"})}),"\n",(0,i.jsx)(n.p,{children:"如果还没有 Oracle 官网的账号，则需要注册一个账号，否则无法在 Oracle 官网下载 JDK 安装包。"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:M,alt:""}),"在 JDK 下载页面中看到不同系统的安装包，如下图 2-2 所示，选择适合所使用电脑系统的版本进行下载。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:u,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"这里选择 Windows x64 的 JDK 安装包，下载前需要勾选同意 Oracle 的许可协议，否则是无法下载。"}),"\n",(0,i.jsxs)(n.h4,{id:"安装-jdk",children:["安装 JDK",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装-jdk",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"JDK 安装包下载完成后，双击 “jdk-8u271-windows-x64.exe” 文件进行安装："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:A,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"按照 JDK 安装界面的提示，依次点击“下一步”按钮即可完成安装。"}),"\n",(0,i.jsxs)(n.p,{children:["需要注意的是，此步骤中 JDK 的安装路径，可以选择安装到 C 盘的默认路径，也可以自行更改安装路径，比如笔者将安装路径修改为 ",(0,i.jsx)(n.code,{children:"D:\\Java\\jdk1.8.0_171"}),"，其次是安装过程中将公共 JRE 取消安装，因为 JDK 中已经包含 JRE。安装步骤完成后，可以看到 ",(0,i.jsx)(n.code,{children:"D:\\Java\\jdk1.8.0_171"})," 目录下的文件如下图 2-3 所示，代表 JDK 安装成功。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:D,alt:""})}),"\n",(0,i.jsxs)(n.h4,{id:"配置环境变量",children:["配置环境变量",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置环境变量",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"安装成功后，还需要配置 Java 的环境变量，步骤如下："}),"\n",(0,i.jsx)(n.p,{children:"在电脑桌面上用鼠标右击“计算机”/“此电脑”，然后点开属性面板，点击“高级系统设置”，在弹出的“系统属性”面板中点击“高级”选项卡，最后点击“环境变量”按钮。"}),"\n",(0,i.jsx)(n.p,{children:"在环境变量面板中，点击“系统变量”下方的“新建”按钮，在“变量名”输入框中输入“JAVA_HOME”，在“变量值”输入框中输入安装步骤中选择的 JDK 安装目录，比如：“D:\\Java\\jdk1.8.0_271”，最后点击”确定“按钮，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:E,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["编辑 PATH 变量，在变量的末尾添加 ",(0,i.jsx)(n.code,{children:";%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;"}),"，如下图所示："]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:f,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["最后增加 ",(0,i.jsx)(n.code,{children:"CLASS_PATH"})," 变量，与添加 ",(0,i.jsx)(n.code,{children:"JAVA_HOME"})," 变量的过程一样，点击新建按钮，输入变量名，并输入变量值 ",(0,i.jsx)(n.code,{children:".;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar"}),"，环境变量设置完成。"]}),"\n",(0,i.jsxs)(n.h4,{id:"jdk-环境变量验证",children:["JDK 环境变量验证",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#jdk-环境变量验证",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"最后，来验证之前步骤中的环境变量是否配置正确。"}),"\n",(0,i.jsxs)(n.p,{children:["打开 cmd 命令窗口，之后输入",(0,i.jsx)(n.code,{children:"java -version"})," 命令，演示安装的 JDK 版本为 ",(0,i.jsx)(n.code,{children:"1.8.0_271"}),"，如果环境变量配置正确，在命令窗口会输出正确的 JDK 版本号："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'java version "1.8.0_271"\n'})}),"\n",(0,i.jsx)(n.p,{children:"如果验证结果如下图所示，则表示 JDK 安装成功。如果输入命令后报错，则需要检查环境变量配置步骤中，是否存在路径错误或者拼写错误并进行改正。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:""})}),"\n",(0,i.jsxs)(n.h2,{id:"maven-的安装和配置",children:["Maven 的安装和配置",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#maven-的安装和配置",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Apache Maven 是一个软件项目管理和构建工具，可以对 Java 项目进行构建和依赖管理，本书中所有源码都选择了 Maven 作为项目依赖管理工具，本节内容将讲解 Maven 的安装和配置。"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"当然，Gradle 也是目前比较流行的项目管理工具，感兴趣的读者也可以尝试使用。不过本书中涉及到的源码都会使用 Maven 进行依赖管理，Gradle 并不在本书的讲解计划中。"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"下载安装包-1",children:["下载安装包",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#下载安装包-1",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"打开浏览器，并在地址栏中输入如下地址："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"https://maven.apache.org/download.cgi"})}),"\n",(0,i.jsx)(n.p,{children:"请求成功后可以看到 Maven 的下载页面，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:v,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"点击“apache-maven-3.6.3-bin.zip”即可完成下载。"}),"\n",(0,i.jsxs)(n.h4,{id:"安装并配置-maven",children:["安装并配置 Maven",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装并配置-maven",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"安装 Maven 并不像安装 JDK 一样需要执行安装程序，直接将下载的安装包文件解压即可，比如笔者解压到"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"D:\\maven\\apache-maven-3.6.3"})," 目录下，文件如下图所示，代表 Maven 安装成功。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:b,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"之后则需要配置 Maven 命令的环境变量，步骤与设置 JDK 环境变量的步骤类似，在环境变量面板中，点击“系统变量”下方的“新建”按钮，在“变量名”输入框中输入“MAVEN_HOME”，在“变量值”输入框中输入安装步骤中选择的 JDK 安装目录，比如：“D:\\maven\\apache-maven-3.6.3”，最后点击”确定“按钮，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["之后修改 ",(0,i.jsx)(n.code,{children:"PATH"})," 环境变量，在末尾增加",(0,i.jsx)(n.code,{children:";%MAVEN_HOME%\\bin;"}),"即可。"]}),"\n",(0,i.jsxs)(n.h4,{id:"maven-环境变量验证",children:["Maven 环境变量验证",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#maven-环境变量验证",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"最后，来验证之前步骤中的环境变量是否配置正确。"}),"\n",(0,i.jsxs)(n.p,{children:["打开 cmd 命令窗口，之后输入",(0,i.jsx)(n.code,{children:"mvn -v"})," 命令，演示安装的 Maven 版本为 3.6.3，安装目录为 ",(0,i.jsx)(n.code,{children:"D:\\maven\\apache-maven-3.6.3"}),"，如果环境变量配置正确，在命令窗口会输出这些内容，如果验证结果如下图所示，则表示 Maven 安装成功。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:m,alt:"image-20201224204216166"})}),"\n",(0,i.jsx)(n.p,{children:"如果输入命令后报错，则需要检查环境变量配置步骤中，是否存在路径错误或者拼写错误并进行改正。"}),"\n",(0,i.jsxs)(n.h4,{id:"配置国内-maven-镜像加快依赖访问速度",children:["配置国内 Maven 镜像加快依赖访问速度",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置国内-maven-镜像加快依赖访问速度",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"完成了以上步骤后就可以正常使用 Maven 工具，不过在使用过程中建议修改一下 Maven 的配置文件，这样能够获得更好的使用体验。"}),"\n",(0,i.jsx)(n.p,{children:"国内用户在使用 Maven 下载项目的依赖文件时通常会面临下载速度缓慢的情况，甚至出现“编码时间 5 分钟但是想要启动项目却需要半小时的窘境”，这是因为 Maven 的中央仓库在国外的服务器中，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:"image-20201224114747436"})}),"\n",(0,i.jsxs)(n.p,{children:["每次下载新的依赖文件时都需要通过外网访问 Maven 中央仓库，如果不进行配置的优化会极大的影响开发流程。笔者建议使用国内公司提供的中央仓库镜像，比如阿里云的镜像、华为云的镜像，另外一种做法是自己搭建一个私有的中央仓库，然后修改 Maven 配置文件中的 ",(0,i.jsx)(n.code,{children:"mirror"})," 标签来设置镜像仓库。"]}),"\n",(0,i.jsx)(n.p,{children:"本章节以阿里云镜像仓库为例，介绍如何配置国内 Maven 镜像加快依赖访问速度。"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["进入 Maven 安装目录 ",(0,i.jsx)(n.code,{children:"D:\\maven\\apache-maven-3.6.3"}),"，进入 conf 文件夹中，打开 settings.xml 配置文件。"]}),"\n",(0,i.jsx)(n.li,{children:"添加阿里云镜像仓库的链接，修改后的 settings.xml 配置文件如下："}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n\n\x3c!-- 本地仓库的路径 设置的是D盘maven/repo目录下 (自行配置一个文件夹即可，默认是 ~/.m2/repository) --\x3e\n<localRepository>D:\\maven\\repo</localRepository>  \n \n\x3c!-- 配置阿里云镜像服务器--\x3e\n<mirrors> \n  <mirror>    \n      <id>alimaven</id>    \n      <name>aliyun maven</name>    \n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>    \n      <mirrorOf>central</mirrorOf>            \n  </mirror>\n</mirrors> \n  \n</settings>\n'})}),"\n",(0,i.jsx)(n.p,{children:"配置完成后，使用 Maven 下载 jar 包依赖时的速度很变得更快，主要是因为不用再去外网访问国外的 Maven 重压仓库，直接在国内网络中访问国内的镜像仓库，可以节省很多时间。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:"image-20201224114651986"})}),"\n",(0,i.jsxs)(n.h2,{id:"开发工具-idea",children:["开发工具 IDEA",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#开发工具-idea",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Java 开发者常使用的开发工具如下："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Eclipse"}),"\n",(0,i.jsx)(n.li,{children:"MyEclipse"}),"\n",(0,i.jsx)(n.li,{children:"IDEA"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"关于 Spring Boot 项目开发时编辑器该如何选择，笔者个人比较推荐 IDEA 作为主要的开发工具，因为 IDEA 对于开发人员非常的友好和方便，后续课程中关于项目的开发及演示也都会选择使用 IDEA 编辑器。"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"IDEA 全称 IntelliJ IDEA，是用于java语言开发的集成环境（也可用于其他语言），IntelliJ 在业界被公认为最好的 Java 开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE 支持、JUnit 单元测试、CVS 版本控制、代码审查、 创新的 GUI 设计等方面的功能可以说是超常的。"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"下载idea安装包",children:["下载IDEA安装包",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#下载idea安装包",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"打开浏览器，并在地址栏中输入如下地址："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"http://jetbrains.com/idea"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"进入 IDEA 页面后能够看到其基本信息以及特性介绍，感兴趣的读者可以在该页面了解到 IDEA 编辑器更多的信息。单击页面中的 “Download” 按钮，进入 IDEA 编辑器的下载页面，如下图所示，笔者在整理书稿时，IDEA 编辑器的最新版本为 2020.3，于北京时间 2020-12-01 发布，这是 IDEA 在 2020 年发布的最后一个版本。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"在 IDEA 编辑器的下载页面可以看到它两种收费模式的版本："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ultimate 为商业版本，需要付费购买使用，功能更加强大，插件也更多，使用起来也会更加顺手，可以免费试用 30 天。"}),"\n",(0,i.jsx)(n.li,{children:"Community 为社区版本，可以免费使用，功能和插件相较于付费版本有一定的减少，不过对于项目开发并没有太大的影响。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"根据所使用的系统版本下载对应的安装包即可，后续章节中，笔者将以 Community 社区版本为例进行讲解。"}),"\n",(0,i.jsxs)(n.h4,{id:"安装-idea-及功能介绍",children:["安装 IDEA 及功能介绍",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装-idea-及功能介绍",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"下载完成后，双击下载的安装包程序，"}),"\n",(0,i.jsx)(n.p,{children:"按照 IDEA 安装界面的提示，如下图所示，然后依次点击“Next”按钮即可完成安装。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:"image-20201224204546787"})}),"\n",(0,i.jsx)(n.p,{children:"首次打开 IDEA 编辑器可以看到它的欢迎页面，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"功能区域有三个按钮，功能如下："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"New Project：创建一个新项目。"}),"\n",(0,i.jsx)(n.li,{children:"Open：打开一个计算机中已有的项目。"}),"\n",(0,i.jsx)(n.li,{children:"Get from VCS：通过版本控制上的项目获取一个项目，比如 GitHub、Gitee、GitLab，或者自建的版本控制系统。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"在创建或者打开一个项目后，则进入 IDEA 编辑器的主界面，这里以一个基础的 Spring Boot 项目为例进行介绍，打开项目后，IDEA 编辑器界面如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:r,alt:"image-20201224211323320"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"关于 Spring Boot 项目的创建方式会在后续章节中介绍。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"由上至下，依次为菜单栏区域、代码操作区域、控制台和终端区域，其中代码操作区域为开发时主要会操作的区域，包括项目结构、代码编辑区、Maven 工具栏，菜单栏区域主要作用是放一些功能配置的按钮以及一些增强功能的按钮，控制台和终端区域主要显示项目信息、程序运行日志、代码的版本提交记录、终端命令行等内容。"}),"\n",(0,i.jsxs)(n.h4,{id:"配置-idea-的-maven-环境",children:["配置 IDEA 的 Maven 环境",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置-idea-的-maven-环境",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"IDEA 编辑器中是自带 Maven 环境的，如下图所示："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:s,alt:"image-20201224211505493"})}),"\n",(0,i.jsx)(n.p,{children:"为了避免一些不必要的麻烦，笔者建议将 IDEA 编辑器中的 Maven 设置为前一个步骤中已经全局设置的 Maven 环境。"}),"\n",(0,i.jsx)(n.p,{children:'想要之前步骤中安装的 Maven 可以正常在 IDEA 中使用，则需要进行以下配置，依次点击菜单栏中的按钮 "File" → "Settings" → "Build,Execution,Deployment" → "Build Tools" → "Maven"，在 Maven 设置面板中配置 Maven 目录以及 settings.xml 配置文件位置，如下图所示：'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:c,alt:"image-20201224212044229"})}),"\n",(0,i.jsxs)(n.h2,{id:"总结",children:["总结",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"磨刀不误砍柴工，事先准备好基础的开发环境和开发工具才有利于进行后续的编码实践。"}),"\n",(0,i.jsx)(n.p,{children:"同时还要提醒各位读者，如果习惯了其他的代码编辑工具可以继续使用，只是考虑到对于 SpringBoot 项目的支持，笔者建议使用 IDEA 编辑器 ，对于 MySQL 数据库的版本，由于本书中关于数据库操作时使用的数据库版本为 5.7，为了避免一些问题，建议读者使用 MySQL 5.7 或以上版本，本书中的所有源码选择的 SpringBoot 版本为 2.3.7 ，要求 JDK 的最低版本为 JDK 8，建议读者安装 JDK 8 或者以上版本。"})]})}function w(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(J,{...e})}):J(e)}let I=w;w.__RSPRESS_PAGE_META={},w.__RSPRESS_PAGE_META["Vue3%20%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%2F14.%E5%9F%BA%E7%A1%80%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%92%8C%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87.md"]={toc:[{text:"JDK 安装和配置",id:"jdk-安装和配置",depth:2},{text:"下载安装包",id:"下载安装包",depth:4},{text:"安装 JDK",id:"安装-jdk",depth:4},{text:"配置环境变量",id:"配置环境变量",depth:4},{text:"JDK 环境变量验证",id:"jdk-环境变量验证",depth:4},{text:"Maven 的安装和配置",id:"maven-的安装和配置",depth:2},{text:"下载安装包",id:"下载安装包-1",depth:4},{text:"安装并配置 Maven",id:"安装并配置-maven",depth:4},{text:"Maven 环境变量验证",id:"maven-环境变量验证",depth:4},{text:"配置国内 Maven 镜像加快依赖访问速度",id:"配置国内-maven-镜像加快依赖访问速度",depth:4},{text:"开发工具 IDEA",id:"开发工具-idea",depth:2},{text:"下载IDEA安装包",id:"下载idea安装包",depth:4},{text:"安装 IDEA 及功能介绍",id:"安装-idea-及功能介绍",depth:4},{text:"配置 IDEA 的 Maven 环境",id:"配置-idea-的-maven-环境",depth:4},{text:"总结",id:"总结",depth:2}],title:"14.基础运行环境和开发工具准备",headingTitle:"14.基础运行环境和开发工具准备",frontmatter:{}}}}]);