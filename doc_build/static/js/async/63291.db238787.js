"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["63291"],{924902:function(e,r,n){n.r(r),n.d(r,{default:()=>h});var s=n(552676),i=n(740453);function d(e){let r=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",blockquote:"blockquote",code:"code",pre:"pre",ol:"ol",img:"img"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"21进阶-8api-性能分析",children:["21进阶 8：API 性能分析",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#21进阶-8api-性能分析",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"作为开发，我们一般都局限在功能上的单元测试，对一些性能上的细节我们往往没有去关注，如果我们在上线的时候对项目整体性能没有一个全面的了解的话，当流量越来越大时，可能会出现各种各样的问题，比如 CPU 占用高、内存使用率高等。为了避免这些性能瓶颈，我们在开发的过程中需要通过一定的手段来对程序进行性能分析。"}),"\n",(0,s.jsx)(r.p,{children:"Go 语言已经为开发者内置配套了很多性能调优监控的好工具和方法，这大大提升了我们 profile 分析的效率，借助这些工具我们可以很方便地来对 Go 程序进行性能分析。在 Go 语言开发中，通常借助于内置的 pprof 工具包来进行性能分析。"}),"\n",(0,s.jsxs)(r.h2,{id:"本节核心内容",children:["本节核心内容",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#本节核心内容",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"如何用 pprof 工具对 API 程序进行性能分析"}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["本小节源码下载路径：",(0,s.jsx)(r.a,{href:"https://github.com/lexkong/apiserver_demos/tree/master/demo16",target:"_blank",rel:"noopener noreferrer",children:"demo16"})]}),"\n",(0,s.jsx)(r.p,{children:"可先下载源码到本地，结合源码理解后续内容，边学边练。"}),"\n",(0,s.jsxs)(r.p,{children:["本小节的代码是基于 ",(0,s.jsx)(r.a,{href:"https://github.com/lexkong/apiserver_demos/tree/master/demo15",target:"_blank",rel:"noopener noreferrer",children:"demo15"})," 来开发的。"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"pprof-是什么",children:["pprof 是什么",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#pprof-是什么",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://github.com/google/pprof",target:"_blank",rel:"noopener noreferrer",children:"PProf"})," 是一个 Go 程序性能分析工具，可以分析 CPU、内存等性能。Go 在语言层面上集成了 profile 采样工具，只需在代码中简单地引入 ",(0,s.jsx)(r.code,{children:"runtime/ppro"})," 或者 ",(0,s.jsx)(r.code,{children:"net/http/pprof"})," 包即可获取程序的 profile 文件，并通过该文件来进行性能分析。"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"runtime/pprof 还可以为控制台程序或者测试程序产生 pprof 数据。"}),"\n",(0,s.jsx)(r.p,{children:"其实 net/http/pprof 中只是使用 runtime/pprof 包来进行封装了一下，并在 HTTP 端口上暴露出来。"}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"使用-pprof",children:["使用 pprof",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-pprof",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["在 ",(0,s.jsx)(r.code,{children:"gin"})," 中使用 pprof 功能，需要用到 ",(0,s.jsx)(r.code,{children:"github.com/gin-contrib/pprof"})," middleware，使用时只需要调用 ",(0,s.jsx)(r.code,{children:"pprof.Register()"})," 函数即可。本例中，通过在",(0,s.jsx)(r.code,{children:"router/router.go"}),"中添加如下代码来实现（详见 ",(0,s.jsx)(r.a,{href:"https://github.com/lexkong/apiserver_demos/blob/master/demo16/router/router.go",target:"_blank",rel:"noopener noreferrer",children:"demo16/router/router.go"}),"）："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'package router\r\n\r\nimport (\r\n	"github.com/gin-contrib/pprof"\r\n	....\r\n)\r\n\r\n// Load loads the middlewares, routes, handlers.\r\nfunc Load(g *gin.Engine, mw ...gin.HandlerFunc) *gin.Engine {\r\n	// pprof router\r\n	pprof.Register(g)\r\n	....\r\n}\n'})}),"\n",(0,s.jsxs)(r.h2,{id:"编译",children:["编译",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#编译",children:"#"})]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"下载 apiserver_demos 源码包（如前面已经下载过，请忽略此步骤）"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"$ git clone https://github.com/lexkong/apiserver_demos\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsxs)(r.li,{children:["将 ",(0,s.jsx)(r.code,{children:"apiserver_demos/demo16"})," 复制为 ",(0,s.jsx)(r.code,{children:"$GOPATH/src/apiserver"})]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"$ cp -a apiserver_demos/demo16/ $GOPATH/src/apiserver\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsx)(r.li,{children:"在 apiserver 目录下编译源码"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"$ cd $GOPATH/src/apiserver\r\n$ make\n"})}),"\n",(0,s.jsxs)(r.h2,{id:"获取-profile-采集信息",children:["获取 profile 采集信息",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#获取-profile-采集信息",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["通过 ",(0,s.jsx)(r.code,{children:"go tool pprof http://127.0.0.1:8080/debug/pprof/profile"}),"，可以获取 profile 采集信息并分析。"]}),"\n",(0,s.jsxs)(r.p,{children:["也可以直接在浏览器访问 ",(0,s.jsx)(r.code,{children:"http://localhost:8080/debug/pprof"})," 来查看当前 API 服务的状态，包括 CPU 占用情况和内存使用情况等。"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"执行命令后，需要等待 30s，pprof 会进行采样。"}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"性能分析",children:["性能分析",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#性能分析",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"在上一小节我们介绍函数性能测试时已经介绍过性能分析的一部分知识，为了使内容完整，我们这里再次介绍下相关知识。"}),"\n",(0,s.jsx)(r.p,{children:"通过上一部分我们已经获取到了程序的 profile 信息，并且进入到了 pprof 的交互界面，在交互界面执行 topN 可以获取采样信息。"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:"https://user-gold-cdn.xitu.io/2018/6/18/1640f2473cbb42e5?w=1895&h=992&f=jpeg&s=230852",alt:""})}),"\n",(0,s.jsx)(r.p,{children:"通过 topN 的输出可以分析出哪些函数占用 CPU 时间片最多，这些函数可能存在性能问题。性能分析详细防范请参考："}),"\n",(0,s.jsxs)(r.p,{children:["如果觉得不直观，可以直接生成函数调用图，通过调用图来判断哪些函数耗时最久，在 pprof 交互界面，执行 ",(0,s.jsx)(r.code,{children:"svg"})," 生成 svg 文件。"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.img,{src:"https://user-gold-cdn.xitu.io/2018/6/18/1640f2b2bad74529?w=1562&h=102&f=jpeg&s=12706",alt:""}),"\r\n用浏览器打开 profile001.svg："]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:"https://user-gold-cdn.xitu.io/2018/6/18/1640f28660d6d4a0?w=2539&h=1192&f=jpeg&s=216904",alt:""})}),"\n",(0,s.jsx)(r.p,{children:"框框最大的函数耗时比较久，说明函数可能存在性能问题。"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["确保系统已经安装 ",(0,s.jsx)(r.code,{children:"graphviz"})," 命令。"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"小结",children:["小结",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"本节展示了如何对 API 服务进行性能分析，这里只是介绍了如何添加性能分析入口和基本的流程。"})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let h=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Go%20%E8%AF%AD%E8%A8%80%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%9A%84%20RESTful%20API%20%E6%9C%8D%E5%8A%A1%2F21%E8%BF%9B%E9%98%B6%208%EF%BC%9AAPI%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.md"]={toc:[{text:"本节核心内容",id:"本节核心内容",depth:2},{text:"pprof 是什么",id:"pprof-是什么",depth:2},{text:"使用 pprof",id:"使用-pprof",depth:2},{text:"编译",id:"编译",depth:2},{text:"获取 profile 采集信息",id:"获取-profile-采集信息",depth:2},{text:"性能分析",id:"性能分析",depth:2},{text:"小结",id:"小结",depth:2}],title:"21进阶 8：API 性能分析",headingTitle:"21进阶 8：API 性能分析",frontmatter:{}}}}]);