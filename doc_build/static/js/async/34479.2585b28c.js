"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["34479"],{209852:function(e,c,s){s.r(c),s.d(c,{default:()=>k});var r=s(552676),d=s(740453);let n=s.p+"static/image/4d0c6d4f5938557dd1ac89b82b531806.be964d58.webp",a=s.p+"static/image/cf1857c82717e869fb7b0244926202d5.0ab56e27.webp",i=s.p+"static/image/547d47c85179eefd2f5294cd44cf7833.2c8a1d71.webp",p=s.p+"static/image/8d617d6b76cafd0479d3ba6cc15bfd92.0d4bd8e0.webp",l=s.p+"static/image/10e0f35af88d99fc662ad8f653082f80.d60a5e41.webp",h=s.p+"static/image/59c390f87ad70161bc0fd76f9210d5be.29d761f6.webp",t=s.p+"static/image/cf656e12b4781a3cc21a2afaf3c7dde5.51fca5ba.webp",j=s.p+"static/image/9497c0d3ef1f2ac2592c6f6f8395e226.2317fb45.webp",x=s.p+"static/image/dff654ea21382730d42f90b07a69d540.ba498ac3.webp",o=s.p+"static/image/5abe1a152776755a62c7cfff160bd8ff.0480d2ec.webp",b=s.p+"static/image/38c7c1aee4d6c0ce7d3e3e336d080011.bfec92d8.webp",g=s.p+"static/image/e1986e2f98d7c5ce50818ad9e376ee19.546568c4.webp",m=s.p+"static/image/a1ccb3bea526acdf96ab7355eef58317.fca1769a.webp",f=s.p+"static/image/e1a162daeb626d884a4d635b95749248.942fd3e1.webp",u=s.p+"static/image/f9057a4e7b141fa8b64e7918995bd655.fa9b2b7f.webp",w=s.p+"static/image/0229adfcba39f4575d392062fbd2130e.d88e0af3.webp",C=s.p+"static/image/a33a979dba481f03d011b2fd7fc2d5e3.4ddebb7c.webp",E=s.p+"static/image/87325b3c352060b8a8ce8e9da9f85657.72f719ac.webp";function S(e){let c=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",h2:"h2",img:"img",strong:"strong"},(0,d.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(c.h1,{id:"9vscode-chrome-debugger-断点映射的原理",children:["9.VSCode Chrome Debugger 断点映射的原理",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#9vscode-chrome-debugger-断点映射的原理",children:"#"})]}),"\n",(0,r.jsx)(c.p,{children:"前面几节讲了用 VSCode Debugger 调试 Vue 和 React 项目，但同学们经常会遇到一些断点相关的问题，比如："}),"\n",(0,r.jsxs)(c.ul,{children:["\n",(0,r.jsx)(c.li,{children:"在文件里打的断点是灰的，一直不生效"}),"\n",(0,r.jsx)(c.li,{children:"断点断在了奇怪的文件和位置"}),"\n"]}),"\n",(0,r.jsx)(c.p,{children:"不知道什么原因导致的，该怎么解决。"}),"\n",(0,r.jsx)(c.p,{children:"这是因为不清楚 VSCode Debugger 里打的断点是怎么在网页里生效的。"}),"\n",(0,r.jsx)(c.p,{children:"这节就来讲下这个："}),"\n",(0,r.jsxs)(c.h2,{id:"断点映射的原理",children:["断点映射的原理",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#断点映射的原理",children:"#"})]}),"\n",(0,r.jsx)(c.p,{children:"我们在 VSCode 里打的断点是这样的："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:E,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"VSCode 会记录你在哪个文件哪行打了个断点。"}),"\n",(0,r.jsx)(c.p,{children:"在 breakpoints 这里可以看到："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:C,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"代码经过编译打包之后，可能会产生一个 bundle.js，网页里运行的是这个 js 文件："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"我们打的断点最终还是在代码的运行时，也就是网页里断住的，所以在 VSCode 里打的断点会被传递给浏览器，通过 CDP 调试协议。"}),"\n",(0,r.jsx)(c.p,{children:"但是问题来了，我们本地打的断点是一个绝对路径，也就是包含 ${workspaceFolder} 的路径，而网页里根本没有这个路径，那怎么断住的呢？"}),"\n",(0,r.jsx)(c.p,{children:"这是因为有的文件是关联了 sourcemap 的，也就是文件末尾的这行注释："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"它会把文件路径映射到源码路径。"}),"\n",(0,r.jsx)(c.p,{children:"如果映射到的源码路径直接就是本地的文件路径，那不就对上了么，那断点就生效了："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"vite 的项目，sourcemap 都是这种绝对路径，所以断点直接就生效了。"}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"但是 webpack 的项目，sourcemap 到的路径不是绝对路径，而是这种："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"或者这种："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"那怎么办呢？本地打的断点都是绝对路径，而 sourcemap 到的路径不是绝对路径，根本打不上呀！"}),"\n",(0,r.jsx)(c.p,{children:"所以 VSCode Chrome Debugger 支持了 sourceMapPathOverrides 的配置："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"这是默认生成的三个配置，最后一个就是映射 webpack 路径的，其实是把以 ${workspaceFolder} 开头的本地路径映射成了 webpack:// 开头的路径传给浏览器。"}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"这样就和浏览器里的 sourcemap 后的文件路径对上了，那断点也就生效了。"}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"这就是为什么调试 webpack 项目的时候要配置 sourceMapPathOverrides。"}),"\n",(0,r.jsx)(c.p,{children:"具体怎么配，你可以加个 debugger 看看 Chrome DevTools 里是啥路径，然后映射到本地的路径就行。"}),"\n",(0,r.jsx)(c.p,{children:"React 和 Vue3 项目不用单独配置这个，用默认的那个配置就行。"}),"\n",(0,r.jsx)(c.p,{children:"Vue2 项目需要配一下这样的配置："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"或者这样的配置："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"都是为了让打断点的文件路径和 sourcemap 之后的文件路径对上。"}),"\n",(0,r.jsx)(c.p,{children:"但上面都是把项目根目录（workspaceFolder） 映射到 url 的 / 的，有的时候映射的不是 /，会出现这种情况："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"这就需要 webRoot 的配置了，默认是 workspaceFolder："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"也就是把项目根目录映射到 url 的 /。"}),"\n",(0,r.jsx)(c.p,{children:"如果出现这种情况，说明要把 /mobile/js/ 这个路径映射到项目根目录："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:i,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"所以要配置下 webRoot"}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsxs)(c.p,{children:["综上，",(0,r.jsx)(c.strong,{children:"如果 sourcemap 到的文件路径不是本地路径，那就映射不到本地文件，导致断点打不上，这时候可以配置下 sourceMapPathOverrides。如果映射之后路径开头多了几层目录，那就要配置下 webRoot。"})]}),"\n",(0,r.jsx)(c.p,{children:"那上节讲 vite + vue 项目的调试的时候，我们配置了 webRoot 为 ${workspaceFolder}/aaa，aaa 可以是任意一个本地不存在的目录，这是为什么呢？"}),"\n",(0,r.jsx)(c.p,{children:"因为 Vite 项目有一些热更的文件，这些临时文件没有对应的本地文件，但路径刚好是 VSCode Debugger 传递过去的打断点的文件路径，就断住了，所以你就会发现断点断在了奇怪的文件："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:n,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"为了避免这种情况，我们配置了 webRoot，那实际上传过去的断点信息就是 /aaa/src/App.vue。"}),"\n",(0,r.jsx)(c.p,{children:"这样热更的文件和这个路径就不一样了，也就不会断住。"}),"\n",(0,r.jsx)(c.p,{children:"而有 sourcemap 的文件，因为 sourcemap 到的是绝对路径，不受 webRoot 的影响，依然能映射到本地，所以那些断点能生效。"}),"\n",(0,r.jsx)(c.p,{children:"这就是为什么调试 vite 项目要配置下 webRoot，加上一个本地不存在的目录。"}),"\n",(0,r.jsxs)(c.h2,{id:"总结",children:["总结",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(c.p,{children:"这节我们学习了 VSCode Chrome Debugger 断点映射的原理："}),"\n",(0,r.jsx)(c.p,{children:"在本地文件打的断点会通过 CDP 传给 Chrome，如果路径和 sourcemap 到的文件匹配，那断点就能生效。"}),"\n",(0,r.jsx)(c.p,{children:"如果不匹配，可以设置下 sourceMapPathOverrides 做下映射。"}),"\n",(0,r.jsx)(c.p,{children:"如果前面多了一段路径，可以配置下 webRoot。"}),"\n",(0,r.jsx)(c.p,{children:"在 vite 项目里，热更文件也会在本地文件打断点的那行断住，为了避免这种情况，我们配了下 webRoot。"}),"\n",(0,r.jsx)(c.p,{children:"理解了 VSCode Chrome Debugger 断点映射的原理，就能解释为什么有时候断点没生效，有时候断点断在奇怪的位置了。"})]})}function V(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,d.ah)(),e.components);return c?(0,r.jsx)(c,{...e,children:(0,r.jsx)(S,{...e})}):S(e)}let k=V;V.__RSPRESS_PAGE_META={},V.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F9.VSCode%20Chrome%20Debugger%20%E6%96%AD%E7%82%B9%E6%98%A0%E5%B0%84%E7%9A%84%E5%8E%9F%E7%90%86.md"]={toc:[{text:"断点映射的原理",id:"断点映射的原理",depth:2},{text:"总结",id:"总结",depth:2}],title:"9.VSCode Chrome Debugger 断点映射的原理",headingTitle:"9.VSCode Chrome Debugger 断点映射的原理",frontmatter:{}}}}]);