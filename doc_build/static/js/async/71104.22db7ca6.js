"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["71104"],{761147:function(n,i,e){e.r(i),e.d(i,{default:()=>h});var l=e(552676),s=e(740453);function r(n){let i=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",img:"img",ul:"ul",li:"li",code:"code"},(0,s.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.h1,{id:"0本小册所实现的-api-功能",children:["0本小册所实现的 API 功能",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#0本小册所实现的-api-功能",children:"#"})]}),"\n",(0,l.jsxs)(i.h2,{id:"本小册所实现的功能",children:["本小册所实现的功能",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#本小册所实现的功能",children:"#"})]}),"\n",(0,l.jsx)(i.p,{children:"本小册通过实现一个账号系统，来演示如何构建一个真实的 API 服务器，构建方法和技术是笔者根据多年的大型 API 服务器开发经验不断优化沉淀而成。通过实战展示了 API 构建过程中各个流程（准备 -> 设计 -> 开发 -> 测试 -> 部署）的实现方法，小册涵盖的内容如下（包括但不限于）："}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.img,{src:"https://user-gold-cdn.xitu.io/2018/6/7/163d80b52d60ef11?w=1938&h=1292&f=png&s=202203",alt:""})}),"\n",(0,l.jsx)(i.p,{children:"详细为："}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["准备阶段","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"如何安装和配置 Go 开发环境"}),"\n",(0,l.jsx)(i.li,{children:"如何安装和配置 Vim IDE"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["设计阶段","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"API 构建技术选型"}),"\n",(0,l.jsx)(i.li,{children:"API 基本原理"}),"\n",(0,l.jsx)(i.li,{children:"API 规范设计"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["开发阶段","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"如何读取配置文件"}),"\n",(0,l.jsx)(i.li,{children:"如何管理和记录日志"}),"\n",(0,l.jsx)(i.li,{children:"如何做数据库的 CURD 操作"}),"\n",(0,l.jsx)(i.li,{children:"如何自定义错误 Code"}),"\n",(0,l.jsx)(i.li,{children:"如何读取和返回 HTTP 请求"}),"\n",(0,l.jsx)(i.li,{children:"如何进行业务逻辑开发"}),"\n",(0,l.jsx)(i.li,{children:"如何对请求插入自己的处理逻辑"}),"\n",(0,l.jsx)(i.li,{children:"如何进行 API 身份验证"}),"\n",(0,l.jsx)(i.li,{children:"如何进行 HTTPS 加密"}),"\n",(0,l.jsx)(i.li,{children:"如何用 Makefile 管理 API 源码"}),"\n",(0,l.jsx)(i.li,{children:"如何给 API 命令添加版本功能"}),"\n",(0,l.jsx)(i.li,{children:"如何管理 API 命令"}),"\n",(0,l.jsx)(i.li,{children:"如何生成 Swagger 在线文档"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["测试阶段","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"如何进行单元测试"}),"\n",(0,l.jsx)(i.li,{children:"如何进行性能测试（函数性能）"}),"\n",(0,l.jsx)(i.li,{children:"如何做性能分析"}),"\n",(0,l.jsx)(i.li,{children:"API 性能测试和调优"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["部署阶段","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"如何用 Nginx 部署 API 服务"}),"\n",(0,l.jsx)(i.li,{children:"如何做 API 高可用"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"通过以上各功能的介绍，读者可以完整、系统地学习 API 构建方法和技巧，笔者也会在文章中融入自己的开发经验以供读者参考。"}),"\n",(0,l.jsxs)(i.h2,{id:"账号系统业务功能",children:["账号系统业务功能",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#账号系统业务功能",children:"#"})]}),"\n",(0,l.jsxs)(i.p,{children:["本小册为了演示，构建了一个账号系统（后面统称为",(0,l.jsx)(i.code,{children:"apiserver"}),"），功能如下："]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"API 服务器状态检查"}),"\n",(0,l.jsx)(i.li,{children:"登录用户"}),"\n",(0,l.jsx)(i.li,{children:"新增用户"}),"\n",(0,l.jsx)(i.li,{children:"删除用户"}),"\n",(0,l.jsx)(i.li,{children:"更新用户"}),"\n",(0,l.jsx)(i.li,{children:"获取指定用户的详细信息"}),"\n",(0,l.jsx)(i.li,{children:"获取用户列表"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"本小册执行环境",children:["本小册执行环境",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#本小册执行环境",children:"#"})]}),"\n",(0,l.jsx)(i.p,{children:"本小册所有的软件安装，运行均是在 CentOS 7.1 系统上执行的。"}),"\n",(0,l.jsxs)(i.p,{children:["理论上本小册所构建的 API 可以在所有的 Unix/Linux 系统上编译和运行，小册中的软件安装用的是 ",(0,l.jsx)(i.code,{children:"yum"})," 工具，小册中所列举的 yum 软件理论上可以在 CentOS 6 和 CentOS 7 上直接执行 ",(0,l.jsx)(i.code,{children:"yum"})," 命令安装。"]}),"\n",(0,l.jsxs)(i.h2,{id:"小结",children:["小结",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,l.jsx)(i.p,{children:"本小节介绍了小册所要实现的 API 功能，以及 API 系统的业务功能，让读者在实战前对小册所要构建的系统有个整体了解，以便于接下来的学习。小册每一节都会提供源码，供读者学习参考。"})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,s.ah)(),n.components);return i?(0,l.jsx)(i,{...n,children:(0,l.jsx)(r,{...n})}):r(n)}let h=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Go%20%E8%AF%AD%E8%A8%80%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%9A%84%20RESTful%20API%20%E6%9C%8D%E5%8A%A1%2F0%E6%9C%AC%E5%B0%8F%E5%86%8C%E6%89%80%E5%AE%9E%E7%8E%B0%E7%9A%84%20API%20%E5%8A%9F%E8%83%BD.md"]={toc:[{text:"本小册所实现的功能",id:"本小册所实现的功能",depth:2},{text:"账号系统业务功能",id:"账号系统业务功能",depth:2},{text:"本小册执行环境",id:"本小册执行环境",depth:2},{text:"小结",id:"小结",depth:2}],title:"0本小册所实现的 API 功能",headingTitle:"0本小册所实现的 API 功能",frontmatter:{}}}}]);