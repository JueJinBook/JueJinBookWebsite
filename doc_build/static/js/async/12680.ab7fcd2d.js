"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["12680"],{111418:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var s=r(552676),c=r(740453);let t=r.p+"static/image/9464e52dbf692be45b96628257ba7597.25c20c9a.webp",o=r.p+"static/image/e32e3a943ab898e6e3259611ec7b48c6.27db87c7.webp",i=r.p+"static/image/d3678d775b269f6cd41e3181c776fb54.cdc0223b.webp",l=r.p+"static/image/3fc98948d71cbad49bbb9e00681e7e37.60995a29.webp";function a(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",h3:"h3",pre:"pre",code:"code",img:"img",hr:"hr",strong:"strong",ul:"ul",li:"li"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"31问题篇-常见问题解决",children:["31.问题篇-常见问题解决",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31问题篇-常见问题解决",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"常见问题的解决",children:["常见问题的解决",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#常见问题的解决",children:"#"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"如果您在边阅读边实践时，发现代码报错或者 TS 报错，那么小伙伴们可以根据报错信息，去线上看看相应的代码。"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"q1-uncaught-referenceerror-require-is-not-defined",children:["Q1: Uncaught ReferenceError: require is not defined",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#q1-uncaught-referenceerror-require-is-not-defined",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"如果出现上述报错，请检查你是否在主进程中添加这行代码"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 创建浏览器窗口\nconst mainWindow = new BrowserWindow({\n  // ...\n  webPreferences: {\n    // \uD83D\uDC47 请确保添加此配置\n    nodeIntegration: true,\n  },\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["如果添加了，并且重跑 ",(0,s.jsx)(n.code,{children:"npm run start:main"})," 之后仍还是此问题，那么请确保你搭建项目的 Electron 与本应用的版本一致(当前项目的 Electron@11.1.1)"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"请自检查一下你的版本是否正确，进入 node_modules/electron/package.json ，查看 version 是否是 11.1.1。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"如果版本不正确，请重装 electron@11.1.1 版本。在确保 Electron 版本正确的情况下，重新运行一下本地开发脚本。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm run start:render\nnpm run start:main\n"})}),"\n",(0,s.jsx)(n.p,{children:"如果你就是想要高版本，比如 v13版本之上，那么你需要将配置改为："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 创建浏览器窗口\nconst mainWindow = new BrowserWindow({\n  // ...\n  webPreferences: {\n    // \uD83D\uDC47 请确保添加此配置\n    nodeIntegration: true,\n    contextIsolation: false\n  },\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["感兴趣的可前往",(0,s.jsx)(n.a,{href:"https://www.electronjs.org/docs/tutorial/context-isolation#%E6%88%91%E8%AF%A5%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8%EF%BC%9F",target:"_blank",rel:"noopener noreferrer",children:"官网-上下文隔离\n"}),"、",(0,s.jsx)(n.a,{href:"https://www.electronjs.org/docs/tutorial/security#3-%E4%B8%BA%E8%BF%9C%E7%A8%8B%E5%86%85%E5%AE%B9%E5%BC%80%E5%90%AF%E4%B8%8A%E4%B8%8B%E6%96%87%E9%9A%94%E7%A6%BB",target:"_blank",rel:"noopener noreferrer",children:"官网-为远程内容开启上下文隔离"}),"、或者",(0,s.jsx)(n.a,{href:"https://github.com/electron/electron/issues/23506",target:"_blank",rel:"noopener noreferrer",children:"github"}),"查看更新说明"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"题外话"}),"：有小伙伴说，为什么我 React 起的 dev-server，在 Chrome 浏览器里访问 ",(0,s.jsx)(n.code,{children:"http://127.0.0.1:7001"})," 看不到页面效果，但是在 Electron 应用中就看到页面效果。"]}),"\n",(0,s.jsxs)(n.p,{children:["原因在于我们的 target 配置，大家可以通过 ",(0,s.jsx)(n.a,{href:"https://webpack.js.org/configuration/target",target:"_blank",rel:"noopener noreferrer",children:"webpack target"})," 官网配置看到相关说明"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"你可以做个尝试"}),"，你终止 Electron 应用的运行，然后进入 ",(0,s.jsx)(n.code,{children:"webpack.render.dev.js"})," 文件中，将 target 属性设置为默认的 web，然后运行 npm run start:render"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"这里我只是让小伙伴们做个尝试，你尝试完之后，代码还是要还原到之前的配置，你这里只是尝试，尝试啊，并不是让你真的去改配置"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["此时我们去 Chrome 浏览器访问一下 ",(0,s.jsx)(n.code,{children:"http://127.0.0.1:7001"}),"，这时候就能正常看到页面效果了。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["请注意，这里我采用的是 ",(0,s.jsx)(n.a,{href:"https://github.com/PDKSophia/visResumeMook/tree/init-cli",target:"_blank",rel:"noopener noreferrer",children:"init-cli"})," 分支进行演示。如果你将 target 改成 web 之后不能访问，说明你的 react 代码中用到了 Node 的一些特性（比如你在 React 代码中用到了 fs 模块、path 模块等），而浏览器是不知道 Node 是什么东西的。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"之所以 init-cli 分支代码可行，是因为此时的 React 中没有涉及 Node 相关代码。所以我们能够在 Chrome 中看到效果展示，那么为什么能在 Electron 中能看到效果呢？因为 Electron 内置了 NodeJS，为此我们对应将  target 改成了 electron-renderer，看上面文档有说明。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h3,{id:"q2-图片-icon-并未正确显示background-urlobject-module",children:["Q2: 图片 icon 并未正确显示，background: url([object Module])",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#q2-图片-icon-并未正确显示background-urlobject-module",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果出现这个问题，可以参考：",(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/57671995/webpack-4-gives-background-urlobject-module-as-bg-image",target:"_blank",rel:"noopener noreferrer",children:"webpack 4 gives background: url([object Module]) as bg image"})]}),"\n",(0,s.jsxs)(n.p,{children:["解决方案就是在 ",(0,s.jsx)(n.code,{children:"webpack.base.js"})," 文件中，对 file-loader 的 options 添加 esModule 配置"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"module: {\n  rules: [\n    {\n      test: /\\.(jpg|png|jpeg|gif)$/,\n      use: [\n        {\n          loader: 'file-loader',\n          options: {\n            name: '[name]_[hash].[ext]',\n            outputPath: 'images/',\n            esModule: false\n          },\n        },\n      ],\n    },\n  ],\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"q3-文件部分类型-ts-报红",children:["Q3: 文件部分类型 TS 报红",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#q3-文件部分类型-ts-报红",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"如果你引入 png、jpeg 类型文件，或者是 less 文件，导致 TS 报错（红色波浪线），说找不到模块，实际上我们的路径是正确的，项目能够正常运行。"}),"\n",(0,s.jsx)(n.p,{children:"如果去掉这膈应人的红色波浪线呢？进入到 global.d.ts，进行类型声明。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// png 类型声明\ndeclare module '*.png' {\n  const png: string;\n  export default png;\n}\n\n// svg 类型声明\ndeclare module '*.svg';\n\n// png 类型声明\ndeclare module '*.less';\n\n// rc-redux-model 类型声明\ndeclare module 'rc-redux-model';\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["后台有位小伙伴提出一个很好的问题：为什么需要单独在 global.d.ts 里写类型声明，像在 webpack 的 resolve 的 extensions 中支持 .less、.png 不行吗？还真不行，至于为什么，小伙伴们可以查看",(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/36148639/webpack-not-able-to-import-images-using-express-and-angular2-in-typescript/36151803#36151803",target:"_blank",rel:"noopener noreferrer",children:"这篇文章"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"q4-uncaught-referenceerror-global-is-not-defined",children:["Q4: Uncaught ReferenceError: global is not defined",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#q4-uncaught-referenceerror-global-is-not-defined",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"如果出现上述报错，那么可能是你 babel 相关配置配置的问题（可以检查一下版本或者配置是否与小册一致），说实在话，小编目前未遇到此问题，暂时无法复现去定位，目前在 webpack 的官方 issues 也有找到相关的资料。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/webpack/webpack/issues/10035",target:"_blank",rel:"noopener noreferrer",children:"Uncaught ReferenceError: global is not defined"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/58936238/uncaught-referenceerror-global-is-not-defined-at-object-node-modules-fbjs-lib",target:"_blank",rel:"noopener noreferrer",children:"Uncaught ReferenceError: global is not defined at Object../node_modules/fbjs/lib/setImmediate.js"})}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"最后",children:["最后",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#最后",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"小伙伴们一定要进群！在群里面交流才是最快解决问题的方案，记住，彭于晏与你们同在。"}),"\n",(0,s.jsx)(n.p,{children:"\uD83D\uDC47 下面是进群的方式"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:"image.png"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}let h=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["Electron%20%2B%20React%20%E4%BB%8E%200%20%E5%88%B0%201%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8E%86%E5%B9%B3%E5%8F%B0%E5%AE%9E%E6%88%98%2F31.%E9%97%AE%E9%A2%98%E7%AF%87-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.md"]={toc:[{text:"常见问题的解决",id:"常见问题的解决",depth:2},{text:"Q1: Uncaught ReferenceError: require is not defined",id:"q1-uncaught-referenceerror-require-is-not-defined",depth:3},{text:"Q2: 图片 icon 并未正确显示，background: url([object Module])",id:"q2-图片-icon-并未正确显示background-urlobject-module",depth:3},{text:"Q3: 文件部分类型 TS 报红",id:"q3-文件部分类型-ts-报红",depth:3},{text:"Q4: Uncaught ReferenceError: global is not defined",id:"q4-uncaught-referenceerror-global-is-not-defined",depth:3},{text:"最后",id:"最后",depth:2}],title:"31.问题篇-常见问题解决",headingTitle:"31.问题篇-常见问题解决",frontmatter:{}}}}]);