"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["13318"],{438017:function(e,a,i){i.r(a),i.d(a,{default:()=>r});var n=i(552676),d=i(740453);function l(e){let a=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",h4:"h4",pre:"pre",code:"code",ul:"ul",li:"li",strong:"strong",blockquote:"blockquote"},(0,d.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.h1,{id:"21携带数据与跨页面渲染",children:["21.携带数据与跨页面渲染",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#21携带数据与跨页面渲染",children:"#"})]}),"\n",(0,n.jsxs)(a.h2,{id:"35-携带数据与跨页面渲染",children:["3.5 携带数据与跨页面渲染",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#35-携带数据与跨页面渲染",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"从前面的学习我们了解到，函数可以操作（增删改查）数据（包括字符串、数组、对象、Boolean等所有数据类型），组件拥有了属性数据，也就拥有了被编程的能力，可见携带数据的重要性（id、class、style甚至点击事件都是组件携带的数据，都可以用来编程）。这一节我们就拿深入了解，组件是如何携带数据的，事件对象数据的作用以及数据如何跨页面渲染。"}),"\n",(0,n.jsxs)(a.h3,{id:"351-链接携带数据",children:["3.5.1 链接携带数据",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#351-链接携带数据",children:"#"})]}),"\n",(0,n.jsxs)(a.h4,{id:"1url链接的特殊字符",children:["1、URL链接的特殊字符",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#1url链接的特殊字符",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"在日常生活中，我们经常可以看到有的链接特别长，比如百度、京东、淘宝等搜索某个关键词的链接，下面是使用百度搜索云开发时的链接："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&rsv_idx=1&tn=baidu&wd=云开发&rsv_pq=81ee270400007011&rsv_t=ed834wm24xdJRGRsfv7bxPKX%2FXGlLt6fqh%2BiB9x5g0EUQjyxdCDbTXHbSFE&rqlang=cn&rsv_enter=1&rsv_dl=tb&rsv_sug3=20&rsv_sug1=19&rsv_sug7=100&rsv_sug2=0&inputT=5035&rsv_sug4=6227\n"})}),"\n",(0,n.jsx)(a.p,{children:"以及之前在视频组件里用到的视频链接："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400\n"})}),"\n",(0,n.jsx)(a.p,{children:"这些链接通常包括以下特殊字符，以及都有着基本相同的含义，通过这些特殊字符，链接就被塞进了很多数据信息，其中?、&、=是我们接下来关注的重点。"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"/"})," 分隔目录和子目录"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"?"})," 分隔实际的URL和参数"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"&"})," URL中指定的参数间的分隔符"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"="})," URL中指定的参数的值"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"#"})," 同一个页面的位置标识符，类似于页面的书签；"]}),"\n"]}),"\n",(0,n.jsxs)(a.h4,{id:"2获取url链接的数据",children:["2、获取URL链接的数据",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#2获取url链接的数据",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"使用开发者工具，新建一个lifecyle的页面，以及在home页面新建一个二级页面detail（也就是在pages配置项新建一个pages/home/detail/detail，以及注意将lifecycle设置为首页）然后在lifecyle.wxml里输入以下代码，这里的url也通过?、&、=添加了很多数据："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<navigator id="detailshow" url="./../home/detail/detail?id=lesson&uid=tcb&key=tap&ENV=weapp&frompage=lifecycle" class="item-link">点击链接看控制台</navigator>\n'})}),"\n",(0,n.jsx)(a.p,{children:"点击链接，发现页面仍然能够跳转到detail页面，给url所添加的数据并不会改变页面的路径，毕竟页面的路径通常是由/来控制的。"}),"\n",(0,n.jsxs)(a.p,{children:["那链接携带的数据的作用是什么呢？大家发现没，",(0,n.jsx)(a.strong,{children:"本来"}),"点击的是lifecycle里的链接，但是却跳转到了detail，如果链接携带的数据一直都在，只要我们可以在detail里把链接的数据给获取到，那我们是不是实现了",(0,n.jsx)(a.strong,{children:"数据的跨页面"}),"呢？"]}),"\n",(0,n.jsxs)(a.h4,{id:"3获取url参数的生命周期函数onload",children:["3、获取url参数的生命周期函数onload",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#3获取url参数的生命周期函数onload",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"onload是Page页面的生命周期函数，当页面加载时触发。一个页面只会调用一次，可以在 onLoad 函数的参数中获取打开当前页面路径中的参数。"}),"\n",(0,n.jsx)(a.p,{children:"使用开发者工具，在detail.js的onload函数里添加console.log，把onload函数的参数打印出来："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"onLoad: function (options) {\n  console.log(options)\n},\n"})}),"\n",(0,n.jsx)(a.p,{children:"再次点击lifecycle.wxml页面的链接，会跳转到detail，页面加载时会触发生命周期回调函数onload，会打印函数里的参数options，我们可以看看控制台的打印信息。"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'{id: "lesson", uid: "tcb", key: "tap", ENV: "weapp", frompage: "lifecycle"}\n'})}),"\n",(0,n.jsx)(a.p,{children:"相信大家会这样的数据类型非常熟悉，它就是一个对象Object，我们可以通过点表示法，获取到对象里具体的属性，比如options.id就能显示我们在lifecycle点击的组件的id。"}),"\n",(0,n.jsxs)(a.h3,{id:"352-数据跨页面",children:["3.5.2 数据跨页面",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#352-数据跨页面",children:"#"})]}),"\n",(0,n.jsxs)(a.h4,{id:"1数据跨页面",children:["1、数据跨页面",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#1数据跨页面",children:"#"})]}),"\n",(0,n.jsxs)(a.p,{children:["回到之前列表渲染章节的电影列表页面（",(0,n.jsx)(a.strong,{children:"你可以把之前关于电影列表的wxml和wxsss以及数据代码复制粘贴到lifecycle"}),"），给Navigator组件添加一些信息，找到下面的代码："]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<navigator url="" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">\n'})}),"\n",(0,n.jsx)(a.p,{children:"将其修改为如下，也就是添加id={{index}}，将每部电影的id、name、img、desc等信息写进链接"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<navigator url="./../home/detail/detail?id={{index}}&name={{movies.name}}&img={{movies.img}}&desc={{movies.desc}}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">\n'})}),"\n",(0,n.jsx)(a.p,{children:"编译之后，在lifecycle页面点击其中一部电影，我们发现所有链接还是会跳转到detail，但是控制台输出的信息却不一样，点击哪一部电影，就会在控制台输出哪部电影的信息，数据不仅实现了跨页面，还实现了点哪个显示哪个的区分。"}),"\n",(0,n.jsxs)(a.h4,{id:"2数据跨页面渲染",children:["2、数据跨页面渲染",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#2数据跨页面渲染",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"当然我们也可以继续把数据使用setData渲染到detail页面，为方便我们仅渲染图片信息，在detail.wxml里输入："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<image mode="widthFix" src="{{detail.img}}" sytle="height:auto"></image>\n'})}),"\n",(0,n.jsx)(a.p,{children:"在detail.js的data里添加一个detail对象，detail对象三个属性用来接收setData的数据，所以可以为空值："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'detail:{\n  name:"",\n  img:"",\n  desc:""\n},\n'})}),"\n",(0,n.jsx)(a.p,{children:"然后在onload生命周期函数里将options的值赋值给detail"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"onLoad: function (options) {\n  console.log(options)\n  this.setData({\n    detail: options,\n  })\n},\n"})}),"\n",(0,n.jsx)(a.p,{children:"这样，我们在lifecycle里点击哪部电影，哪部电影的海报就在detai页里显示啦。"}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["不过使用链接url传递参数有字节限制以及只能在跨页面中使用，但是可以用来传递比如页面链接来源，可以追踪用户来自于什么设备、什么App、通过什么方式以及来自哪个朋友的邀请链接；还可以用于一些网页链接的API必备的id、key等。跨多个页面以及传递更多参数、数据等，可以使用公共数据存储app.globalData（本节会介绍）、数据缓存（后面章节会介绍）、数据库（云开发部分会介绍）以及新增的页面间通信接口",(0,n.jsx)(a.a,{href:"https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html",target:"_blank",rel:"noopener noreferrer",children:"getOpenerEventChannel"}),"（这里不多介绍）"]}),"\n"]}),"\n",(0,n.jsxs)(a.h3,{id:"353-组件携带数据dataset",children:["3.5.3 组件携带数据dataset",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#353-组件携带数据dataset",children:"#"})]}),"\n",(0,n.jsxs)(a.p,{children:["组件有公有属性和私有属性，这些属性都是数据，事件处理函数可以修改这些属性，从而让组件有丰富的表现形式。不仅如此，在组件节点中还可以",(0,n.jsx)(a.strong,{children:"附加一些自定义数据"}),"。在事件中可以获取这些自定义的节点数据，用于事件的逻辑处理，从而让组件变成相当复杂且强大的编程对象。"]}),"\n",(0,n.jsxs)(a.h4,{id:"1使用javascript代替navigator组件",children:["1、使用JavaScript代替Navigator组件",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#1使用javascript代替navigator组件",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"使用开发者工具在lifecycle.wxml里输入以下代码，"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<image id="imageclick" src="https://img13.360buyimg.com/n7/jfs/t1/842/9/3723/77573/5b997bedE4f438e5b/ccd1077b985c7150.jpg" mode="widthFix" style="width:200rpx" bindtap="clickImage"></image>\n'})}),"\n",(0,n.jsx)(a.p,{children:"然后我们在lifecycle.js里添加如下代码，在上一节我们说过当点击组件触发事件时，逻辑层绑定该事件的处理函数会收到一个事件对象，我们仍然把这个事件对象打印出来："}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"clickImage:function(event){\n  console.log('我是button',event)\n  wx.navigateTo({\n    url: \"/pages/home/detail/detail?id=imageclick&uid=tcb&key=tap&ENV=weapp&frompage=lifecycle\"\n  })\n},\n"})}),"\n",(0,n.jsxs)(a.p,{children:["当我们点击lifecycle页面的图片时，clickImage会收到一个事件对象，打印出来的结果里包含着target和currentTarget两个属性，currentTarget指向事件所绑定的元素，而target始终指向事件发生时的元素。由于这个案例事件绑定的元素和事件发生时的元素都是imageclick，所以它们的值相同，它们里面都包含了",(0,n.jsx)(a.strong,{children:"当前组件"}),"的id，以及dataset，那这个dataset是啥呢？"]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsx)(a.p,{children:"值得强调的是很多童鞋以为只有点击Navigator组件、button组件才能进行链接跳转，这是思维定势的误区，通过bindtap，组件被赋予了一定的编程能力，尽管没有url属性，使用wx.navigateTo也能具备这种能力。"}),"\n"]}),"\n",(0,n.jsxs)(a.h4,{id:"2自定义属性dataset",children:["2、自定义属性dataset",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#2自定义属性dataset",children:"#"})]}),"\n",(0,n.jsx)(a.p,{children:"我们给上面的image加一个父级组件，这里的data-sku、data-spu和data-pid的值以及图片使用的都是京东iphone的数据。这些自定义数据以 data- 开头，多个单词由连字符 – 连接。"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",children:'<view id="viewclick" style="background-color: red;padding:20px;" data-sku="100000177760" data-spu="100000177756" data-pid="100000177756" data-toggle="Apple iPhone XR" data-jd-color="Red" data-productBrand="Apple" bindtap="clickView">\n  <image id="imageclick" src="https://img13.360buyimg.com/n7/jfs/t1/842/9/3723/77573/5b997bedE4f438e5b/ccd1077b985c7150.jpg" mode="widthFix" style="width:200rpx" bindtap="clickImage">点击button</image>\n</view>\n'})}),"\n",(0,n.jsx)(a.p,{children:"然后再在lifecycle.js里添加事件处理函数clickView，"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:"clickView: function (event) {\n  console.log('我是view',event)\n  wx.navigateTo({\n    url:\"/pages/home/detail/detail?id=viewclick&uid=tcb&key=tap&ENV=weapp&frompage=lifecycle\"\n  })\n},\n"})}),"\n",(0,n.jsxs)(a.p,{children:["当我们点击红色空白处（非图片区域）时，只会触发clickView，target与currentTarget的值相同。而当我们",(0,n.jsx)(a.strong,{children:"点击图片"}),"时，就会",(0,n.jsx)(a.strong,{children:"触发两个事件处理函数"}),"。"]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["我们点击的是图片image组件，却分别触发了绑定在image组件以及image的父级（上一级）组件view的事件处理函数，我们称这为",(0,n.jsx)(a.strong,{children:"事件冒泡"}),"。"]}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["注意这时clickView事件对象的currentTarget和target的值就不相同了。在点击图片的情况下",(0,n.jsx)(a.strong,{children:"只有在clickView事件对象的currentTarget"}),"里看到dataset获取到了view组件的自定义数据。"]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsx)(a.p,{children:"同时从detail页面的打印（注意两个事件的链接有id的值不同）可以看出，点击图片，跳转到的是图片绑定的事件指定的页面，页面的id为imageclick。"}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["我们再来观察dataset的值，发现jdColor以及productbrand，这是因为dataset会把连字符写法会转换成驼峰写法，而大写字符会自动转成小写字符。data-jd-color变成了jdColor，而data-productBrand转成了productbrand。也就是说我们点击组件，从事件对象的dataset里，我们可以",(0,n.jsx)(a.strong,{children:"通过event.currentTarget.dataset来获取组件的自定义数据。"})]}),"\n",(0,n.jsxs)(a.h4,{id:"3点击组件显示当前组件其他数据",children:["3、点击组件显示当前组件其他数据",(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#3点击组件显示当前组件其他数据",children:"#"})]}),"\n",(0,n.jsxs)(a.p,{children:["通过事件对象我们不仅可以明确知道点击了什么组件，而且还可以获取当前组件的自定义数据。比如上面案例中我们可以轻松获取到京东该商品的pid，从而跳转到该商品的详情页（",(0,n.jsx)(a.a,{href:"https://item.jd.com/%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81%E7%9A%84pid.html%EF%BC%89%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8clickView%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E9%87%8C%E6%B7%BB%E5%8A%A0%EF%BC%9A",target:"_blank",rel:"noopener noreferrer",children:"https://item.jd.com/京东商品的pid.html），我们可以在clickView事件处理函数里添加："})]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'let jdpid=event.currentTarget.dataset.pid\nlet pidurl = "https://item.jd.com/" + jdpid + ".html"\nconsole.log(url)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["这样链接该商品的详情页就被打印出来啦~（小程序不支持navigateTo的外链跳转）。如果我们要",(0,n.jsx)(a.strong,{children:"获取当前组件的其他相关数据"}),"，使用事件对象非常方便，比如点击小图显示大图，toggle弹出其他内容等等。"]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["小程序也支持给",(0,n.jsx)(a.code,{children:"data-*"}),"属性添加wxss样式，比如我们可以给data-pid添加样式，",(0,n.jsx)(a.code,{children:"view[data-pid]{margin:30px;}"}),"，",(0,n.jsx)(a.code,{children:"data-*"}),"属性既可以类似于选择器一样的存在，也可以对它进行编程，是不是很强大？"]}),"\n"]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,d.ah)(),e.components);return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}let r=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F21.%E6%90%BA%E5%B8%A6%E6%95%B0%E6%8D%AE%E4%B8%8E%E8%B7%A8%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93.md"]={toc:[{text:"3.5 携带数据与跨页面渲染",id:"35-携带数据与跨页面渲染",depth:2},{text:"3.5.1 链接携带数据",id:"351-链接携带数据",depth:3},{text:"1、URL链接的特殊字符",id:"1url链接的特殊字符",depth:4},{text:"2、获取URL链接的数据",id:"2获取url链接的数据",depth:4},{text:"3、获取url参数的生命周期函数onload",id:"3获取url参数的生命周期函数onload",depth:4},{text:"3.5.2 数据跨页面",id:"352-数据跨页面",depth:3},{text:"1、数据跨页面",id:"1数据跨页面",depth:4},{text:"2、数据跨页面渲染",id:"2数据跨页面渲染",depth:4},{text:"3.5.3 组件携带数据dataset",id:"353-组件携带数据dataset",depth:3},{text:"1、使用JavaScript代替Navigator组件",id:"1使用javascript代替navigator组件",depth:4},{text:"2、自定义属性dataset",id:"2自定义属性dataset",depth:4},{text:"3、点击组件显示当前组件其他数据",id:"3点击组件显示当前组件其他数据",depth:4}],title:"21.携带数据与跨页面渲染",headingTitle:"21.携带数据与跨页面渲染",frontmatter:{}}}}]);