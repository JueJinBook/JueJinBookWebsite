"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["28277"],{756693:function(e,n,r){r.r(n),r.d(n,{default:()=>m});var s=r(552676),a=r(740453);let c=r.p+"static/image/34c529f2386d173ac51b9c8d1942fd27.095aec12.webp",d=r.p+"static/image/a2aaaaf3f444c2bc2b4c893e598d1616.ec8e374f.webp",i=r.p+"static/image/4a6dd1b258a9d9a5704c141c7b284717.ffc2e1d5.gif",t=r.p+"static/image/cf091bf8ee577d408637b2dca6771e54.2da5bcc3.webp",l=r.p+"static/image/e009cc9b67b5a5364e15bd1bf0ff1fed.66fd14cb.webp",o=r.p+"static/image/192cbb7c290ddfe4175001b761a73736.aff8d56c.webp",h=r.p+"static/image/2e5e0b0720b95f6372a7310267f0f177.0d3771f5.webp",x=r.p+"static/image/43db8d30c5adc64c9134b6610c4493a6.ec8e374f.webp";function p(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",pre:"pre",img:"img",ol:"ol",li:"li",ul:"ul"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"34api-篇-_-nextconfigjs下",children:["34.API 篇 _ next.config.js（下）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34api-篇-_-nextconfigjs下",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"前言",children:["前言",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["本篇我们讲解 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 剩下的 31 个配置项。"]}),"\n",(0,s.jsxs)(n.h2,{id:"1-assetprefix",children:["1. assetPrefix",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-assetprefix",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"assetPrefix 用于设置资源前缀，举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// next.config.js\nconst isProd = process.env.NODE_ENV === 'production'\n \nmodule.exports = {\n  // Use the CDN in production and localhost for development.\n  assetPrefix: isProd ? 'https://cdn.mydomain.com' : undefined,\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 会自动为从 ",(0,s.jsx)(n.code,{children:"/_next"}),"路径（",(0,s.jsx)(n.code,{children:".next/static/"}),"文件夹）加载的 JavaScript 和 CSS 文件添加资源前缀。以这个例子为例，当请求 JS 代码片段的时候，原本地址是："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"/_next/static/chunks/4b9b41aaa062cbbfeff4add70f256968c51ece5d.4d708494b3aed70c04f0.js\n"})}),"\n",(0,s.jsx)(n.p,{children:"会变成："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"https://cdn.mydomain.com/_next/static/chunks/4b9b41aaa062cbbfeff4add70f256968c51ece5d.4d708494b3aed70c04f0.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["注意：虽然这里请求的路径是在 ",(0,s.jsx)(n.code,{children:"/_next"}),"下，但实际文件在 ",(0,s.jsx)(n.code,{children:".next/"})," 下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"让我们在开发环境中测试一下这个配置，原本请求的地址是："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"配置后会变成："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"注意："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["你应该上传到 CDN 的只有 ",(0,s.jsx)(n.code,{children:".next/static/"}),"的内容，不要上传 ",(0,s.jsx)(n.code,{children:".next/"})," 剩余的部分，这会导致你暴露服务端代码和其他配置。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"assetPrefix"}),"不会影响 ",(0,s.jsx)(n.code,{children:"public"})," 文件夹下的文件。对于 ",(0,s.jsx)(n.code,{children:"public"})," 下的资源，你需要自己处理前缀。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"2-basepath",children:["2. basePath",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-basepath",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"basePath"})," 用于设置应用的路径前缀。举个例子："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// next.config.js\nmodule.exports = {\n  basePath: '/docs',\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"app/page.js"}),"的代码为："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import Link from 'next/link'\n\nexport default function HomePage() {\n  return (\n    <>\n      <Link href=\"/about\">About Page</Link>\n    </>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["使用 ",(0,s.jsx)(n.code,{children:"basePath"})," 后，直接访问 ",(0,s.jsx)(n.code,{children:"/"}),"会导致 404 错误："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["你应该访问 ",(0,s.jsx)(n.code,{children:"/docs"}),"："]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("img",{src:t,alt:"image.png"}),"\n如果你不希望访问 ",(0,s.jsx)(n.code,{children:"/"})," 导致 404 错误，那你可以来个重写或者重定向："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// next.config.js\nmodule.exports = {\n  basePath: '/docs',\n  async redirects() {\n    return [\n        {\n            source: '/',\n            destination: '/docs',\n            basePath: false,\n            permanent: false\n        }\n    ]\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["当你使用 ",(0,s.jsx)(n.code,{children:"next/link"})," 和 ",(0,s.jsx)(n.code,{children:"next/router"})," （App Router 下使用 ",(0,s.jsx)(n.code,{children:"next/navigation"}),"）链接到其他页面时，",(0,s.jsx)(n.code,{children:"basePath"})," 就会自动应用。举个例子，",(0,s.jsx)(n.code,{children:"/about"})," 会自动变成 ",(0,s.jsx)(n.code,{children:"/docs/about"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'export default function HomePage() {\n  return (\n    <>\n      <Link href="/about">About Page</Link>\n    </>\n  )\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"输出的 HTML 为："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<a href="/docs/about">About Page</a>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["当你使用 ",(0,s.jsx)(n.code,{children:"next/image"}),"组件的时候，你应该在 ",(0,s.jsx)(n.code,{children:"src"})," 前添加 ",(0,s.jsx)(n.code,{children:"basePath"}),"（如果你使用静态导入就正常处理即可）："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import Image from \'next/image\'\n \nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image\n        src="/docs/me.png"\n        alt="Picture of the author"\n        width={500}\n        height={500}\n      />\n      <p>Welcome to my homepage!</p>\n    </>\n  )\n}\n \nexport default Home\n'})}),"\n",(0,s.jsxs)(n.p,{children:["在这个例子中，图片放在 ",(0,s.jsx)(n.code,{children:"/public"}),"目录下，正常使用 ",(0,s.jsx)(n.code,{children:"/me.png"})," 即可访问，设置 ",(0,s.jsx)(n.code,{children:"basePath"})," 为 ",(0,s.jsx)(n.code,{children:"/docs"})," 后，应该改为使用 ",(0,s.jsx)(n.code,{children:"/docs/me.png"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-compress",children:["3. compress",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-compress",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Next.js 提供 gzip 压缩来压缩渲染的内容和静态文件。如果你想禁用压缩功能："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// next.config.js\nmodule.exports = {\n  compress: false,\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"4-devindicators",children:["4. devIndicators",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-devindicators",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"当你编辑代码，Next.js 正在编译应用的时候，页面右下角会有一个编译指示器。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:"FVWEU.gif"})}),"\n",(0,s.jsx)(n.p,{children:"这个指示器只会在开发模式下展示，生产环境中不会展示。如果你想更改它的位置，就比如它跟页面的其他元素位置发生冲突了："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  devIndicators: {\n    buildActivityPosition: 'bottom-right',\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["默认值是 ",(0,s.jsx)(n.code,{children:"bottom-right"}),"，其他值还有",(0,s.jsx)(n.code,{children:" bottom-left"}),"、",(0,s.jsx)(n.code,{children:"top-right"}),"、",(0,s.jsx)(n.code,{children:"top-left"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"如果你想禁用它："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  devIndicators: {\n    buildActivity: false,\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"5-distdir",children:["5. distDir",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-distdir",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"distDir"})," 用于自定义构建目录，默认是 ",(0,s.jsx)(n.code,{children:".next"}),"："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  distDir: 'build',\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["现在如果你运行 ",(0,s.jsx)(n.code,{children:"next build"}),"，Next.js 会使用 ",(0,s.jsx)(n.code,{children:"build"})," 文件夹而不是 ",(0,s.jsx)(n.code,{children:".next"}),"文件夹。注意：",(0,s.jsx)(n.code,{children:"distDir"})," 不能离开你的项目目录，举个例子，",(0,s.jsx)(n.code,{children:"../build"}),"就是一个无效目录。"]}),"\n",(0,s.jsxs)(n.h2,{id:"6-env",children:["6. env",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-env",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 9.4 后使用新的方式添加环境变量，新的方式更加直观方便、功能强大，具体内容参考",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309078454316564507",target:"_blank",rel:"noopener noreferrer",children:"《\n配置篇 | 环境变量、路径别名与 src 目录》"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"添加一个环境变量到 JavaScript bundle 中，举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  env: {\n    customKey: 'my-value',\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["现在你可以在代码中通过 ",(0,s.jsx)(n.code,{children:"process.env.customKey"})," 获取："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function Page() {\n  return <h1>The value of customKey is: {process.env.customKey}</h1>\n}\n \nexport default Page\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 会在构建的时候，将 ",(0,s.jsx)(n.code,{children:"process.env.customKey"}),"替换为 ",(0,s.jsx)(n.code,{children:"my-value"}),"（因为 webpack ",(0,s.jsx)(n.a,{href:"https://webpack.js.org/plugins/define-plugin/",target:"_blank",rel:"noopener noreferrer",children:"DefinePlugin"})," 的特性，不支持通过解构赋值）。举个例子："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"return <h1>The value of customKey is: {process.env.customKey}</h1>\n"})}),"\n",(0,s.jsx)(n.p,{children:"相当于："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"return <h1>The value of customKey is: {'my-value'}</h1>\n"})}),"\n",(0,s.jsx)(n.p,{children:"最终的结果是："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h2,{id:"7-eslint",children:["7. eslint",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-eslint",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果项目中检测到 ESLint，Next.js 会在出现错误的时候，让生产构建（",(0,s.jsx)(n.code,{children:"next build"}),"）失败。"]}),"\n",(0,s.jsx)(n.p,{children:"如果你希望即使有错误，也要构建生产代码，可以禁止内置的 ESLint："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"8-generatebuildid",children:["8. generateBuildId",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-generatebuildid",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 会在 ",(0,s.jsx)(n.code,{children:"next build"})," 的时候生成一个 ID，用于标示应用正在使用的版本。应该使用相同的构建并启动多个容器（Docker）。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果你要为环境的每个阶段进行重建，你需要在不同的容器间生成一致的构建 ID（比如测试、开发、预生产、生产等不同的阶段对应不同的容器，但最好使用相同的构建 ID），使用 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 的 ",(0,s.jsx)(n.code,{children:"generateBuildId"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  generateBuildId: async () => {\n    // This could be anything, using the latest git hash\n    return process.env.GIT_HASH\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"9-generateetags",children:["9. generateEtags",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#9-generateetags",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 默认会为每个页面生成 ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/HTTP_ETag",target:"_blank",rel:"noopener noreferrer",children:"etags"}),"，如果你希望禁用 HTML 页面生成 etags，使用 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 的 ",(0,s.jsx)(n.code,{children:"generateEtags"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  generateEtags: false\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"10-httpagentoptions",children:["10. httpAgentOptions",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#10-httpagentoptions",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在 Nodejs 18 之前，Next.js 会自动使用 ",(0,s.jsx)(n.a,{href:"https://github.com/nodejs/undici",target:"_blank",rel:"noopener noreferrer",children:"undici"})," 作为 ",(0,s.jsx)(n.code,{children:"fetch()"})," 的 polyfill，并且默认开启 HTTP ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Keep-Alive",target:"_blank",rel:"noopener noreferrer",children:"Keep-Alive"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果禁用服务端所有 fetch() 请求的 HTTP Keep-Alive ，使用 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 的 ",(0,s.jsx)(n.code,{children:"httpAgentOptions"})," 配置："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  httpAgentOptions: {\n    keepAlive: false,\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"11-images",children:["11. images",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-images",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果你想要使用云提供商优化图片而不使用 Next.js 内置的图像优化 API，那可以在 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 中进行如下配置："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  images: {\n    loader: 'custom',\n    loaderFile: './my/image/loader.js',\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"loaderFile"})," 必须指向一个相对于应用根目录的地址，这个文件必须导出一个返回字符串的默认函数，例如："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export default function myImageLoader({ src, width, quality }) {\n  return `https://example.com/${src}?w=${width}&q=${quality || 75}`\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["就比如你想要使用 Cloudflare，参考 Cloudflare 的 ",(0,s.jsx)(n.a,{href:"https://developers.cloudflare.com/images/url-format",target:"_blank",rel:"noopener noreferrer",children:"url-format"})," 文档："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Docs: https://developers.cloudflare.com/images/url-format\nexport default function cloudflareLoader({ src, width, quality }) {\n  const params = [`width=${width}`, `quality=${quality || 75}`, 'format=auto']\n  return `https://example.com/cdn-cgi/image/${params.join(',')}/${src}`\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["此为全局修改，如果你只想更改部分图片，那你可以使用 ",(0,s.jsx)(n.code,{children:"loader"})," prop："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n \nimport Image from 'next/image'\n \nconst imageLoader = ({ src, width, quality }) => {\n  return `https://example.com/${src}?w=${width}&q=${quality || 75}`\n}\n \nexport default function Page() {\n  return (\n    <Image\n      loader={imageLoader}\n      src=\"me.png\"\n      alt=\"Picture of the author\"\n      width={500}\n      height={500}\n    />\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"12-incrementalcachehandlerpath",children:["12. incrementalCacheHandlerPath",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12-incrementalcachehandlerpath",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"用于自定义 Next.js 的缓存处理程序，举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  experimental: {\n    incrementalCacheHandlerPath: require.resolve('./cache-handler.js'),\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"自定义的缓存示例代码为："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// cache-handler.js\nconst cache = new Map()\n \nmodule.exports = class CacheHandler {\n  constructor(options) {\n    this.options = options\n    this.cache = {}\n  }\n \n  async get(key) {\n    return cache.get(key)\n  }\n \n  async set(key, data) {\n    cache.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["完整的 API 参考 ",(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/api-reference/next-config-js/incrementalCacheHandlerPath",target:"_blank",rel:"noopener noreferrer",children:"https://nextjs.org/docs/app/api-reference/next-config-js/incrementalCacheHandlerPath"})]}),"\n",(0,s.jsxs)(n.h2,{id:"13-logging",children:["13. logging",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#13-logging",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"当在开发模式运行 Next.js ，你可以配置日志等级以及控制台是否记录完整 URL。目前，logging 只应用于使用 fetch API 的数据获取，还不能用于 Next.js 其他日志。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  logging: {\n    fetches: {\n      fullUrl: true,\n    },\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"14-mdxrs",children:["14. mdxRs",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#14-mdxrs",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["使用新的 Rust 编译器编译 MDX 文件，和 ",(0,s.jsx)(n.code,{children:"@next/mdx"})," 一起使用："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const withMDX = require('@next/mdx')()\n \n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  pageExtensions: ['ts', 'tsx', 'mdx'],\n  experimental: {\n    mdxRs: true,\n  },\n}\n \nmodule.exports = withMDX(nextConfig)\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"15-ondemandentries",children:["15. onDemandEntries",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#15-ondemandentries",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"onDemandEntries 用于控制开发模式下服务端如何处理内存中构建的页面："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  onDemandEntries: {\n    // period (in ms) where the server will keep pages in the buffer\n    maxInactiveAge: 25 * 1000,\n    // number of pages that should be kept simultaneously without being disposed\n    pagesBufferLength: 2,\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"16-optimizepackageimports",children:["16. optimizePackageImports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#16-optimizepackageimports",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"有些包可以导出成百上千个模块，这会导致开发和生产中的性能问题。"}),"\n",(0,s.jsxs)(n.p,{children:["添加一个包到 ",(0,s.jsx)(n.code,{children:"experimental.optimizePackageImports"})," 后，Next.js 只会加载实际用到的模块："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  experimental: {\n    optimizePackageImports: ['package-name'],\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@mui/icons-material"}),", ",(0,s.jsx)(n.code,{children:"@mui/material"}),", ",(0,s.jsx)(n.code,{children:"date-fns"}),", ",(0,s.jsx)(n.code,{children:"lodash"}),", ",(0,s.jsx)(n.code,{children:"lodash-es"}),", ",(0,s.jsx)(n.code,{children:"react-bootstrap"}),", ",(0,s.jsx)(n.code,{children:"@headlessui/react"}),", ",(0,s.jsx)(n.code,{children:"@heroicons/react"}),"以及 ",(0,s.jsx)(n.code,{children:"lucide-react"})," ，这些库默认已经优化。"]}),"\n",(0,s.jsxs)(n.h2,{id:"17-output",children:["17. output",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#17-output",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"在构建的时候，Next.js 会自动追踪每个页面和它的依赖项，以确定部署一个生产版本所需要的所有文件。"}),"\n",(0,s.jsxs)(n.p,{children:["这个功能会帮你大幅减少部署的大小。之前使用 Docker 部署的时候，你需要安装 ",(0,s.jsx)(n.code,{children:"dependencies"})," 中的所有文件才能运行 ",(0,s.jsx)(n.code,{children:"run start"}),"。从 Next.js 12 起，你可以追踪 ",(0,s.jsx)(n.code,{children:".next/"})," 目录中的输出文件以实现只包含必要的文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["之所以能够实现，是因为在 ",(0,s.jsx)(n.code,{children:"next build"})," 的时候，Next.js 会使用 ",(0,s.jsx)(n.code,{children:"@vercel/nft"})," 静态分析 ",(0,s.jsx)(n.code,{children:"import"}),"、",(0,s.jsx)(n.code,{children:"require"})," 和",(0,s.jsx)(n.code,{children:" fs"})," 使用情况来确定页面加载的所有文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 的生产服务器也会在 ",(0,s.jsx)(n.code,{children:".next/next-server.js.nft.json"}),"中追踪所有它所需要的文件和输出。这个文件就可以被用来在每次追踪的时候，读取文件列表，然后将文件拷贝到部署位置上。"]}),"\n",(0,s.jsxs)(n.p,{children:["现在让我们在 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 中开启："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  output: 'standalone',\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 会自动在 ",(0,s.jsx)(n.code,{children:".next"}),"中创建一个 ",(0,s.jsx)(n.code,{children:"standalone"})," 文件夹，然后拷贝 ",(0,s.jsx)(n.code,{children:"node_modules"})," 中生产部署会用到的所有必需文件。靠着这个文件夹，都不需要再次安装 ",(0,s.jsx)(n.code,{children:"node_modules"})," 即可实现部署。"]}),"\n",(0,s.jsxs)(n.h2,{id:"18-pageextension",children:["18. pageExtension",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#18-pageextension",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["默认情况下，Next.js 接受 ",(0,s.jsx)(n.code,{children:".tsx"}),"、",(0,s.jsx)(n.code,{children:".ts"}),"、",(0,s.jsx)(n.code,{children:".js"}),"、",(0,s.jsx)(n.code,{children:".jsx"}),"作为拓展名的文件。 pageExtension 用于接受其他的扩展名比如 markdown （",(0,s.jsx)(n.code,{children:".md"}),"、",(0,s.jsx)(n.code,{children:".mdx"}),"）"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const withMDX = require('@next/mdx')()\n \n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  pageExtensions: ['ts', 'tsx', 'mdx'],\n  experimental: {\n    mdxRs: true,\n  },\n}\n \nmodule.exports = withMDX(nextConfig)\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"19-局部渲染",children:["19. 局部渲染",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#19-局部渲染",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["局部渲染是一个实验性的功能，目前在 ",(0,s.jsx)(n.code,{children:"next@canary"})," 中可用："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install next@canary\n"})}),"\n",(0,s.jsx)(n.p,{children:"开启局部渲染："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    ppr: true,\n  },\n}\n \nmodule.exports = nextConfig\n"})}),"\n",(0,s.jsx)(n.p,{children:"注意：局部渲染目前不能用于客户端导航。"}),"\n",(0,s.jsxs)(n.h2,{id:"20-poweredbyheader",children:["20. poweredByHeader",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#20-poweredbyheader",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["默认情况下，Next.js 会添加 ",(0,s.jsx)(n.code,{children:"x-powered-by"}),"标头，如果要禁用此功能："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  poweredByHeader: false,\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"21-productionbrowsersourcemaps",children:["21. productionBrowserSourceMaps",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-productionbrowsersourcemaps",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"SourceMap 默认在开发环境中开启，在生产构建的时候会禁用以防止源码泄漏，但如果你非要开启："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  productionBrowserSourceMaps: true,\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"22-reactstrictmode",children:["22. reactStrictMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-reactstrictmode",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["从 Next.js 13.4 起，严格模式在 App Router 下默认为 ",(0,s.jsx)(n.code,{children:"true"}),"，所以这个配置仅用于 Pages Router。不过你依然可以设置 ",(0,s.jsx)(n.code,{children:"reactStrictMode: false"})," 来禁用严格模式。"]}),"\n",(0,s.jsxs)(n.p,{children:["React 的严格模式是一个为了突出应用中潜在问题的功能，在开发模式中使用会有助于识别不安全的生命周期、过期的 API 用法以及其他功能。使用严格模式，在 ",(0,s.jsx)(n.code,{children:"next.config.js"})," 中配置："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  reactStrictMode: true,\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["如果不希望整个应用都使用严格模式，只针对某些页面使用的话，那可以用 ",(0,s.jsx)(n.code,{children:"<React.StrictMode>"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"23-servercomponentsexternalpackages",children:["23. serverComponentsExternalPackages",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23-servercomponentsexternalpackages",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 会自动打包服务端组件和路由处理程序中的依赖项。如果某一个依赖项使用了 Nodejs 特定的功能，那你可以选择从 Bundle 中去除该依赖项，然后使用原生的 Nodejs ",(0,s.jsx)(n.code,{children:"require"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    serverComponentsExternalPackages: ['@acme/ui'],\n  },\n}\n \nmodule.exports = nextConfig\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"24-trailingslash",children:["24. trailingSlash",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24-trailingslash",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["默认情况下，Next.js 会将带尾部斜杠的 URL 重定向到没有尾部斜杠的地址.举个例子，",(0,s.jsx)(n.code,{children:"/about/"}),"会重定向到 ",(0,s.jsx)(n.code,{children:"/about"}),"。你也可以进行相反的配置，将没有尾部斜杠的地址重定向到带尾部斜杠的地址："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  trailingSlash: true,\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["现在，",(0,s.jsx)(n.code,{children:"/about"}),"重定到 ",(0,s.jsx)(n.code,{children:"/about/"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"25-transpilepackages",children:["25. transpilePackages",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#25-transpilepackages",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 可以自动编译和打包来自本地的包（如 monorepos）或者外部依赖（node_modules）。以前是通过使用 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/next-transpile-modules",target:"_blank",rel:"noopener noreferrer",children:"next-transpile-modules"})," 这个包，有了这个选项就可以直接使用了："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  transpilePackages: ['@acme/ui', 'lodash-es'],\n}\n \nmodule.exports = nextConfig\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"26-turbo",children:["26. turbo",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#26-turbo",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["这些功能是实验性的，只有当使用 ",(0,s.jsx)(n.code,{children:"next --turbo"})," 的时候才会开启。"]}),"\n",(0,s.jsx)(n.p,{children:"目前，Turbopack 支持 webpack loader API 的子集，允许你在 Turbopack 中使用一些 webpack loader 转换代码。举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  experimental: {\n    turbo: {\n      rules: {\n        // Option format\n        '*.md': [\n          {\n            loader: '@mdx-js/loader',\n            options: {\n              format: 'md',\n            },\n          },\n        ],\n        // Option-less format\n        '*.mdx': ['@mdx-js/loader'],\n      },\n    },\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"现在，你可以在应用中使用："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import MyDoc from './my-doc.mdx'\n \nexport default function Home() {\n  return <MyDoc />\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"类似于 webpack 的 resolve.alias，Turbopack 也可以配置别名："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  experimental: {\n    turbo: {\n      resolveAlias: {\n        underscore: 'lodash',\n        mocha: { browser: 'mocha/browser-entry.js' },\n      },\n    },\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在这个例子中，使用 ",(0,s.jsx)(n.code,{children:"import underscore from 'underscore'"}),"其实会导入 lodash。"]}),"\n",(0,s.jsx)(n.p,{children:"Turbopack 也支持条件别名，目前只支持 browser 这个条件。在这个例子中，当 Turbopack 以浏览器环境为目标的时候，导入 mocha 模块相当于导入 mocha/browser-entry.js。"}),"\n",(0,s.jsxs)(n.h2,{id:"27-typedrouters",children:["27. typedRouters",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#27-typedrouters",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"对静态类型链接的实验性支持，此功能需要在 App Router 下以及开启使用 TypeScript："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    typedRoutes: true,\n  },\n}\n \nmodule.exports = nextConfig\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"28-typescript",children:["28. typescript",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#28-typescript",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果出现 TypeScript 错误，生产构建（",(0,s.jsx)(n.code,{children:"next build"}),"）会失败。如果你希望即便有错误，也要构建生产代码："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  typescript: {\n    // !! WARN !!\n    // Dangerously allow production builds to successfully complete even if\n    // your project has type errors.\n    // !! WARN !!\n    ignoreBuildErrors: true,\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"29-urlimports",children:["29. urlImports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#29-urlimports",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"URL 导入是一项实验性功能，允许你从外部服务器导入模块。"}),"\n",(0,s.jsx)(n.p,{children:"如果你要使用该功能，使用示例如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  experimental: {\n    urlImports: ['https://example.com/assets/', 'https://cdn.skypack.dev'],\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"在这个例子中，添加了允许的资源前缀（毕竟要保证安全）。"}),"\n",(0,s.jsx)(n.p,{children:"然后你就可以直接通过 URL 导入模块："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { a, b, c } from 'https://example.com/assets/some/module.js'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["当使用 URL 导入的时候，Next.js 会创建一个 ",(0,s.jsx)(n.code,{children:"next.lock"}),"目录包含一个 lockfile 和获取的资源。这个目录必须要提交到 Git，不能通过 ",(0,s.jsx)(n.code,{children:".gitignore"}),"忽略。"]}),"\n",(0,s.jsxs)(n.p,{children:["当运行 ",(0,s.jsx)(n.code,{children:"next dev"}),"的时候，Next.js 会下载并添加所有新发现的导入 URL 到 lockfile 中。当运行 ",(0,s.jsx)(n.code,{children:"next build"}),"的时候，Next.js 会只使用 lockfile 构建用于生产版本的应用。"]}),"\n",(0,s.jsx)(n.p,{children:"使用 URL 导入的一些例子："}),"\n",(0,s.jsx)(n.p,{children:"使用 skypack："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import confetti from 'https://cdn.skypack.dev/canvas-confetti'\nimport { useEffect } from 'react'\n \nexport default () => {\n  useEffect(() => {\n    confetti()\n  })\n  return <p>Hello</p>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"静态图片导入："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import Image from 'next/image'\nimport logo from 'https://example.com/assets/logo.png'\n \nexport default () => (\n  <div>\n    <Image src={logo} placeholder=\"blur\" />\n  </div>\n)\n"})}),"\n",(0,s.jsx)(n.p,{children:"CSS 中的 URLs："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:".className {\n  background: url('https://example.com/assets/hero.jpg');\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"导入资源："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const logo = new URL('https://example.com/assets/file.txt', import.meta.url)\n \nconsole.log(logo.pathname)\n \n// prints \"/_next/static/media/file.a9727b5d.txt\"\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"30-自定义-webpack-配置",children:["30. 自定义 Webpack 配置",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#30-自定义-webpack-配置",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"为了扩展 webpack 的用法，你需要在 next.config.js 中定义一个函数用于扩展它的配置，举个例子："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  webpack: (\n    config,\n    { buildId, dev, isServer, defaultLoaders, nextRuntime, webpack }\n  ) => {\n    // Important: return the modified config\n    return config\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"webpack 函数会被执行两次，一次在服务端，一次在客户端，你可以使用 isServer 属性来区分是客户端配置还是服务端配置。"}),"\n",(0,s.jsx)(n.p,{children:"webpack 函数的第二个参数是一个具有以下属性的对象："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"buildId"}),"：",(0,s.jsx)(n.code,{children:"String"}),"，构建 ID，构建的唯一标识"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dev"}),"：",(0,s.jsx)(n.code,{children:"Boolean"})," 编译是否会在开发中完成"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isServer"}),"：",(0,s.jsx)(n.code,{children:"Boolean"}),"，如果 true 表示服务端编译，如果 false 表示客户端编译"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nextRuntime"}),"：",(0,s.jsx)(n.code,{children:"String | undefined"}),"，服务端编译的目标运行时，要么是 ",(0,s.jsx)(n.code,{children:'"edge"'})," ，要么是 ",(0,s.jsx)(n.code,{children:'"nodejs"'}),"，",(0,s.jsx)(n.code,{children:"undefined"}),"用于客户端编译"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultLoaders"}),"：",(0,s.jsx)(n.code,{children:"Object"})," Next.js 内部使用的默认加载器","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"babel"}),"：",(0,s.jsx)(n.code,{children:"Object"})," 默认的 ",(0,s.jsx)(n.code,{children:"babel-loader"})," 配置"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"defaultLoaders.babel"})," 示例用法："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// 这段来自于 @next/mdx 插件源码:\n// https://github.com/vercel/next.js/tree/canary/packages/next-mdx\nmodule.exports = {\n  webpack: (config, options) => {\n    config.module.rules.push({\n      test: /\\.mdx/,\n      use: [\n        options.defaultLoaders.babel,\n        {\n          loader: '@mdx-js/loader',\n          options: pluginOptions.options,\n        },\n      ],\n    })\n \n    return config\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"31-webvitalsattribution",children:["31. webVitalsAttribution",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-webvitalsattribution",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"在调试 Web Vitals 相关的问题时，如果能查明根源通常会很有帮助。比如在 CLS 中，我们可能想知道最大的布局偏移发生时偏移的第一个元素，或者 LCP 中，我们可能想要知道 LCP 对应的元素。如果该元素是图片，知道它的 URL 有助于我们进行优化。"}),"\n",(0,s.jsxs)(n.p,{children:["这就需要用到 webVitalsAttribution 配置项，它会帮助我们获取更深层的信息如 ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming",target:"_blank",rel:"noopener noreferrer",children:"PerformanceEventTiming"}),"、",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming",target:"_blank",rel:"noopener noreferrer",children:"PerformanceNavigationTiming"}),"、",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming",target:"_blank",rel:"noopener noreferrer",children:"PerformanceResourceTiming"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"experimental: {\n  webVitalsAttribution: ['CLS', 'LCP']\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["有效的归因值都是 web-vitals 中的特定指标，在 ",(0,s.jsx)(n.a,{href:"https://github.com/vercel/next.js/blob/442378d21dd56d6e769863eb8c2cb521a463a2e0/packages/next/shared/lib/utils.ts#L43",target:"_blank",rel:"noopener noreferrer",children:"NextWebVitalsMetric"})," 中可以查看："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n} & (\n  | {\n      label: 'web-vital'\n      name: 'FCP' | 'LCP' | 'CLS' | 'FID' | 'TTFB' | 'INP'\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/api-reference/next-config-js",target:"_blank",rel:"noopener noreferrer",children:"https://nextjs.org/docs/app/api-reference/next-config-js"})}),"\n"]})]})}function j(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}let m=j;j.__RSPRESS_PAGE_META={},j.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F34.API%20%E7%AF%87%20_%20next.config.js%EF%BC%88%E4%B8%8B%EF%BC%89.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. assetPrefix",id:"1-assetprefix",depth:2},{text:"2. basePath",id:"2-basepath",depth:2},{text:"3. compress",id:"3-compress",depth:2},{text:"4. devIndicators",id:"4-devindicators",depth:2},{text:"5. distDir",id:"5-distdir",depth:2},{text:"6. env",id:"6-env",depth:2},{text:"7. eslint",id:"7-eslint",depth:2},{text:"8. generateBuildId",id:"8-generatebuildid",depth:2},{text:"9. generateEtags",id:"9-generateetags",depth:2},{text:"10. httpAgentOptions",id:"10-httpagentoptions",depth:2},{text:"11. images",id:"11-images",depth:2},{text:"12. incrementalCacheHandlerPath",id:"12-incrementalcachehandlerpath",depth:2},{text:"13. logging",id:"13-logging",depth:2},{text:"14. mdxRs",id:"14-mdxrs",depth:2},{text:"15. onDemandEntries",id:"15-ondemandentries",depth:2},{text:"16. optimizePackageImports",id:"16-optimizepackageimports",depth:2},{text:"17. output",id:"17-output",depth:2},{text:"18. pageExtension",id:"18-pageextension",depth:2},{text:"19. 局部渲染",id:"19-局部渲染",depth:2},{text:"20. poweredByHeader",id:"20-poweredbyheader",depth:2},{text:"21. productionBrowserSourceMaps",id:"21-productionbrowsersourcemaps",depth:2},{text:"22. reactStrictMode",id:"22-reactstrictmode",depth:2},{text:"23. serverComponentsExternalPackages",id:"23-servercomponentsexternalpackages",depth:2},{text:"24. trailingSlash",id:"24-trailingslash",depth:2},{text:"25. transpilePackages",id:"25-transpilepackages",depth:2},{text:"26. turbo",id:"26-turbo",depth:2},{text:"27. typedRouters",id:"27-typedrouters",depth:2},{text:"28. typescript",id:"28-typescript",depth:2},{text:"29. urlImports",id:"29-urlimports",depth:2},{text:"30. 自定义 Webpack 配置",id:"30-自定义-webpack-配置",depth:2},{text:"31. webVitalsAttribution",id:"31-webvitalsattribution",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"34.API 篇 _ next.config.js（下）",headingTitle:"34.API 篇 _ next.config.js（下）",frontmatter:{}}}}]);