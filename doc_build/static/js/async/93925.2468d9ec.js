"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["93925"],{740535:function(e,n,c){e.exports=c.p+"static/image/e4256edb138dc96838c0d52bf4e96d0c.81b0f5d0.webp"},889535:function(e,n,c){c.r(n),c.d(n,{default:()=>X});var s=c(552676),i=c(740453);let r=c.p+"static/image/e61364cc278adeba08bbfe6667685b1d.0605fa1f.webp",a=c.p+"static/image/9b92a7e66e61d255e118918c145f37f7.85011500.webp",d=c.p+"static/image/6450c85b4a0cb085a4bc707a451c6d3d.0913eec9.webp",p=c.p+"static/image/ca9640d9dbd2705c21b97e08326813c2.2984eaad.webp",l=c.p+"static/image/18e2171fa337ee32e4a65f5f06a5a3df.18737e33.webp",t=c.p+"static/image/517deb9c16e49e3c61e1f65463e8b50e.7fadd15b.webp",o=c.p+"static/image/7f07e03477ecf6d4b3bdeced41bc9412.f757d95b.webp",j=c.p+"static/image/d10c2202fe2151f98dc48e95ce66c820.9d377e15.webp",x=c.p+"static/image/5a73fdc1d1f7c4dd022718ef5178a892.4555a7e6.webp",h=c.p+"static/image/fa88d9c5d4cab0282da3a8640ee91dcf.b32bc01a.webp",m=c.p+"static/image/c9e992af9ffeac272dcaadc6dbcd3a10.6e4f6cde.webp",b=c.p+"static/image/11dc61650debb21e3a9c73d85373083e.52b25e38.webp",g=c.p+"static/image/2ee8fa766abf8334d8493979782d8038.068fc9f8.webp",f=c.p+"static/image/d5f98189ae6723cc7cc0326d6bfe6d2b.cab11118.webp",k=c.p+"static/image/8e8af7d1effb5ef977eb8a65dabb058b.1d9f3637.webp",u=c.p+"static/image/63157b3ce41046b9ceece003e973e92e.72912cb6.webp",w=c.p+"static/image/7e23447d186584989315c66af04c4137.9be04844.webp",E=c.p+"static/image/2d944d66c237110ce3a2da03da55b2c6.a8880c6f.webp",_=c.p+"static/image/cc0a3498c7974125259f78a105470194.3b736d13.webp",y=c.p+"static/image/316c7ca0e63d166ada8d8f1896bbe096.653a3c3b.gif",A=c.p+"static/image/578f10dbe8554ba1c44b28f262b5b3ea.d70e38e4.webp",B=c.p+"static/image/e58af1cb064f1a7c9348afacbd514b04.ba61b0b2.webp",R=c.p+"static/image/a282dbdc6655701dac240806518265b3.caa5847c.webp",v=c.p+"static/image/3e809fba272fbac72e3e25e090e7f8b7.52ce21ac.webp",D=c.p+"static/image/cc7aed865908cabca61f6701fc9662c6.31b6153b.webp",O=c.p+"static/image/bc1e8afa4a42a3c5f6f6510569620d48.a1fe3af5.webp",S=c.p+"static/image/814034b2e3282462732fba4dc339374a.5090a11f.webp",N=c.p+"static/image/981e24281d184aa74aec512a15d4c60c.2dfb9b78.webp",q=c.p+"static/image/d8c5dd7383ee8d3264c0ff731d7cfff5.3972be59.webp",C=c.p+"static/image/275cbdf08c110b1bd84d0dbef8153dca.9030d437.webp",P=c.p+"static/image/09499823b2810ddb854d7b219f7bd3f1.db9f36f8.webp",M=c.p+"static/image/116e7625caf26d3bd69fe788607654b6.30d9afab.webp",F=c.p+"static/image/5212b44a8b33ad0af4253b449e3d1022.5fb35390.webp",Y=c.p+"static/image/5bd6ddd4341a06c6be95d1687f96d864.24d1b2dc.webp",T=c.p+"static/image/99d24f1a6d6cff5d331bf82e9e306205.2e4543c1.webp",U=c.p+"static/image/406c1cb4a1f40303b9e95d2e6fb1e37e.4ed56d6a.webp",G=c.p+"static/image/f1d697ebaa7a2314654d6f0ed8043480.c863dd53.webp",Q=c.p+"static/image/46c1f3a5bd9f95b8522fc1346a19b542.32af87a2.webp",z=c.p+"static/image/987549973e83751354161ffd6658a45c.67a86be3.webp",L=c.p+"static/image/41ee69461bd58d63e5cb76d1b14f0232.dd22e656.webp";var W=c(740535);function I(e){let n=Object.assign({p:"p",img:"img",a:"a",pre:"pre",code:"code",h2:"h2"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"项目写完了，本地跑没啥问题，我们最终是要把它部署到服务器上，跑起来。"}),"\n",(0,s.jsx)(n.p,{children:"我们会用到 mysql、redis、nginx，它们是这样的关系："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:W,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"前端代码由 nginx 托管，处理静态请求。"}),"\n",(0,s.jsx)(n.p,{children:"并且后端服务也会经过 nginx 做反向代理，这样可以做多个 Nest 服务的负载均衡。"}),"\n",(0,s.jsx)(n.p,{children:"Nginx、Mysql、Redis、Nest 服务等都是通过 docker 来跑。"}),"\n",(0,s.jsx)(n.p,{children:"当然，不用一个个的跑，可以通过 Docker Compose 把它们组合成一个整体，一起跑。"}),"\n",(0,s.jsx)(n.p,{children:"开发完之后，本地把代码 push 到 github、gitlab 等代码仓库。"}),"\n",(0,s.jsx)(n.p,{children:"之后服务器上把代码 pull 下来，然后用 docker compose 跑就行。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:L,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"有了 docker，根本不用考虑 mysql、redis、node 等在 linux 下怎么装，直接跑 docker 镜像就行。"}),"\n",(0,s.jsx)(n.p,{children:"是不是再次感受到了 docker 的好处？"}),"\n",(0,s.jsx)(n.p,{children:"此外，还有一点要注意，线上不能开启 typeorm 的 synchronize，这样代码一改就同步修改了表结构，容易导致数据丢失。"}),"\n",(0,s.jsx)(n.p,{children:"线上会用 migration 迁移来做。"}),"\n",(0,s.jsxs)(n.p,{children:["详细的 migration 介绍看",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7226988578700525605/section/7336184436872085531",target:"_blank",rel:"noopener noreferrer",children:"这节"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"我们一步步来做，首先，在本地用 docker compose 跑一下:"}),"\n",(0,s.jsx)(n.p,{children:"在后端项目的根目录添加 docker-compose.yml 文件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"version: '3.8'\nservices:\n  nest-app:\n    build:\n      context: ./\n      dockerfile: ./Dockerfile\n    depends_on:\n      - mysql-container\n      - redis-container\n    ports:\n      - 3005:3005\n    networks:\n      - common-network\n  mysql-container:\n    image: mysql\n    volumes:\n      - /Users/guang/mysql-data:/var/lib/mysql\n    environment:\n      MYSQL_DATABASE: meeting_room_booking_system\n      MYSQL_ROOT_PASSWORD: guang\n    networks:\n      - common-network\n  redis-container:\n    image: redis\n    volumes:\n      - /Users/guang/redis-data:/data\n    networks:\n      - common-network\nnetworks:\n  common-network:\n    driver: bridge\n"})}),"\n",(0,s.jsx)(n.p,{children:"有 3 个 docker 容器，nest-app、mysql-container、redis-container"}),"\n",(0,s.jsx)(n.p,{children:"nest-app 是通过 Dockerfile 构建出来的，暴露 3005 端口。"}),"\n",(0,s.jsx)(n.p,{children:"nest-app 依赖 redis-container 和 mysql-container"}),"\n",(0,s.jsx)(n.p,{children:"redis-container 指定挂载的 volume 数据卷，以及 MYSQL_DATABASE（自动创建的 database） 和 MYSQL_ROOT_PASSWORD（root 用户密码） 的环境变量"}),"\n",(0,s.jsx)(n.p,{children:"mysql-container 指定挂载的 volume 数据卷"}),"\n",(0,s.jsx)(n.p,{children:"然后这是三个容器放到同一个桥接网络里。"}),"\n",(0,s.jsx)(n.p,{children:"在根目录添加 Dockerfile："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-docker",children:'FROM node:18.0-alpine3.14 as build-stage\n\nWORKDIR /app\n\nCOPY package.json .\n\nRUN npm config set registry https://registry.npmmirror.com/\n\nRUN npm install\n\nCOPY . .\n\nRUN npm run build\n\n# 129. 会议室预订系统：后端项目部署到阿里云\nFROM node:18.0-alpine3.14 as production-stage\n\nCOPY --from=build-stage /app/dist /app\nCOPY --from=build-stage /app/package.json /app/package.json\n\nWORKDIR /app\n\nRUN npm config set registry https://registry.npmmirror.com/\n\nRUN npm install --production\n\nEXPOSE 3005\n\nCMD ["node", "/app/main.js"]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Nest 如何写 Dockerfile ",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7226988578700525605/section/7236247409871814714",target:"_blank",rel:"noopener noreferrer",children:"前面"}),"也讲过。"]}),"\n",(0,s.jsx)(n.p,{children:"就是用多阶段构建，第一个镜像先复制 package.json，然后安装依赖。"}),"\n",(0,s.jsx)(n.p,{children:"之后执行 npm run build 生成 dist 目录。"}),"\n",(0,s.jsx)(n.p,{children:"接下来第二个镜像复制第一个镜像的 dist 目录和 package.json，然后执行  npm install 并且用 node 跑起来。"}),"\n",(0,s.jsx)(n.p,{children:"改下 .env 文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:z,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"把 localhost 改为 redis-container 和 mysql-container。"}),"\n",(0,s.jsx)(n.p,{children:"还要改一个地方："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:Q,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"加载配置文件的目录要改成拼接 __dirname 和 .env 的路径。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"ConfigModule.forRoot({\n  isGlobal: true,\n  envFilePath: path.join(__dirname, '.env')\n}),\n"})}),"\n",(0,s.jsx)(n.p,{children:"因为 build 出来的代码没有 src 目录，是直接放在 dist 下的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:G,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"加一下 .dockerignore，也就是不会被复制到容器内的文件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ignore",children:"node_modules/\n.vscode/\n.git/\n"})}),"\n",(0,s.jsx)(n.p,{children:"接下来把它跑起来（最好把本地的 mysql 和 redis 容器停掉再跑）："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose up\n"})}),"\n",(0,s.jsx)(n.p,{children:"它会首先根据 Dockerfile 生成 nest-app 的镜像："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后分别跑 mysql-container 和 redis-container 容器："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:T,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"最后可以看到 nest-app 也跑起来了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:Y,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"访问下接口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"可以看到，接口也是没问题的。"}),"\n",(0,s.jsx)(n.p,{children:"如果你改了 Dockerfile 或者 docker-compose.yml 想重新跑的话，需要先把之前的镜像和容器删掉再跑："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker-compose down --rmi all\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"接下来把本地代码 push 到 gitlab 或者 github："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后在服务器上把它拉下来跑下 docker compose up 就行了。"}),"\n",(0,s.jsx)(n.p,{children:"我们买个服务器："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:q,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我选的是 1 核、1G 的买了一周，大家可以根据自己的需要买。"}),"\n",(0,s.jsx)(n.p,{children:"注意要勾选公网 ipv4 地址，不然访问不了公网。"}),"\n",(0,s.jsx)(n.p,{children:"之后进入控制台就可以看到这台服务器了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:O,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点击远程连接："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点立即登录。"}),"\n",(0,s.jsx)(n.p,{children:"我们用 ssh 密钥的方式登录，这里需要一个密钥文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在这里创建："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"创建完会自动下载密钥文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后点击绑定密钥对，也就是用这个密钥来登录的服务器："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这一步会重启服务器。"}),"\n",(0,s.jsx)(n.p,{children:"然后再次远程连接，就可以用这个密钥文件来登录了:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们需要安装 git 和 docker，用 git 下载代码，然后用 docker compose 来跑代码。"}),"\n",(0,s.jsx)(n.p,{children:"安装 git："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"yum install git -y\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"把 github 的代码下下来："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"git clone 你自己的git仓库\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"进入项目目录，跑下 docker compose 就行："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"和我们本地跑一样。"}),"\n",(0,s.jsx)(n.p,{children:"我们安装下 docker："}),"\n",(0,s.jsxs)(n.p,{children:["怎么安装直接看",(0,s.jsx)(n.a,{href:"https://help.aliyun.com/zh/ecs/use-cases/deploy-and-use-docker-on-alibaba-cloud-linux-2-instances",target:"_blank",rel:"noopener noreferrer",children:"阿里云的文档"}),"就行。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"docker 安装好了，设置下开机启动，也是复制文档的命令就行："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后安装 docker compose，同样是直接复制："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"docker compose 安装好了，就把服务跑起来："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker-compose up\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"会先 pull mysql 和 redis 的镜像，然后 build nest 的镜像。"}),"\n",(0,s.jsx)(n.p,{children:"之后就把服务跑起来了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"过程中可以看到，会自动创建一系列的 table："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"因为我们现在还没关掉 synchronize。"}),"\n",(0,s.jsx)(n.p,{children:"因为我们服务跑在 3005 端口，需要在安全组添加一下这个端口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后就可以用公网 ip 访问了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"当然现在的初始化数据还没加，并且创建表也不是用的 migration，用 synchronize 不够安全，这些我们下节再继续搞。"}),"\n",(0,s.jsxs)(n.p,{children:["代码在",(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_backend",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这节我们完成了阿里云的部署。"}),"\n",(0,s.jsx)(n.p,{children:"写了 docker-compose.yml 和 Nest 应用的 Dockerfile，在本地用 docker compose 跑没问题。"}),"\n",(0,s.jsx)(n.p,{children:"然后服务器上也是用同样的方式跑。"}),"\n",(0,s.jsx)(n.p,{children:"买了一台阿里云服务器，安装 git 来下载项目代码，然后安装 docker compose 把服务跑起来就行了。"}),"\n",(0,s.jsx)(n.p,{children:"部署成功之后，我们的服务就可以在世界各地访问了。"})]})}function K(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(I,{...e})}):I(e)}let X=K;K.__RSPRESS_PAGE_META={},K.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F129.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"",headingTitle:"",frontmatter:{}}}}]);