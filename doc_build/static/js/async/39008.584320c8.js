"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["39008"],{477749:function(e,n,s){s.r(n),s.d(n,{default:()=>r});var i=s(552676),l=s(740453);function c(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",pre:"pre",code:"code",ul:"ul",li:"li",h4:"h4",strong:"strong",blockquote:"blockquote"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"8wxml与wxss",children:["8.WXML与WXSS",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8wxml与wxss",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"22-wxml与wxss",children:["2.2 WXML与WXSS",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-wxml与wxss",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"WXML（WeiXin Markup Language）是小程序框架设计的标签语言，结合基础组件、事件系统，可以构建出小程序页面的结构；WXSS (WeiXin Style Sheets)是小程序的样式语言，用于描述 WXML 的组件样式。"}),"\n",(0,i.jsxs)(n.h3,{id:"221-编辑wxml文件",children:["2.2.1 编辑WXML文件",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#221-编辑wxml文件",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"我们在开发者工具里打开之前修改的模板小程序home文件夹下的home.wxml，里面有如下代码"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"\x3c!--pages/home/home.wxml--\x3e\n<text>pages/home/home.wxml</text>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["这个第1行，是一句注释，也就是一句说明，不会显示在小程序的前端，第2行就是一个**","组件**。"]}),"\n",(0,i.jsxs)(n.p,{children:["接下来我们会广泛使用到小程序的","组件。比如我们在上面的代码下面加一下下面的代码，大家再来看效果："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<view>\n	<view>\n		<view>WXML 模板</view>\n		<view>从事过网页编程的人知道，网页编程采用的是 HTML + CSS + JS 这样的组合，其中 HTML 是用来描述当前这个页面的结构，CSS 用来描述页面的样子，JS 通常是用来处理这个页面和用户的交互。</view>\n	</view>\n</view>\n"})}),"\n",(0,i.jsx)(n.p,{children:"大家可以结合上面的代码，来了解一下组件的基本写法"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["组件和","组件类似，他们都是成对出现的，比如","，","，两个要一起写，有前面的开始标签，后面就要有一个闭合标签，闭合标签前面有一个“/”"]}),"\n",(0,i.jsx)(n.li,{children:"view组件是可以嵌套写的，"}),"\n",(0,i.jsx)(n.li,{children:"为了让视觉上更好看，写代码的时候要有缩进（虽然不缩进也不会有影响）"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"我们可以把这个页面写的更加复杂一点。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<view>\n	<view>\n		<view>\n			<view>技术学习说明</view>\n			<view>技术和我们以往所接触的一些知识有很大的不同，比如英文非常强调词汇量，需要你多说多背；数学需要你记住公式，反复练习；在教学的方式上也有很大的不同，以前都是有专门的老师手把手教你，而且还有同学交流。那要学好技术，应该依循什么样的学习方法和教学方法呢？\n			</view>\n		</view>\n		<view>\n			<view>\n				<view>自学而非手把手</view>\n				<view>技术的方向众多，而且知识点也是非常庞杂，需要你具备一定的自学能力，所谓自学能力就是要求你遇到问题能够勤于思考，擅于搜索，能够不断实践探索。在实际工作中，也要求你能根据技术文档可以迅速掌握前沿的技术，而同事不会有时间教你，如果没有自学能力，是很难胜任很多工作的。\n				</view>\n			</view>\n			<view>\n				<view>查阅文档而非死记知识点</view>\n				<view>在高中一学期一门课只有很薄的一本书，老师会反复讲解知识点，强化你的记忆，考试也是闭卷；而技术一个很小的分支，内容就有几千页甚至更多，强记知识点显然不合适。学习技术要像查词典一样来查阅技术文档，你只需要掌握基本的语法和用法，在编程的时候随时查阅，就像你不需要背诵上万的单词也能知道它的意思用法一样，所以技术文档是学习技术最为重要的参考资料。\n				</view>\n			</view>\n			<view>\n				<view>实战而非不动手的看书</view>\n				<view>技术是最强调结果的技能，你看了再多书，如果不知道技术成品是怎么写出来的，都是枉然。很多朋友有收集癖，下载了很多电子资源，收藏了很多高赞的技术文章，但是却没有动手去消化去理解，把时间和精力都浪费了。不动手在开发者工具里去写代码，不动手配置开发环境，缺乏实战的经验，都是阻碍你学好技术的坏习惯。\n				</view>\n			</view>\n			<view>\n				<view>搜索而非做伸手党</view>\n				<view>在以前，我们遇到技术问题，我们可以问老师问同学，于是很多人把这种不良的习惯也带到了技术的学习当中，遇到问题也总喜欢求助于别人。技术的方向众多，环境复杂，问题也是很多，如果你总是依赖别人的解答，是很难学好技术的。一定要学会在网上通过搜索遇到的问题来找答案。\n				</view>\n			</view>\n			<view>\n				<view>团队协作，而非单打独斗</view>\n				<view>一个产品涉及的技术非常多，需要很多人来一起配合才能开发好，所以学习技术的时候我们需要了解一些代码规范、工作的流程、项目管理等，在技术方面也会有API接口，接口文档这些，还要懂得如何和同职业的同事以及不同角色的人如设计师等一起配合，而不是自己一个人单打独斗。\n				</view>\n			</view>\n			<view>\n				<view>系统的指导而非茫然无序</view>\n				<view>学好技术最依赖你自学，但是如果没有人指导你，你可能会像苍蝇一样陷入众多资料中茫然无序，抓不住一个技术的重点，也不清楚哪些技术才值得你深入学习，最好是有经验的人可以指点你应该看什么，学什么，什么才是重点，当然不是手把手教你。\n				</view>\n			</view>\n		</view>\n	</view>   \n</view>\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"222-wxss选择器",children:["2.2.2 WXSS选择器",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#222-wxss选择器",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["大家是不是已经发现我们写的小程序页面有点丑？那我们需要对这个小程序页面进行美化。但是我们的代码里面","组件这么多，要是不对每个组件进行区分，就很难对每个组件进行美化了。"]}),"\n",(0,i.jsxs)(n.h4,{id:"1id与class选择器",children:["1、id与class选择器",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1id与class选择器",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["这个时候我们就要先了解一下选择器的概念。选择器是用来干什么的呢？从名字里我们就可以看出来，就是为了选择。比如学校有1000个人，我们要选择出其中一个人，那我们可以给所有人一个学号，这个学号是唯一的，我们可以称这个学号为",(0,i.jsx)(n.strong,{children:"id"}),"，用于精准的选择；还有的时候我们需要对一群人进行分类选择，比如整个班级或者所有男生，这个班级、性别，我们可以称为",(0,i.jsx)(n.strong,{children:"class"}),"，用于分类选择。"]}),"\n",(0,i.jsx)(n.p,{children:"在wxss技术文档这里有关于选择器的描述。"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"技术文档"}),"：",(0,i.jsx)(n.a,{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html",target:"_blank",rel:"noopener noreferrer",children:"WXSS技术文档"})]}),"\n",(0,i.jsxs)(n.h4,{id:"2给组件增加属性",children:["2、给组件增加属性",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2给组件增加属性",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"比如上面的view组件实在太多了，为了区分它们，我们给他们加一些属性，这样我们就可以用选择器选择它们了。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<view id="wxmlinfo">\n	<view class="content">\n		<view class="title">WXML 模板</view>\n		<view class="desc">从事过网页编程的人知道，网页编程采用的是 HTML + CSS + JS 这样的组合，其中 HTML 是用来描述当前这个页面的结构，CSS 用来描述页面的样子，JS 通常是用来处理这个页面和用户的交互。\n		</view>\n	</view>\n</view>\n'})}),"\n",(0,i.jsx)(n.p,{children:"以及比较复杂的那一段代码的view组件也加上属性。给组件添加属性在外观上并不会有什么效果哦~"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<view id="studyweapp">\n	<view class="content">\n		<view class="header">\n			<view class="title">技术学习说明</view>\n			<view class="desc">技术和我们以往所接触的一些知识有很大的不同，比如英文非常强调词汇量，需要你多说多背；数学需要你记住公式，反复练习；在教学的方式上也有很大的不同，以前都是有专门的老师手把手教你，而且还有同学交流。\n			那要学好技术，应该依循什么样的学习方法和教学方法呢？\n			</view>\n		</view>\n		<view class="lists">\n			<view class="item">\n				<view class="item-title">自学而非手把手</view>\n				<view class="item-desc">技术的方向众多，而且知识点也是非常庞杂，需要你具备一定的自学能力，所谓自学能力就是要求你遇到问题能够勤于思考，擅于搜索，能够不断实践探索。在实际工作中，也要求你能根据技术文档可以迅速掌握前沿的技术，而同事不会有时间教你，如果没有自学能力，是很难胜任很多工作的。\n				</view>\n			</view>\n			<view class="item">\n				<view class="item-title">查阅文档而非死记知识点</view>\n				<view class="item-desc">在高中一学期一门课只有很薄的一本书，老师会反复讲解知识点，强化你的记忆，考试也是闭卷；而技术一个很小的分支，内容就有几千页甚至更多，强记知识点显然不合适。学习技术要像查词典一样来查阅技术文档，你只需要掌握基本的语法和用法，在编程的时候随时查阅，就像你不需要背诵上万的单词也能知道它的意思用法一样，所以技术文档是学习技术最为重要的参考资料。\n				</view>\n			</view>\n			<view class="item">\n				<view class="item-title">实战而非不动手的看书</view>\n				<view class="item-desc">技术是最强调结果的技能，你看了再多书，如果不知道技术成品是怎么写出来的，都是枉然。很多朋友有收集癖，下载了很多电子资源，收藏了很多高赞的技术文章，但是却没有动手去消化去理解，把时间和精力都浪费了。不动手在开发者工具里去写代码，不动手配置开发环境，缺乏实战的经验，都是阻碍你学好技术的坏习惯。\n				</view>\n			</view>\n			<view class="item">\n				<view class="item-title">搜索而非做伸手党</view>\n				<view class="item-desc">在以前，我们遇到技术问题，我们可以问老师问同学，于是很多人把这种不良的习惯也带到了技术的学习当中，遇到问题也总喜欢求助于别人。技术的方向众多，环境复杂，问题也是很多，如果你总是依赖别人的解答，是很难学好技术的。一定要学会在网上通过搜索遇到的问题来找答案。\n				</view>\n			</view>\n			<view class="item">\n				<view class="item-title">团队协作，而非单打独斗</view>\n				<view class="item-desc">一个产品涉及的技术非常多，需要很多人来一起配合才能开发好，所以学习技术的时候我们需要了解一些代码规范、工作的流程、项目管理等，在技术方面也会有API接口，接口文档这些，还要懂得如何和同职业的同事以及不同角色的人如设计师等一起配合，而不是自己一个人单打独斗。</view>\n			</view>\n			<view class="item">\n				<view class="item-title">系统的指导而非茫然无序</view>\n				<view class="item-desc">学好技术最依赖你自学，但是如果没有人指导你，你可能会像苍蝇一样陷入众多资料中茫然无序，抓不住一个技术的重点，也不清楚哪些技术才值得你深入学习，最好是有经验的人可以指点你应该看什么，学什么，什么才是重点，当然不是手把手教你。\n				</view>\n			</view>\n		</view>\n	</view>   \n</view>\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["大家在学习的过程中，要随时在开发者工具的模拟器上查看效果，也要经常用微信扫码",(0,i.jsx)(n.strong,{children:"预览"}),"所生成的二维码来查看效果，千万不要只看教程怎么说，而是自己要动手去实战。"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"223-css参考手册",children:["2.2.3 CSS参考手册",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#223-css参考手册",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["给wxml文件的组件加了选择器之后，我们就可以在wxss文件里给指定的某个","组件以及某类","组件添加一些美化了，这里我们需要编辑home.wxss文件。wxss美化的知识和css是一样的，所以小程序的技术文档里面没有，大家可以看一下w3shool的CSS参考手册。CSS文件的作用就是来美化组件的。"]}),"\n",(0,i.jsxs)(n.p,{children:["技术文档：",(0,i.jsx)(n.a,{href:"http://www.w3school.com.cn/cssref/index.asp",target:"_blank",rel:"noopener noreferrer",children:"CSS参考手册"})]}),"\n",(0,i.jsxs)(n.p,{children:["这里大家只需要了解CSS的",(0,i.jsx)(n.strong,{children:"字体属性"}),"、",(0,i.jsx)(n.strong,{children:"文本属性"}),"、",(0,i.jsx)(n.strong,{children:"背景属性"}),"、",(0,i.jsx)(n.strong,{children:"边框属性"}),"、",(0,i.jsx)(n.strong,{children:"盒模型"})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["CSS涉及的知识点非常多，现在大家也只需要知道有这些概念即可，学技术千万不要在",(0,i.jsx)(n.strong,{children:"没有看到实际效果的情况下"}),"来死记概念。概念没有记住一点关系都没有，因为大家可以随时来查文档。接下来我们也会有实际的例子让大家看到效果，大家想深入学习的时候可以回头再看这些文档。"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"224-字体属性与文本属性",children:["2.2.4 字体属性与文本属性",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#224-字体属性与文本属性",children:"#"})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"下面这些关于CSS的基础知识点，大家可以结合我们是如何调整Word、PPT的样式的来理解，比如我们是怎么调整文本的大小、颜色、粗细等等的，添加样式的时候要注意随手实战了解了效果再说。"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["比如class为title的","组件里面的文字是标题，我们需要对标题的字体进行加大、加粗以及居中处理，这时候我们就可以在home.wxss文件里加入以下代码，然后大家看看有什么效果。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".title{\n  font-size: 20px; \n  font-weight: 600;\n  text-align: center;\n  }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["通过 .title这个选择器，我们就选择到了类class为 title的","组件，然后就可以精准地对它进行美化，对它的美化代码不会用在其他组件上了。"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"大家也要留意css的写法，这里font-size，font-weight，text-align外面称之为属性，冒号:后面的我们称之为值，属性:值这一整个我们叫做声明，每个声明我们用分号;隔开。大家不要记这些概念，知道是个什么东西就行了。"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["class为item-title的","组件里面的文字是一个列表的标题，我们希望它和其他文字的样式有所不同，不过这个标题要比title的字体小一些；比其他文字更粗，但是比title更细；颜色我们可以添加一个彩色字体，"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".item-title{\n  font-size:18px;\n  font-weight:500;\n  color: #c60;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"我们希望描述类的文字颜色浅一点，不要那么黑，我们可以换一个浅一点的颜色，我们在home.wxss下面继续加代码。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".desc,.item-desc{\n  color: #333;\n}\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"大家注意，我们这里有两个选择器，一个是desc，一个是item-desc，当我们希望两个不同的选择器有相同的css代码时，可以简化一起写，然后用逗号,隔开。"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["除了标题（class为title和item-title的","组件）我们都给他们加了字体大小，我们希望所有的文字大小、行间距有一个统一的设定。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"#wxmlinfo,#studyweapp{\n  font-size:16px;\n  font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;\n  line-height: 1.6;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"为了大家方便查阅技术文档，我们把这些常用的css技术文档整理到以下表格，方便大家更深入的去学习。"}),"\n",(0,i.jsxs)(n.h3,{id:"225-盒模型",children:["2.2.5 盒模型",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#225-盒模型",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"大家有没有发现段落之间的距离、文字之间的距离，以及与边框之间的距离都比较拥挤？这个时候就需要用到盒子模型啦。盒子模型就像一个长方形的盒子，它有长度、高度、也有边框，以及内边距与外边距。我们通过实战来了解一下。"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"长度、高度、边框我们比较好理解，那这个内边距和外边距是什么意思呢？"}),"\n",(0,i.jsx)(n.p,{children:"内边距就是这个长方形的边框与长方形里面的内容之间的距离，有上边距，右边距、下边距、左边距这个四个内边距，分别为padding-top，padding-right，padding-bottom，padding-left。注意是上、右、下、左，这样一个顺时针。"}),"\n",(0,i.jsx)(n.p,{children:"那外边距就是这个长方形的边框与长方形外面的内容之间的距离，同样也有上边距margin-top，右边距margin-right，下边距margin-bottom，左边距margin-left这个四个边距。同样也是上、右、下、左这个顺时针。"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["比如我们给id为wxmlinfo和studyweapp的","组件加一个内部距，让文字"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"#wxmlinfo,#studyweapp{\n  padding-top:20px;\n  padding-right:15px;\n  padding-bottom:20px;\n  padding-left:15px;\n}\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"padding的简写"})," 上面这四个padding是可以做一定的简写的，关于padding的简写，大家可以去阅读以下技术文档，多用就会了，",(0,i.jsx)(n.a,{href:"http://www.w3school.com.cn/cssref/pr_padding.asp",target:"_blank",rel:"noopener noreferrer",children:"CSS padding属性\xa0"}),"，在这里有四个padding简写的案例，比如上面的这四条声明可以简写成padding:20px 15px。大家可以业余深入了解一下。"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"class为title的view组件是标题，我们希望它和下面的文字距离大一点，我们可以添加以下样式:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".title,.item-title{\n  margin-bottom:0.9em;\n  }\n"})}),"\n",(0,i.jsx)(n.p,{children:"这里咋又冒出了一个em的单位，em是相对于当前字体尺寸而言的单位，如果当前你的字体大小为16px，那1em为16px；如果当前你的字体大小为18px，那1em为18px。"}),"\n",(0,i.jsxs)(n.p,{children:["为了让class为item-title的","组件，也就是列表的标题更加突出，我们可以给它左边加一个边框，"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".item-title{\n  border-left: 3px solid #c60;\n  padding-left: 15px;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"这样，小程序的一篇文章的样式看起来就算马马虎虎可以接受啦~为了便于大家查阅，我们也把盒子模型的三类属性整合在了一起"}),"\n",(0,i.jsx)(n.p,{children:"更多的设计样式，大家可以根据上面的技术文档，在开发者工具里像做实验一样的来测试学习。"})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}let r=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F8.WXML%E4%B8%8EWXSS.md"]={toc:[{text:"2.2 WXML与WXSS",id:"22-wxml与wxss",depth:2},{text:"2.2.1 编辑WXML文件",id:"221-编辑wxml文件",depth:3},{text:"2.2.2 WXSS选择器",id:"222-wxss选择器",depth:3},{text:"1、id与class选择器",id:"1id与class选择器",depth:4},{text:"2、给组件增加属性",id:"2给组件增加属性",depth:4},{text:"2.2.3 CSS参考手册",id:"223-css参考手册",depth:3},{text:"2.2.4 字体属性与文本属性",id:"224-字体属性与文本属性",depth:3},{text:"2.2.5 盒模型",id:"225-盒模型",depth:3}],title:"8.WXML与WXSS",headingTitle:"8.WXML与WXSS",frontmatter:{}}}}]);