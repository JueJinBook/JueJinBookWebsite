"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["76388"],{842068:function(n,e,a){n.exports=a.p+"static/image/a178fc12d97294e266a11fcd243e6f40.7a95e738.webp"},215187:function(n,e,a){n.exports=a.p+"static/image/de5194dcabbbe57e60b03b0d0bd51505.b69df9d6.webp"},652041:function(n,e,a){a.r(e),a.d(e,{default:()=>S});var s=a(552676),r=a(740453);let t=a.p+"static/image/b9d560d48ef75bb9e1cac85cb7e844df.e4c9a619.webp",c=a.p+"static/image/2d34245617573ef7da849ad8afc5b6c9.0724a15f.webp",i=a.p+"static/image/d1a9fcdd6a3d248aa7b5ff48a4466b01.454e53b5.webp",d=a.p+"static/image/a90efb254ae7898c5344d86d8ae2759b.dd8cd90d.webp",o=a.p+"static/image/ae90effc67c8718f46e78ce141b5dfcf.21c09bec.gif",l=a.p+"static/image/c79d9b7cad7472253b2270566d62d50e.a8e3df40.webp",p=a.p+"static/image/2b758e69dab323386e2121359ad518b1.c3a83d94.webp",m=a.p+"static/image/86e487e1b4dee7db831153a542beb533.18066c6e.webp",u=a.p+"static/image/cdb846c8de66ec823b9273aefca1281e.b1edd143.webp";var f=a(215187);let h=a.p+"static/image/2926129011ceede3ec3558971ce5b327.cbaab007.gif",x=a.p+"static/image/e691115195b5846d776190c69eb12f3b.20d74f31.webp",g=a.p+"static/image/03b637c7f8c13913ff9c7348db2c5ef0.06039e93.webp",j=a.p+"static/image/75abf1f77353c395ee567097d7d3b380.c774adcd.webp",b=a.p+"static/image/538f7c6e3a4a6e55ff9f60387467a063.3ab82d97.webp",w=a.p+"static/image/b01b8054e8b91ba26d9b40824758b9a3.72118efc.webp",y=a.p+"static/image/2daa37531e38b2b63c1752d3571ebed6.af8d8b6a.webp",v=a.p+"static/image/9ab18f897c85559331667400c288f180.73c91b93.gif",I=a.p+"static/image/04de3336cb953728baef2dd4fbf38ce0.cf288bae.webp";var F=a(842068);let E=a.p+"static/image/47f0e0190bb953b01ad9c6d2677793ff.498d5bdb.gif",P=a.p+"static/image/fd0243bf107421d021bd8f85217a0e23.759601ba.webp",N=a.p+"static/image/0fbde22d900595683e4d2c2014f89119.9ebaa716.gif",C=a.p+"static/image/d399a71eb9a1de549175a13d3eb60ed7.ca424fc2.webp",k=a.p+"static/image/2b1cec31eeff8e9421d001dc47fb4d5f.7eec38ea.gif",A=a.p+"static/image/21229e2331a8628c00dab2e97ba05164.c5e183b3.gif",_=a.p+"static/image/09c9d3f8451264c7c4d0af0d4d671822.acedeb8b.webp",M=a.p+"static/image/c267ccdc6c1dde6fa3df60634dc45951.90900947.webp",B=a.p+"static/image/bc6c093eaec6c2d97ee86be16cde97c8.aa10506e.webp",U=a.p+"static/image/466e2657e8e6566e2748b590fba3e600.255c2d55.webp",q=a.p+"static/image/7ada4b3b91818277cc6d8c6d7b7fb039.fc0704cf.webp",D=a.p+"static/image/b2731d8caba84a70ee538bf486f4482f.2483e7dd.webp";function H(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,r.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"120-会议室预订系统用户管理模块---管理端信息修改页面",children:["120. 会议室预订系统：用户管理模块-- 管理端信息修改页面",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#120-会议室预订系统用户管理模块---管理端信息修改页面",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节，我们来写管理端的这两个页面："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"很明显，它们是和这几个管理页面平级的，点击用户图标的时候打开："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"所以，我们在它平级添加个路由："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:q,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"{\n    path: \"/user\",\n    element: <ModifyMenu></ModifyMenu>,\n    children: [\n      {\n        path: 'info_modify',\n        element: <InfoModify/>\n      },\n      {\n        path: 'password_modify',\n        element: <PasswordModify/>\n      },\n    ]\n},\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后创建这几个对应的组件："}),"\n",(0,s.jsx)(e.p,{children:"src/pages/ModifyMenu/ModifyMenu.stx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import { Outlet } from \"react-router-dom\";\nimport { Menu as AntdMenu, MenuProps } from 'antd';\nimport './menu.css';\n\nconst items: MenuProps['items'] = [\n    {\n        key: '1',\n        label: \"信息修改\"\n    },\n    {\n        key: '2',\n        label: \"密码修改\"\n    }\n];\n\nexport function ModifyMenu() {\n    return <div id=\"menu-container\">\n        <div className=\"menu-area\">\n            <AntdMenu\n                defaultSelectedKeys={['1']}\n                items={items}\n            />\n        </div>\n        <div className=\"content-area\">\n            <Outlet></Outlet>\n        </div>\n    </div>\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"用到的 menu.css："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:"#menu-container {\n    display: flex;\n    flex-direction: row;\n}\n#menu-container .menu-area {\n    width: 200px;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后是"}),"\n",(0,s.jsx)(e.p,{children:"src/pages/InfoModify/InfoModify.tsx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"export function InfoModify() {\n    return <div>InfoModify</div>\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"src/pages/PasswordModify/PasswordModify.tsx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"export function PasswordModify() {\n    return <div>PasswordModify</div>\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"在 index.tsx 引入，然后跑一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,s.jsx)(e.p,{children:"但是现在点击菜单是没反应的，我们给它加上 click 事件。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const handleMenuItemClick: MenuClickEventHandler = (info) => {\n    if(info.key === '1') {\n        router.navigate('/user/info_modify')\n    } else {\n        router.navigate('/user/password_modify')\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这里用到的 router 要在 index.tsx 里导出："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"测试下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"点击菜单可以切换路由了。"}),"\n",(0,s.jsx)(e.p,{children:"但现在有个问题，页面一刷新，选中的菜单项就变了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"我们需要根据当前路由来决定选中哪个："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这里用到了 react-router 的 useLocation 的 hook 来拿到当前地址："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"location.pathname === '/user/info_modify' ? ['1'] : ['2']\n"})}),"\n",(0,s.jsx)(e.p,{children:"这样，刷新之后选中的菜单项也是对的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"改下 Index 组件，添加两个链接："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:'<div className="header">\n    <Link to="/" className="sys_name">\n        <h1>会议室预定系统-后台管理</h1>\n    </Link>\n    <Link to="/user/info_modify">\n        <UserOutlined className="icon"/>\n    </Link>\n</div>\n'})}),"\n",(0,s.jsx)(e.p,{children:"并且添加它的样式："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:"#index-container .sys_name {\n    text-decoration: none;\n    color: #000;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这样就可以方便跳转对应的路由了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后，我们来实现信息修改页面："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"之前用户端修改信息页面也是类似的，我们直接拿过来就行："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { Button, Form, Input, message } from \'antd\';\nimport { useForm } from \'antd/es/form/Form\';\nimport { useCallback, useEffect, useState } from \'react\';\nimport \'./info_modify.css\';\nimport { useNavigate } from \'react-router-dom\';\nimport { HeadPicUpload } from \'./HeadPicUpload\';\n\nexport interface UserInfo {\n    username: string;\n    headPic: string;\n    nickName: string;\n    email: string;\n    captcha: string;\n}\n\nconst layout1 = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 }\n}\n\nexport function InfoModify() {\n    const [form] = useForm();\n    const navigate = useNavigate();\n\n    const onFinish = useCallback(async (values: UserInfo) => {\n\n    }, []);\n\n    const sendCaptcha = useCallback(async function () {\n        \n    }, []);\n\n    useEffect(() => {\n        async function query() {\n            \n        }\n        query();\n    }, []);\n\n    return <div id="updateInfo-container">\n        <Form\n            form={form}\n            {...layout1}\n            onFinish={onFinish}\n            colon={false}\n            autoComplete="off"\n        >\n            <Form.Item\n                label="头像"\n                name="headPic"\n                rules={[\n                    { required: true, message: \'请输入头像!\' },\n                ]}\n                shouldUpdate\n            >\n                <HeadPicUpload></HeadPicUpload>\n            </Form.Item>\n\n            <Form.Item\n                label="昵称"\n                name="nickName"\n                rules={[\n                    { required: true, message: \'请输入昵称!\' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label="邮箱"\n                name="email"\n                rules={[\n                    { required: true, message: \'请输入邮箱!\' },\n                    { type: "email", message: \'请输入合法邮箱地址!\'}\n                ]}\n            >\n                <Input disabled/>\n            </Form.Item>\n\n            <div className=\'captcha-wrapper\'>\n                <Form.Item\n                    label="验证码"\n                    name="captcha"\n                    rules={[{ required: true, message: \'请输入验证码!\' }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Button type="primary" onClick={sendCaptcha}>发送验证码</Button>\n            </div>\n\n            <Form.Item\n                {...layout1}\n                label=" "\n            >\n                <Button className=\'btn\' type="primary" htmlType="submit">\n                    修改\n                </Button>\n            </Form.Item>\n        </Form>\n    </div>   \n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"css 部分如下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:"#updateInfo-container {\n    width: 400px;\n    margin: 50px auto 0 auto;\n    text-align: center;\n}\n#updateInfo-container .btn {\n    width: 100%;\n}\n#updateInfo-container .captcha-wrapper {\n    display: flex;\n    justify-content: flex-end;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"用到的 HeadPicUpload 组件如下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { InboxOutlined } from "@ant-design/icons";\nimport { message } from "antd";\nimport Dragger, { DraggerProps } from "antd/es/upload/Dragger";\n\ninterface HeadPicUploadProps {\n    value?: string;\n    onChange?: Function\n}\n\nlet onChange: Function;\n\nconst props: DraggerProps = {\n    name: \'file\',\n    action: \'http://localhost:3005/user/upload\',\n    onChange(info) {\n        const { status } = info.file;\n        if (status === \'done\') {\n            onChange(info.file.response.data);\n            message.success(`${info.file.name} 文件上传成功`);\n        } else if (status === \'error\') {\n            message.error(`${info.file.name} 文件上传失败`);\n        }\n    }\n};\n\nconst dragger = <Dragger {...props}>\n    <p className="ant-upload-drag-icon">\n        <InboxOutlined />\n    </p>\n    <p className="ant-upload-text">点击或拖拽文件到这个区域来上传</p>\n</Dragger>\n\nexport function HeadPicUpload(props: HeadPicUploadProps) {\n\n    onChange = props.onChange!\n\n    return props?.value ? <div>\n        <img src={\'http://localhost:3005/\' + props.value} alt="头像" width="100" height="100"/>\n        {dragger}\n    </div>: <div>\n        {dragger}\n    </div>\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"这些都是我们前面写过一遍的。"}),"\n",(0,s.jsxs)(e.p,{children:["渲染出来是这样的：\n",(0,s.jsx)("img",{src:I,alt:""})]}),"\n",(0,s.jsx)(e.p,{children:"上传功能也是可用的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后我们还要加上回显接口、发送验证码接口、更新接口。"}),"\n",(0,s.jsx)(e.p,{children:"在 interfaces.tsx 加上这三个接口："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"export async function getUserInfo() {\n    return await axiosInstance.get('/user/info');\n}\n\nexport async function updateInfo(data: UserInfo) {\n    return await axiosInstance.post('/user/admin/update', data);\n}\n\nexport async function updateUserInfoCaptcha() {\n    return await axiosInstance.get('/user/update/captcha');\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后先调用下回显接口："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"async function query() {\n    const res = await getUserInfo();\n\n    const { data } = res.data;\n\n    if(res.status === 201 || res.status === 200) {\n\n        form.setFieldValue('headPic', data.headPic);\n        form.setFieldValue('nickName', data.nickName);\n        form.setFieldValue('email', data.email);\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"可以看到，正确回显了数据。"}),"\n",(0,s.jsx)(e.p,{children:"然后是发送验证码接口："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const sendCaptcha = useCallback(async function () {\n    const res = await updateUserInfoCaptcha();\n    if(res.status === 201 || res.status === 200) {\n        message.success(res.data.data);\n    } else {\n        message.error('系统繁忙，请稍后再试');\n    }\n}, []);\n"})}),"\n",(0,s.jsx)(e.p,{children:"不过现在的邮箱地址不是真实的，我们手动去数据库里改一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"改完点击 apply。"}),"\n",(0,s.jsx)(e.p,{children:"然后需要重新登录一遍，因为现在后端会直接从 jwt 里取邮箱地址，重新登录才会更新。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"邮箱收到了验证码："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后加上更新用户信息的接口："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const onFinish = useCallback(async (values: UserInfo) => {\n    const res = await updateInfo(values);\n\n    if(res.status === 201 || res.status === 200) {\n        const { message: msg, data} = res.data;\n        if(msg === 'success') {\n            message.success('用户信息更新成功');\n        } else {\n            message.error(data);\n        }\n    } else {\n        message.error('系统繁忙，请稍后再试');\n    }\n}, []);\n"})}),"\n",(0,s.jsx)(e.p,{children:"上传头像，点击发送验证码，填入收到的验证码，点击修改："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"修改成功后，刷新页面，可以看到依然是修改后的数据，就代表修改成功了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"接下来是密码修改页面："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"代码如下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { Button, Form, Input, message } from \'antd\';\nimport { useForm } from \'antd/es/form/Form\';\nimport \'./password_modify.css\';\nimport { useCallback } from \'react\';\nimport { Link, useNavigate } from \'react-router-dom\';\n\nexport interface UpdatePassword {\n    email: string;\n    captcha: string;\n    password: string;\n    confirmPassword: string;\n}\n\nconst layout1 = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 }\n}\n\nconst layout2 = {\n    labelCol: { span: 0 },\n    wrapperCol: { span: 24 }\n}\n\nexport function PasswordModify() {\n    const [form] = useForm();\n    const navigate = useNavigate();\n\n    const onFinish = useCallback(async (values: UpdatePassword) => {\n\n    }, []);\n\n    const sendCaptcha = useCallback(async function () {\n\n    }, []);\n\n    return <div id="updatePassword-container">\n        <Form\n            form={form}\n            {...layout1}\n            onFinish={onFinish}\n            colon={false}\n            autoComplete="off"\n        >\n            <Form.Item\n                label="密码"\n                name="password"\n                rules={[{ required: true, message: \'请输入密码!\' }]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                label="确认密码"\n                name="confirmPassword"\n                rules={[{ required: true, message: \'请输入确认密码!\' }]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label="邮箱"\n                name="email"\n                rules={[\n                    { required: true, message: \'请输入邮箱!\' },\n                    { type: "email", message: \'请输入合法邮箱地址!\'}\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <div className=\'captcha-wrapper\'>\n                <Form.Item\n                    label="验证码"\n                    name="captcha"\n                    rules={[{ required: true, message: \'请输入验证码!\' }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Button type="primary" onClick={sendCaptcha}>发送验证码</Button>\n            </div>\n\n            <Form.Item\n                {...layout1}\n                label=" "\n            >\n                <Button className=\'btn\' type="primary" htmlType="submit">\n                    修改密码\n                </Button>\n            </Form.Item>\n        </Form>\n    </div>   \n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"用到的 password_modify.css："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:"#updatePassword-container {\n    width: 400px;\n    margin: 40px auto;\n    text-align: center;\n}\n#updatePassword-container .btn {\n    width: 100%;\n}\n#updatePassword-container .captcha-wrapper {\n    display: flex;\n    justify-content: flex-end;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"渲染出来是这样的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后在 interfaces.ts 加上用到的发送验证码、修改密码这两个接口："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"export async function updatePasswordCaptcha(email: string) {\n    return await axiosInstance.get('/user/update_password/captcha', {\n        params: {\n            address: email\n        }\n    });\n}\n\nexport async function updatePassword(data: UpdatePassword) {\n    return await axiosInstance.post('/user/admin/update_password', data);\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后先在页面调用下回显接口："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"useEffect(() => {\n    async function query() {\n        const res = await getUserInfo();\n\n        const { data } = res.data;\n\n        if(res.status === 201 || res.status === 200) {  \n            form.setFieldValue('username', data.username);              \n            form.setFieldValue('email', data.email);\n        }\n    }\n    query();\n}, []);\n"})}),"\n",(0,s.jsx)(e.p,{children:"并把邮箱 Input 设置为 disabled"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样邮箱地址就会回显，并且只读："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后调用发送验证码接口："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const sendCaptcha = useCallback(async function () {\n    const address = form.getFieldValue('email');\n    if(!address) {\n        return message.error('邮箱地址为空');\n    }\n\n    const res = await updatePasswordCaptcha(address);\n    if(res.status === 201 || res.status === 200) {\n        message.success(res.data.data);\n    } else {\n        message.error('系统繁忙，请稍后再试');\n    }\n}, []);\n"})}),"\n",(0,s.jsx)(e.p,{children:"点击发送验证码："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"邮箱收到了对应的验证码："}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("img",{src:d,alt:""}),"\n然后加上修改密码接口："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const onFinish = useCallback(async (values: UpdatePassword) => {\n    if(values.password !== values.confirmPassword) {\n        return message.error('两次密码不一致');\n    }\n\n    const res = await updatePassword({\n        ...values,\n        username: form.getFieldValue('username')\n    });\n\n    const { message: msg, data} = res.data;\n\n    if(res.status === 201 || res.status === 200) {\n        message.success('密码修改成功');\n    } else {\n        message.error(data || '系统繁忙，请稍后再试');\n    }\n}, []);\n"})}),"\n",(0,s.jsx)(e.p,{children:"提示密码修改成功："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"我们可以去登录页面，用老密码试试："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"再用新密码试试："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样，管理端的用户相关的页面就完成了。"}),"\n",(0,s.jsxs)(e.p,{children:["案例代码上传了",(0,s.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_frontend_admin",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,s.jsxs)(e.h2,{id:"总结",children:["总结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节我们实现了管理端的用户信息修改和密码修改的页面。"}),"\n",(0,s.jsx)(e.p,{children:"首先添加了一个和管理页面平级的二级路由，然后添加了两个组件。"}),"\n",(0,s.jsx)(e.p,{children:"这两个页面都是表单，涉及到回显数据、发送验证码、上传文件、更新接口。"}),"\n",(0,s.jsx)(e.p,{children:"这也是管理系统的常见功能。"}),"\n",(0,s.jsx)(e.p,{children:"下节开始，我们就开始写会议室管理的功能了。"})]})}function O(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(H,{...n})}):H(n)}let S=O;O.__RSPRESS_PAGE_META={},O.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F120.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97--%20%E7%AE%A1%E7%90%86%E7%AB%AF%E4%BF%A1%E6%81%AF%E4%BF%AE%E6%94%B9%E9%A1%B5%E9%9D%A2.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"120. 会议室预订系统：用户管理模块-- 管理端信息修改页面",headingTitle:"120. 会议室预订系统：用户管理模块-- 管理端信息修改页面",frontmatter:{}}}}]);