"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["84473"],{28221:function(e,n,d){d.r(n),d.d(n,{default:()=>i});var s=d(552676),c=d(740453);function r(e){let n=Object.assign({h1:"h1",a:"a",p:"p",hr:"hr",code:"code",h4:"h4",pre:"pre",h5:"h5",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h6:"h6",ul:"ul",li:"li",h3:"h3"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"2mysql的调控按钮--启动选项和系统变量",children:["2MySQL的调控按钮 —— 启动选项和系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2mysql的调控按钮--启动选项和系统变量",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"标签： MySQL 是怎样运行的"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["如果你用过手机，你的手机上一定有一个设置的功能，你可以选择设置手机的来电铃声、设置音量大小、设置解锁密码等等。假如没有这些设置功能，我们的生活将置于尴尬的境地，比如在图书馆里无法把手机设置为静音，无法把流量开关关掉以节省流量，在别人得知解锁密码后无法更改密码～ ",(0,s.jsx)(n.code,{children:"MySQL"}),"的服务器程序和客户端程序也有很多设置项，比如对于",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序，我们可以指定诸如允许同时连入的客户端数量、客户端和服务器通信方式、表的默认存储引擎、查询缓存的大小吧啦吧啦的设置项。对于",(0,s.jsx)(n.code,{children:"MySQL"}),"客户端程序，我们之前已经见识过了，可以指定需要连接的服务器程序所在主机的主机名或IP地址、用户名及密码等信息。"]}),"\n",(0,s.jsxs)(n.p,{children:["这些设置项一般都有各自的默认值，比方说服务器允许同时连入的客户端的默认数量是",(0,s.jsx)(n.code,{children:"151"}),"，表的默认存储引擎是",(0,s.jsx)(n.code,{children:"InnoDB"}),"，我们可以在程序启动的时候去修改这些默认值，对于这种在程序启动时指定的设置项也称之为启动选项（startup options），这些选项控制着程序启动后的行为。在",(0,s.jsx)(n.code,{children:"MySQL"}),"安装目录下的",(0,s.jsx)(n.code,{children:"bin"}),"目录中的各种可执行文件，不论是服务器相关的程序（比如",(0,s.jsx)(n.code,{children:"mysqld"}),"、",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"）还是客户端相关的程序（比如",(0,s.jsx)(n.code,{children:"mysql"}),"、",(0,s.jsx)(n.code,{children:"mysqladmin"}),"），在启动的时候基本都可以指定启动参数。这些启动参数可以放在命令行中指定，也可以把它们放在配置文件中指定。下边我们会以",(0,s.jsx)(n.code,{children:"mysqld"}),"为例，来详细唠叨指定启动选项的格式。需要注意的一点是，我们现在要唠叨的是设置启动选项的方式，下边出现的启动选项不论大家认不认识，先不用去纠结每个选项具体的作用是啥，之后我们会对一些重要的启动选项详细唠叨。"]}),"\n",(0,s.jsxs)(n.h4,{id:"在命令行上使用选项",children:["在命令行上使用选项",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#在命令行上使用选项",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果我们在启动客户端程序时在",(0,s.jsx)(n.code,{children:"-h"}),"参数后边紧跟服务器的IP地址，这就意味着客户端和服务器之间需要通过",(0,s.jsx)(n.code,{children:"TCP/IP"}),"网络进行通信。因为我的客户端程序和服务器程序都装在一台计算机上，所以在使用客户端程序连接服务器程序时指定的主机名是",(0,s.jsx)(n.code,{children:"127.0.0.1"}),"的情况下，客户端进程和服务器进程之间会使用",(0,s.jsx)(n.code,{children:"TCP/IP"}),"网络进行通信。如果我们在启动服务器程序的时候就禁止各客户端使用",(0,s.jsx)(n.code,{children:"TCP/IP"}),"网络进行通信，可以在启动服务器程序的命令行里添加",(0,s.jsx)(n.code,{children:"skip-networking"}),"启动选项，就像这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --skip-networking\n"})}),"\n",(0,s.jsxs)(n.p,{children:["可以看到，我们在命令行中指定启动选项时需要在选项名前加上",(0,s.jsx)(n.code,{children:"--"}),"前缀。另外，如果选项名是由多个单词构成的，它们之间可以由短划线",(0,s.jsx)(n.code,{children:"-"}),"连接起来，也可以使用下划线",(0,s.jsx)(n.code,{children:"_"}),"连接起来，也就是说",(0,s.jsx)(n.code,{children:"skip-networking"}),"和",(0,s.jsx)(n.code,{children:"skip_networking"}),"表示的含义是相同的。所以上边的写法与下边的写法是等价的："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --skip_networking\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在按照上述命令启动服务器程序后，如果我们再使用",(0,s.jsx)(n.code,{children:"mysql"}),"来启动客户端程序时，再把服务器主机名指定为",(0,s.jsx)(n.code,{children:"127.0.0.1"}),"（IP地址的形式）的话会显示连接失败："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:" mysql -h127.0.0.1 -uroot -p\nEnter password:\n\nERROR 2003 (HY000): Can't connect to MySQL server on '127.0.0.1' (61)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这就意味着我们指定的启动选项",(0,s.jsx)(n.code,{children:"skip-networking"}),"生效了！"]}),"\n",(0,s.jsxs)(n.p,{children:["再举一个例子，我们前边说过如果在创建表的语句中没有显式指定表的存储引擎的话，那就会默认使用",(0,s.jsx)(n.code,{children:"InnoDB"}),"作为表的存储引擎。如果我们想改变表的默认存储引擎的话，可以这样写启动服务器的命令行："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --default-storage-engine=MyISAM\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们现在就已经把表的默认存储引擎改为",(0,s.jsx)(n.code,{children:"MyISAM"}),"了，在客户端程序连接到服务器程序后试着创建一个表："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> CREATE TABLE sys_var_demo(\n    ->     i INT\n    -> );\nQuery OK, 0 rows affected (0.02 sec)\n"})}),"\n",(0,s.jsx)(n.p,{children:"这个定义语句中我们并没有明确指定表的存储引擎，创建成功后再看一下这个表的结构："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW CREATE TABLE sys_var_demo\\G\n*************************** 1. row ***************************\n       Table: sys_var_demo\nCreate Table: CREATE TABLE `sys_var_demo` (\n  `i` int(11) DEFAULT NULL\n) ENGINE=MyISAM DEFAULT CHARSET=utf8\n1 row in set (0.01 sec)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["可以看到该表的存储引擎已经是",(0,s.jsx)(n.code,{children:"MyISAM"}),"了，说明启动选项",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"生效了。"]}),"\n",(0,s.jsx)(n.p,{children:"所以在启动服务器程序的命令行后边指定启动选项的通用格式就是这样的："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"--启动选项1[=值1] --启动选项2[=值2] ... --启动选项n[=值n]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["也就是说我们可以将各个启动选项写到一行中，各个启动选项之间使用空白字符隔开，在每一个启动选项名称前边添加",(0,s.jsx)(n.code,{children:"--"}),"。对于不需要值的启动选项，比方说",(0,s.jsx)(n.code,{children:"skip-networking"}),"，它们就不需要指定对应的值。对于需要指定值的启动选项，比如",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"我们在指定这个设置项的时候需要显式的指定它的值，比方说",(0,s.jsx)(n.code,{children:"InnoDB"}),"、",(0,s.jsx)(n.code,{children:"MyISAM"}),"啦什么的～ 在命令行上指定有值的启动选项时需要注意，","选项名、=、选项值之间不可以有空白字符","，比如写成下边这样就是不正确的："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --default-storage-engine = MyISAM\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:["每个MySQL程序都有许多不同的选项。大多数程序提供了一个--help选项，你可以查看该程序支持的全部启动选项以及它们的默认值","。例如，使用",(0,s.jsx)(n.code,{children:"mysql --help"}),"可以看到",(0,s.jsx)(n.code,{children:"mysql"}),"程序支持的启动选项，",(0,s.jsx)(n.code,{children:"mysqld_safe --help"}),"可以看到",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"程序支持的启动选项。查看",(0,s.jsx)(n.code,{children:"mysqld"}),"支持的启动选项有些特别，需要使用",(0,s.jsx)(n.code,{children:"mysqld --verbose --help"}),"。"]}),"\n",(0,s.jsxs)(n.h5,{id:"选项的长形式和短形式",children:["选项的长形式和短形式",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#选项的长形式和短形式",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们前边提到的",(0,s.jsx)(n.code,{children:"skip-networking"}),"、",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"称之为长形式的选项（因为它们很长），设计",(0,s.jsx)(n.code,{children:"MySQL"}),"的大叔为了我们使用的方便，对于一些常用的选项提供了短形式，我们列举一些具有短形式的启动选项来瞅瞅（",(0,s.jsx)(n.code,{children:"MySQL"}),"支持的短形式选项太多了，全列出来会刷屏的）："]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{align:"center",children:"长形式"}),"\n",(0,s.jsx)(n.th,{align:"center",children:"短形式"}),"\n",(0,s.jsx)(n.th,{align:"left",children:"含义"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"--host"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"-h"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"主机名"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"--user"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"-u"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"用户名"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"--password"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"-p"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"密码"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"--port"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"-P"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"端口"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"--version"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"-V"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"版本信息"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["短形式的选项名只有一个字母，与使用长形式选项时需要在选项名前加两个短划线",(0,s.jsx)(n.code,{children:"--"}),"不同的是，使用短形式选项时在选项名前只加一个短划线",(0,s.jsx)(n.code,{children:"-"}),"前缀。有一些短形式的选项我们之前已经接触过了，比方说我们在启动服务器程序时指定监听的端口号："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld -P3307\n"})}),"\n",(0,s.jsxs)(n.p,{children:["使用短形式指定启动选项时，选项名和选项值之间可以没有间隙，或者用空白字符隔开（",(0,s.jsx)(n.code,{children:"-p"}),"选项有些特殊，",(0,s.jsx)(n.code,{children:"-p"}),"和密码值之间不能有空白字符），也就是说上边的命令形式和下边的是等价的："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld -P 3307\n"})}),"\n",(0,s.jsxs)(n.p,{children:["另外，选项名是区分大小写的，比如",(0,s.jsx)(n.code,{children:"-p"}),"和",(0,s.jsx)(n.code,{children:"-P"}),"选项拥有完全不同的含义，大家需要注意一下。"]}),"\n",(0,s.jsxs)(n.h4,{id:"配置文件中使用选项",children:["配置文件中使用选项",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置文件中使用选项",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在命令行中设置启动选项只对当次启动生效，也就是说如果下一次重启程序的时候我们还想保留这些启动选项的话，还得重复把这些选项写到启动命令行中，这样真的神烦唉！于是设计",(0,s.jsx)(n.code,{children:"MySQL"}),"的大叔们提出一种",(0,s.jsx)(n.code,{children:"配置文件"}),"（也称为",(0,s.jsx)(n.code,{children:"选项文件"}),"）的概念，我们把需要设置的启动选项都写在这个配置文件中，每次启动服务器的时候都从这个文件里加载相应的启动选项。由于这个配置文件可以长久的保存在计算机的硬盘里，所以只需我们配置一次，以后就都不用显式的把启动选项都写在启动命令行中了，","所以我们推荐使用配置文件的方式来设置启动选项","。"]}),"\n",(0,s.jsxs)(n.h5,{id:"配置文件的路径",children:["配置文件的路径",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置文件的路径",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MySQL"}),"程序在启动时会寻找多个路径下的配置文件，这些路径有的是固定的，有的是可以在命令行指定的。根据操作系统的不同，配置文件的路径也有所不同，我们分开看一下。"]}),"\n",(0,s.jsxs)(n.h6,{id:"windows操作系统的配置文件",children:["Windows操作系统的配置文件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#windows操作系统的配置文件",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在",(0,s.jsx)(n.code,{children:"Windows"}),"操作系统中，",(0,s.jsx)(n.code,{children:"MySQL"}),"会按照下列路径来寻找配置文件："]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{children:"路径名"}),"\n",(0,s.jsx)(n.th,{children:"备注"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"%WINDIR%\\my.ini"}),"， ",(0,s.jsx)(n.code,{children:"%WINDIR%\\my.cnf"})]}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"C:\\my.ini"}),"， ",(0,s.jsx)(n.code,{children:"C:\\my.cnf"})]}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"BASEDIR\\my.ini"}),"， ",(0,s.jsx)(n.code,{children:"BASEDIR\\my.cnf"})]}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"defaults-extra-file"})}),"\n",(0,s.jsx)(n.td,{children:"命令行指定的额外配置文件路径"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"%APPDATA%\\MySQL\\.mylogin.cnf"})}),"\n",(0,s.jsx)(n.td,{children:"登录路径选项（仅限客户端）"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在阅读这些",(0,s.jsx)(n.code,{children:"Windows"}),"操作系统下配置文件路径的时候需要注意一些事情："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["在给定的前三个路径中，配置文件可以使用",(0,s.jsx)(n.code,{children:".ini"}),"的扩展名，也可以使用",(0,s.jsx)(n.code,{children:".cnf"}),"的扩展名。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"%WINDIR%"}),"指的是你机器上",(0,s.jsx)(n.code,{children:"Windows"}),"目录的位置，通常是",(0,s.jsx)(n.code,{children:"C:\\WINDOWS"}),"，如果你不确定，可以使用这个命令来查看："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"echo %WINDIR%\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"BASEDIR"}),"指的是",(0,s.jsx)(n.code,{children:"MySQL"}),"安装目录的路径，在我的",(0,s.jsx)(n.code,{children:"Windows"}),"机器上的",(0,s.jsx)(n.code,{children:"BASEDIR"}),"的值是："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"C:\\Program Files\\MySQL\\MySQL Server 5.7\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["第四个路径指的是我们在启动程序时可以通过指定",(0,s.jsx)(n.code,{children:"defaults-extra-file"}),"参数的值来添加额外的配置文件路径，比方说我们在命令行上可以这么写："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --defaults-extra-file=C:\\Users\\xiaohaizi\\my_extra_file.txt\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这样",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器启动时就可以额外在",(0,s.jsx)(n.code,{children:"C:\\Users\\xiaohaizi\\my_extra_file.txt"}),"这个路径下查找配置文件。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"%APPDATA%"}),"表示",(0,s.jsx)(n.code,{children:"Windows"}),"应用程序数据目录的值，可以使用下列命令查看："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"echo %APPDATA%\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["列表中最后一个名为",(0,s.jsx)(n.code,{children:".mylogin.cnf"}),"配置文件有点儿特殊，它不是一个纯文本文件（其他的配置文件都是纯文本文件），而是使用",(0,s.jsx)(n.code,{children:"mysql_config_editor"}),"实用程序创建的加密文件。文件中只能包含一些用于启动客户端软件时连接服务器的一些选项，包括 ",(0,s.jsx)(n.code,{children:"host"}),"、",(0,s.jsx)(n.code,{children:"user"}),"、",(0,s.jsx)(n.code,{children:"password"}),"、",(0,s.jsx)(n.code,{children:"port"}),"和 ",(0,s.jsx)(n.code,{children:"socket"}),"。而且它只能被客户端程序所使用。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\nmysql_config_editor实用程序其实是MySQL安装目录下的bin目录下的一个可执行文件，这个实用程序有专用的语法来生成或修改 .mylogin.cnf 文件中的内容，如何使用这个程序不是我们讨论的主题，可以到MySQL的官方文档中查看。\n"})}),"\n",(0,s.jsxs)(n.h6,{id:"类unix操作系统中的配置文件",children:["类Unix操作系统中的配置文件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#类unix操作系统中的配置文件",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在类",(0,s.jsx)(n.code,{children:"UNIX"}),"操作系统中，",(0,s.jsx)(n.code,{children:"MySQL"}),"会按照下列路径来寻找配置文件："]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{children:"路径名"}),"\n",(0,s.jsx)(n.th,{children:"备注"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/etc/my.cnf"})}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/etc/mysql/my.cnf"})}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SYSCONFDIR/my.cnf"})}),"\n",(0,s.jsx)(n.td,{}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"$MYSQL_HOME/my.cnf"})}),"\n",(0,s.jsx)(n.td,{children:"特定于服务器的选项（仅限服务器）"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"defaults-extra-file"})}),"\n",(0,s.jsx)(n.td,{children:"命令行指定的额外配置文件路径"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"~/.my.cnf"})}),"\n",(0,s.jsx)(n.td,{children:"用户特定选项"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"~/.mylogin.cnf"})}),"\n",(0,s.jsx)(n.td,{children:"用户特定的登录路径选项（仅限客户端）"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["在阅读这些",(0,s.jsx)(n.code,{children:"UNIX"}),"操作系统下配置文件路径的时候需要注意一些事情："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"SYSCONFDIR"}),"表示在使用",(0,s.jsx)(n.code,{children:"CMake"}),"构建",(0,s.jsx)(n.code,{children:"MySQL"}),"时使用",(0,s.jsx)(n.code,{children:"SYSCONFDIR"}),"选项指定的目录。默认情况下，这是位于编译安装目录下的",(0,s.jsx)(n.code,{children:"etc"}),"目录。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\n如果你不懂啥是个CMAKE，啥是个编译，那就跳过吧，对我们后续的文章没啥影响。\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MYSQL_HOME"}),"是一个环境变量，该变量的值是我们自己设置的，我们想设置就设置，不想设置就不设置。该变量的值代表一个路径，我们可以在该路径下创建一个",(0,s.jsx)(n.code,{children:"my.cnf"}),"配置文件，那么这个配置文件中只能放置关于启动服务器程序相关的选项（言外之意就是其他的配置文件既能存放服务器相关的选项也能存放客户端相关的选项，",(0,s.jsx)(n.code,{children:".mylogin.cnf"}),"除外，它只能存放客户端相关的一些选项）。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\n如果大家使用mysqld_safe启动服务器程序，而且我们也没有主动设置这个MySQL_HOME环境变量的值，那这个环境变量的值将自动被设置为MySQL的安装目录，也就是MySQL服务器将会在安装目录下查找名为my.cnf配置文件（别忘了mysql.server会调用mysqld_safe，所以使用mysql.server启动服务器时也会在安装目录下查找配置文件）。\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["列表中的最后两个以",(0,s.jsx)(n.code,{children:"~"}),"开头的路径是用户相关的，类",(0,s.jsx)(n.code,{children:"UNIX"}),"\n系统中都有一个当前登陆用户的概念，每个用户都可以有一个用户目录，",(0,s.jsx)(n.code,{children:"~"}),"就代表这个用户目录，大家可以查看",(0,s.jsx)(n.code,{children:"HOME"}),"环境变量的值来确定一下当前用户的用户目录，比方说我的",(0,s.jsx)(n.code,{children:"macOS"}),"机器上的用户目录就是",(0,s.jsx)(n.code,{children:"/Users/xiaohaizi"}),"。之所以说列表中最后两个配置文件是用户相关的，是因为不同的类",(0,s.jsx)(n.code,{children:"UNIX"}),"系统的用户都可以在自己的用户目录下创建",(0,s.jsx)(n.code,{children:".my.cnf"}),"或者",(0,s.jsx)(n.code,{children:".mylogin.cnf"}),"，换句话说，不同登录用户使用的",(0,s.jsx)(n.code,{children:".my.cnf"}),"或者",(0,s.jsx)(n.code,{children:".mylogin.cnf"}),"配置文件是不同的。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"defaults-extra-file"}),"的含义与Windows中的一样。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:".mylogin.cnf"}),"的含义也同",(0,s.jsx)(n.code,{children:"Windows"}),"中的一样，再次强调一遍，它不是纯文本文件，只能使用",(0,s.jsx)(n.code,{children:"mysql_config_editor"}),"实用程序去创建或修改，用于存放客户端登陆服务器时的相关选项。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["这也就是说，在我的计算机中这几个路径中的","任意一个","都可以当作配置文件来使用，如果它们不存在，你可以手动创建一个，比方说我手动在",(0,s.jsx)(n.code,{children:"~/.my.cnf"}),"这个路径下创建一个配置文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["另外，我们在唠叨如何启动",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序的时候说过，使用",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"程序启动服务器时，会间接调用",(0,s.jsx)(n.code,{children:"mysqld"}),"，所以对于传递给",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"的启动选项来说，如果",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"程序不处理，会接着传递给",(0,s.jsx)(n.code,{children:"mysqld"}),"程序处理。比方说",(0,s.jsx)(n.code,{children:"skip-networking"}),"选项是由",(0,s.jsx)(n.code,{children:"mysqld"}),"处理的，",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"并不处理，但是如果我们我们在命令行上这样执行："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld_safe --skip-networking\n"})}),"\n",(0,s.jsxs)(n.p,{children:["则在",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"调用",(0,s.jsx)(n.code,{children:"mysqld"}),"时，会把它处理不了的这个",(0,s.jsx)(n.code,{children:"skip-networking"}),"选项交给",(0,s.jsx)(n.code,{children:"mysqld"}),"处理。"]}),"\n",(0,s.jsxs)(n.h5,{id:"配置文件的内容",children:["配置文件的内容",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置文件的内容",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["与在命令行中指定启动选项不同的是，配置文件中的启动选项被划分为若干个组，每个组有一个组名，用中括号",(0,s.jsx)(n.code,{children:"[]"}),"扩起来，像这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\n(具体的启动选项...)\n\n[mysqld]\n(具体的启动选项...)\n\n[mysqld_safe]\n(具体的启动选项...)\n\n[client]\n(具体的启动选项...)\n\n[mysql]\n(具体的启动选项...)\n\n[mysqladmin]\n(具体的启动选项...)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["像这个配置文件里就定义了许多个组，组名分别是",(0,s.jsx)(n.code,{children:"server"}),"、",(0,s.jsx)(n.code,{children:"mysqld"}),"、",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"、",(0,s.jsx)(n.code,{children:"client"}),"、",(0,s.jsx)(n.code,{children:"mysql"}),"、",(0,s.jsx)(n.code,{children:"mysqladmin"}),"。每个组下边可以定义若干个启动选项，我们以",(0,s.jsx)(n.code,{children:"[server]"}),"组为例来看一下填写启动选项的形式（其他组中启动选项的形式是一样的）："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\noption1     #这是option1，该选项不需要选项值\noption2 = value2      #这是option2，该选项需要选项值\n...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在配置文件中指定启动选项的语法类似于命令行语法，但是配置文件中只能使用长形式的选项。在配置文件中指定的启动选项不允许加",(0,s.jsx)(n.code,{children:"--"}),"前缀，并且每行只指定一个选项，而且",(0,s.jsx)(n.code,{children:"="}),"周围可以有空白字符（命令行中选项名、",(0,s.jsx)(n.code,{children:"="}),"、选项值之间不允许有空白字符）。另外，在配置文件中，我们可以使用",(0,s.jsx)(n.code,{children:"#"}),"来添加注释，从",(0,s.jsx)(n.code,{children:"#"}),"出现直到行尾的内容都属于注释内容，读取配置文件时会忽略这些注释内容。为了大家更容易对比启动选项在命令行和配置文件中指定的区别，我们再把命令行中指定",(0,s.jsx)(n.code,{children:"option1"}),"和",(0,s.jsx)(n.code,{children:"option2"}),"两个选项的格式写一遍看看："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"--option1 --option2=value2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["配置文件中不同的选项组是给不同的启动命令使用的，如果选项组名称与程序名称相同，则组中的选项将专门应用于该程序。例如， ",(0,s.jsx)(n.code,{children:"[mysqld]"}),"和",(0,s.jsx)(n.code,{children:"[mysql]"}),"组分别应用于",(0,s.jsx)(n.code,{children:"mysqld"}),"服务器程序和",(0,s.jsx)(n.code,{children:"mysql"}),"客户端程序。不过有两个选项组比较特别："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[server]"}),"组下边的启动选项将作用于所有的服务器程序。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[client]"}),"组下边的启动选项将作用于所有的客户端程序。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["需要注意的一点是，",(0,s.jsx)(n.code,{children:"mysqld_safe"}),"和",(0,s.jsx)(n.code,{children:"mysql.server"}),"这两个程序在启动时都会读取",(0,s.jsx)(n.code,{children:"[mysqld]"}),"选项组中的内容。为了直观感受一下，我们挑一些启动命令来看一下它们能读取的选项组都有哪些："]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{align:"center",children:"启动命令"}),"\n",(0,s.jsx)(n.th,{align:"center",children:"类别"}),"\n",(0,s.jsx)(n.th,{align:"center",children:"能读取的组"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysqld"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动服务器"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysqld]"}),"、",(0,s.jsx)(n.code,{children:"[server]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysqld_safe"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动服务器"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysqld]"}),"、",(0,s.jsx)(n.code,{children:"[server]"}),"、",(0,s.jsx)(n.code,{children:"[mysqld_safe]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysql.server"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动服务器"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysqld]"}),"、",(0,s.jsx)(n.code,{children:"[server]"}),"、",(0,s.jsx)(n.code,{children:"[mysql.server]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysql"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动客户端"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysql]"}),"、",(0,s.jsx)(n.code,{children:"[client]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysqladmin"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动客户端"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysqladmin]"}),"、",(0,s.jsx)(n.code,{children:"[client]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"center",children:(0,s.jsx)(n.code,{children:"mysqldump"})}),"\n",(0,s.jsx)(n.td,{align:"center",children:"启动客户端"}),"\n",(0,s.jsxs)(n.td,{align:"center",children:[(0,s.jsx)(n.code,{children:"[mysqldump]"}),"、",(0,s.jsx)(n.code,{children:"[client]"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["现在我们以",(0,s.jsx)(n.code,{children:"macOS"}),"操作系统为例，在",(0,s.jsx)(n.code,{children:"/etc/mysql/my.cnf"}),"这个配置文件中添加一些内容（",(0,s.jsx)(n.code,{children:"Windows"}),"系统参考上边提到的配置文件路径）："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\nskip-networking\ndefault-storage-engine=MyISAM\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后直接用",(0,s.jsx)(n.code,{children:"mysqld"}),"启动服务器程序："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld\n"})}),"\n",(0,s.jsxs)(n.p,{children:["虽然在命令行没有添加启动选项，但是在程序启动的时候，就会默认的到我们上边提到的配置文件路径下查找配置文件，其中就包括",(0,s.jsx)(n.code,{children:"/etc/mysql/my.cnf"}),"。又由于",(0,s.jsx)(n.code,{children:"mysqld"}),"命令可以读取",(0,s.jsx)(n.code,{children:"[server]"}),"选项组的内容，所以",(0,s.jsx)(n.code,{children:"skip-networking"}),"和",(0,s.jsx)(n.code,{children:"default-storage-engine=MyISAM"}),"这两个选项是生效的。你可以把这些启动选项放在",(0,s.jsx)(n.code,{children:"[client]"}),"组里再试试用",(0,s.jsx)(n.code,{children:"mysqld"}),"启动服务器程序，看一下里边的启动选项生效不（剧透一下，不生效）。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\n如果我们想指定mysql.server程序的启动参数，则必须将它们放在配置文件中，而不是放在命令行中。mysql.server仅支持start和stop作为命令行参数。\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"特定mysql版本的专用选项组",children:["特定MySQL版本的专用选项组",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#特定mysql版本的专用选项组",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们可以在选项组的名称后加上特定的",(0,s.jsx)(n.code,{children:"MySQL"}),"版本号，比如对于",(0,s.jsx)(n.code,{children:"[mysqld]"}),"选项组来说，我们可以定义一个",(0,s.jsx)(n.code,{children:"[mysqld-5.7]"}),"的选项组，它的含义和",(0,s.jsx)(n.code,{children:"[mysqld]"}),"一样，只不过只有版本号为",(0,s.jsx)(n.code,{children:"5.7"}),"的",(0,s.jsx)(n.code,{children:"mysqld"}),"程序才能使用这个选项组中的选项。"]}),"\n",(0,s.jsxs)(n.h5,{id:"配置文件的优先级",children:["配置文件的优先级",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置文件的优先级",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们前边唠叨过",(0,s.jsx)(n.code,{children:"MySQL"}),"将在某些固定的路径下搜索配置文件，我们也可以通过在命令行上指定",(0,s.jsx)(n.code,{children:"defaults-extra-file"}),"启动选项来指定额外的配置文件路径。",(0,s.jsx)(n.code,{children:"MySQL"}),"将按照我们在上表中给定的顺序依次读取各个配置文件，如果该文件不存在则忽略。值得注意的是，","如果我们在多个配置文件中设置了相同的启动选项，那以最后一个配置文件中的为准","。比方说",(0,s.jsx)(n.code,{children:"/etc/my.cnf"}),"文件的内容是这样的："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\ndefault-storage-engine=InnoDB\n"})}),"\n",(0,s.jsxs)(n.p,{children:["而",(0,s.jsx)(n.code,{children:"~/.my.cnf"}),"文件中的内容是这样的："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\ndefault-storage-engine=MyISAM\n"})}),"\n",(0,s.jsxs)(n.p,{children:["又因为",(0,s.jsx)(n.code,{children:"~/.my.cnf"}),"比",(0,s.jsx)(n.code,{children:"/etc/my.cnf"}),"顺序靠后，所以如果两个配置文件中出现相同的启动选项，以",(0,s.jsx)(n.code,{children:"~/.my.cnf"}),"中的为准，所以",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序启动之后，",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"的值就是",(0,s.jsx)(n.code,{children:"MyISAM"}),"。"]}),"\n",(0,s.jsxs)(n.h5,{id:"同一个配置文件中多个组的优先级",children:["同一个配置文件中多个组的优先级",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#同一个配置文件中多个组的优先级",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们说同一个命令可以访问配置文件中的多个组，比如",(0,s.jsx)(n.code,{children:"mysqld"}),"可以访问",(0,s.jsx)(n.code,{children:"[mysqld]"}),"、",(0,s.jsx)(n.code,{children:"[server]"}),"组，如果在同一个配置文件中，比如",(0,s.jsx)(n.code,{children:"~/.my.cnf"}),"，在这些组里出现了同样的配置项，比如这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\ndefault-storage-engine=InnoDB\n\n[mysqld]\ndefault-storage-engine=MyISAM\n"})}),"\n",(0,s.jsxs)(n.p,{children:["那么，","将以最后一个出现的组中的启动选项为准","，比方说例子中",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"既出现在",(0,s.jsx)(n.code,{children:"[mysqld]"}),"组也出现在",(0,s.jsx)(n.code,{children:"[server]"}),"组，因为",(0,s.jsx)(n.code,{children:"[mysqld]"}),"组在",(0,s.jsx)(n.code,{children:"[server]"}),"组后边，就以",(0,s.jsx)(n.code,{children:"[mysqld]"}),"组中的配置项为准。"]}),"\n",(0,s.jsxs)(n.h5,{id:"defaults-file的使用",children:["defaults-file的使用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#defaults-file的使用",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果我们不想让",(0,s.jsx)(n.code,{children:"MySQL"}),"到默认的路径下搜索配置文件（就是上表中列出的那些），可以在命令行指定",(0,s.jsx)(n.code,{children:"defaults-file"}),"选项，比如这样（以",(0,s.jsx)(n.code,{children:"UNIX"}),"系统为例）："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --defaults-file=/tmp/myconfig.txt\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这样，在程序启动的时候将只在",(0,s.jsx)(n.code,{children:"/tmp/myconfig.txt"}),"路径下搜索配置文件。如果文件不存在或无法访问，则会发生错误。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\n注意`defaults-extra-file`和`defaults-file`的区别，使用`defaults-extra-file`可以指定额外的配置文件搜索路径（也就是说那些固定的配置文件路径也会被搜索）。\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"命令行和配置文件中启动选项的区别",children:["命令行和配置文件中启动选项的区别",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#命令行和配置文件中启动选项的区别",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在命令行上指定的绝大部分启动选项都可以放到配置文件中，但是有一些选项是专门为命令行设计的，比方说",(0,s.jsx)(n.code,{children:"defaults-extra-file"}),"、",(0,s.jsx)(n.code,{children:"defaults-file"}),"这样的选项本身就是为了指定配置文件路径的，再放在配置文件中使用就没啥意义了。剩下的一些只能用在命令行上而不能用到配置文件中的启动选项就不一一列举了，用到的时候再提哈（本书中基本用不到，有兴趣的到官方文档看哈）。"]}),"\n",(0,s.jsxs)(n.p,{children:["另外有一点需要特别注意，","如果同一个启动选项既出现在命令行中，又出现在配置文件中，那么以命令行中的启动选项为准","！比如我们在配置文件中写了："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\ndefault-storage-engine=InnoDB\n"})}),"\n",(0,s.jsx)(n.p,{children:"而我们的启动命令是："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql.server start --default-storage-engine=MyISAM\n"})}),"\n",(0,s.jsxs)(n.p,{children:["那最后",(0,s.jsx)(n.code,{children:"default-storage-engine"}),"的值就是",(0,s.jsx)(n.code,{children:"MyISAM"}),"！"]}),"\n",(0,s.jsxs)(n.h3,{id:"系统变量",children:["系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#系统变量",children:"#"})]}),"\n",(0,s.jsxs)(n.h4,{id:"系统变量简介",children:["系统变量简介",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#系统变量简介",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序运行过程中会用到许多影响程序行为的变量，它们被称为",(0,s.jsx)(n.code,{children:"MySQL"}),"系统变量，比如允许同时连入的客户端数量用系统变量",(0,s.jsx)(n.code,{children:"max_connections"}),"表示，表的默认存储引擎用系统变量",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"表示，查询缓存的大小用系统变量",(0,s.jsx)(n.code,{children:"query_cache_size"}),"表示，",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序的系统变量有好几百条，我们就不一一列举了。每个系统变量都有一个默认值，我们可以使用命令行或者配置文件中的选项在启动服务器时改变一些系统变量的值。大多数的系统变量的值也可以在程序运行过程中修改，而无需停止并重新启动它。"]}),"\n",(0,s.jsxs)(n.h4,{id:"查看系统变量",children:["查看系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查看系统变量",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们可以使用下列命令查看",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序支持的系统变量以及它们的当前值："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"SHOW VARIABLES [LIKE 匹配的模式];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["由于",(0,s.jsx)(n.code,{children:"系统变量"}),"实在太多了，如果我们直接使用",(0,s.jsx)(n.code,{children:"SHOW VARIABLES"}),"查看的话就直接刷屏了，所以通常都会带一个",(0,s.jsx)(n.code,{children:"LIKE"}),"过滤条件来查看我们需要的系统变量的值，比方说这么写："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | InnoDB |\n+------------------------+--------+\n1 row in set (0.01 sec)\n\nmysql> SHOW VARIABLES like 'max_connections';\n+-----------------+-------+\n| Variable_name   | Value |\n+-----------------+-------+\n| max_connections | 151   |\n+-----------------+-------+\n1 row in set (0.00 sec)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["可以看到，现在服务器程序使用的默认存储引擎就是",(0,s.jsx)(n.code,{children:"InnoDB"}),"，允许同时连接的客户端数量最多为",(0,s.jsx)(n.code,{children:"151"}),"。别忘了",(0,s.jsx)(n.code,{children:"LIKE"}),"表达式后边可以跟通配符来进行模糊查询，也就是说我们可以这么写："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW VARIABLES LIKE 'default%';\n+-------------------------------+-----------------------+\n| Variable_name                 | Value                 |\n+-------------------------------+-----------------------+\n| default_authentication_plugin | mysql_native_password |\n| default_password_lifetime     | 0                     |\n| default_storage_engine        | InnoDB                |\n| default_tmp_storage_engine    | InnoDB                |\n| default_week_format           | 0                     |\n+-------------------------------+-----------------------+\n5 rows in set (0.01 sec)\n\nmysql>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这样就查出了所有以",(0,s.jsx)(n.code,{children:"default"}),"开头的系统变量的值。"]}),"\n",(0,s.jsxs)(n.h4,{id:"设置系统变量",children:["设置系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#设置系统变量",children:"#"})]}),"\n",(0,s.jsxs)(n.h5,{id:"通过启动选项设置",children:["通过启动选项设置",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#通过启动选项设置",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["大部分的",(0,s.jsx)(n.code,{children:"系统变量"}),"都可以通过启动服务器时传送启动选项的方式来进行设置。如何填写启动选项我们上边已经花了大篇幅来唠叨了，就是下边两种方式："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"通过命令行添加启动选项。"}),"\n",(0,s.jsx)(n.p,{children:"比方说我们在启动服务器程序时用这个命令："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysqld --default-storage-engine=MyISAM --max-connections=10\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"通过配置文件添加启动选项。"}),"\n",(0,s.jsx)(n.p,{children:"我们可以这样填写配置文件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[server]\ndefault-storage-engine=MyISAM\nmax-connections=10\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"当使用上边两种方式中的任意一种启动服务器程序后，我们再来查看一下系统变量的值："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | MyISAM |\n+------------------------+--------+\n1 row in set (0.00 sec)\n\nmysql> SHOW VARIABLES LIKE 'max_connections';\n+-----------------+-------+\n| Variable_name   | Value |\n+-----------------+-------+\n| max_connections | 10    |\n+-----------------+-------+\n1 row in set (0.00 sec)\n\nmysql>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["可以看到",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"和",(0,s.jsx)(n.code,{children:"max_connections"}),"这两个系统变量的值已经被修改了。有一点需要注意的是，","对于启动选项来说，如果启动选项名由多个单词组成，各个单词之间用短划线",(0,s.jsx)(n.code,{children:"-"}),"或者下划线",(0,s.jsx)(n.code,{children:"_"}),"连接起来都可以，但是对应的系统变量之间必须使用下划线",(0,s.jsx)(n.code,{children:"_"}),"连接起来","。"]}),"\n",(0,s.jsxs)(n.h5,{id:"服务器程序运行过程中设置",children:["服务器程序运行过程中设置",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#服务器程序运行过程中设置",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"系统变量"}),"比较牛逼的一点就是，","对于大部分系统变量来说，它们的值可以在服务器程序运行过程中进行动态修改而无需停止并重启服务器","。不过系统变量有作用范围之分，下边详细唠叨下。"]}),"\n",(0,s.jsxs)(n.h6,{id:"设置不同作用范围的系统变量",children:["设置不同作用范围的系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#设置不同作用范围的系统变量",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们前边说过，多个客户端程序可以同时连接到一个服务器程序。对于同一个系统变量，我们有时想让不同的客户端有不同的值。比方说狗哥使用客户端A，他想让当前客户端对应的默认存储引擎为",(0,s.jsx)(n.code,{children:"InnoDB"}),"，所以他可以把系统变量",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"的值设置为",(0,s.jsx)(n.code,{children:"InnoDB"}),"；猫爷使用客户端B，他想让当前客户端对应的默认存储引擎为",(0,s.jsx)(n.code,{children:"MyISAM"}),"，所以他可以把系统变量",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"的值设置为",(0,s.jsx)(n.code,{children:"MyISAM"}),"。这样可以使狗哥和猫爷的的客户端拥有不同的默认存储引擎，使用时互不影响，十分方便。但是这样各个客户端都私有一份系统变量会产生这么两个问题："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有一些系统变量并不是针对单个客户端的，比如允许同时连接到服务器的客户端数量",(0,s.jsx)(n.code,{children:"max_connections"}),"，查询缓存的大小",(0,s.jsx)(n.code,{children:"query_cache_size"}),"，这些公有的系统变量让某个客户端私有显然不合适。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"一个新连接到服务器的客户端对应的系统变量的值该怎么设置？"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["为了解决这两个问题，设计",(0,s.jsx)(n.code,{children:"MySQL"}),"的大叔提出了系统变量的",(0,s.jsx)(n.code,{children:"作用范围"}),"的概念，具体来说",(0,s.jsx)(n.code,{children:"作用范围"}),"分为这两种："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GLOBAL"}),"：全局变量，影响服务器的整体操作。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"SESSION"}),"：会话变量，影响某个客户端连接的操作。（注：",(0,s.jsx)(n.code,{children:"SESSION"}),"有个别名叫",(0,s.jsx)(n.code,{children:"LOCAL"}),"）"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"在服务器启动时，会将每个全局变量初始化为其默认值（可以通过命令行或选项文件中指定的选项更改这些默认值）。然后服务器还为每个连接的客户端维护一组会话变量，客户端的会话变量在连接时使用相应全局变量的当前值初始化。"}),"\n",(0,s.jsxs)(n.p,{children:["这话有点儿绕，还是以",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"举例，在服务器启动时会初始化一个名为",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"，作用范围为",(0,s.jsx)(n.code,{children:"GLOBAL"}),"的系统变量。之后每当有一个客户端连接到该服务器时，服务器都会单独为该客户端分配一个名为",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"，作用范围为",(0,s.jsx)(n.code,{children:"SESSION"}),"的系统变量，该作用范围为",(0,s.jsx)(n.code,{children:"SESSION"}),"的系统变量值按照当前作用范围为",(0,s.jsx)(n.code,{children:"GLOBAL"}),"的同名系统变量值进行初始化。"]}),"\n",(0,s.jsxs)(n.p,{children:["很显然，","通过启动选项设置的系统变量的作用范围都是",(0,s.jsx)(n.code,{children:"GLOBAL"}),"的，也就是对所有客户端都有效的","，因为在系统启动的时候还没有客户端程序连接进来呢。了解了系统变量的",(0,s.jsx)(n.code,{children:"GLOBAL"}),"和",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围之后，我们再看一下在服务器程序运行期间通过客户端程序设置系统变量的语法："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"SET [GLOBAL|SESSION] 系统变量名 = 值;\n"})}),"\n",(0,s.jsx)(n.p,{children:"或者写成这样也行："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"SET [@@(GLOBAL|SESSION).]var_name = XXX;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["比如我们想在服务器运行过程中把作用范围为",(0,s.jsx)(n.code,{children:"GLOBAL"}),"的系统变量",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"的值修改为",(0,s.jsx)(n.code,{children:"MyISAM"}),"，也就是想让之后新连接到服务器的客户端都用",(0,s.jsx)(n.code,{children:"MyISAM"}),"作为默认的存储引擎，那我们可以选择下边两条语句中的任意一条来进行设置："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"语句一：SET GLOBAL default_storage_engine = MyISAM;\n语句二：SET @@GLOBAL.default_storage_engine = MyISAM;\n"})}),"\n",(0,s.jsx)(n.p,{children:"如果只想对本客户端生效，也可以选择下边三条语句中的任意一条来进行设置："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"语句一：SET SESSION default_storage_engine = MyISAM;\n语句二：SET @@SESSION.default_storage_engine = MyISAM;\n语句三：SET default_storage_engine = MyISAM;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["从上边的",(0,s.jsx)(n.code,{children:"语句三"}),"也可以看出，","如果在设置系统变量的语句中省略了作用范围，默认的作用范围就是",(0,s.jsx)(n.code,{children:"SESSION"}),"。也就是说",(0,s.jsx)(n.code,{children:"SET 系统变量名 = 值"}),"和",(0,s.jsx)(n.code,{children:"SET SESSION 系统变量名 = 值"}),"是等价的。"]}),"\n",(0,s.jsxs)(n.h6,{id:"查看不同作用范围的系统变量",children:["查看不同作用范围的系统变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查看不同作用范围的系统变量",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["既然",(0,s.jsx)(n.code,{children:"系统变量"}),"有",(0,s.jsx)(n.code,{children:"作用范围"}),"之分，那我们的",(0,s.jsx)(n.code,{children:"SHOW VARIABLES"}),"语句查看的是什么",(0,s.jsx)(n.code,{children:"作用范围"}),"的",(0,s.jsx)(n.code,{children:"系统变量"}),"呢？"]}),"\n",(0,s.jsxs)(n.p,{children:["答：默认查看的是",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围的系统变量。"]}),"\n",(0,s.jsxs)(n.p,{children:["当然我们也可以在查看系统变量的语句上加上要查看哪个",(0,s.jsx)(n.code,{children:"作用范围"}),"的系统变量，就像这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"SHOW [GLOBAL|SESSION] VARIABLES [LIKE 匹配的模式];\n"})}),"\n",(0,s.jsx)(n.p,{children:"下边我们演示一下完整的设置并查看系统变量的过程："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW SESSION VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | InnoDB |\n+------------------------+--------+\n1 row in set (0.00 sec)\n\nmysql> SHOW GLOBAL VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | InnoDB |\n+------------------------+--------+\n1 row in set (0.00 sec)\n\nmysql> SET SESSION default_storage_engine = MyISAM;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SHOW SESSION VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | MyISAM |\n+------------------------+--------+\n1 row in set (0.00 sec)\n\nmysql> SHOW GLOBAL VARIABLES LIKE 'default_storage_engine';\n+------------------------+--------+\n| Variable_name          | Value  |\n+------------------------+--------+\n| default_storage_engine | InnoDB |\n+------------------------+--------+\n1 row in set (0.00 sec)\n\nmysql>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["可以看到，最初",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"的系统变量无论是在",(0,s.jsx)(n.code,{children:"GLOBAL"}),"作用范围上还是在",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围上的值都是",(0,s.jsx)(n.code,{children:"InnoDB"}),"，我们在",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围把它的值设置为",(0,s.jsx)(n.code,{children:"MyISAM"}),"之后，可以看到",(0,s.jsx)(n.code,{children:"GLOBAL"}),"作用范围的值并没有改变。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-!",children:"小贴士：\n\n如果某个客户端改变了某个系统变量在`GLOBAL`作用范围的值，并不会影响该系统变量在当前已经连接的客户端作用范围为`SESSION`的值，只会影响后续连入的客户端在作用范围为`SESSION`的值。\n"})}),"\n",(0,s.jsxs)(n.h6,{id:"注意事项",children:["注意事项",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#注意事项",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["并不是所有系统变量都具有",(0,s.jsx)(n.code,{children:"GLOBAL"}),"和",(0,s.jsx)(n.code,{children:"SESSION"}),"的作用范围","。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有一些系统变量只具有",(0,s.jsx)(n.code,{children:"GLOBAL"}),"作用范围，比方说",(0,s.jsx)(n.code,{children:"max_connections"}),"，表示服务器程序支持同时最多有多少个客户端程序进行连接。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有一些系统变量只具有",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围，比如",(0,s.jsx)(n.code,{children:"insert_id"}),"，表示插入值时使用的",(0,s.jsx)(n.code,{children:"AUTO_INCREMENT"}),"修饰的列的值。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有一些系统变量的值既具有",(0,s.jsx)(n.code,{children:"GLOBAL"}),"作用范围，也具有",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围，比如我们前边用到的",(0,s.jsx)(n.code,{children:"default_storage_engine"}),"，而且其实大部分的系统变量都是这样的，"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有些系统变量是只读的，并不能设置值","。"]}),"\n",(0,s.jsxs)(n.p,{children:["比方说",(0,s.jsx)(n.code,{children:"version"}),"，表示当前",(0,s.jsx)(n.code,{children:"MySQL"}),"的版本，我们客户端是不能设置它的值的，只能在",(0,s.jsx)(n.code,{children:"SHOW VARIABLES"}),"语句里查看。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"启动选项和系统变量的区别",children:["启动选项和系统变量的区别",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#启动选项和系统变量的区别",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"启动选项"}),"是在程序启动时我们程序员传递的一些参数，而",(0,s.jsx)(n.code,{children:"系统变量"}),"是影响服务器程序运行行为的变量，它们之间的关系如下："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"大部分的系统变量都可以被当作启动选项传入。"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有些系统变量是在程序运行过程中自动生成的，是不可以当作启动选项来设置，比如",(0,s.jsx)(n.code,{children:"auto_increment_offset"}),"、",(0,s.jsx)(n.code,{children:"character_set_client"}),"啥的。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["有些启动选项也不是系统变量，比如",(0,s.jsx)(n.code,{children:"defaults-file"}),"。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"状态变量",children:["状态变量",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#状态变量",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["为了让我们更好的了解服务器程序的运行情况，",(0,s.jsx)(n.code,{children:"MySQL"}),"服务器程序中维护了好多关于程序运行状态的变量，它们被称为",(0,s.jsx)(n.code,{children:"状态变量"}),"。比方说",(0,s.jsx)(n.code,{children:"Threads_connected"}),"表示当前有多少客户端与服务器建立了连接，",(0,s.jsx)(n.code,{children:"Handler_update"}),"表示已经更新了多少行记录吧啦吧啦，像这样显示服务器程序状态信息的",(0,s.jsx)(n.code,{children:"状态变量"}),"还有好几百个，我们就不一一唠叨了，等遇到了会详细说它们的作用的。"]}),"\n",(0,s.jsxs)(n.p,{children:["由于",(0,s.jsx)(n.code,{children:"状态变量"}),"是用来显示服务器程序运行状况的，所以","它们的值只能由服务器程序自己来设置，我们程序员是不能设置的","。与",(0,s.jsx)(n.code,{children:"系统变量"}),"类似，",(0,s.jsx)(n.code,{children:"状态变量"}),"也有",(0,s.jsx)(n.code,{children:"GLOBAL"}),"和",(0,s.jsx)(n.code,{children:"SESSION"}),"两个作用范围的，所以查看",(0,s.jsx)(n.code,{children:"状态变量"}),"的语句可以这么写："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"SHOW [GLOBAL|SESSION] STATUS [LIKE 匹配的模式];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["类似的，如果我们不写明作用范围，默认的作用范围是",(0,s.jsx)(n.code,{children:"SESSION"}),"，比方说这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> SHOW STATUS LIKE 'thread%';\n+-------------------+-------+\n| Variable_name     | Value |\n+-------------------+-------+\n| Threads_cached    | 0     |\n| Threads_connected | 1     |\n| Threads_created   | 1     |\n| Threads_running   | 1     |\n+-------------------+-------+\n4 rows in set (0.00 sec)\n\nmysql>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["所有以",(0,s.jsx)(n.code,{children:"Thread"}),"开头的",(0,s.jsx)(n.code,{children:"SESSION"}),"作用范围的状态变量就都被展示出来了。"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["MySQL%20%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84%EF%BC%9A%E4%BB%8E%E6%A0%B9%E5%84%BF%E4%B8%8A%E7%90%86%E8%A7%A3%20MySQL%2F2MySQL%E7%9A%84%E8%B0%83%E6%8E%A7%E6%8C%89%E9%92%AE%20%E2%80%94%E2%80%94%20%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F.md"]={toc:[{text:"在命令行上使用选项",id:"在命令行上使用选项",depth:4},{text:"配置文件中使用选项",id:"配置文件中使用选项",depth:4},{text:"命令行和配置文件中启动选项的区别",id:"命令行和配置文件中启动选项的区别",depth:4},{text:"系统变量",id:"系统变量",depth:3},{text:"系统变量简介",id:"系统变量简介",depth:4},{text:"查看系统变量",id:"查看系统变量",depth:4},{text:"设置系统变量",id:"设置系统变量",depth:4},{text:"启动选项和系统变量的区别",id:"启动选项和系统变量的区别",depth:4},{text:"状态变量",id:"状态变量",depth:3}],title:"2MySQL的调控按钮 —— 启动选项和系统变量",headingTitle:"2MySQL的调控按钮 —— 启动选项和系统变量",frontmatter:{}}}}]);