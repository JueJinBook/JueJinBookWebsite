"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["52830"],{719742:function(e,n,s){s.r(n),s.d(n,{default:()=>q});var c=s(552676),a=s(740453);let i=s.p+"static/image/0c020024a7998d5542b3bfa4cad25504.0e330f10.webp",r=s.p+"static/image/0e1bb02696a595e87e924a37694dd6d0.f0677a18.webp",d=s.p+"static/image/ffe2a364186095ac79bda100303c305c.4ccdac04.webp",t=s.p+"static/image/8db0386888be9ae14b5982b34602ae58.c70c7abc.webp",p=s.p+"static/image/dde4720eb6fe0c2e82442f36039ecc5a.c9ec2adf.webp",l=s.p+"static/image/b9afb04efbdc90a6ddcf84fe5adf72f9.305b9f08.webp",j=s.p+"static/image/886b7a0b4512446858febaf5f3bb09bb.39b09217.webp",h=s.p+"static/image/3e5a0ba9acbd569672fdfd84b74f1356.aef3c7ea.webp",x=s.p+"static/image/a7a3926bb6659a4c26a74f73658277ff.f5540e96.webp",b=s.p+"static/image/151e20e356f08ddf70397e2ecc59727d.ae1dc281.webp",m=s.p+"static/image/acba2b84edd92998f53d8198e4d3bb26.c219abc7.webp",o=s.p+"static/image/a50e02bcc583ff093dffc98d120ad79a.c5b48863.webp",g=s.p+"static/image/5636dd3e1e1c6828bb56c041cc90d1d9.92152707.webp",f=s.p+"static/image/0d5d62b9485557c1af5675cb67d66f6a.e1d7b944.webp",u=s.p+"static/image/6da69b4d5ed6a04c441172fd618989ba.58adf3d2.webp",w=s.p+"static/image/7ba75b45f4da55fc34bc9b879b3d0a99.bbba2ac1.webp",N=s.p+"static/image/381e03beaf46e5f994e46c0f1e839168.3fa4ffec.webp",_=s.p+"static/image/413b6c98100a26e4e52fbbd92d37715f.c8bc96a0.webp",E=s.p+"static/image/c55fae1b5f0d2a829fdc1c11789875a1.7c62be47.webp",A=s.p+"static/image/c93badbc3cd9c8cb04fe9bb03912cbdb.f09bb4e4.webp",k=s.p+"static/image/ba075fdeab24ed090560b32468c9b58c.4714a971.webp",v=s.p+"static/image/439222906ca9fba2d0771b85f2236cf8.25787cf4.webp",S=s.p+"static/image/5dee521285626e12aec2a51e4072ca8b.26e6414f.webp",F=s.p+"static/image/a4e2a29fd2b6214284401d936e68c057.8f7e4849.webp",B=s.p+"static/image/3dc90f777550ae769692d3fb9a4c0980.77dd8783.webp",P=s.p+"static/image/778e08eaf4765c4e6cfffff003eea019.c628d6a4.gif",C=s.p+"static/image/febcdd6488d3bece8b2046c3ea488725.9643bf75.webp",M=s.p+"static/image/0912a88ad8ed55324d4fc088f1240fc3.45014a82.webp",T=s.p+"static/image/33a645da2b640b9976d6eb8e14d51814.a2290281.gif",O=s.p+"static/image/351a9133bb6880c1e2cc85ec80963fb3.94fdd259.webp";function L(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"200-如何调试-nest-源码",children:["200. 如何调试 Nest 源码？",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#200-如何调试-nest-源码",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"前面我们学过如何调试 Nest 项目，那如何调试 Nest 源码呢？"}),"\n",(0,c.jsx)(n.p,{children:"有的同学说，调试 Nest 项目的时候，调用栈里不就有源码部分么？"}),"\n",(0,c.jsx)(n.p,{children:"其实不是的，这部分是编译后的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:F,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"我们新建个 Nest 项目："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"nest new debug-nest-source\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:O,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"点击 debug 面板的 create a launch.json file按钮："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"输入 npm，选择 launch via npm，创建一个调试 npm scripts 的配置："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:T,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"改为这样："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n    "name": "Launch via NPM",\n    "request": "launch",\n    "runtimeArgs": [\n        "run-script",\n        "start:dev"\n    ],\n    "runtimeExecutable": "npm",\n    "console": "integratedTerminal",\n    "skipFiles": [\n        "<node_internals>/**"\n    ],\n    "type": "node"\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"这个就是跑 npm run start:dev 的调试配置。"}),"\n",(0,c.jsx)(n.p,{children:"指定 console 为 integratedTerminal，这样日志会输出在 terminal。"}),"\n",(0,c.jsx)(n.p,{children:"不然，日志会输出在 debug console。颜色等都不一样："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:M,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"在 AppController 的 getHello 打个断点："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:C,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"点击 debug 启动："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:P,alt:""})}),"\n",(0,c.jsxs)(n.p,{children:["然后浏览器重新访问 ",(0,c.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})]}),"\n",(0,c.jsx)(n.p,{children:"这时候代码就会在断点处断住："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:B,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这样就可以断点调试 Nest 项目了。"}),"\n",(0,c.jsx)(n.p,{children:"但如果想调试源码，还需要再做一步："}),"\n",(0,c.jsx)(n.p,{children:"因为现在调用栈里的 Nest 源码部分都是编译后的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:F,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"我们想调试 Nest 的 ts 源码，这就需要用到 sourcemap 了。"}),"\n",(0,c.jsx)(n.p,{children:"用 npm install 下载的包没有 sourcemap 的代码，想要 sourcemap，需要自己 build 源码。"}),"\n",(0,c.jsx)(n.p,{children:"把 Nest 项目下载下来，并安装依赖（加个 --depth=1 是下载单 commit，--single-branch 是下载单个分支，这样速度会快很多）："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"git clone --depth=1 --single-branch https://github.com/nestjs/nest\n"})}),"\n",(0,c.jsx)(n.p,{children:"build 下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install\nnpm run build\n"})}),"\n",(0,c.jsx)(n.p,{children:"会在 node_modules/@nestjs 下生成编译后的代码。"}),"\n",(0,c.jsx)(n.p,{children:"看下 npm scripts："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:k,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到它做的事情就是 tsc 编译代码，然后把编译后的文件移动到 node_modules/@nestjs 目录下。"}),"\n",(0,c.jsx)(n.p,{children:"move 的具体实现可以看 tools/gulp/tasks/move.ts 的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"所以，执行 npm run build，你就会在 node_modules/@nestjs 下看到这样的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"只包含了 js 和 ts，没有 sourcemap："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:_,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"生成 sourcemap 需要改下 tsc 编译配置，也就是 packages/tsconfig.build.json 文件："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:N,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"设置 sourceMap 为 true 也就是生成 sourcemap，但默认的 sourcemap 里不包含内联的源码，也就是 sourcesContent 部分，需要设置 inlineSources 来包含。"}),"\n",(0,c.jsx)(n.p,{children:"再次执行 npm run build，就会生成带有 sourcemap 的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"并且 sourcemap 是内联了源码的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后我们跑一下 Nest 的项目，直接跑 samples 目录下的项目即可，这是 Nest 内置的一些案例项目："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"进入 01-cats-app 目录，安装依赖"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install\n"})}),"\n",(0,c.jsx)(n.p,{children:"然后把根目录 node_modules 下生成的代码覆盖下 cats 项目的 node_modules 下的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"创建一个调试配置："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"改成这样："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n    "name": "调试 nest 源码",\n    "request": "launch",\n    "runtimeArgs": [\n        "run-script",\n        "start:dev"\n    ],\n    "runtimeExecutable": "npm",\n    "console": "integratedTerminal",\n    "cwd": "${workspaceFolder}/sample/01-cats-app/",\n    "resolveSourceMapLocations": [\n        "${workspaceFolder}/**",\n        // "!**/node_modules/**"\n    ],\n    "skipFiles": [\n        "<node_internals>/**"\n    ],\n    "type": "node"\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"指定 cwd 为那个项目的目录，也就是在那个目录下执行 npm run start:dev。"}),"\n",(0,c.jsx)(n.p,{children:"resolveSourceMapLocations 是从哪里找 sourcemap，默认排除掉了 node_modules，我们把它去掉。"}),"\n",(0,c.jsx)(n.p,{children:"在 sample/01-cats-app 的 src/cats/cats.controller.ts 打个断点："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"然后点击 debug 调试："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"如果提示端口被占用，你需要先 kill 掉之前的进程再跑："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsxs)(n.p,{children:["浏览器访问 ",(0,c.jsx)(n.a,{href:"http://localhost:3000/cats",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000/cats"})]}),"\n",(0,c.jsx)(n.p,{children:"断住之后你看下调用栈："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这时候 sourcemap 就生效了，可以看到调用栈中的就是 Nest 的 ts 源码。"}),"\n",(0,c.jsx)(n.p,{children:"这样就可以调试 Nest 源码了。"}),"\n",(0,c.jsx)(n.p,{children:"比如我们看下 Nest 的 AOP 部分的源码："}),"\n",(0,c.jsx)(n.p,{children:"点击这个调用栈："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,c.jsx)(n.p,{children:"可以看到它先创建了所有的 pipes、interceptors、guards 的实例，然后封装了调用 pipe 和 guard 的函数："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"下面调用 hander 的时候，先调用 guard、再调用 interceptor，然后调用 handler，并且 handler 里会先用 pipe 处理参数："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"这就是 AOP 机制的源码。"}),"\n",(0,c.jsx)(n.p,{children:"而如果你想在你的项目里调试 Nest 源码，只要把 node_modules/@nestjs 覆盖你项目下那个就好了。"}),"\n",(0,c.jsxs)(n.h2,{id:"总结",children:["总结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"这节我们学习了如何调试 Nest 源码。"}),"\n",(0,c.jsx)(n.p,{children:"vscode 里创建 npm scripts 的调试配置，就可以调试 npm run start:dev 的服务。"}),"\n",(0,c.jsx)(n.p,{children:"但如果想调试源码，需要把 Nest  源码下载下来，build 出一份带有 sourcemap 版本的代码。"}),"\n",(0,c.jsx)(n.p,{children:"同时还要设置 resolveSourcemapLocations 去掉排除 node_modules 的配置。"}),"\n",(0,c.jsx)(n.p,{children:"然后再调试，就可以直接调试 Nest 的 ts 源码了。"}),"\n",(0,c.jsx)(n.p,{children:"我们调试了下 AOP 部分的源码，以后你对哪部分的实现原理感兴趣，也可以自己调试源码了。"})]})}function R(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(L,{...e})}):L(e)}let q=R;R.__RSPRESS_PAGE_META={},R.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F200.%20%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95%20Nest%20%E6%BA%90%E7%A0%81%EF%BC%9F.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"200. 如何调试 Nest 源码？",headingTitle:"200. 如何调试 Nest 源码？",frontmatter:{}}}}]);