"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["98861"],{923104:function(e,n,t){t.r(n),t.d(n,{default:()=>d});var r=t(552676),l=t(740453);function c(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h2:"h2",code:"code",pre:"pre",h3:"h3",ol:"ol",li:"li"},(0,l.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"44-svelte-5--升级指南",children:["44-Svelte 5 ❘ 升级指南",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-svelte-5--升级指南",children:"#"})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"推荐学习指数：⭐️️，了解即可"}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"1-前言",children:["1. 前言",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"本篇讲解 Svelte 4 到 Svelte 5 的 API 变化，方便大家快速升级到 Svelte 5。"}),"\n",(0,r.jsxs)(n.h2,{id:"2-状态声明",children:["2. 状态声明",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-状态声明",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$state"}),"替代之前的 ",(0,r.jsx)(n.code,{children:"let"}),"声明。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$derived"}),"替代之前的 ",(0,r.jsx)(n.code,{children:"$: x = ..."}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$effect"}),"替代 onMount 和 ",(0,r.jsx)(n.code,{children:"$: { ... }"}),"。"]}),"\n",(0,r.jsx)(n.p,{children:"Svelte 4："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = 0;\n  $: double = count * 2;\n  $: {\n    if (count > 10) {\n      alert('Too high!');\n    }\n  }\n<\/script>\n\n<button on:click={() => count++}>\n  {count} / {double}\n</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Svelte 5："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n  let double = $derived(count * 2);\n  $effect(() => {\n    if (count > 10) {\n      alert('Too high!');\n    }\n  });\n<\/script>\n\n<button onclick={() => count++}>\n  {count} / {double}\n</button>\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"3-组件-props",children:["3. 组件 props",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-组件-props",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["$props 可替代之前的 ",(0,r.jsx)(n.code,{children:"export let"}),"、",(0,r.jsx)(n.code,{children:"export { x as y }"}),"、",(0,r.jsx)(n.code,{children:"$props"}),"和",(0,r.jsx)(n.code,{children:"$restProps"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let { count = 0, catch: theCatch, ...rest } = $props();\n<\/script>\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"4-生命周期",children:["4. 生命周期",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-生命周期",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$effect.pre"})," 替代之前的 ",(0,r.jsx)(n.code,{children:"beforeUpdate"})]}),"\n",(0,r.jsxs)(n.h2,{id:"5-事件处理程序",children:["5. 事件处理程序",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-事件处理程序",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Svelte 4："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<button on:click={() => count++}>\n  clicks: {count}\n</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Svelte 5："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<button onclick={() => count++}>\n  clicks: {count}\n</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:"事件处理程序变成了普通的属性，所以不再需要转发事件，正常传递、正常使用回调函数即可。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let { onclick, onkeydown, ...attributes } = $props();\n<\/script>\n\n<button\n  {...attributes}\n  {onclick}\n  {onkeydown}\n>a button</button>\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"6-插槽",children:["6. 插槽",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-插槽",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Snippets 将完全替代之前的插槽。"}),"\n",(0,r.jsx)(n.p,{children:"Svelte 4："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Article from \'./Article.svelte\';\n<\/script>\n\n<Article>\n  <span slot="header">header</span>\n\n  <small>body</small>\n\n  <span slot="footer">\n    <small>footer</small>\n  </span>\n</Article>\n\n\x3c!-- Article.svelte --\x3e\n<div class="article">\n  <header>\n    <slot name="header" />\n  </header>\n\n  <slot />\n</div>\n'})}),"\n",(0,r.jsx)(n.p,{children:"Svelte 5："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Article from './Article.svelte';\n<\/script>\n\n<Article>\n  {#snippet header()}\n    header\n  {/snippet}\n  <small>body</small>\n</Article>\n\n\x3c!-- Article.svelte --\x3e\n<script>\n  let { header, children } = $props();\n<\/script>\n\n<div class=\"article\">\n  <header>\n    {@render header()}\n  </header>\n  {@render children()}\n</div>\n"})}),"\n",(0,r.jsx)(n.p,{children:"这些更新比如 Snippets 和事件处理程序，虽然 Svelte 5 已经不用，但在 Svelte 5 中依然可以正常工作。下面的内容是要被废弃的。"}),"\n",(0,r.jsxs)(n.h2,{id:"7-svelte-5-废弃",children:["7. Svelte 5 废弃",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-svelte-5-废弃",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"71-删除-beforeupdate-和-afterupdate",children:["7.1. 删除 beforeUpdate 和 afterUpdate",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#71-删除-beforeupdate-和-afterupdate",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["在 Svelte 5 中，改为使用 ",(0,r.jsx)(n.code,{children:"$effect.pre"})," 和 ",(0,r.jsx)(n.code,{children:"$effect"}),"。尽管作用并不完全相同，但调用更加可控，我们可以确保只有在我们关心的值发生变化时才进行调用。"]}),"\n",(0,r.jsxs)(n.h3,{id:"72-删除-createeventdispatcher",children:["7.2. 删除 createEventDispatcher",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#72-删除-createeventdispatcher",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Svelte 4："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n\n  function greet() {\n    dispatch('greet')\n  }\n<\/script>\n\n<button\n  on:click={greet}\n>greet</button>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Svelte 5："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script>\n  let { greet } = $props();\n<\/script>\n\n<button\n  onclick={greet}\n>greet</button>\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"73-immutable-编译器选项被弃用",children:["7.3. immutable 编译器选项被弃用",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#73-immutable-编译器选项被弃用",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"符文模式下，所有的状态都是 immutable。"}),"\n",(0,r.jsxs)(n.h2,{id:"8-恭喜你",children:["8. 恭喜你！",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-恭喜你",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"看到这里，恭喜你完成了第二阶段 —— Svelte 5 新增内容的学习："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"第一阶段：Svelte 4 \uD83C\uDF89"}),"\n",(0,r.jsx)(n.li,{children:"第二阶段：Svelte 5 \uD83C\uDF89"}),"\n",(0,r.jsx)(n.li,{children:"第三阶段：SvelteKit"}),"\n",(0,r.jsx)(n.li,{children:"第四阶段：项目实战"}),"\n",(0,r.jsx)(n.li,{children:"第五阶段：Svelte 原理"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"这个时候你应该对 Svelte 语法已经有了一个全面的了解。"}),"\n",(0,r.jsx)(n.p,{children:"接下来我们会开始讲解 Svelte 的官方脚手架 SvelteKit，如果你有其他全栈框架比如 Next.js 的学习经验，这块内容相信你会感到很相似，学习进度很快。同理，如果你没有接触过其他框架，SvelteKit 的学习经验也会帮助你使用其他全栈脚手架。"}),"\n",(0,r.jsx)(n.p,{children:"那么就让我们进入第三阶段 —— SvelteKit 的学习中吧！"})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}let d=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F44-Svelte%205%20%E2%9D%98%20%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. 状态声明",id:"2-状态声明",depth:2},{text:"3. 组件 props",id:"3-组件-props",depth:2},{text:"4. 生命周期",id:"4-生命周期",depth:2},{text:"5. 事件处理程序",id:"5-事件处理程序",depth:2},{text:"6. 插槽",id:"6-插槽",depth:2},{text:"7. Svelte 5 废弃",id:"7-svelte-5-废弃",depth:2},{text:"7.1. 删除 beforeUpdate 和 afterUpdate",id:"71-删除-beforeupdate-和-afterupdate",depth:3},{text:"7.2. 删除 createEventDispatcher",id:"72-删除-createeventdispatcher",depth:3},{text:"7.3. immutable 编译器选项被弃用",id:"73-immutable-编译器选项被弃用",depth:3},{text:"8. 恭喜你！",id:"8-恭喜你",depth:2}],title:"44-Svelte 5 ❘ 升级指南",headingTitle:"44-Svelte 5 ❘ 升级指南",frontmatter:{}}}}]);