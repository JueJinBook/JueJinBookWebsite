"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["73689"],{143:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var s=r(552676),i=r(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",code:"code",h3:"h3",ul:"ul",li:"li",pre:"pre",br:"br"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"8服务器接收客户端图片上传并保存在硬盘中",children:["8服务器接收客户端图片上传，并保存在硬盘中",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8服务器接收客户端图片上传并保存在硬盘中",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"前面几小节，我们已完成了 JSON 格式的纯数据交互，在 App 服务器端的设计中，我们难免会接收客户端图片的上传，并提供端图片下载。本小节将讲解，对于客户端向服务器端上传图片，服务器端将如何处理。简单交互过程如下。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b016baced81f9?w=706&h=198&f=png&s=24562",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"同样，在这一小节中，我们也使用工具来代替 App 客户端模拟图片的上传。我们将要用到的工具是 JMeter，它是一个强大的工具，最为熟知的是 HTTP 的测试。这里我们不去深入了解 JMeter，而只是取其一个小功能 —— HTTP POST 图片的功能来完成讲解，读者如果感兴趣，可以自行学习拓展。"}),"\n",(0,s.jsxs)(n.h2,{id:"下载-jmeter",children:["下载 JMeter",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#下载-jmeter",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["通过官网下载 JMeter：",(0,s.jsx)(n.a,{href:"http://jmeter.apache.org/download_jmeter.cgi",target:"_blank",rel:"noopener noreferrer",children:"Download Apache JMeter"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b016f2582b9d1?w=1048&h=681&f=png&s=139458",alt:""})}),"\n",(0,s.jsxs)(n.h2,{id:"安装-jmeter",children:["安装 JMeter",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装-jmeter",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["下载完成后，解压文件夹，进入 bin 目录，点击  ",(0,s.jsx)(n.code,{children:"jmeter.bat"})," 进行 JMeter 的安装，安装成功后的界面如下。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b0172c6aa7e48?w=1515&h=848&f=png&s=70006",alt:""})}),"\n",(0,s.jsxs)(n.h2,{id:"配置测试计划",children:["配置测试计划",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置测试计划",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"切换语言",children:["切换语言",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#切换语言",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"依次选择“Options” -> “Choose Language” -> “Chinese (Simplified)”，如下图所示。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b0175614cebde?w=742&h=463&f=png&s=42771",alt:""})}),"\n",(0,s.jsxs)(n.h3,{id:"配置-http-请求",children:["配置 HTTP 请求",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置-http-请求",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"右击 “Test Plan”，点击“添加” -> “Threads (Users)”  -> “线程组”"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b017d5d4ed6e9?w=586&h=277&f=png&s=29665",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"右击 “线程组”，点击 “添加” -> “Sampler” -> “HTTP 请求”"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b017fce1d6291?w=611&h=344&f=png&s=37222",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在弹出的「HTTP 请求」框中进行如下设置："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"第 1~4 步，按照截图输入或选择；"}),"\n",(0,s.jsxs)(n.li,{children:["第 5 步，设定我们要上传图片（文件）的 URL 路径是 ",(0,s.jsx)(n.code,{children:"upload/file"}),"；"]}),"\n",(0,s.jsx)(n.li,{children:"第 6 步，选择 “Files Upload”；"}),"\n",(0,s.jsx)(n.li,{children:"第 7 步，点击 ”添加”；"}),"\n",(0,s.jsx)(n.li,{children:"第 8 步，点击 “浏览”，从本地随便选取一张图片（或本小节末尾提供的图片）；"}),"\n",(0,s.jsxs)(n.li,{children:["第 9 步，输入该图片对象的参数名 ",(0,s.jsx)(n.code,{children:"image"}),"；"]}),"\n",(0,s.jsxs)(n.li,{children:["第 10 步，输入我们上传的文件类型 ",(0,s.jsx)(n.code,{children:"image"}),"。"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b0182eb3d2e1b?w=994&h=735&f=png&s=38839",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"至此，请求页面已配置完毕，点击 “文件” -> “保存测试计划” 如下。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01853ef37a86?w=435&h=256&f=png&s=19368",alt:""})}),"\n",(0,s.jsxs)(n.h2,{id:"测试请求",children:["测试请求",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试请求",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"点击如下 “启动” 按钮，测试是否请求成功"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b0188040102af?w=656&h=396&f=png&s=32936",alt:""})}),"\n",(0,s.jsxs)(n.h3,{id:"查看服务器端",children:["查看服务器端",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查看服务器端",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b018b29ac28c2?w=994&h=167&f=png&s=20565",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["此打印说明服务器端接收客户端请求成功，但由于 ",(0,s.jsx)(n.code,{children:"/upload/file"})," 路径的代码未实现，服务器端返回 404 找不到路径。接下来，将进行服务器端图片上传代码编写。"]}),"\n",(0,s.jsxs)(n.h2,{id:"服务器端代码编写",children:["服务器端代码编写",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#服务器端代码编写",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"调用逻辑",children:["调用逻辑",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调用逻辑",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/17/162d43e54cccf2e6?w=692&h=569&f=png&s=27412",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["与第 6 小节用户注册请求服务器端实现类似，客户端上传图片，进入 ",(0,s.jsx)(n.code,{children:"main.py"}),"，将调用 ",(0,s.jsx)(n.code,{children:"url_router"})," 转发到 ",(0,s.jsx)(n.code,{children:"upload_url.py"})," 中，在 ",(0,s.jsx)(n.code,{children:"upload_urls.py"})," 中，对应的 URL 将调用 ",(0,s.jsx)(n.code,{children:"upload_views.py"})," 的 ",(0,s.jsx)(n.code,{children:"UploadFileHandle"})," 类，",(0,s.jsx)(n.code,{children:"UploadFileHandle"})," 为真正的代码处理逻辑，在校验用户信息正确的情况下，返回图片 URL 给客户端，客户端加载该图片。"]}),"\n",(0,s.jsxs)(n.h3,{id:"创建目录",children:["创建目录",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建目录",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["在 views 下面创建 upload 目录，在 upload 下创建 ",(0,s.jsx)(n.code,{children:"upload_urls.py"}),"、",(0,s.jsx)(n.code,{children:"upload_views.py"}),"等文件。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/26/163019a3f15879f9?w=477&h=194&f=png&s=11522",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在 log 目录下创建 upload 目录，用于存放日志。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b018ff477d6fe?w=770&h=169&f=png&s=18322",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["图片一般会放在 static 目录下，在实际项目中，static 下的图片目录也是分层级的，此次讲解，我们将简化，把图片直接放在 ",(0,s.jsx)(n.code,{children:"static/image"})," 目录下。创建 image 目录如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b0194ac9e4f25?w=898&h=162&f=png&s=19749",alt:""})}),"\n",(0,s.jsxs)(n.h3,{id:"编写逻辑代码",children:["编写逻辑代码",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编写逻辑代码",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"main.py"})," 文件，增加 ",(0,s.jsx)(n.code,{children:"views.upload.upload_urls"}),"下的 url 路由，修改 ",(0,s.jsx)(n.code,{children:"handers"})," 如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"        handlers = url_wrapper([\r\n        (r\"/users/\", include('views.users.users_urls')),\r\n        (r\"/upload/\", include('views.upload.upload_urls'))\r\n        ])\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/22/162eb057967dbeb7?w=667&h=303&f=png&s=26303",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"upload_urls.py"}),"，输入如下代码："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"#!/usr/bin/python3\r\n# -*- coding:utf-8 -*-\r\n\r\n\r\nfrom __future__ import unicode_literals\r\nfrom .upload_views import (\r\n    UploadFileHandle\r\n)\r\n\r\nurls = [\r\n    #从/upload/file过来的请求，将调用upload_views里面的UploadFileHandle类\r\n    (r'file', UploadFileHandle)\r\n]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["修改 ",(0,s.jsx)(n.code,{children:"upload_views.py"}),"，输入如下代码："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'#! /usr/bin/python3\r\n# -*- coding:utf-8 -*-\r\n\r\nimport tornado.web\r\nimport os\r\nfrom tornado.escape import json_decode\r\nimport logging\r\nfrom logging.handlers import TimedRotatingFileHandler\r\nimport json\r\n\r\n\r\n#从commons中导入http_response及save_files方法\r\nfrom common.commons import (\r\n    http_response,\r\n    save_files\r\n)\r\n\r\n#从配置文件中导入错误码\r\nfrom conf.base import (\r\n    ERROR_CODE,\r\n    SERVER_HEADER\r\n)\r\n\r\n########## Configure logging #############\r\nlogFilePath = "log/upload/upload.log"\r\nlogger = logging.getLogger("Upload")  \r\nlogger.setLevel(logging.DEBUG)  \r\nhandler = TimedRotatingFileHandler(logFilePath,  \r\n                                   when="D",  \r\n                                   interval=1,  \r\n                                   backupCount=30)  \r\nformatter = logging.Formatter(\'%(asctime)s \\\r\n%(filename)s[line:%(lineno)d] %(levelname)s %(message)s\',)  \r\nhandler.suffix = "%Y%m%d"\r\nhandler.setFormatter(formatter)\r\nlogger.addHandler(handler)\r\n \r\n \r\nclass UploadFileHandle(tornado.web.RequestHandler):\r\n    """handle /upload/file request, upload image and save it to static/image/\r\n    :param image: upload image\r\n    """\r\n        \r\n    def post(self):\r\n        try:\r\n            #获取入参\r\n            image_metas = self.request.files[\'image\']\r\n        except:\r\n            #获取入参失败时，抛出错误码及错误信息\r\n            logger.info("UploadFileHandle: request argument incorrect")\r\n            http_response(self, ERROR_CODE[\'1001\'], 1001)\r\n            return \r\n            \r\n        image_url = ""\r\n        image_path_list = []\r\n        if image_metas:\r\n            #获取当前的路径\r\n            pwd = os.getcwd()\r\n            save_image_path = os.path.join(pwd, "static/image/")\r\n            logger.debug("UploadFileHandle: save image path: %s" %save_image_path)\r\n            #调用save_file方法将图片数据流保存在硬盘中\r\n            file_name_list = save_files(image_metas, save_image_path)\r\n            image_path_list = [SERVER_HEADER + "/static/image/" + i for i in file_name_list]\r\n            ret_data = {"imageUrl": image_path_list}\r\n            #返回图片下载地址给客户端\r\n            self.write(json.dumps({"data": {"msg": ret_data, "code": 0}}))\r\n        else:\r\n            #如果图片为空，返回图片为空错误信息\r\n            logger.info("UploadFileHandle: image stream is empty")\r\n            http_response(self, ERROR_CODE[\'2001\'], 2001)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["这里，我们从 ",(0,s.jsx)(n.code,{children:"common"})," 导入 ",(0,s.jsx)(n.code,{children:"save_files"})," 用于处理图片的保存，从 conf 的 ",(0,s.jsx)(n.code,{children:"base"})," 中导入 ",(0,s.jsx)(n.code,{children:"SERVER_HEADER"}),"，定义了我们服务器的 URL 前缀。同时也看到，",(0,s.jsx)(n.code,{children:"upload"})," 和 ",(0,s.jsx)(n.code,{children:"users"})," 的 Log 配置（如级别）是单独配置的，这样有助于单模块调试。下面修改 conf 目录下的 ",(0,s.jsx)(n.code,{children:"base.py"})," 文件，增加如下："]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/22/162eaffe8896b51d?w=852&h=309&f=png&s=24281",alt:""}),"\r\n完整代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'#! /usr/bin/python3\r\n# -*- coding:utf-8 -*-\r\n\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nengine = create_engine(\'mysql://root:pwd@demo@localhost:3306/demo?charset=utf8\', encoding="utf8", echo=False)\r\nBaseDB = declarative_base()\r\n\r\n#服务器端 IP+Port，请修改对应的IP\r\nSERVER_HEADER = "http://150.109.33.132:8000"\r\n\r\nERROR_CODE = {\r\n    "0": "ok",\r\n    #Users error code\r\n    "1001": "入参非法",\r\n    "1002": "用户已注册，请直接登录",\r\n    \r\n    "2001": "上传图片不能为空"\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"commons.py"})," 下，导入 ",(0,s.jsx)(n.code,{children:"os"})," 模块（ ",(0,s.jsx)(n.code,{children:"import os"})," ），并增加 ",(0,s.jsx)(n.code,{children:"save_files"})," 方法："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import os\r\n\r\ndef save_files(file_metas, in_rel_path, type='image'):\r\n    \"\"\"\r\n    Save file stream to server\r\n    \"\"\"\r\n    file_path = \"\"\r\n    file_name_list = []\r\n    for meta in file_metas:\r\n        file_name = meta['filename']\r\n        file_path = os.path.join( in_rel_path, file_name )\r\n        file_name_list.append( file_name )\r\n        #save image as binary\r\n        with open( file_path, 'wb' ) as up:\r\n            up.write( meta['body'] )\r\n    return file_name_list\n"})}),"\n",(0,s.jsx)(n.p,{children:"至此，服务器端的代码已完成。再次从 JMeter 触发图片上传，在触发图片上传之前，我们先创建 JMeter 的结果树。所谓结果树，就是在触发请求之后，查看服务器端返回的结构。右击 “HTTP 请求”，依次选择“添加” -> ”监听器” -> “查看结果树”，如下图所示。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01a2427e2341?w=799&h=472&f=png&s=56335",alt:""})}),"\n",(0,s.jsx)(n.p,{children:"触发 JMeter 图片上传，点击 “察看结果树”，切到 “响应数据” 页面，可以看到服务器端返回的数据信息："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{"data": {"msg": {"imageUrl": ["http://150.109.33.132:8000/static/image/demo.jpg"]}, "code": 0}}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01a450869998?w=1156&h=458&f=png&s=61558",alt:""}),"\r\n查看服务器端进程打印："]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01a60d7352fd?w=1257&h=161&f=png&s=21992",alt:""}),"\r\n查看图片是否上传："]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01a7e78bd9fd?w=993&h=179&f=png&s=18882",alt:""}),"\r\n查看 log 是否成功写入："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01a9d7cdfc23?w=1496&h=161&f=png&s=29180",alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["此时，客户端就可以通过服务器端返回的图片 URL（",(0,s.jsx)(n.code,{children:"http://150.109.33.132:8000/static/image/demo.jpg"}),"）加载图片了，在浏览器中输入图片 URL，查看加载是否成功。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://user-gold-cdn.xitu.io/2018/4/10/162b01ac3f15236a?w=1112&h=669&f=png&s=965733",alt:""})}),"\n",(0,s.jsxs)(n.h2,{id:"代码下载",children:["代码下载",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#代码下载",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["到目前为止，服务器端代码及图片如下：",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/Jawish185/demo9.git",target:"_blank",rel:"noopener noreferrer",children:"demo9"})]}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["至此，我们完成了服务器端图片上传的接收及图片 URL 返回，客户端根据服务器返回的图片 URL，即可加载该图片。这里没有写数据库的操作，读者可以尝试参考第 8 节的讲解，定义图片的 ",(0,s.jsx)(n.code,{children:"models"}),"，并将图片 URL 和其他信息写入数据库中。"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let a=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["%E5%9F%BA%E4%BA%8E%20Python%20%E8%BD%BB%E6%9D%BE%E8%87%AA%E5%BB%BA%20App%20%E6%9C%8D%E5%8A%A1%E5%99%A8%2F8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A5%E6%94%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%EF%BC%8C%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%9C%A8%E7%A1%AC%E7%9B%98%E4%B8%AD.md"]={toc:[{text:"下载 JMeter",id:"下载-jmeter",depth:2},{text:"安装 JMeter",id:"安装-jmeter",depth:2},{text:"配置测试计划",id:"配置测试计划",depth:2},{text:"切换语言",id:"切换语言",depth:3},{text:"配置 HTTP 请求",id:"配置-http-请求",depth:3},{text:"测试请求",id:"测试请求",depth:2},{text:"查看服务器端",id:"查看服务器端",depth:3},{text:"服务器端代码编写",id:"服务器端代码编写",depth:2},{text:"调用逻辑",id:"调用逻辑",depth:3},{text:"创建目录",id:"创建目录",depth:3},{text:"编写逻辑代码",id:"编写逻辑代码",depth:3},{text:"代码下载",id:"代码下载",depth:2},{text:"小结",id:"小结",depth:2}],title:"8服务器接收客户端图片上传，并保存在硬盘中",headingTitle:"8服务器接收客户端图片上传，并保存在硬盘中",frontmatter:{}}}}]);