"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["37360"],{161660:function(e,n,a){e.exports=a.p+"static/image/5f8651b018d4b205eedccc5581f80509.f198e016.webp"},535503:function(e,n,a){e.exports=a.p+"static/image/b60a3847f4c1d9e146e8f810efc25cda.3d56423c.webp"},274126:function(e,n,a){a.r(n),a.d(n,{default:()=>Q});var s=a(552676),c=a(740453);let i=a.p+"static/image/d621d77ddeb94408927c4cfd60487ca7.324d50ac.webp",r=a.p+"static/image/3eb4483ba7852f3aef1682085ed4e4c5.25a384a7.webp",l=a.p+"static/image/0cc37271c71745e09cb747ef993c128a.c4c1fd3e.webp",d=a.p+"static/image/f98626b76f584b1c276e8a0b0270b3a3.02a40975.webp",t=a.p+"static/image/fff86fb01c1e6dcccf56d785cfc186b2.ed3b7f32.webp",p=a.p+"static/image/c964d03f62b9f768d80c45f3ce5b840e.87a54ffa.webp",o=a.p+"static/image/29a68c6c01f7f4619f42e860270eb451.681570a6.webp",x=a.p+"static/image/341d95dd795e78cf338a72873a1c5b78.d4846ddc.webp",j=a.p+"static/image/21b6a92eda1476de9dc6f890036de388.40c19dc6.webp",h=a.p+"static/image/3c33fcccbbb4555e5d69e912021c889e.37f9229d.webp",f=a.p+"static/image/1b8d26830ab993c2656e4b83ec88b2d8.3a9171c9.webp",g=a.p+"static/image/5516a9c2f94685e3931b1867da314ab9.a7803a02.webp",m=a.p+"static/image/d3ed2b26afdc6a3d532f1e627af75e4e.abe18c4d.webp",b=a.p+"static/image/db642fd93d3587e56c43d39f5a1af85d.ad38a6ce.webp",u=a.p+"static/image/065384eeb5ef6739870fa1bad7d4f93b.7928ae04.webp",w=a.p+"static/image/e2ae19222aa569b76331521af7497cf7.474145cc.webp",E=a.p+"static/image/9f2d251f74ccecdd5d30278adf95b0dd.9b9afb51.webp",v=a.p+"static/image/552c889ec1a80150c9c3ff89c62892ba.868555ed.webp",A=a.p+"static/image/80e83a5deadbacc5631e39fee5f61cbc.087db123.webp";var _=a(535503);let B=a.p+"static/image/e421d8b656172a8bc0e5a607a9664da9.53ff1287.webp",P=a.p+"static/image/7e6a1ef4a58fe426373c14ce4017ed75.a2782c5b.webp",k=a.p+"static/image/7cf3e360f09e0cd498a4f69b60aa5efb.f1f569d7.webp",F=a.p+"static/image/8bc3e7fce205132b0e21f18bfa102e51.13ffb6b2.webp",N=a.p+"static/image/bf09256046227e95a768e51850b88d5a.91b9ccef.webp",S=a.p+"static/image/1d3fba95b81e1a35ec78461891dad6cb.b32eb738.webp",C=a.p+"static/image/9bf2b7ece5223f578582a569d66333fb.64f68d22.webp",U=a.p+"static/image/60ce434f084f3149c4734aa2d367fe72.ce510fc7.webp",D=a.p+"static/image/fc458775dfd60215f43aaaa67036ab3e.908cad87.webp",I=a.p+"static/image/f634158b0f779415f8bd0dec211803c2.b80ad3df.webp",M=a.p+"static/image/4898e1c593e158bb4eeb54b3db12a5af.2de3265b.webp",y=a.p+"static/image/e83f8e9cfa836b835f82fff8f7e0ac1c.cd90e49c.webp",H=a.p+"static/image/eb88561026f35571a80aa8eeda64e3f9.35ac509c.webp",q=a.p+"static/image/d799fe54191b2824c353e63d84303c62.9b694e41.webp",R=a.p+"static/image/629bd09fbda3fbb3c9149ddf2edae0a5.7137d5de.webp";var G=a(161660);function O(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"118-会议室预订系统用户管理模块---头像上传",children:["118. 会议室预订系统：用户管理模块-- 头像上传",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#118-会议室预订系统用户管理模块---头像上传",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"上节我们实现了用户信息的修改："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:G,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"但是头像是直接填的路径，这里应该做成图片的展示，以及图片的上传。"}),"\n",(0,s.jsx)(n.p,{children:"我们需要添加个上传图片的接口："}),"\n",(0,s.jsx)(n.p,{children:"在 UserController 里添加这个 handler："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"@Post('upload')\n@UseInterceptors(FileInterceptor('file', {\n  dest: 'uploads'\n}))\nuploadFile(@UploadedFile() file: Express.Multer.File) {\n  console.log('file', file);\n  return file.path;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"安装用到的类型包："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm install @types/multer\n"})}),"\n",(0,s.jsx)(n.p,{children:"在 postman 里测试下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"选择 form-data 类型，然后添加 file 字段，选择一个文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:q,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"返回了服务端保存路径，并且打印了文件信息："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:H,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们限制下只能上传图片："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import * as path from 'path';\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"@Post('upload')\n@UseInterceptors(FileInterceptor('file', {\n  dest: 'uploads',\n  fileFilter(req, file, callback) {\n    const extname = path.extname(file.originalname);        \n    if(['.png', '.jpg', '.gif'].includes(extname)) {\n      callback(null, true);\n    } else {\n      callback(new BadRequestException('只能上传图片'), false);\n    }\n  }\n}))\nuploadFile(@UploadedFile() file: Express.Multer.File) {\n  console.log('file', file);\n  return file.path;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"callback 的第一个参数是 error，第二个参数是是否接收文件。"}),"\n",(0,s.jsx)(n.p,{children:"然后我们上传一个非图片文件试一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:I,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"返回了错误信息。"}),"\n",(0,s.jsx)(n.p,{children:"上传图片是正常的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后限制下图片大小，最大 3M:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:U,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"limits: {\n    fileSize: 1024 * 1024 * 3\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"当你上传超过 3M 的图片时，会提示错误："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后我们改下保存的文件名，这需要自定义 storage。"}),"\n",(0,s.jsx)(n.p,{children:"前面讲 multer 文件上传那节讲过，直接拿过来（忘了的同学可以回头看一下）："}),"\n",(0,s.jsx)(n.p,{children:"添加 src/my-file-storage.ts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import * as multer from \"multer\";\nimport * as fs from 'fs';\n\nconst storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n        try {\n            fs.mkdirSync('uploads');\n        }catch(e) {}\n\n        cb(null, 'uploads')\n    },\n    filename: function (req, file, cb) {\n        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9) + '-' + file.originalname\n        cb(null, uniqueSuffix)\n    }\n});\n\nexport { storage };\n"})}),"\n",(0,s.jsx)(n.p,{children:"这个就是自己指定怎么存储，multer.distkStorage 是磁盘存储，通过 destination、filename 的参数分别指定保存的目录和文件名。"}),"\n",(0,s.jsx)(n.p,{children:"指定 storage："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后测试下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样路径就能看出来是什么文件了。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们把这个目录设置为静态文件目录，这样能直接访问上传的图片。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"在 main.ts 里添加 uploads 目录为静态目录："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"app.useStaticAssets('uploads', {\n    prefix: '/uploads'\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"指定通过 /uploads 的前缀访问。"}),"\n",(0,s.jsx)(n.p,{children:"然后我们把路径复制，在浏览器访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样就可以访问到上传的文件了。"}),"\n",(0,s.jsx)(n.p,{children:"也就是说，上传头像之后，可以直接拿到图片的 url。"}),"\n",(0,s.jsx)(n.p,{children:"我们在页面里加一下："}),"\n",(0,s.jsx)(n.p,{children:"在 src/page/update_info  下增加一个 HeadPicUpload.tsx"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { Button, Input } from "antd";\n\ninterface HeadPicUploadProps {\n    value?: string;\n    onChange?: Function\n}\n\nexport function HeadPicUpload(props: HeadPicUploadProps) {\n    return props?.value ? <div>\n        {props.value}\n        <Button>上传</Button>\n    </div>: <div>\n        <Button>上传</Button>\n    </div>\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"在上传头像的地方引入下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"为什么是 value 和 onChange 两个参数呢？"}),"\n",(0,s.jsx)(n.p,{children:"因为 antd 的 Form.Item 在渲染时会给子组件传这两个参数。"}),"\n",(0,s.jsx)(n.p,{children:"现在渲染出来的是这样的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们在 postman 里上传个图片，比如这个："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"拿到它的路径："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后手动去数据库里改一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"点击 apply。"}),"\n",(0,s.jsx)(n.p,{children:"刷新下页面，可以看到确实变了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"然后把它改成图片："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<img src={\'http://localhost:3005/\' + props.value} alt="头像" width="100" height="100"/>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["头像就显示出来了：\n",(0,s.jsx)("img",{src:m,alt:""})]}),"\n",(0,s.jsx)(n.p,{children:"然后我们把后面的上传按钮改为 antd 的拖拽上传组件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { InboxOutlined } from "@ant-design/icons";\nimport { Button, Input, message } from "antd";\nimport Dragger, { DraggerProps } from "antd/es/upload/Dragger";\n\ninterface HeadPicUploadProps {\n    value?: string;\n    onChange?: Function\n}\n\nconst props: DraggerProps = {\n    name: \'file\',\n    action: \'http://localhost:3005/user/upload\',\n    onChange(info) {\n        const { status } = info.file;\n        if (status === \'done\') {\n            console.log(info.file.response);    \n            message.success(`${info.file.name} 文件上传成功`);\n        } else if (status === \'error\') {\n            message.error(`${info.file.name} 文件上传失败`);\n        }\n    }\n};\n\nconst dragger = <Dragger {...props}>\n    <p className="ant-upload-drag-icon">\n        <InboxOutlined />\n    </p>\n    <p className="ant-upload-text">点击或拖拽文件到这个区域来上传</p>\n</Dragger>\n\nexport function HeadPicUpload(props: HeadPicUploadProps) {\n    return props?.value ? <div>\n        <img src={\'http://localhost:3005/\' + props.value} alt="头像" width="100" height="100"/>\n        {dragger}\n    </div>: <div>\n        {dragger}\n    </div>\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"测试下，提示上传成功："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"控制台打印了文件路径："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"i"})}),"\n",(0,s.jsx)(n.p,{children:"服务端也确实有了这个文件："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"我们浏览器访问下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"能够正常访问。"}),"\n",(0,s.jsx)(n.p,{children:"接下来就通过 onChange 回调传给 Form 就好了。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这样表单的值就会改，触发重新渲染，就可以看到新的头像："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"不过现在还没更新到数据库。"}),"\n",(0,s.jsx)(n.p,{children:"点击发送验证码："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"填入验证码，点击修改："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"提示更新成功。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"数据库里确实更新了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"刷新下页面，可以看到依然是这个头像："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"代表修改成功了。"}),"\n",(0,s.jsx)(n.p,{children:"至此，我们完成了用户信息修改的前后端。"}),"\n",(0,s.jsx)(n.p,{children:"案例代码在小册仓库："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_frontend_user",target:"_blank",rel:"noopener noreferrer",children:"用户端前端代码"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_backend",target:"_blank",rel:"noopener noreferrer",children:"后端代码"})}),"\n",(0,s.jsxs)(n.h2,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这节我们基于 multer 实现了头像上传。"}),"\n",(0,s.jsx)(n.p,{children:"通过自定义 storage 实现了文件路径的自定义，并且限制了文件的大小和类型。"}),"\n",(0,s.jsx)(n.p,{children:"然后把上传的目录作为静态文件目录，这样可以直接访问。"}),"\n",(0,s.jsx)(n.p,{children:"这样，头像上传功能就完成了。"})]})}function T(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(O,{...e})}):O(e)}let Q=T;T.__RSPRESS_PAGE_META={},T.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F118.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97--%20%E5%A4%B4%E5%83%8F%E4%B8%8A%E4%BC%A0.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"118. 会议室预订系统：用户管理模块-- 头像上传",headingTitle:"118. 会议室预订系统：用户管理模块-- 头像上传",frontmatter:{}}}}]);