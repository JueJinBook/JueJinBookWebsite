"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["74963"],{343329:function(e,n,s){s.r(n),s.d(n,{default:()=>h});var c=s(552676),o=s(740453);let l=s.p+"static/image/45463f523518e755e2eed6e130d47e8a.506ef5db.webp",i=s.p+"static/image/d972b46234948dca65c554cc4a35bda3.59976ba1.webp";function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",img:"img",blockquote:"blockquote"},(0,o.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"9console-篇---ninja-consolelog-忍者打印",children:["9.console 篇 - Ninja console.log （忍者打印）",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#9console-篇---ninja-consolelog-忍者打印",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["有时你设置的断点是不是被执行了太多次？假设有一个包含 ",(0,c.jsx)(n.code,{children:"200"})," 个元素的循环，但是你只对第 ",(0,c.jsx)(n.code,{children:"110"}),"  次循环的结果感兴趣，又或者你只对一些满足某些条件的结果感兴趣，怎么办呢？这就是我们要说的条件断点："]}),"\n",(0,c.jsxs)(n.h2,{id:"1-conditional-breakpoints-条件断点",children:["1. ",(0,c.jsx)(n.code,{children:"Conditional breakpoints"})," 条件断点",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-conditional-breakpoints-条件断点",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"这样的情况下，你可以设置一个条件断点："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:["右击行号，选择 ",(0,c.jsx)(n.code,{children:"Add conditional breakpoint...(添加条件断点)"})]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:["或者右击一个已经设置的断点并且选择 ",(0,c.jsx)(n.code,{children:"Edit breakpoint(编辑断点)"})]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:["然后输入一个执行结果为 ",(0,c.jsx)(n.code,{children:"true"})," 或者 ",(0,c.jsx)(n.code,{children:"false"})," 的表达式（它的值其实不需要完全为 ",(0,c.jsx)(n.code,{children:"true"})," 或者 ",(0,c.jsx)(n.code,{children:"false"})," 尽管那个弹出框的描述是这样说的）。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"在这个表达式中你可以使用任何这段代码可以获取到的值（当前行的作用域）。"}),"\n",(0,c.jsx)(n.p,{children:"如果条件成立，这个断点就会暂停代码的执行："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsxs)(n.h2,{id:"2-the-ninja忍者-consolelog",children:["2. The ninja（忍者） ",(0,c.jsx)(n.code,{children:"console.log"}),(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-the-ninja忍者-consolelog",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["得益于条件断点， ",(0,c.jsx)(n.code,{children:"console.log"})," 也有了新玩法："]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"每一个条件都必须经过判断 - 当应用执行到这一行的时候进行判断"}),"\n",(0,c.jsxs)(n.li,{children:["并且如果条件返回的是 ",(0,c.jsx)(n.code,{children:"falsy"})," 的值(这里的 ",(0,c.jsx)(n.code,{children:"falsy"}),"并非是笔误，",(0,c.jsx)(n.code,{children:"falsy"})," 指的是被判定为 ",(0,c.jsx)(n.code,{children:"false"})," 的值，例如 ",(0,c.jsx)(n.code,{children:"undefined"})," )，它并不会暂停.."]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["与其在你的源码的不同地方去添加 ",(0,c.jsx)(n.code,{children:"console.log"})," / ",(0,c.jsx)(n.code,{children:"console.table"})," / ",(0,c.jsx)(n.code,{children:"console.time"})," 等等，不如你直接使用条件判断来将它们“连接”到 ",(0,c.jsx)(n.code,{children:"Source"})," 面板中。\n这样的话，它们会一直执行，并且当你不再需要它们的时候，在 ",(0,c.jsx)(n.code,{children:"Breakpoints section"})," 会清晰的列出它们。点两下鼠标你就可以把所有的都移除，就像一堆忍者一样突然消失！"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["这个技术在调试生产环境的问题时同样很有用，因为你通过这样的方式轻松将 ",(0,c.jsx)(n.code,{children:"console logs"})," 插入到 ",(0,c.jsx)(n.code,{children:"source"})," 里。"]}),"\n"]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}let h=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%20Chrome%20%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%2F9.console%20%E7%AF%87%20-%20Ninja%20console.log%20%EF%BC%88%E5%BF%8D%E8%80%85%E6%89%93%E5%8D%B0%EF%BC%89.md"]={toc:[{text:"1. `Conditional breakpoints` 条件断点",id:"1-conditional-breakpoints-条件断点",depth:2},{text:"2. The ninja（忍者） `console.log`",id:"2-the-ninja忍者-consolelog",depth:2}],title:"9.console 篇 - Ninja console.log （忍者打印）",headingTitle:"9.console 篇 - Ninja console.log （忍者打印）",frontmatter:{}}}}]);