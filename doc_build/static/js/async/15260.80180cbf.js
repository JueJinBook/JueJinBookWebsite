"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["15260"],{506783:function(e,n,c){c.r(n),c.d(n,{default:()=>I});var s=c(552676),d=c(740453);let r=c.p+"static/image/8a15c49ec0e2836fa66d9d99c6ab91a2.3f41017a.webp",i=c.p+"static/image/72a6aec4950446a2d97a87c4487f8dd6.507b6f33.webp",h=c.p+"static/image/a3a0edcefece24550cced18c7fe9f0e8.ed8684d2.webp",l=c.p+"static/image/d76bcb1ba27bb77708621100849b2e9f.19b988f0.webp",a=c.p+"static/image/cf934a0860bc19a8fc6dda85df426798.54cf79d4.webp",j=c.p+"static/image/b2bc7a98c052eb7bac92149cf4e7e8ca.447c1b23.webp",x=c.p+"static/image/48a1b153ed977bd3084d091fa02ba0ca.448832db.webp",t=c.p+"static/image/294318bc1f31a10825ae8dca703176f8.77ba722d.webp",o=c.p+"static/image/b87ed8b1ec8c8e7b9c9baf85964cdd65.a7beb3f6.webp",p=c.p+"static/image/56fef56a538236ecc37c6279d047cc34.7195a14a.webp",A=c.p+"static/image/8543c8f0bc10b22f8b378e1d343ab6df.487c2776.webp",b=c.p+"static/image/45d2065a4dc80a953202af55429bcee0.bb54ee72.webp",g=c.p+"static/image/48d26d5b47ad9579bfe93231b295eac6.7e15f609.webp";function P(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",code:"code",ol:"ol",li:"li",h2:"h2",strong:"strong",h3:"h3"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"1开篇词我们为什么需要代码分析",children:["1.开篇词：我们为什么需要代码分析？",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1开篇词我们为什么需要代码分析",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"随着互联网的发展，很多 Web 应用越来越复杂，前端开发也演变成几十人甚至上百人的多团队/多角色协同开发模式，随着代码量、仓库数量、依赖复杂度的增加，开发者遇到的挑战也越来越大。"}),"\n",(0,s.jsx)(n.p,{children:"这很好理解，如果把现代前端开发想象成是大型商场的日常管理，而我们恰好是它的管理者，那么会遇到哪些挑战呢？"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["商场内有服装店、数码店、餐饮店、电影院等经营门店，也有物业管理处、安保、后勤等基础保障团队，各个门店日常的商业活动离不开基础的水电供应、WiFi 网络、日常清扫等服务，或者说经营门店",(0,s.jsx)(n.code,{children:"依赖"}),"基础保障团队提供的服务。为了让",(0,s.jsx)(n.code,{children:"经营门店"}),"与",(0,s.jsx)(n.code,{children:"基础保障团队"}),"更好的配合，身为管理者的你制定了",(0,s.jsx)(n.code,{children:"经营规则"}),"，但还是会发生很多意料之外的问题，比如："]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"某个服装店在公共通道处放置打折活动的广告牌，影响了其它门店正常通行，后经举报才发现。"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"某个数码店为了绕开商场每天最高用电限制，私自装电表，改变电力接入方式，搞一些小动作。"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"物业管理处下发了最新的用水标准，但是很多餐饮店还是沿用旧标准，对此物业管理处并不知情。"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"物业对具体门店 WiFi 使用情况缺乏了解，无法评估升级新的网络设备后对各个门店的具体影响。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"经营规则只能告诉门店应该做什么，但并不代表他们真的会按规则去做事"}),"，一些门店甚至还会搞一些“小动作”。作为基础保障部门，缺乏对各个门店真实经营情况的了解，导致管理方案很难落地。"]}),"\n",(0,s.jsxs)(n.p,{children:["如何解决这些问题呢？身为管理者，需要",(0,s.jsx)(n.code,{children:"定时去收集、分析"}),"各个经营门店对于基础设施的使用情况，及时",(0,s.jsx)(n.code,{children:"检查"}),"它们对于经营规则的落地情况，这样才能更好地",(0,s.jsx)(n.code,{children:"了解并管控"}),"经营门店，让整个商场有序经营，更好地服务消费者。"]}),"\n",(0,s.jsxs)(n.h2,{id:"背景复杂的现代前端架构",children:["背景：复杂的现代前端架构",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#背景复杂的现代前端架构",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["现代前端开发也会遇到类似的问题，以某电商 B 端 Web 应用架构为例，它由 ",(0,s.jsx)(n.code,{children:"30+"})," 前端团队共计 ",(0,s.jsx)(n.code,{children:"100+"})," 前端开发人员共同开发维护，是一个包含 ",(0,s.jsx)(n.code,{children:"200+"})," 个代码仓库的微前端巨型应用（","大型商场","）。其中有负责 ",(0,s.jsx)(n.strong,{children:"基础项目"}),"（主应用、基础框架、组件库、工具库）的基础架构团队（","物业等基础保障团队","），也有负责订单、广告、数据、商品、物流等具体子应用的业务开发团队（","具体经营门店","），上层依赖下层，双方通过 API 文档（","经营规则","）维系协同开发模式。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsxs)(n.h2,{id:"问题海量仓库的依赖治理难题",children:["问题：海量仓库的依赖治理难题",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题海量仓库的依赖治理难题",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["与商场管理者一样，作为前端架构师，面对 ",(0,s.jsx)(n.code,{children:"200"})," 多个代码仓库的业务迭代（","经营门店日常商业活动","），也会存在很多治理难题，比如："]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"问题一"}),"：基础架构团队新出的 2.0 版本 UI 库在业务团队中推广时进度缓慢，不清楚业务团队对于 1.0 版本组件真实的调用情况，因此很难评估升级影响，只能同时兼容两个版本（","物业无法评估升级新设备后对门店的影响","） 。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"问题二"}),"：基础架构团队不敢轻易修改，下线已有 API，因为不清楚哪些项目对它有依赖会受到影响，开发新 feature 时必须向后兼容，导致框架越发臃肿（","物业缺乏经营门店对于基础设施使用情况的了解","）。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"问题三"}),"：A、B 应用项目直接使用 document.cookie 去设置 cookie，而非基础框架提供的带隔离 namespace 特性的 cookie API，导致 cookie 相互污染（","服装店占用公共通道，影响其它门店","）。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"问题四"}),"：C 应用团队代码一直未更新必须升级的框架基础 API，发布 live 后因特定条件执行报错才被发现（","餐饮店一直未落实新的用水标准","）。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"问题五"}),"：D 应用团队私自重写了基础项目的某个 API，基础架构团队对此并不知晓，通过线上报错才得以发现（","数码店私改用电方式","）。"]}),"\n",(0,s.jsxs)(n.h2,{id:"原因api-文档无法表述真实的依赖关系",children:["原因：API 文档无法表述真实的依赖关系",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#原因api-文档无法表述真实的依赖关系",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["API 文档只能告诉业务开发团队（",(0,s.jsx)(n.code,{children:"依赖调用方"}),"）如何调用基础项目（",(0,s.jsx)(n.code,{children:"依赖提供方"}),"）提供的 API，但并不能表述项目间真实的依赖关系。因为它无法告诉我们基础项目导出的 API 到底用在了哪些项目中，也无法告诉我们子应用项目是如何使用这些 API 的，所以无法避免",(0,s.jsx)(n.code,{children:"脏调用"}),"和",(0,s.jsx)(n.code,{children:"骚操作"}),"。\n（",(0,s.jsx)(n.code,{children:"脏调用"}),"不是指代码语法有问题，而是指依赖调用方代码中存在有问题的 API 调用，比如使用已下线 API，而",(0,s.jsx)(n.code,{children:"骚操作"}),"是指代码中存在私自 Hack 基础 API 等行为）"]}),"\n",(0,s.jsxs)(n.p,{children:["基础项目（",(0,s.jsx)(n.code,{children:"依赖提供方"}),"）对全部子应用代码中真实的 API 调用缺乏全局层面的了解，所以在升级重构时只能被动向后兼容，这让基础项目越来越臃肿，难以维护，已经到了必须治理的程度。"]}),"\n",(0,s.jsxs)(n.p,{children:["我们需要一套能够帮助我们",(0,s.jsx)(n.code,{children:"了解并管控"}),"真实依赖关系的解决方案。"]}),"\n",(0,s.jsxs)(n.h2,{id:"解决方案前端代码分析工具",children:["解决方案：前端代码分析工具",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#解决方案前端代码分析工具",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["本课程学习的重点并不是探讨微前端如何解决某些具体问题，而是想设计一种 ",(0,s.jsx)(n.strong,{children:"工程化工具"})," 来帮助开发者了解并管控大型项目中的依赖关系，主动发现、检测、预防因依赖治理而产生的问题。"]}),"\n",(0,s.jsx)(n.p,{children:"要想了解真实的依赖关系，最有效的做法是对全部子应用进行代码静态分析，对项目代码中的 API 调用进行定位 & 检测 & 统计，生成代码分析报告。"}),"\n",(0,s.jsx)(n.p,{children:"代码静态分析是指在不实际执行程序的情况下，对代码语义和行为进行分析。大家熟知的 ESLint，就是一款通过代码静态分析帮助开发者定位语法错误的工具，而我们要设计的代码分析工具则是通过分析 API 真实的调用情况来帮助开发者了解并管控依赖关系。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"分析工具的实现原理："})}),"\n",(0,s.jsx)(n.p,{children:"通过扫描业务团队单个或全部项目，找出所有需要分析的代码文件（TS、Vue、JS），并依次将其解析为 AST ，然后遍历各级 AST 节点，按照分析指标对 API 调用进行定位/统计/标记等处理，等分析完所有文件后，整理输出分析结果。分析工具会以 npm 包形式管理，支持多种接入方式，可以快速集成到其它工具或服务中。"}),"\n",(0,s.jsxs)(n.h2,{id:"应用场景",children:["应用场景",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#应用场景",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"1脏调用拦截--评分告警",children:["1.“脏调用”拦截 & 评分告警",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1脏调用拦截--评分告警",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"配合 git hook、gitlab CI 等工具，在业务开发团队 Work Flow 各个关键阶段触发代码分析任务，拦截包含“脏调用”的代码，防止其执行提交/合入操作，帮助开发者提前发现代码风险。"}),"\n",(0,s.jsx)(n.p,{children:"通过 gitlab CI 定时触发分析任务，对 API 调用进行评分，推送告警消息 or 分析报告给相关同学，推动业务团队主动修复缺陷。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://liangxin199045.github.io/code-demo/",target:"_blank",rel:"noopener noreferrer",children:"单应用代码分析报告demo"})}),"\n",(0,s.jsxs)(n.h3,{id:"2全应用代码分析报告",children:["2.全应用代码分析报告",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2全应用代码分析报告",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"全应用代码分析报告反映了基础项目 API 在全部业务项目中真实的调用情况，可以帮助基础架构团队优化 API 导出，减少冗余，评估 API 上/下线影响，把控重构进度等"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://liangxin199045.github.io/all-projects-analysis/",target:"_blank",rel:"noopener noreferrer",children:"全应用代码分析报告demo"})}),"\n",(0,s.jsx)(n.p,{children:"例如通过上图所示代码分析报告，我们可以了解到 ："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"app.localStorage.set"})," 这个黑名单 API 方法共有 6 处调用，其中一处调用位于 ","ProjectA"," 项目 src/pages/ 目录下 BasicSettings.vue 文件中的 ",(0,s.jsx)(n.a,{href:"https://github.com/liangxin199045/project-app1/blob/main/src/pages/BasicSettings.vue#L125",target:"_blank",rel:"noopener noreferrer",children:"125"})," 行。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["ProjectA","，","ProjectB","，","ProjectC"," 三个应用都引入了 ",(0,s.jsx)(n.code,{children:"APIPromise"})," 这个类型 API，它属于高频调用 API。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["ProjectA","，","ProjectB"," 两个应用都引入了 ",(0,s.jsx)(n.code,{children:"APPRequest"})," 这个 API，并且都通过 as 别名以 request 来使用。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["ProjectD"," 应用 在 src/services/ 目录下 connect.ts 文件中 的 ",(0,s.jsx)(n.a,{href:"https://github.com/liangxin199045/project-app4/blob/main/src/services/connect.ts#L38",target:"_blank",rel:"noopener noreferrer",children:"38"})," 行引入了 ",(0,s.jsx)(n.code,{children:"FB.login"})," 这个黑名单方法 API。"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["所有项目都没有引入基础框架提供的 ",(0,s.jsx)(n.code,{children:"app.getThirdInfo API"})," ，可以评估一下它是否为 “鸡肋” API。"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"3全应用代码分析平台",children:["3.全应用代码分析平台",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3全应用代码分析平台",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"搭建代码分析平台，后端服务集成代码分析工具的分析能力，然后将代码分析结果定期整理，支持按各种检索条件查看项目的分析结果，支持查看选定时间段内某些 API 的调用趋势变化，生成趋势变化折线图，帮助基础架构团队跟踪具体 API 在业务项目中的调用趋势变化，把控重构进度。"}),"\n",(0,s.jsxs)(n.p,{children:["查看 Project A 项目中 ",(0,s.jsx)(n.code,{children:"app.localStorage.get"})," 这个 API 真实的调用及分布情况："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"查看各个子应用项目的代码评分及分析详情："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsxs)(n.p,{children:["查看 ",(0,s.jsx)(n.code,{children:"app.localStorage.set"})," 这个 API 在全应用中的调用趋势变化："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"通过上图我们可以了解到 ："}),"\n",(0,s.jsxs)(n.p,{children:["基础项目准备下线 ",(0,s.jsx)(n.code,{children:"app.localStorage.set"})," 这个黑名单 API ，各个业务团队接到通知后在 ",(0,s.jsx)(n.code,{children:"2022.1-2022.6"})," 这半年来，已陆续在代码中去掉依赖此 API 的相关逻辑，因此该 API 在全部项目中的实际调用量从最初的 ",(0,s.jsx)(n.code,{children:"131"})," 降到了 ",(0,s.jsx)(n.code,{children:"5"})," ，剩余的这 ",(0,s.jsx)(n.code,{children:"5"})," 处调用集中在 ","Project D"," 项目的 ",(0,s.jsx)(n.code,{children:"3"})," 个 TS 文件中，预计 ",(0,s.jsx)(n.code,{children:"7"})," 月底也可以完成改造，基础架构团队可以选择在 ",(0,s.jsx)(n.code,{children:"8"})," 月份下线该 API，不会对业务造成影响。"]}),"\n",(0,s.jsxs)(n.h2,{id:"作者介绍",children:["作者介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#作者介绍",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"iceman要早睡，前端技术专家，目前就职于某跨境电商公司，负责基础平台微前端架构设计，工程化体系建设等工作，前腾讯高级工程师，负责过手机QQ，腾讯文档，QQ小程序平台，腾讯云TRTC等项目开发工作，乐于分享，多项技术专利第一撰写人，擅长领域：前端工程化，音视频开发，3D渲染等。"}),"\n",(0,s.jsxs)(n.h2,{id:"课程是如何设计的",children:["课程是如何设计的",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#课程是如何设计的",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"课程共分为三个阶段："}),"\n",(0,s.jsxs)(n.h3,{id:"基础知识阶段",children:["基础知识阶段",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基础知识阶段",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《一次搞懂 AST 抽象语法树》"}),"：掌握 AST 相关基础知识，AST 可视化工具，为开发代码分析工具奠定基础。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《从分析一段 TS 代码开始》"}),"：学习通过程序脚本的方式分析 TS 代码，建立正向反馈，迈出代码分析的第一步。"]}),"\n",(0,s.jsxs)(n.h3,{id:"具体实现阶段",children:["具体实现阶段",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#具体实现阶段",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《架构设计 & 分析范式》"}),"：学习设计分析工具的核心基础类，掌握依赖调用分析的通用方法论和分析范式。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《扫描 & 解析 TS 文件》"}),"：根据扫描源配置扫描文件目录下的 TS 文件，学习 TypeScript 编译原理。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《分析 Import 节点》"}),"：观察 Import 节点多种导入方式的 AST 特征，掌握分析 Import 节点的函数实现。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《判定 API 调用》"}),"：学会判定 API 调用，并排除干扰节点，掌握如何关联语义上下文，实现判定函数。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《API 用途分析》"}),"：学习自下而上分析模式，甄别各种用途场景 AST 特征，排除干扰场景，实现具体分析函数。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《分析插件方案设计》"}),"：设计插件模式、插件函数、插件管理等，实现主程序与插件程序的逻辑解耦。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《Browser API 调用分析》"}),"：掌握 Browser API 与 Import API 的区别，了解其判定原理，实现分析插件函数编写。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《提取 Vue 文件中 TS 代码》"}),"：学习 Vue 相关编译器，掌握提取 Vue 中 TS 片段的技术方案，实现相关函数。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《整理分析数据》"}),"：学习处理 Map 数据结构，设计评分插件，实现 API 标记处理等。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《入口设计 & 发布 NPM 包》"}),"：理解 CLI / API 两种模式的区别，完成入参校验逻辑，掌握如何调试，发布 NPM 包。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《开发自定义分析插件》"}),"：学习自定义分析插件开发流程，掌握如何开发分析插件，并向社区贡献插件代码。"]}),"\n",(0,s.jsxs)(n.h3,{id:"应用场景阶段",children:["应用场景阶段",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#应用场景阶段",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《“脏调用”拦截 & CI自动化分析》"}),"：配合 git hook、gitlab CI，学习如何实现“脏调用”拦截，CI 自动化分析。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"《微前端业务全应用代码分析》"}),"：学习全应用代码分析的实现方案，搭建代码分析平台，跟踪 API 调用趋势变化。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"最后我想说，想要解决大型 Web 应用依赖治理难题，代码分析是非常重要的，很多同学已经意识到了这一点，但对于代码静态分析领域的知识储备却比较少，很难独立开发针对特定分析目的的代码分析工具。"}),"\n",(0,s.jsx)(n.p,{children:"这本小册就是针对这一痛点，从依赖治理这个角度出发，由浅入深地讲解代码静态分析需要掌握的基础知识、通用能力，帮助开发者一步一步实现代码分析工具，同时帮助大家建立解决此类问题的通用方法论。"}),"\n",(0,s.jsx)(n.p,{children:"期待与你同行，让我们一起开启这段学习之旅吧！"})]})}function m(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}let I=m;m.__RSPRESS_PAGE_META={},m.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E4%BE%9D%E8%B5%96%E6%B2%BB%E7%90%86%EF%BC%9A%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%2F1.%E5%BC%80%E7%AF%87%E8%AF%8D%EF%BC%9A%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%9F.md"]={toc:[{text:"背景：复杂的现代前端架构",id:"背景复杂的现代前端架构",depth:2},{text:"问题：海量仓库的依赖治理难题",id:"问题海量仓库的依赖治理难题",depth:2},{text:"原因：API 文档无法表述真实的依赖关系",id:"原因api-文档无法表述真实的依赖关系",depth:2},{text:"解决方案：前端代码分析工具",id:"解决方案前端代码分析工具",depth:2},{text:"应用场景",id:"应用场景",depth:2},{text:"1.“脏调用”拦截 & 评分告警",id:"1脏调用拦截--评分告警",depth:3},{text:"2.全应用代码分析报告",id:"2全应用代码分析报告",depth:3},{text:"3.全应用代码分析平台",id:"3全应用代码分析平台",depth:3},{text:"作者介绍",id:"作者介绍",depth:2},{text:"课程是如何设计的",id:"课程是如何设计的",depth:2},{text:"基础知识阶段",id:"基础知识阶段",depth:3},{text:"具体实现阶段",id:"具体实现阶段",depth:3},{text:"应用场景阶段",id:"应用场景阶段",depth:3}],title:"1.开篇词：我们为什么需要代码分析？",headingTitle:"1.开篇词：我们为什么需要代码分析？",frontmatter:{}}}}]);