"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["97977"],{96480:function(n,e,a){a.r(e),a.d(e,{default:()=>G});var s=a(552676),d=a(740453);let c=a.p+"static/image/9d80dbeab99e68c4b93d112823850878.1006e4c2.webp",r=a.p+"static/image/d9006cca8af2af30dbcbe00893b48793.190174ba.webp",i=a.p+"static/image/50fc048e6c17034413aec8856e2a02d3.65c94633.webp",t=a.p+"static/image/546458d65e7de73f92f7d5c20334edb8.d36e7e6d.webp",l=a.p+"static/image/0ea3f277d7000677feb8c08021b10fd4.3e429aee.webp",p=a.p+"static/image/c0f4b624bccafd372ef17edf586b9685.6586b6be.webp",h=a.p+"static/image/bae3fda052f3afe608349c8c5dcffc9d.4db2ca2e.webp",o=a.p+"static/image/3b3b07f94e82c111aa26a9d97eaffb01.ec52f8b4.webp",j=a.p+"static/image/bcac31702423ca8a5ef933ac7a33e581.647b1826.webp",x=a.p+"static/image/9164c6ecd508a350b19971c28291a89d.f863640c.webp",m=a.p+"static/image/f7bcd1245f486e117016b14acd831f84.be64ed1a.webp",f=a.p+"static/image/034be3ade330b7596ebf6b78b5d9d7f8.95689ad8.webp",g=a.p+"static/image/e5d1ceae9d73ae3a19e118368d7b487e.f246ccde.webp",b=a.p+"static/image/d19eba92deab24bc89141aa3029a3de3.daa0cb21.webp",u=a.p+"static/image/9642dec8fb229f49b6286999de711838.e68c7c5f.webp",y=a.p+"static/image/bb7e399cdbe074abde64c2589f0d124b.c9b211ec.webp",w=a.p+"static/image/92bf0891f987a8ffd324c2c0440f4b17.e94c1f8c.webp",v=a.p+"static/image/f841454a9bcddcd79cdd6e80d1ec3a35.575c8ddf.webp",C=a.p+"static/image/a8261d2753ff24ccff2219886f0cea9a.a0bcca51.webp",D=a.p+"static/image/26a990f0d6cd6417a8e76990ec430bff.9616766a.webp",N=a.p+"static/image/bef57801cc7d56d8f9bc92c3a562d34d.216ccc66.webp",M=a.p+"static/image/f4674409c4da92bd3487e60f24c843bb.4de99bcd.webp",A=a.p+"static/image/5b3fcc274a9acd40c8a8fa938793a9c3.93f34135.webp",E=a.p+"static/image/5e1c85d1638cc08f18f4cdc15107faa9.0afa3e8f.webp",k=a.p+"static/image/80f0c77b7742a3432ecd5487eca59396.7d1d0948.webp",I=a.p+"static/image/96d520095c4bfbc1acff8f7d4fa775f4.33af029a.webp",Y=a.p+"static/image/d1b48ffc21fb99daaab1be2adb8c43e0.fcdef0ee.webp",B=a.p+"static/image/1a2faa3bd2b5d770d70c769b55d5fb93.de1884da.webp",_=a.p+"static/image/75d0e65492f27e9a73dbbf3ffa79d765.0c28e814.webp",O=a.p+"static/image/6e8958a1a8f23865f68bb63210cc3bd2.ec6515bb.webp",P=a.p+"static/image/f20450650effd4ac67d90974fab3c648.351b8d93.webp",F=a.p+"static/image/e77dc90af6e6440b5805db26c3ddb58a.791650c9.webp",H=a.p+"static/image/8765146ed2a1de65d08490661341d7cc.4eb0ba99.webp",S=a.p+"static/image/6e522803d7c6d3dc4de892d51a51d26e.a84f8939.gif";function R(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,d.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"第08章组件实战calendar日历组件上",children:["第08章—组件实战：Calendar日历组件（上）",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#第08章组件实战calendar日历组件上",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"\uFEFF上节我们实现了 mini calendar，为啥要加个 mini 呢？"}),"\n",(0,s.jsx)(e.p,{children:"因为它与真实用的 Calendar 组件相比，还是过于简单了。"}),"\n",(0,s.jsx)(e.p,{children:"这节我们再来写一个复杂一些的，真实项目用的 Calendar 组件："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"用 cra 创建个项目："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npx create-react-app --template typescript calendar-component\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:H,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"先不着急写，我们先理一下思路："}),"\n",(0,s.jsx)(e.p,{children:"日历组件的核心是什么？"}),"\n",(0,s.jsx)(e.p,{children:"是拿到每月的天数，每月的第一天是星期几。"}),"\n",(0,s.jsx)(e.p,{children:"比如这个月："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"我们知道这个月有 30 天，第一天是周三，那就知道如何显示这个月的日历了。"}),"\n",(0,s.jsx)(e.p,{children:"那如何知道每月的天数呢？"}),"\n",(0,s.jsx)(e.p,{children:"上节讲过，用 Date 的 api 就可以。"}),"\n",(0,s.jsx)(e.p,{children:"当然，也可以用 dayjs，它封装了这些："}),"\n",(0,s.jsx)(e.p,{children:"安装 dayjs："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npm install --save dayjs\n"})}),"\n",(0,s.jsx)(e.p,{children:"在 test.js 写如下代码："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const dayjs = require('dayjs');\n\nconsole.log(dayjs('2023-11-1').daysInMonth());\n\nconsole.log(dayjs('2023-11-1').startOf('month').format('YYYY-MM-DD'));\n\nconsole.log(dayjs('2023-11-1').endOf('month').format('YYYY-MM-DD'));\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"创建一个 dayjs 的对象，然后用 daysInMonth 方法可以拿到这个月的天数，用 startOf、endOf 可以拿到这个月的第一天和最后一天的日期。"}),"\n",(0,s.jsx)(e.p,{children:"跑一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:P,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这次 Calendar 组件我们用 dayjs 的 api 来实现。"}),"\n",(0,s.jsx)(e.p,{children:"很多组件库的 Calendar 组件都是基于 dayjs 设置和返回日期的。"}),"\n",(0,s.jsx)(e.p,{children:"比如 antd 的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:O,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"下面正式来写 Calendar 组件。"}),"\n",(0,s.jsx)(e.p,{children:"创建 src/Calendar/index.tsx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import './index.scss';\n\nfunction Calendar() {\n    return <div className=\"calendar\">\n        \n    </div>\n}\n\nexport default Calendar;\n"})}),"\n",(0,s.jsx)(e.p,{children:"还有样式 src/Calendar/index.scss"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:".calendar {\n    width: 100%;\n\n    height: 200px;\n    background: blue;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这里用到了 scss，需要安装下用到的包："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npm install --save sass\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后在 App.tsx 里引入 Calendar 组件："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import Calendar from './Calendar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar></Calendar>\n    </div>\n  );\n}\n\nexport default App;\n"})}),"\n",(0,s.jsx)(e.p,{children:"跑一下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npm run start\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样，sass 就引入成功了。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这个组件可以分为 Header 和 MonthCalendar 两个组件。"}),"\n",(0,s.jsx)(e.p,{children:"我们先写下面的 MonthCalender 组件："}),"\n",(0,s.jsx)(e.p,{children:"首先是周日到周六的部分："}),"\n",(0,s.jsx)(e.p,{children:"src/Calendar/MonthCalendar.tsx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function MonthCalendar() {\n\n    const weekList = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\n\n    return <div className=\"calendar-month\">\n        <div className=\"calendar-month-week-list\">\n            {weekList.map((week) => (\n                <div className=\"calendar-month-week-list-item\" key={week}>\n                    {week}\n                </div>\n            ))}\n        </div>\n    </div>\n}\n\nexport default MonthCalendar;\n"})}),"\n",(0,s.jsx)(e.p,{children:"先把周日到周一渲染出来，然后在 src/Calendar/index.scss 里写下样式："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:".calendar {\n    width: 100%;\n}\n\n.calendar-month {\n    &-week-list {\n        display: flex;\n        padding: 0;\n        width: 100%;\n        box-sizing: border-box;\n        border-bottom: 1px solid #ccc;\n\n        &-item {\n            padding: 20px 16px;\n            text-align: left;\n            color: #7d7d7f;\n            flex: 1;\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"样式用 display:fex 加 flex:1，这样就是每个列表项平分剩余空间，然后加上 padding。"}),"\n",(0,s.jsx)(e.p,{children:"在 src/Calendar/index.tsx 里引入："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import MonthCalendar from './MonthCalendar';\nimport './index.scss';\n\nfunction Calendar() {\n    return <div className=\"calendar\">\n        <MonthCalendar/>\n    </div>\n}\n\nexport default Calendar;\n"})}),"\n",(0,s.jsx)(e.p,{children:"这样，上面的 week list 就完成了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:Y,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后是下面部分："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:I,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"思路前面分析过了，就是拿到当前月份的天数和第一天是星期几，前后用上个月和下个月的日期填充。"}),"\n",(0,s.jsx)(e.p,{children:"我们给 Calendar 组件加一个 value 的 props，也就是当前日期。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"value 我们选择用 Dayjs 类型，当然，用 Date 也可以。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"import { Dayjs } from 'dayjs';\nimport MonthCalendar from './MonthCalendar';\nimport './index.scss';\n\nexport interface CalendarProps {\n    value: Dayjs\n}\n\nfunction Calendar(props: CalendarProps) {\n    return <div className=\"calendar\">\n        <MonthCalendar {...props}/>\n    </div>\n}\n\nexport default Calendar;\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"在 MonthCalendar 也加上 props："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"interface MonthCalendarProps extends CalendarProps {\n\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"在 App.tsx 传入参数："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样，MonthCalendar 就可以根据传入的 value 拿到当前的月份信息了。"}),"\n",(0,s.jsx)(e.p,{children:"我们加一个 getAllDays 方法，打个断点："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:M,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function getAllDays(date: Dayjs) {\n    const daysInMonth = date.daysInMonth();\n    const startDate = date.startOf('month');\n    const day = startDate.day()    \n\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const allDays = getAllDays(props.value);\n"})}),"\n",(0,s.jsx)(e.p,{children:"然后创建个调试配置："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:N,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:D,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"点击调试启动："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:C,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"可以看到，拿到了这个月的天数，是 30 天。"}),"\n",(0,s.jsx)(e.p,{children:"接下来我们边调试边写。"}),"\n",(0,s.jsx)(e.p,{children:"不管这个月有多少天，我们日历都是固定 6 * 7 个日期："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:v,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"所以创建一个 6 * 7 个元素的数组，这个月第一天之前的用第一天的日期 -1、-2、-3 这样计算出来："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function getAllDays(date: Dayjs) {\n    const daysInMonth = date.daysInMonth();\n    const startDate = date.startOf('month');\n    const day = startDate.day()    \n\n    const daysInfo = new Array(6 * 7);\n\n    for(let i = 0 ; i < day; i++) {\n        daysInfo[i] = {\n            date: startDate.subtract(day - i, 'day').format('YYYY-MM-DD')\n        }\n    }\n    \n    debugger;\n\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"11 月 1 日是星期三："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"那也就是要在之前填充星期日、星期一、星期二，这 3 天的日期："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:y,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这里用 dayjs 的 subtract 方法就可以计算当前日期 -1、-2、-3 的日期。"}),"\n",(0,s.jsx)(e.p,{children:"再写一段逻辑，点击刷新："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function getAllDays(date: Dayjs) {\n    const daysInMonth = date.daysInMonth();\n    const startDate = date.startOf('month');\n    const day = startDate.day()    \n\n    const daysInfo = new Array(6 * 7);\n\n    for(let i = 0 ; i < day; i++) {\n        daysInfo[i] = {\n            date: startDate.subtract(day - i, 'day').format('YYYY-MM-DD')\n        }\n    }\n\n    for(let i = day ; i < daysInfo.length; i++) {\n        daysInfo[i] = {\n            date: startDate.add(i - day, 'day').format('YYYY-MM-DD')\n        }\n    }\n\n    debugger;\n\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这个循环就是填充剩下的日期的，从 startDate 开始 +1、+2、+3 计算日期。"}),"\n",(0,s.jsx)(e.p,{children:"hover 上去可以看到，计算的结果是对的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:b,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后把 format 删掉，这里不需要格式化。再添加一个属性标识是否是当前月份的。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:f,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function getAllDays(date: Dayjs) {\n    const startDate = date.startOf('month');\n    const day = startDate.day()    \n\n    const daysInfo = new Array(6 * 7);\n\n    for(let i = 0 ; i < day; i++) {\n        daysInfo[i] = {\n            date: startDate.subtract(day - i, 'day'),\n            currentMonth: false\n        }\n    }\n\n    for(let i = day ; i < daysInfo.length; i++) {\n        const calcDate = startDate.add(i - day, 'day');\n\n        daysInfo[i] = {\n            date: calcDate,\n            currentMonth: calcDate.month() === date.month()\n        }\n    }\n\n    return daysInfo;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"就是先 -1、-2、-3 计算本月第一天之前的日期，然后从第一天开始 +1、+2、+3 计算之后日期。"}),"\n",(0,s.jsx)(e.p,{children:"返回值处打个断点，刷新下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:x,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"当前月份的日期、之前几天的日期、之后几天的日期都有了。"}),"\n",(0,s.jsx)(e.p,{children:"这样，日历的数据就准备好了。"}),"\n",(0,s.jsx)(e.p,{children:"其实上一节我们也是这么做的，只不过用的是 Date 的 api，而这节换成 dayjs 的 api 了。"}),"\n",(0,s.jsx)(e.p,{children:"再声明下返回的数组的类型："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:j,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const daysInfo: Array<{date: Dayjs, currentMonth: boolean}> = new Array(6 * 7);\n"})}),"\n",(0,s.jsx)(e.p,{children:"数据准备好了，接下来就可以渲染了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'<div className="calendar-month-body">\n    {\n        renderDays(allDays)\n    }\n</div>\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'function renderDays(days: Array<{ date: Dayjs, currentMonth: boolean}>) {\n    const rows = [];\n    for(let i = 0; i < 6; i++ ) {\n        const row = [];\n        for(let j = 0; j < 7; j++) {\n            const item = days[i * 7 + j];\n            row[j] = <div className="calendar-month-body-cell">{item.date.date()}</div>\n        }\n        rows.push(row);\n    }\n    return rows.map(row => <div className="calendar-month-body-row">{row}</div>)\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"这里就是把 6 * 7 个日期，按照 6 行，每行 7 个来组织成 jsx。"}),"\n",(0,s.jsx)(e.p,{children:"scss 部分如下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:"&-body {\n    &-row {\n        height: 100px;\n        display: flex;\n    }\n    &-cell {\n        flex: 1;\n        border: 1px solid #eee;\n        padding: 10px\n    }\n\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"每行的每个单元格用 flex:1 来分配空间，然后设置个 padding。"}),"\n",(0,s.jsx)(e.p,{children:"渲染出来是这样的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:p,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后当前月和其他月份的日期加上个不同颜色区分："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"function renderDays(days: Array<{ date: Dayjs, currentMonth: boolean}>) {\n    const rows = [];\n    for(let i = 0; i < 6; i++ ) {\n        const row = [];\n        for(let j = 0; j < 7; j++) {\n            const item = days[i * 7 + j];\n            row[j] = <div className={\n                \"calendar-month-body-cell \" + (item.currentMonth ? 'calendar-month-body-cell-current' : '')\n            }>{item.date.date()}</div>\n        }\n        rows.push(row);\n    }\n    return rows.map(row => <div className=\"calendar-month-body-row\">{row}</div>)\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:"color: #ccc;\n&-current {\n    color: #000;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这样，我们的日历就基本完成了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:i,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"切换日期是在 Header 部分做的，接下来写下这部分："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:r,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"写下 src/Calendar/Header.tsx："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'function Header() {\n    return <div className="calendar-header">\n        <div className="calendar-header-left">\n            <div className="calendar-header-icon">&lt;</div>\n            <div className="calendar-header-value">2023 年 11 月</div>\n            <div className="calendar-header-icon">&gt;</div>\n            <button className="calendar-header-btn">今天</button>\n        </div>\n    </div>\n}\n\nexport default Header;\n'})}),"\n",(0,s.jsx)(e.p,{children:"还有对应的样式："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:".calendar-header {\n    &-left {\n        display: flex;\n        align-items: center;\n\n        height: 28px;\n        line-height: 28px;\n    }\n\n    &-value {\n        font-size: 20px;\n    }\n\n    &-btn {\n        background: #eee;\n        cursor: pointer;\n        border: 0;\n        padding: 0 15px;\n        line-height: 28px;\n\n        &:hover {\n            background: #ccc;\n        }\n    }\n  \n    &-icon {\n        width: 28px;\n        height: 28px;\n\n        line-height: 28px;\n    \n        border-radius: 50%;\n        text-align: center;\n        font-size: 12px;\n\n        user-select: none;\n        cursor: pointer;\n\n        margin-right: 12px;\n        &:not(:first-child) {\n            margin: 0 12px;\n        }\n\n        &:hover {\n            background: #ccc;\n        }\n    }\n  \n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这部分就是用 flex + margin 来实现布局，就不展开讲了。"}),"\n",(0,s.jsx)(e.p,{children:"渲染出来是这样的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"这样我们就完成了布局部分。"}),"\n",(0,s.jsxs)(e.p,{children:["案例代码上传了",(0,s.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/react-course-code/tree/main/calendar-component",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,s.jsxs)(e.h2,{id:"总结",children:["总结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节我们开始实现一个真实的 Calendar 组件。"}),"\n",(0,s.jsx)(e.p,{children:"我们不再用 Date 获取当前月、上个月、下个月的天数和星期几，而是用 dayjs 的 api。"}),"\n",(0,s.jsx)(e.p,{children:"我们完成了布局部分，包括用于切换月份的 Header 和每个月的日期 MonthCalender 组件。"}),"\n",(0,s.jsx)(e.p,{children:"我们使用 sass 来管理样式。"}),"\n",(0,s.jsx)(e.p,{children:"上面的周几、下面的日期我们都是用的 flex 布局，这样只要外层容器大小变了，内层就会跟着变。"}),"\n",(0,s.jsx)(e.p,{children:"下节我们来实现具体的组件逻辑。"})]})}function z(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,d.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(R,{...n})}):R(n)}let G=z;z.__RSPRESS_PAGE_META={},z.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC08%E7%AB%A0%E2%80%94%E7%BB%84%E4%BB%B6%E5%AE%9E%E6%88%98%EF%BC%9ACalendar%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第08章—组件实战：Calendar日历组件（上）",headingTitle:"第08章—组件实战：Calendar日历组件（上）",frontmatter:{}}}}]);