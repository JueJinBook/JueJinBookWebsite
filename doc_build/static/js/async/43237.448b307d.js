"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43237"],{195505:function(e,n,c){e.exports=c.p+"static/image/9e98b4261f621387888376d900b5efaa.1c211e1d.webp"},580127:function(e,n,c){c.r(n),c.d(n,{default:()=>H});var a=c(552676),i=c(740453);let s=c.p+"static/image/81b0be20b17090070b2b4ff8127109ff.11b35e86.webp",r=c.p+"static/image/8ac814ab2abfc339538a1f90dab3c6e9.786bc3d9.gif",d=c.p+"static/image/499715092dec5773cb5d071fd0b04601.4f597410.webp",t=c.p+"static/image/c4e4675a4c74f40928ff35778eef0e5e.f0dc88c4.webp",l=c.p+"static/image/1475b5f7ebed52eed82b7fed84668eeb.10eda020.webp",p=c.p+"static/image/9f048ce2ae3de9fdbc940f57b39f3322.21c3e588.webp";var x=c(195505);let b=c.p+"static/image/b881e2b8b7a2dd54da217bad6b636c37.2c1e7663.webp",j=c.p+"static/image/a93a8d7ad4cba94b4cd9df37e6417477.f7e83614.webp",h=c.p+"static/image/0c7079a3078fc1b3bc6cb8425c86fe1e.9168a8c5.webp",o=c.p+"static/image/bb5b058b8ac96d0d09469a402c535efe.8f43b4a7.webp",f=c.p+"static/image/85799ddd3b55d176381ebf1f222e8c7b.41385889.webp",m=c.p+"static/image/b18e131f8a1a275b97ae5130a6865ebc.03224067.webp",g=c.p+"static/image/27fe902d4cbd828e6dc084e7160006da.95ee3af2.gif",u=c.p+"static/image/a157d70d7dadb044533ec65a2b86b951.5aeb8bca.webp",w=c.p+"static/image/be7de234f036bfed3e3abe9310f7759c.a175a349.webp",_=c.p+"static/image/b69de49b049cdb9fe7c0c645fc94c160.6f368953.webp",v=c.p+"static/image/e7a1d3ee3fc91d63ef3fb08276d40edd.6ec700a5.webp",C=c.p+"static/image/fa76c721201530bc1ebb6b7974387c76.ddd9333d.webp",S=c.p+"static/image/a9481cdec9e1ba1537bd740e7f0e2b81.579c4b04.webp",E=c.p+"static/image/c8d6ac767069d1b2bf94f2e408cf7247.21f73a92.webp",A=c.p+"static/image/e05b920995d9333902f0ad7d83bc31d2.1c211e1d.webp",k=c.p+"static/image/afef2b56cbc17982e2da80103597ef15.668d8beb.webp",B=c.p+"static/image/09f02f108ef25c60e8587dc51c870ddb.c46968b5.webp",R=c.p+"static/image/081691e273e0479b0dc42a5e50e37204.9c859700.webp",D=c.p+"static/image/cf6c55fe60daf5b3b0540fb2f814f3e3.d46d1606.webp",F=c.p+"static/image/28bbc38e8795bcbd28a620b55d07a19f.c69e54e0.webp",P=c.p+"static/image/3b0a5ca12b761835d212ce7c8d570afd.4f479ee4.gif",N=c.p+"static/image/58e7f3cae763e2e9de5b57461a01cd10.ab7ac79e.gif",z=c.p+"static/image/786367d8eca8ffc1ac4bcf26371d781b.41e13526.gif",T=c.p+"static/image/57b52702c5afa88a2b62562d03607b1b.2c6688a2.gif",V=c.p+"static/image/fad0bc1220cc49c2e83feb83f1efa60f.627d1b04.webp",y=c.p+"static/image/d79657984e324282961e5280704d0cd9.1c5f39d2.webp",M=c.p+"static/image/72a7c0be7c069d87d00a455d62ed6d70.f4e5cf1a.webp",O=c.p+"static/image/bc37d8ed2902db3fa3d435bbe7bb161f.127aa756.webp",$=c.p+"static/image/cb92415a258c5af2647d1c720d0aaaa1.fff35608.webp",G=c.p+"static/image/8a41d42320e7a8d56dbf74273015b49a.556abe72.webp",I=c.p+"static/image/693fac079cebdf643b0f30becec59e19.cd30fe07.webp";function q(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,i.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"第32章项目里如何快速定位组件源码",children:["第32章—项目里如何快速定位组件源码",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第32章项目里如何快速定位组件源码",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"\uFEFF如果说业务开发中最重要的能力，那定位代码的能力肯定是其中之一。"}),"\n",(0,a.jsx)(n.p,{children:"业务项目一般代码都很多，你拿到一个需求之后，可能改起来不难，但是要定位在哪里改比较难。"}),"\n",(0,a.jsx)(n.p,{children:"特别是接手别人写的代码的时候。"}),"\n",(0,a.jsx)(n.p,{children:"大家都是怎么在不熟悉的项目里定位的代码呢？"}),"\n",(0,a.jsx)(n.p,{children:"很多都学都是搜文案，搜 className。"}),"\n",(0,a.jsx)(n.p,{children:"这样没问题，但如果你用了 styled-component 之类的方案之后，className 都是动态生成的："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:I,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"而且不少项目都做了国际化，你搜文案会搜到资源包里，而不是组件代码里："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:G,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"当然，你可以进一步根据国际化的 key 来搜索源码的对应组件。"}),"\n",(0,a.jsx)(n.p,{children:"但这样总归比较麻烦，而且还不一定能搜到准确的位置。"}),"\n",(0,a.jsx)(n.p,{children:"那有什么好的办法可以快速定位代码么？"}),"\n",(0,a.jsx)(n.p,{children:"有，就是 click-to-react-component。"}),"\n",(0,a.jsx)(n.p,{children:"我们创建个项目："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npx create-vite\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:$,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"改下 main.tsx："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:O,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"安装 antd，我们随便写几个页面："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm install\nnpm install --save antd\n"})}),"\n",(0,a.jsx)(n.p,{children:"App.tsx："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import React from \'react\';\nimport { ColorPicker, Space } from \'antd\';\nimport Aaa from \'./Aaa\';\n\nconst Demo = () => (\n  <div>\n    <Space>\n      <Space direction="vertical">\n        <ColorPicker defaultValue="#1677ff" size="small" />\n        <ColorPicker defaultValue="#1677ff" />\n        <ColorPicker defaultValue="#1677ff" size="large" />\n      </Space>\n      <Space direction="vertical">\n        <ColorPicker defaultValue="#1677ff" size="small" showText />\n        <ColorPicker defaultValue="#1677ff" showText />\n        <ColorPicker defaultValue="#1677ff" size="large" showText />\n      </Space>\n    </Space>\n    <Aaa></Aaa>\n  </div>\n);\n\nexport default Demo;\n'})}),"\n",(0,a.jsx)(n.p,{children:"Aaa.tsx："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import React, { useState } from 'react';\nimport { Slider, Switch } from 'antd';\nimport Bbb from './Bbb';\n\nconst Aaa: React.FC = () => {\n  const [disabled, setDisabled] = useState(false);\n\n  const onChange = (checked: boolean) => {\n    setDisabled(checked);\n  };\n\n  return (\n    <>\n        <div>\n            <Slider defaultValue={30} disabled={disabled} />\n            <Slider range defaultValue={[20, 50]} disabled={disabled} />\n            Disabled: <Switch size=\"small\" checked={disabled} onChange={onChange} />\n        </div> \n        <Bbb></Bbb>\n    </>\n  );\n};\n\nexport default Aaa;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Bbb.tsx："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import React from \'react\';\nimport { Card, Space } from \'antd\';\n\nconst Bbb: React.FC = () => (\n  <Space direction="vertical" size={16}>\n    <Card title="Default size card" extra={<a href="#">More</a>} style={{ width: 300 }}>\n      <p>Card content</p>\n      <p>Card content</p>\n      <p>Card content</p>\n    </Card>\n    <Card size="small" title="Small size card" extra={<a href="#">More</a>} style={{ width: 300 }}>\n      <p>Card content</p>\n      <p>Card content</p>\n      <p>Card content</p>\n    </Card>\n  </Space>\n);\n\nexport default Bbb;\n'})}),"\n",(0,a.jsx)(n.p,{children:"这些都是从 antd 官网复制的 demo 代码。"}),"\n",(0,a.jsx)(n.p,{children:"不用管具体的代码内容，我们只需要看下怎么定位代码。"}),"\n",(0,a.jsx)(n.p,{children:"把开发服务跑起来："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm run dev\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:M,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"渲染出来是这样的："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:y,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"如果我们想定位下面卡片的代码，就可以通过搜索文案或者 className："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:V,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"但复杂项目就不行了。"}),"\n",(0,a.jsx)(n.p,{children:"这时候可以引入 click-to-react-component："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm install --save-dev click-to-react-component\n"})}),"\n",(0,a.jsx)(n.p,{children:"在 main.tsx 引入下："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\n// @ts-ignore\nimport { ClickToComponent } from 'click-to-react-component';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n    <>\n        <ClickToComponent />\n        <App />\n    </>\n)\n\n"})}),"\n",(0,a.jsx)(n.p,{children:"可能有类型的报错，我们直接 @ts-ignore 忽略好了。"}),"\n",(0,a.jsx)(n.p,{children:"然后打开页面试一下："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:T,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"可以看到，现在按住 option + 单击，就会直接打开它的对应的组件的源码。"}),"\n",(0,a.jsx)(n.p,{children:"如果按住 option + 右键单击，可以看到它的所有父级组件，然后选择一个组件打开："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:x,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:z,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这样在页面上看到了啥东西就可以直接打开它的组件代码来改，特别高效。"}),"\n",(0,a.jsx)(n.p,{children:"如果你只是想看页面某部分对应的组件名，也可以通过 option + 右键的这个列表来看。"}),"\n",(0,a.jsx)(n.p,{children:"当然，我们的 demo 比较简单，来看个真实项目里的使用效果："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:N,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"比如我想改这个登录弹窗的表单，就可以直接定位到对应组件的 Input。"}),"\n",(0,a.jsx)(n.p,{children:"对于大项目的维护来说真的超级方便。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:P,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"知道了怎么用之后，我们再来探究下它的原理。"}),"\n",(0,a.jsx)(n.p,{children:"点击页面标签，就可以直接用 vscode 打开对应组件源码的行列号，是怎么实现的呢？"}),"\n",(0,a.jsx)(n.p,{children:"首先，怎么通过标签拿到对应组件的？"}),"\n",(0,a.jsx)(n.p,{children:"react 在标签上添加了 __reactFiber$ 开头的属性，可以拿到对应的 fiber 节点。"}),"\n",(0,a.jsx)(n.p,{children:"我们复制某个 dom 元素的选择器："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:F,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"用 document.querySelector 取出来放到 el 变量。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:D,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后你输入 el.__react 的时候会提示出一些属性："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:R,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"__reactFiber$ 属性就是 dom 元素对应的 Fiber 节点。"}),"\n",(0,a.jsx)(n.p,{children:"__reactProps$ 属性就是这个组件的 props。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:B,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"而且，拿到 fiber 节点后还可以通过 _debugOwner 拿到 fiber 节点的父节点。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:k,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"一层层向上找，直到为 null，"}),"\n",(0,a.jsx)(n.p,{children:"就是这个的实现原理："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:A,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"当然，fiber 节点还要根据 tag 来转为具体的类型。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:E,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"比如 tag 为 10 是 Provider，tag 为 11 是 forwardRef 等。"}),"\n",(0,a.jsx)(n.p,{children:"这样，怎么从标签拿到对应的 fiber 节点我们就知道了。"}),"\n",(0,a.jsx)(n.p,{children:"那如何拿到组件在源码的文件和行列号呢？"}),"\n",(0,a.jsx)(n.p,{children:"这个通过 fiber 节点的 _debugSource 属性。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:S,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这个只有组件类型的 fiber 节点才有。"}),"\n",(0,a.jsx)(n.p,{children:"知乎就是用 react 开发的，因为你可以用 __reactFiber$ 属性拿到标签的 fiber 节点："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:C,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"但是拿不到 __debugSource 属性，这个只有开发时才会有。"}),"\n",(0,a.jsx)(n.p,{children:"这个 _debugSource 属性是怎么加上的呢？react 并不知道组件在哪个文件定义的啊。"}),"\n",(0,a.jsx)(n.p,{children:"是 babel 插件做的："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:v,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"@babel/plugin-transform-react-jsx-source  这个插件内置在 @babel/preset-env 里，不用手动引入。"}),"\n",(0,a.jsx)(n.p,{children:"它会在编译 jsx 的时候添加 _source 属性，然后 react 源码里再把 _source 属性的值添加到 fiber._debugSource 上。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:_,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"那如何打开 vscode 呢？"}),"\n",(0,a.jsx)(n.p,{children:"只要在浏览器打开 vscode://file/文件绝对路径:行号:列号 的地址，就可以自动在 vscode 打开对应文件，并把光标定位到目标行列号。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:w,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:u,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这样，整个流程我们都理清了，点击标签的时候怎么拿到对应的 fiber 节点，拿到所有父组件，拿到组件的行列号，然后打开 vscode。"}),"\n",(0,a.jsx)(n.p,{children:"此外，还有一些 ui 上的实现原理："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:g,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"hover 的时候会框选对应组件。"}),"\n",(0,a.jsx)(n.p,{children:"它定义了 data-xxx 的样式。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:m,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后通过 useState 创建了状态来保存当前 target。"}),"\n",(0,a.jsx)(n.p,{children:"mousemove 的时候修改 target。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:f,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"当 target 改变，就会给它设置 dataset.xxx 属性。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:o,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这个 dataset 大家可能没用过："}),"\n",(0,a.jsx)(n.p,{children:"如果你给一个 dom 元素设置 dataset.aaaBbbCccDdd = 1"}),"\n",(0,a.jsx)(n.p,{children:'那它就会有一个 data-aaa-bbb-ccc-ddd="1" 的属性。'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:h,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:j,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后同样可以通过 dataset 取出来："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:b,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"然后我们前面定义的 [data-xx] 的样式就生效了，就加上了框选的样式。"}),"\n",(0,a.jsx)(n.p,{children:"至于这个 popover，是用 @floating-ui 做的，所有浮动元素都可以用这个来做。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:x,alt:""})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:p,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"此外，这个 click-to-react-component 需要在生产环境去掉么？"}),"\n",(0,a.jsx)(n.p,{children:"不用。"}),"\n",(0,a.jsx)(n.p,{children:"它内部做了处理："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:l,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"只有开发环境才会渲染。"}),"\n",(0,a.jsx)(n.p,{children:"还有，我们是这个组件放在 main.tsx 里的，其实放哪都行。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:t,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"因为它的事件都是绑定在 window上的："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"有的同学可能会说，React DevTools 不也可以么？"}),"\n",(0,a.jsx)(n.p,{children:"不好用。"}),"\n",(0,a.jsx)(n.p,{children:"比如它可能嵌套过深："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:r,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"而且标识的源码路径也不对："}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:s,alt:""})}),"\n",(0,a.jsxs)(n.p,{children:["案例代码上传了",(0,a.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/react-course-code/tree/main/locate-code-test",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,a.jsxs)(n.h2,{id:"总结",children:["总结",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"对于业务代码来说，快速定位源码是很重要的。"}),"\n",(0,a.jsx)(n.p,{children:"因为改动可能很简单，但是项目大了定位在哪里改就比较麻烦了。"}),"\n",(0,a.jsx)(n.p,{children:"我们也可以通过搜索文案、className 的方式，但对于用了 styled-component、做了国际化的项目来说，这种方式也不行。"}),"\n",(0,a.jsx)(n.p,{children:"所以更推荐用 click-to-react-component 来快速定位源码。"}),"\n",(0,a.jsx)(n.p,{children:"只要在页面上 option + 单击，或者 option + 右键单击然后选一个组件，就可以直接打开对应组件源码的行列。"}),"\n",(0,a.jsx)(n.p,{children:"我们看了下它的原理，dom 元素有 __reactFiber$ 属性可以拿到对应 fiber 节点，然后 _debugOwner 拿到父节点 fiber。_debugSource 拿到源码文件路径和行列号。"}),"\n",(0,a.jsx)(n.p,{children:"然后通过 vscode://file/xxx 的方式直接 vscode 打开对应文件行列号。"}),"\n",(0,a.jsx)(n.p,{children:"这样就完成了点击页面元素，打开对应源码的功能。"}),"\n",(0,a.jsx)(n.p,{children:"这里的 _debugSource 是 babel 插件做的，在 @babel/preset-env 里，每个项目会都自动引入这个插件。"}),"\n",(0,a.jsx)(n.p,{children:"然后加上用 dataset.xx 定义属性和对应的 className，用 @floating-ui 实现 popover。"}),"\n",(0,a.jsx)(n.p,{children:"这就是 click-to-react-component 的实现原理了。"}),"\n",(0,a.jsx)(n.p,{children:"这个小组件还是很有用的，感觉是每个 react 项目必备，可以在项目里引入下试试。"})]})}function Q(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(q,{...e})}):q(e)}let H=Q;Q.__RSPRESS_PAGE_META={},Q.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC32%E7%AB%A0%E2%80%94%E9%A1%B9%E7%9B%AE%E9%87%8C%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AE%9A%E4%BD%8D%E7%BB%84%E4%BB%B6%E6%BA%90%E7%A0%81.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第32章—项目里如何快速定位组件源码",headingTitle:"第32章—项目里如何快速定位组件源码",frontmatter:{}}}}]);