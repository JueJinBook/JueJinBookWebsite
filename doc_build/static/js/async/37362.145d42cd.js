"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["37362"],{184818:function(e,n,s){s.r(n),s.d(n,{default:()=>er});var r=s(552676),i=s(740453);let a=s.p+"static/image/f525137c3a9026d4398fff55b964cb30.b0e22e14.webp",p=s.p+"static/image/48ea25f7398d7fb37ada1f9c3a003bf1.f355b782.webp",c=s.p+"static/image/07bcb9a31259d20c02ef412d0f9b2477.7c4f2a31.webp",t=s.p+"static/image/3af5623b196acce66eb2071bfade0488.fd3ce1c8.webp",d=s.p+"static/image/6f7c056144049ad6ee11d9bbedaee5ff.694c5818.webp",l=s.p+"static/image/030d941b193a676284396b55bf6660ab.15f7c5f7.webp",o=s.p+"static/image/5ea97efe5e2aaae8eb2d94d0b494a939.5ef24e88.webp",x=s.p+"static/image/2845ebd5b5c67899b04b1ad3b3b5eb14.58a2ff50.webp",j=s.p+"static/image/91ad11a60a04d27ea983c7091eb1ea61.71d46abe.webp",g=s.p+"static/image/3063430e7dcdb0b63c8b1c17471e1409.a2a29e93.webp",h=s.p+"static/image/012268cfe8ffb6385fbae233f100dc9f.75658025.webp",b=s.p+"static/image/1f892f8765d6384ea19fc463ca23d707.477a391d.webp",m=s.p+"static/image/f8327699b414698e9593f0bf3138414b.76f28bdb.webp",f=s.p+"static/image/8dd9d85dab53614790e324bc9d435400.47139dd7.webp",u=s.p+"static/image/3970275c0e06fe98ff8c8924fa30d6c1.5bc4ad73.webp",A=s.p+"static/image/10cfeb3ef6c42c94d7afdb6c95c3feda.599c4d1e.webp",y=s.p+"static/image/80291b7624055d88285d602617cd8a97.254a9759.webp",w=s.p+"static/image/6fc2be89b16a3f9826f9250125d2571c.bdbe9345.webp",P=s.p+"static/image/4bdbe15d4d91324e1415ba4e236385e1.916a7af4.webp",E=s.p+"static/image/005da6855941e4afee907a89b02c2f68.7fab45e6.webp",U=s.p+"static/image/8dc123840a5dd0d0e7af66212436f14e.2cd35fed.webp",v=s.p+"static/image/b0fefa4d081bb74aeb83964b62a11a28.21269e44.webp",S=s.p+"static/image/d863b921fc26c566f0132f37f5713dca.ebeede12.webp",N=s.p+"static/image/ef5f9534344987952918b6256c5bf89a.a1f489f8.webp",R=s.p+"static/image/691f35c9fd9f0d0e4d5f69a265ad1e22.61fb17f3.webp",_=s.p+"static/image/bc2177f9299560a75e9765960c67ab1e.7bdfa9b5.webp",k=s.p+"static/image/c122c8d2a620eeef0a865f5148fb4fe9.663a170b.webp",B=s.p+"static/image/579380468e46c2bb619e9160c48b43c6.13cf6444.webp",D=s.p+"static/image/70fc2b9b85078451244f1d4d57dd5e6e.c08ead9b.webp",T=s.p+"static/image/be04f623660eb40b946433bcc0594c91.9f83fa17.webp",Q=s.p+"static/image/bfe7dcfe869d67006816b2465e7a1189.8fd2bdbe.webp",z=s.p+"static/image/beb71c531608857844d26085f42f0277.937332d5.webp",L=s.p+"static/image/ba44690c1bfa69ef2c31772d25e09131.ff48b2ac.webp",V=s.p+"static/image/3eb949c09234935d3825f56b77512161.b7908fb9.webp",H=s.p+"static/image/ebb0643bfe42c2fcfdd9fd1da64fba53.19f6e2e5.webp",C=s.p+"static/image/c3f7b2601adba12c56eb524864c6e3f6.05d43a2a.webp",q=s.p+"static/image/5460fffdc0cc124692ebd8c16bb46b33.79a6ca45.webp",F=s.p+"static/image/a31a0c10584bd7f8c14e4670e76e34fc.867b85e8.webp",O=s.p+"static/image/b6708bb8741f8ee73f478b6e72a30c84.c41d2558.webp",I=s.p+"static/image/47b1cca944e08f62eb60bbd36daf5569.529e8226.webp",M=s.p+"static/image/6a4b96264d017ffcb192c1300d388a8e.84ca033c.webp",K=s.p+"static/image/0f50d4250dd2a104e3fa7ff0f363ac6e.7bbbff90.webp",G=s.p+"static/image/e2bc8c6cd33ede5ae6979af107a25985.a28adbe9.webp",Z=s.p+"static/image/b511a49fa9ecef0a5d9c6cea66885dd6.3310e60c.webp",J=s.p+"static/image/2506fd387ad650792a17ec5b61b927b1.d427797d.webp",W=s.p+"static/image/8387d57e5df7cf78757cf54a6d5a84a0.a4392000.webp",X=s.p+"static/image/e8093c8bac760a6229b1353467909f3c.b9dd3538.webp",Y=s.p+"static/image/40054d10f1a28e5ef45dda0d3c4ef16f.4eaea6cf.webp",$=s.p+"static/image/e6efc93b7642b5d584af32ab28f78fa7.7e0c01ce.webp",ee=s.p+"static/image/5e756a99c70fd0c9a58d9f6a0d18a9d0.5dd5e39e.webp";function en(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"115-会议室预订系统用户管理模块---swagger-接口文档",children:["115. 会议室预订系统：用户管理模块-- swagger 接口文档",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#115-会议室预订系统用户管理模块---swagger-接口文档",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"后端写完接口，都会提供一份接口文档给前端。"}),"\n",(0,r.jsx)(n.p,{children:"这节我们就来做下这件事情，通过 swagger 生成接口文档。"}),"\n",(0,r.jsx)(n.p,{children:"安装 swagger 的包："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install --save @nestjs/swagger\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 main.ts 添加这段代码："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:ee,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const config = new DocumentBuilder()\n    .setTitle('会议室预订系统')\n    .setDescription('api 接口文档')\n    .setVersion('1.0')\n    .build();\nconst document = SwaggerModule.createDocument(app, config);\nSwaggerModule.setup('api-doc', app, document);\n"})}),"\n",(0,r.jsx)(n.p,{children:"用 SwaggerModule 生成接口文档，url 是 /api-doc"}),"\n",(0,r.jsx)(n.p,{children:"访问下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:$,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以看到所有接口都列出来了："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:Y,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"还有用到的 schema，也就是对象的结构："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:X,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"只不过很多接口的文档是不对的："}),"\n",(0,r.jsx)(n.p,{children:"比如用户列表接口，这些参数都不是必选的，而且也没有响应相关的信息："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:W,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"还有 schema 也没有具体的内容。"}),"\n",(0,r.jsx)(n.p,{children:"这些需要我们加一些装饰器来告诉 swagger。"}),"\n",(0,r.jsx)(n.p,{children:"在 UserController 添加一个 @ApiTags"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:J,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这样这个 cotroller 的接口会被单独分组："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:Z,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后我们一个个接口来看："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:G,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"先是 /user/register-captcha 接口"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:K,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiQuery({\n    name: 'address',\n    type: String,\n    description: '邮箱地址',\n    required: true,\n    example: 'xxx@xx.com'\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    description: '发送成功',\n    type: String\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"通过 @ApiQuery 描述 query 参数，通过 @ApiResponse 描述响应。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:M,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后是 /user/register 接口："}),"\n",(0,r.jsx)(n.p,{children:"它一共有 2 种状态码，200 和 400："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:I,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:O,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBody({type: RegisterUserDto})\n@ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '验证码已失效/验证码不正确/用户已存在',\n    type: String\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    description: '注册成功/失败',\n    type: String\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:F,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"请求体的属性需要去 dto 里标识："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:q,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:C,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后接口文档里就可看到请求体的信息了："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:H,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"下面的 schema 里的 RegisterUserDto 也有了内容："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:V,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"接下来是 /user/login 接口："}),"\n",(0,r.jsx)(n.p,{children:"它也是有 400 和 200 两种响应："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:L,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:z,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBody({\n    type: LoginUserDto\n})\n@ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '用户不存在/密码错误',\n    type: String\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    description: '用户信息和 token',\n    type: LoginUserVo\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"通过 @ApiResponse 标识两种响应，通过 @ApiBody 标识请求体。"}),"\n",(0,r.jsx)(n.p,{children:"然后在 LoginUserDto 和 LoginUserVo 里标识下属性："}),"\n",(0,r.jsxs)(n.p,{children:["LoginUserDto：\n",(0,r.jsx)("img",{src:Q,alt:""})]}),"\n",(0,r.jsx)(n.p,{children:"LoginuserVo："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { ApiProperty } from \"@nestjs/swagger\";\n\nclass UserInfo {\n    @ApiProperty()\n    id: number;\n\n    @ApiProperty({example: 'zhangsan'})\n    username: string;\n\n    @ApiProperty({example: '张三'})\n    nickName: string;\n\n    @ApiProperty({example: 'xx@xx.com'})\n    email: string;\n\n    @ApiProperty({example: 'xxx.png'})\n    headPic: string;\n\n    @ApiProperty({example: '13233333333'})\n    phoneNumber: string;\n\n    @ApiProperty()\n    isFrozen: boolean;\n\n    @ApiProperty()\n    isAdmin: boolean;\n\n    @ApiProperty()\n    createTime: number;\n\n    @ApiProperty({example: ['管理员']})\n    roles: string[];\n\n    @ApiProperty({example: 'query_aaa'})\n    permissions: string[]\n}\nexport class LoginUserVo {\n\n    @ApiProperty()\n    userInfo: UserInfo;\n\n    @ApiProperty()\n    accessToken: string;\n\n    @ApiProperty()\n    refreshToken: string;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"之前这里的 UserInfo 是 interface，这里要改成 class 才能加装饰器。"}),"\n",(0,r.jsx)(n.p,{children:"测试下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:T,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:D,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"/user/admin/login 的 swagger 装饰器和 /user/login 一样。"}),"\n",(0,r.jsx)(n.p,{children:"然后继续看 /user/refresh 接口："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:B,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiQuery({\n    name: 'refreshToken',\n    type: String,\n    description: '刷新 token',\n    required: true,\n    example: 'xxxxxxxxyyyyyyyyzzzzz'\n})\n@ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'token 已失效，请重新登录'\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    description: '刷新成功'\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"用 @ApiQuery 标识 query 参数，用 @ApiResponse 标识两种响应。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:k,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"但现在刷新成功的 access_token 和 refresh_token 没有显示。"}),"\n",(0,r.jsx)(n.p,{children:"所以我们也需要把这个返回值封装成 vo："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:_,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"新建 src/user/vo/refresh-token.vo.ts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { ApiProperty } from "@nestjs/swagger";\n\nexport class RefreshTokenVo {\n    @ApiProperty()\n    access_token: string;\n\n    @ApiProperty()\n    refresh_token: string;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"把返回的结果封装成 vo："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:R,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const vo = new RefreshTokenVo();\n\nvo.access_token = access_token;\nvo.refresh_token = refresh_token;\n\nreturn vo;\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 @ApiResponse 里标识这个 type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:N,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"刷新下页面，可以看到现在接口文档里就有了返回数据的结构："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:S,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"/user/admin/login 的处理方式一样。"}),"\n",(0,r.jsx)(n.p,{children:"接下来是 /user/info 接口："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"加一下返回的数据的标识 @ApiResponse。"}),"\n",(0,r.jsx)(n.p,{children:"然后在 UserDetailVo 里加一下 @ApiProperty："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { ApiProperty } from "@nestjs/swagger";\n\nexport class UserDetailVo {\n    @ApiProperty()\n    id: number;\n\n    @ApiProperty()\n    username: string;\n\n    @ApiProperty()\n    nickName: string;\n\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    headPic: string;\n\n    @ApiProperty()\n    phoneNumber: string;\n\n    @ApiProperty()\n    isFrozen: boolean;\n\n    @ApiProperty()\n    createTime: Date;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"这样返回的数据结构就对了："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:U,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"但这个接口是需要登录的，我们加一下标识："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:E,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后在 main.ts 里加一下这种 bearer 的认证方式："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:P,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这时候这个接口就有了锁的标记，代表需要登录了："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"点击锁，填入 access_token，这样再测试接口的时候，会自动带上 token 标识："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"比如我输入 xxx，然后点击 authorize"}),"\n",(0,r.jsx)(n.p,{children:"然后点击 try it out 和 execute，可以看到浏览器发送了这个请求，并且带上了 authorization 的 header"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:A,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"可以在 swagger 文档里测试这个接口。"}),"\n",(0,r.jsx)(n.p,{children:"接下来是 /user/update_password"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiBody({\n    type: UpdateUserPasswordDto\n})\n@ApiResponse({\n    type: String,\n    description: '验证码已失效/不正确'\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 UpdateUserPasswordDto 里加一下 @ApiProperty"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:f,alt:""}),"\n接口文档没啥问题："]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"接下来是 /user/update_password/captcha 接口"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"这个接口是需要登录的，当时为了测试方便没有加，现在加一下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiQuery({\n    name: 'address',\n    description: '邮箱地址',\n    type: String\n})\n@ApiResponse({\n    type: String,\n    description: '发送成功'\n})\n@RequireLogin()\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后是 /user/update 接口："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiBody({\n    type: UpdateUserDto\n})\n@ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '验证码已失效/不正确'\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    description: '更新成功',\n    type: String\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"在 UpdateUserDto 里标识下 @ApiProperty"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"刷新下，可以看到最新的接口文档："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后是 /user/freeeze 接口"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiQuery({\n    name: 'id',\n    description: 'userId',\n    type: Number\n})\n@ApiResponse({\n    type: String,\n    description: 'success'\n})\n@RequireLogin()\n"})}),"\n",(0,r.jsx)(n.p,{children:"刷新下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"没啥问题。"}),"\n",(0,r.jsx)(n.p,{children:"最后，还剩下 /user/list 接口："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:d,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiQuery({\n    name: 'pageNo',\n    description: '第几页',\n    type: Number\n})\n@ApiQuery({\n    name: 'pageSize',\n    description: '每页多少条',\n    type: Number\n})\n@ApiQuery({\n    name: 'username',\n    description: '用户名',\n    type: Number\n})\n@ApiQuery({\n    name: 'nickName',\n    description: '昵称',\n    type: Number\n})\n@ApiQuery({\n    name: 'email',\n    description: '邮箱地址',\n    type: Number\n})\n@ApiResponse({\n    type: String,\n    description: '用户列表'\n})\n@RequireLogin()\n"})}),"\n",(0,r.jsx)(n.p,{children:"这里的返回值需要封装个 vo："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"创建 src/user/vo/user-list.vo.ts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { ApiProperty } from "@nestjs/swagger";\n\nclass User {\n    @ApiProperty()\n    id: number;\n\n    @ApiProperty()\n    username: string;\n\n    @ApiProperty()\n    nickName: string;\n    \n    @ApiProperty()\n    email: string; \n\n    @ApiProperty()\n    phoneNumber: string;\n\n    @ApiProperty()\n    isFrozen: boolean;\n    \n    @ApiProperty()\n    headPic: string;\n\n    @ApiProperty()\n    createTime: Date;\n}\n\nexport class UserListVo {\n\n    @ApiProperty({\n        type: [User]\n    })\n    users: User[];\n\n    @ApiProperty()\n    totalCount: number;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"注意这里标识 User 数组要用 [User]"}),"\n",(0,r.jsx)(n.p,{children:"然后把 findUsers 的返回值改为 UserListVo"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:c,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const vo = new UserListVo();\n\nvo.users = users;\nvo.totalCount = totalCount;\nreturn vo;\n"})}),"\n",(0,r.jsx)(n.p,{children:"刷新下接口文档："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"没啥问题。"}),"\n",(0,r.jsx)(n.p,{children:"这样，我们就给所有的接口生成了 api 文档。"}),"\n",(0,r.jsxs)(n.p,{children:["代码在",(0,r.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_backend",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:["总结",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"这节我们用 swagger 生成了接口文档。"}),"\n",(0,r.jsx)(n.p,{children:"在 main.ts 里调用 SwaggerModule.setup 来生成接口文档。"}),"\n",(0,r.jsx)(n.p,{children:"然后用 @ApiQuery、@ApiBody、@ApiResponse、@ApiProperty 等来标识每个接口的参数和响应。"}),"\n",(0,r.jsx)(n.p,{children:"并且通过 @ApiBearerAuth 标识需要 jwt 认证的接口。"}),"\n",(0,r.jsx)(n.p,{children:"返回对象的接口需要把它封装成 vo，然后再添加 @ApiProperty。"}),"\n",(0,r.jsx)(n.p,{children:"接口文档提供给前端之后，前端就可以基于这个来写页面了。"})]})}function es(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(en,{...e})}):en(e)}let er=es;es.__RSPRESS_PAGE_META={},es.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F115.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97--%20swagger%20%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"115. 会议室预订系统：用户管理模块-- swagger 接口文档",headingTitle:"115. 会议室预订系统：用户管理模块-- swagger 接口文档",frontmatter:{}}}}]);