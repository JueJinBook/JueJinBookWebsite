"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["45810"],{670578:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var c=r(552676),s=r(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",h4:"h4",pre:"pre",code:"code",img:"img",ul:"ul",li:"li"},(0,s.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"60数据验证",children:["60.数据验证",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#60数据验证",children:"#"})]}),"\n",(0,c.jsxs)(n.h2,{id:"94-数据验证",children:["9.4 数据验证",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#94-数据验证",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"在前面的案例里，用户是可以随意在表单里填写和提交任意内容的，我们并没有对用户在小程序端提交的数据的格式是否规范（比如表单必填不能为空）以及提交的动作是否频繁做相应的限制。在这一节里，我们会来介绍如何通过数据验证和“行为验证”来减轻服务器的压力。"}),"\n",(0,c.jsxs)(n.h3,{id:"941-关于表单验证",children:["9.4.1 关于表单验证",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#941-关于表单验证",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"表单验证可以确保用户是否以正确的格式填写了表单数据，比如用户填写的是否是电话号码（比如有且只有11位等）、用户名是否符合要求（比如不能包含字符）、必填项是否为空、密码是否过于简单（比如至少包含大写字母、字符和数字等）。"}),"\n",(0,c.jsx)(n.p,{children:"表单验证可以分为小程序端校验和服务端校验，小程序端校验是指在把用户填写的数据上传到数据库或传递给云函数之前，会先在小程序端校验用户输入的数据是否正确，如果验证不通过，为了交互体验，会弹出一些错误提示提醒用户。小程序端校验的方式有两种，一种是表单组件的内置校验，比如input、textarea的最大输入长度maxlength，内置校验虽然更简单性能更高，不过所能做的很有限；还有一种就是自定义JavaScript校验逻辑来校验。"}),"\n",(0,c.jsx)(n.p,{children:"云开发的服务端校验则是将用户填写的数据传递给云函数，然后经过云函数的JavaScrip校验逻辑校验通过了之后才更新到数据库，如何数据没有通过校验，会return返回错误信息到小程序端。服务端校验由于请求的链路比较长，体验比小程序端校验会差一些。"}),"\n",(0,c.jsx)(n.p,{children:"而小程序端校验可以减轻服务器压力，让用户能够更快的获得校验的反馈，不过小程序端校验对于一些恶意用户来说，他们仍然可以更改网络请求绕过小程序端校验的逻辑，使用服务端校验更加安全。比如投票小程序就经常会出现被刷票的情况，如果使用服务端校验除了可以再次校验用户填写的数据格式（阻止绕过小程序端校验的情况）外，还可以限制用户的openid以及ip等。虽然仍然不能避免刷票（阻止不了真人刷票），但是提升了安全的等级。在实际的项目开发中，一般会同时使用小程序端校验与服务端校验的组合校验方式以更好的保证数据的正确性与安全性。"}),"\n",(0,c.jsxs)(n.h3,{id:"942-正则验证",children:["9.4.2 正则验证",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#942-正则验证",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"用户在表单中输入的内容都可以转为字符串格式，而正则表达式可以用来匹配字符串中的字符组合，是进行表单验证的有利武器。"}),"\n",(0,c.jsxs)(n.h4,{id:"1正则调试方法",children:["1、正则调试方法",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1正则调试方法",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"在前面模糊查询以及获取文件后缀名时，我们已经使用过正则，在学习正则表达式时，首先要掌握正则表达式的调试方式。正则表达式有两种方式，一种是使用JavaScript RegExp对象的exec和test方法（类似于数据库的模糊查询）, 以及字符串String对象的match、matchAll、replace、search 和split方法（也就是正则还可以用于字符串的检索、替换、查询、分割）。"}),"\n",(0,c.jsx)(n.p,{children:"在调试时，我们可以打开开发者工具的console控制台，输入如下代码，打印的结果为true说明字符串中有符合正则表达式的字符(调试时可以通过编译的方式来清空变量的声明)："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"//使用RegExp对象的test方法调试正则表达式，比如下面的正则是匹配字符串里是否包含“训练营”\nlet p = '云开发Cloudbase技术训练营';\nlet result = /训练营/.test(p);\nconsole.log(result);  \n\n//使用String对象的replace方法，将字符串里所有云开发替换为“Cloudbase”\nlet str = \"使用云开发来开发微信小程序可以免费、快速的做出一个功能完整且实用的技术作品，这是其他编程学习方向所不具备的；而且小程序和云开发有着详细的中文技术文档、完备的IDE微信开发者工具，可以说云开发是对新手最为友好的技术学习方向了。\"\nlet regex = /云开发/gi\nconsole.log(str.replace(regex, 'Cloudbase'));\n"})}),"\n",(0,c.jsx)(n.p,{children:"不过调试时，更加推荐使用String的matchAll方法，可以返回一个字符串匹配正则表达式的详细结果，比如下面会返回一个数组，表示字符串中包含3个“云开发”以及匹配的字符的位置index："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"//使用matchAll时必须要带上g修饰符\nlet regexp = /云开发/gi\nconst array = [...str.matchAll(regexp)];\nconsole.log(array);\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{src:"https://i.hackweek.org/img//9/WX20201003-125832@2x.png",alt:"控制台调试正则"})}),"\n",(0,c.jsxs)(n.p,{children:["一个正则表达式的字面量如",(0,c.jsx)(n.code,{children:"/云开发/gi"}),"，由包含在",(0,c.jsx)(n.code,{children:"/.../"}),"之间的模式和修饰符",(0,c.jsx)(n.code,{children:"gi"}),"组成，g修饰符表示全局搜索，i表示不区分大小写，m表示匹配多行。使用matchAll时必须要带上g修饰符。"]}),"\n",(0,c.jsxs)(n.h4,{id:"2正则表达式常用语法",children:["2、正则表达式常用语法",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2正则表达式常用语法",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"[Aa云_,]"}),"匹配字符串中是否有字母",(0,c.jsx)(n.code,{children:"A"}),"、",(0,c.jsx)(n.code,{children:"a"}),"，汉字",(0,c.jsx)(n.code,{children:"云"}),"，标点符号",(0,c.jsx)(n.code,{children:"_"}),"、",(0,c.jsx)(n.code,{children:","}),'等字符。比如下面的案例匹配字符串里是否包含"云"、"最"、"方"；']}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"let regexp = /[云最方]/gi  //g是全局搜索，i是忽视大小写\nconst array = [...str.matchAll(regexp)];\nconsole.log(array);\n"})}),"\n",(0,c.jsxs)(n.p,{children:["注意正则表达式",(0,c.jsx)(n.code,{children:"/[云最方]/"}),"和",(0,c.jsx)(n.code,{children:"/云最方/"}),"的区别，前者字符间是“或”的关系，后者字符必须是连在一起的。"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"^云开发"}),"表示的是以“云开发”开头的字符串、",(0,c.jsx)(n.code,{children:"云开发$"}),"表示的是以“云开发”结尾的字符串、",(0,c.jsx)(n.code,{children:"[^云开发]"}),"表示的是字符串中不包括“云”、“开”、“发”的所有字符："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:'let regexp1 = /^云开发/g\nconst array1 = [...str.matchAll(regexp1)]\nconsole.log(array1) //结果为空数组，字符串并不是以"云开发"开头\nlet regexp2 = /云开发$/g\nconst array2 = [...str.matchAll(regexp2)]\nconsole.log(array2) //结果也为空数组，字符串的最后三个字符并不是"云开发"\nlet regexp3 = /[^云开发]/g\nconst array3 = [...str.matchAll(regexp3)] \nconsole.log(array3) //数组有99个结果，字符串不是"云"、"开"、"发"的所有字符（汉字和标点符号）\n'})}),"\n",(0,c.jsx)(n.p,{children:"正则表达式还可以匹配大写字母、小写字母、数字、标点符号以及一些非打印字符，比如换行符、制表符等："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[A-M]"}),"表示的是字符串中含有大写字母",(0,c.jsx)(n.code,{children:"A"}),"到",(0,c.jsx)(n.code,{children:"M"}),"的所有字符；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[a-f]"}),"表示的是字符串中含有小写字母",(0,c.jsx)(n.code,{children:"a"}),"到",(0,c.jsx)(n.code,{children:"f"}),"的所有字符，其中",(0,c.jsx)(n.code,{children:"-"}),"是“到”的意思，也就是一个区间，比如",(0,c.jsx)(n.code,{children:"[0-9]"}),"就是匹配所有的数字；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"x|y"}),"匹配",(0,c.jsx)(n.code,{children:"x"}),"或",(0,c.jsx)(n.code,{children:"y"}),"，其中",(0,c.jsx)(n.code,{children:"|"}),"是“或”的意思；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"."}),"匹配除换行符（",(0,c.jsx)(n.code,{children:"\\n"}),"、",(0,c.jsx)(n.code,{children:"\\r"}),"）之外的任何单个字符；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"w"})," 匹配字母、数字、下划线；",(0,c.jsx)(n.code,{children:"\\W"}),"匹配非字母、数字、下划线；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"\\s"})," 匹配所有空白符，包括换行；",(0,c.jsx)(n.code,{children:"\\S"}),"匹配所有非空白符，包括换行；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"\\d"}),"匹配数字字符；",(0,c.jsx)(n.code,{children:"\\D"}),"匹配一个非数字字符；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"\\b"}),"匹配一个单词边界；",(0,c.jsx)(n.code,{children:"\\D"}),"匹配一个非单词边界；"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"\\f"}),"匹配一个换页符；",(0,c.jsx)(n.code,{children:"\\n"}),"匹配一个换行符；",(0,c.jsx)(n.code,{children:"\\t"}),"匹配一个制表符；",(0,c.jsx)(n.code,{children:"\\v"}),"匹配一个垂直制表符；",(0,c.jsx)(n.code,{children:"\\r"}),"匹配一个回车符；"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"限定符用来指定正则表达式的给定字符必须要出现多少次才能满足匹配："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"{n}"}),"，匹配确定的 n 次，比如",(0,c.jsx)(n.code,{children:"/\\d{4}/"}),"表示4个数字，",(0,c.jsx)(n.code,{children:"/\\d[A-Za-z]{4}\\d/"}),"匹配字符串中所有4个字母的单词；"]}),"\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"{n,}"}),"，至少匹配n次；"]}),"\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"{n,m}"}),"，最少匹配 n 次且最多匹配 m 次；"]}),"\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"*"}),"，表示前面的字符可以出现零次或多次；"]}),"\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"+"}),"，表示前面的字符必须至少出现一次或多次；"]}),"\n",(0,c.jsxs)(n.li,{children:["限定符",(0,c.jsx)(n.code,{children:"?"}),"，表示前面的字符最多只能出现1次；"]}),"\n"]}),"\n",(0,c.jsxs)(n.h4,{id:"3小程序端正则验证",children:["3、小程序端正则验证",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3小程序端正则验证",children:"#"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"//是否为邮箱的验证，其中\\u4e00-\\u9fa5为Unicode汉字编码范围\nlet isTrue =/^([A-Za-z0-9_\\-\\.\\u4e00-\\u9fa5])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,8})$/;\n\n//是否为数字的验证，密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\nlet isTrue =^[a-zA-Z]\\w{5,17}$;\n\n//强密码的验证，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\nlet isTrue = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n\n//用户名验证，4到16位（字母，数字，下划线，减号）\nlet isTrue = /^[a-zA-Z0-9_-]{4,16}$/;\n\n//是否为手机号的验证，手机号有11个数字，尤其是开头的3位数可以作为验证标准\nlet isTrue = /^(13[0-9]|14[5-9]|15[012356789]|166|17[0-8]|18[0-9]|19[8-9])[0-9]{8}$/;  \n"})}),"\n",(0,c.jsx)(n.p,{children:"对于表单中不符合正则表达式规范的，可以使用一些交互来提醒，比如当用户填写错误时用红字提醒（UI的部分可以自己设计一下）："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:'const str = e.detail.phone\nconst phoneTrue = /^(13[0-9]|14[5-9]|15[012356789]|166|17[0-8]|18[0-9]|19[8-9])[0-9]{8}$/;  \nconst result = str.match(phoneTrue)\nif(result.lenght == 0){\n  this.setData({\n    phoneerror:"请填写正确的手机号"\n  })\n})\n}\n'})}),"\n",(0,c.jsxs)(n.h4,{id:"4数据验证npm模块",children:["4、数据验证npm模块",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4数据验证npm模块",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"我们也可以使用第三方模块比如validator来进行表单的验证，这些模块将一些常用的表单验证给封装好了，使用起来更加方便。方法如下："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["在开发者工具上右键小程序根目录miniprogram，然后选择“在终端中打开”，然后在终端里输入命令",(0,c.jsx)(n.code,{children:"npm install validator@latest"}),"，命令执行完会在miniprogram文件夹生成一个node_modules文件夹；"]}),"\n",(0,c.jsx)(n.li,{children:"点击开发者工具菜单栏里的“工具”，在弹窗中选择“构建npm”，这个命令会将node_modules里的模块构建到miniprogram_npm文件夹里（node_modules文件夹可以删除了）；"}),"\n",(0,c.jsx)(n.li,{children:"在需要使用表单验证的小程序页面的js文件里输入如下代码引入并验证模块是否安装成功；"}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const validator  = require('./../../miniprogram_npm/validator/index')\nconst v1 = validator.isEmail('foo@bar.com'); //'foo@bar.com'是否是邮箱\nconst v2 = validator.isMobilePhone('185623478773','zh-CN')//18562347877是否是中国大陆的电话号码\nconsole.log([v1,v2])\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F60.%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81.md"]={toc:[{text:"9.4 数据验证",id:"94-数据验证",depth:2},{text:"9.4.1 关于表单验证",id:"941-关于表单验证",depth:3},{text:"9.4.2 正则验证",id:"942-正则验证",depth:3},{text:"1、正则调试方法",id:"1正则调试方法",depth:4},{text:"2、正则表达式常用语法",id:"2正则表达式常用语法",depth:4},{text:"3、小程序端正则验证",id:"3小程序端正则验证",depth:4},{text:"4、数据验证npm模块",id:"4数据验证npm模块",depth:4}],title:"60.数据验证",headingTitle:"60.数据验证",frontmatter:{}}}}]);