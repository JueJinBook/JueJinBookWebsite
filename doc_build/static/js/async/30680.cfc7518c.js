"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["30680"],{684818:function(n,e,t){n.exports=t.p+"static/image/09dc026f395d36dc23437d71f2134748.866a3303.webp"},227894:function(n,e,t){n.exports=t.p+"static/image/15dfd9187d64608884f44c6d67f710cf.85f0622f.webp"},197626:function(n,e,t){t.r(e),t.d(e,{default:()=>R});var a=t(552676),s=t(740453);let i=t.p+"static/image/e95209f9cb7e2801343491d804494454.503a3a37.gif",r=t.p+"static/image/f154edc976fca11233014ac38caf7f4d.c128c7af.webp",c=t.p+"static/image/1230f02f33d6f46a0268700a6e7dbd2c.49d92bc7.webp",o=t.p+"static/image/803680e926cfa1e0debbd9a3bf23fcff.97231946.webp",m=t.p+"static/image/3e05d53b61ad220e85a34b9e9ef804df.977f1b93.gif",l=t.p+"static/image/0060e2102835535d4ac1b33f100e4e76.e48b43e5.webp",d=t.p+"static/image/fb83bbe7c4836bb2ff38832ae227abbe.d889cd55.webp",p=t.p+"static/image/7911f1bb7cfa368d879a025692c7c5ed.1438c883.webp",u=t.p+"static/image/15957f046ef90ab6ee2215937ee8a50e.29e0aa37.webp",g=t.p+"static/image/9971d5aa8b906fed73693d3ddd425b35.ac8e5c56.webp",f=t.p+"static/image/3f3c9ffed9403167b01bc5117d678269.98cb2254.webp",h=t.p+"static/image/27de60eb47e0df05c003ac02ea306422.90314462.webp",x=t.p+"static/image/8f7172ff8df83503ad42e864c9134ef2.834695d8.webp",j=t.p+"static/image/fd3213ec232e57c06b817729de1bac0c.3fa42696.webp";var b=t(684818),y=t(227894);let v=t.p+"static/image/b1c30944e9177c1c340da4c15f34a850.55c50f76.webp",D=t.p+"static/image/ab6f1ef056690f1120e6d55d0229d913.dd6d8384.webp",F=t.p+"static/image/cb7857e59cb4c9458278aee1243bb044.310d477a.webp",T=t.p+"static/image/63ff6f155c24b17be91eab3d26e3afa3.934d7f4a.webp",S=t.p+"static/image/85d4a264ea7a57544933c5be36fb1551.43564424.webp",B=t.p+"static/image/94deed3f1c9bb1bad135908e9a57b42f.3a69b956.webp",k=t.p+"static/image/1ff32c0f24a09ec13e7d9243a69bc7cd.b38cdd17.webp";function A(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,s.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"128-会议室预订系统统计管理模块-前端开发",children:["128. 会议室预订系统：统计管理模块-前端开发",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#128-会议室预订系统统计管理模块-前端开发",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"上节写了统计用的两个接口，这节来加一下 swagger 文档，然后写下前端部分。"}),"\n",(0,a.jsx)(e.p,{children:"这个接口有 2 个 query 参数，返回值是一个对象，所以这样写："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:k,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiQuery({\n    name: 'startTime',\n    type: String,\n    description: '开始时间'\n})\n@ApiQuery({\n    name: 'endTime',\n    type: String,\n    description: '结束时间'\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    type: UserBookignCount\n})\n"})}),"\n",(0,a.jsx)(e.p,{children:"涉及到的 vo 在 src/statistic/vo/UserBookignCount.vo.ts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { ApiProperty } from "@nestjs/swagger";\n\nexport class UserBookignCount {\n\n    @ApiProperty()\n    userId: string;\n\n    @ApiProperty()\n    username: string;\n\n    @ApiProperty()\n    bookingCount: string;\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["访问下 ",(0,a.jsx)(e.a,{href:"http://localhost:3005/api-doc",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3005/api-doc"})]}),"\n",(0,a.jsx)(e.p,{children:"可以看到这个接口的文档："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:B,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,a.jsx)(e.p,{children:"然后添加另一个接口的："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:S,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"@ApiBearerAuth()\n@ApiQuery({\n    name: 'startTime',\n    type: String,\n    description: '开始时间'\n})\n@ApiQuery({\n    name: 'endTime',\n    type: String,\n    description: '结束时间'\n})\n@ApiResponse({\n    status: HttpStatus.OK,\n    type: MeetingRoomUsedCount\n})\n"})}),"\n",(0,a.jsx)(e.p,{children:"src/statistic/MeetingRoomUsedCount.vo.ts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { ApiProperty } from "@nestjs/swagger";\n\nexport class MeetingRoomUsedCount {\n\n    @ApiProperty()\n    meetingRoomId: string;\n\n    @ApiProperty()\n    meetingRoomName: string;\n\n    @ApiProperty()\n    usedCount: string;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:T,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后再加个 @ApiTags 把这俩接口文档分成一组："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:F,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:D,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"这样，swagger 文档就完成了。"}),"\n",(0,a.jsx)(e.p,{children:"然后来写前端代码："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:v,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"统计的路由我们已经写过了，只要填内容就行。"}),"\n",(0,a.jsx)(e.p,{children:"原型图是这样的："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:y,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:b,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"加个 antd 的 Form，然后再用 echarts 的图表展示下数据就好了。"}),"\n",(0,a.jsx)(e.p,{children:"先加下 form："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Button, DatePicker, Form, Select } from "antd";\nimport "./statistics.css";\n\nexport function Statistics() {\n\n    function getStatisticData(values: { startTime: string; endTime: string; }) {\n        console.log(values);\n    }\n\n    return <div id="statistics-container">\n        <div className="statistics-form">\n            <Form\n                onFinish={getStatisticData}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="开始日期" name="startTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="结束日期" name="endTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="图表类型" name="chartType" initialValue={"bar"}>\n                    <Select>\n                        <Select.Option value="pie">饼图</Select.Option>\n                        <Select.Option value="bar">柱形图</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type="primary" htmlType="submit">\n                        查询\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="statistics-chart">\n            图表\n        </div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"css："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-css",children:"#statistics-container {\n    padding: 20px;\n}\n#statistics-container .statistics-form {\n    margin-bottom: 40px;\n}\n#statistics-container .statistics-chart {\n    width: 800px;\n    height: 600px;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"点击查询，会打印 form 的值："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:j,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后安装 echarts："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"npm install echarts --save\n"})}),"\n",(0,a.jsx)(e.p,{children:"然后通过 useRef 拿到 dom 元素，再初始化下 echarts 的柱状图："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:x,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:h,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Button, DatePicker, Form, Select } from "antd";\nimport "./statistics.css";\nimport * as echarts from \'echarts\';\nimport { useEffect, useRef } from "react";\n\nexport function Statistics() {\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    function getStatisticData(values: { startTime: string; endTime: string; }) {\n        console.log(values);\n    }\n\n\n    useEffect(() => {\n        const myChart = echarts.init(containerRef.current);\n        myChart.setOption({\n            title: {\n                text: \'ECharts 入门示例\'\n            },\n            tooltip: {},\n            xAxis: {\n                data: [\'衬衫\', \'羊毛衫\', \'雪纺衫\', \'裤子\', \'高跟鞋\', \'袜子\']\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: \'销量\',\n                    type: \'bar\',\n                    data: [5, 20, 36, 10, 10, 20]\n                }\n            ]\n        });\n    }, []);\n\n    return <div id="statistics-container">\n        <div className="statistics-form">\n            <Form\n                onFinish={getStatisticData}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="开始日期" name="startTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="结束日期" name="endTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="图表类型" name="chartType" initialValue={"bar"}>\n                    <Select>\n                        <Select.Option value="pie">饼图</Select.Option>\n                        <Select.Option value="bar">柱形图</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type="primary" htmlType="submit">\n                        查询\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="statistics-chart" ref={containerRef}></div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"这样 echarts 就成功引入了："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:f,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后我们加一下接口："}),"\n",(0,a.jsx)(e.p,{children:"在 src/interface/interfaces.ts 里加一下："}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"export async function meetingRoomUsedCount(startTime: string, endTime: string) {\n    return await axiosInstance.get('/statistic/meetingRoomUsedCount', {\n        params: {\n            startTime,\n            endTime\n        }\n    });\n}\n\nexport async function userBookingCount(startTime: string, endTime: string) {\n    return await axiosInstance.get('/statistic/userBookingCount', {\n        params: {\n            startTime,\n            endTime\n        }\n    });\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"我们加一个 state 来存储返回的数据，然后点击查询的时候请求接口："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:g,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"当数据变化的时候，渲染图表："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:u,alt:""})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Button, DatePicker, Form, Select, message } from "antd";\nimport "./statistics.css";\nimport * as echarts from \'echarts\';\nimport { useEffect, useRef, useState } from "react";\nimport { userBookingCount } from "../../interfaces/interfaces";\nimport dayjs from "dayjs";\n\ninterface UserBookingData {\n    userId: string;\n    username: string;\n    bookingCount: string;\n}\nexport function Statistics() {\n\n    const [userBookingData, setUserBookingData] = useState<Array<UserBookingData>>();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    async function getStatisticData(values: { startTime: string; endTime: string; }) {\n\n        const startTime = dayjs(values.startTime).format(\'YYYY-MM-DD\');\n        const endTime = dayjs(values.endTime).format(\'YYYY-MM-DD\');\n\n        const res = await userBookingCount(startTime, endTime);\n        \n        const { data } = res.data;\n        if(res.status === 201 || res.status === 200) {\n            setUserBookingData(data);\n        } else {\n            message.error(data || \'系统繁忙，请稍后再试\');\n        }\n    }\n\n    useEffect(() => {\n        const myChart = echarts.init(containerRef.current);\n\n        if(!userBookingData) {\n            return;\n        }\n    \n        myChart.setOption({\n            title: {\n                text: \'用户预定情况\'\n            },\n            tooltip: {},\n            xAxis: {\n                data: userBookingData?.map(item => item.username)\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: \'预定次数\',\n                    type: \'bar\',\n                    data: userBookingData?.map(item => {\n                        return {\n                            name: item.username,\n                            value: item.bookingCount\n                        }\n                    })\n                }\n            ]\n        });\n    }, [userBookingData]);\n\n    return <div id="statistics-container">\n        <div className="statistics-form">\n            <Form\n                onFinish={getStatisticData}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="开始日期" name="startTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="结束日期" name="endTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="图表类型" name="chartType" initialValue={"bar"}>\n                    <Select>\n                        <Select.Option value="pie">饼图</Select.Option>\n                        <Select.Option value="bar">柱形图</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type="primary" htmlType="submit">\n                        查询\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="statistics-chart" ref={containerRef}></div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"这样，点击查询的时候就会根据返回的数据渲染柱形图："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:p,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"然后我们再加上饼图的部分："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:l,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"这样，统计的图表就完成了："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:m,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"我们在下面再加一个会议室使用情况的图表。"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:o,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:c,alt:""})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:r,alt:""})}),"\n",(0,a.jsx)(e.p,{children:"过程一摸一样。"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'import { Button, DatePicker, Form, Select, message } from "antd";\nimport "./statistics.css";\nimport * as echarts from \'echarts\';\nimport { useEffect, useRef, useState } from "react";\nimport { meetingRoomUsedCount, userBookingCount } from "../../interfaces/interfaces";\nimport dayjs from "dayjs";\nimport { useForm } from "antd/es/form/Form";\n\ninterface UserBookingData {\n    userId: string;\n    username: string;\n    bookingCount: string;\n}\ninterface MeetingRoomUsedData {\n    meetingRoomName: string;\n    meetingRoomId: number;\n    usedCount: string;\n}\n\nexport function Statistics() {\n\n    const [userBookingData, setUserBookingData] = useState<Array<UserBookingData>>();\n    const [meetingRoomUsedData, setMeetingRoomUsedData] = useState<Array<MeetingRoomUsedData>>();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const containerRef2 = useRef<HTMLDivElement>(null);\n\n    async function getStatisticData(values: { startTime: string; endTime: string; }) {\n\n        const startTime = dayjs(values.startTime).format(\'YYYY-MM-DD\');\n        const endTime = dayjs(values.endTime).format(\'YYYY-MM-DD\');\n\n        const res = await userBookingCount(startTime, endTime);\n        \n        const { data } = res.data;\n        if(res.status === 201 || res.status === 200) {\n            setUserBookingData(data);\n        } else {\n            message.error(data || \'系统繁忙，请稍后再试\');\n        }\n\n        const res2 = await meetingRoomUsedCount(startTime, endTime);\n        \n        const { data: data2 } = res2.data;\n        if(res2.status === 201 || res2.status === 200) {\n            setMeetingRoomUsedData(data2);\n        } else {\n            message.error(data2 || \'系统繁忙，请稍后再试\');\n        }\n    }\n\n    useEffect(() => {\n        const myChart = echarts.init(containerRef.current);\n\n        if(!userBookingData) {\n            return;\n        }\n    \n        myChart.setOption({\n            title: {\n                text: \'用户预定情况\'\n            },\n            tooltip: {},\n            xAxis: {\n                data: userBookingData?.map(item => item.username)\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: \'预定次数\',\n                    type: form.getFieldValue(\'chartType\'),\n                    data: userBookingData?.map(item => {\n                        return {\n                            name: item.username,\n                            value: item.bookingCount\n                        }\n                    })\n                }\n            ]\n        });\n    }, [userBookingData]);\n\n    useEffect(() => {\n        const myChart = echarts.init(containerRef2.current);\n\n        if(!meetingRoomUsedData) {\n            return;\n        }\n    \n        myChart.setOption({\n            title: {\n                text: \'会议室使用情况\'\n            },\n            tooltip: {},\n            xAxis: {\n                data: meetingRoomUsedData?.map(item => item.meetingRoomName)\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: \'使用次数\',\n                    type: form.getFieldValue(\'chartType\'),\n                    data: meetingRoomUsedData?.map(item => {\n                        return {\n                            name: item.meetingRoomName,\n                            value: item.usedCount\n                        }\n                    })\n                }\n            ]\n        });\n    }, [meetingRoomUsedData]);\n\n    const [form] = useForm();\n\n    return <div id="statistics-container">\n        <div className="statistics-form">\n            <Form\n                form={form}\n                onFinish={getStatisticData}\n                name="search"\n                layout=\'inline\'\n                colon={false}\n            >\n                <Form.Item label="开始日期" name="startTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="结束日期" name="endTime">\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item label="图表类型" name="chartType" initialValue={"bar"}>\n                    <Select>\n                        <Select.Option value="pie">饼图</Select.Option>\n                        <Select.Option value="bar">柱形图</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type="primary" htmlType="submit">\n                        查询\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        <div className="statistics-chart" ref={containerRef}></div>\n        <div className="statistics-chart" ref={containerRef2}></div>\n    </div>\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:i,alt:""})}),"\n",(0,a.jsxs)(e.p,{children:["代码在",(0,a.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/meeting_room_booking_system_backend",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"。"]}),"\n",(0,a.jsxs)(e.h2,{id:"总结",children:["总结",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"这节我们加了 swagger 文档并且写了统计管理模块的前端代码。"}),"\n",(0,a.jsx)(e.p,{children:"前端部分主要是 echarts 的图表，这个根据返回的数据调整下格式，然后设置到 echarts 的 options 就行。"}),"\n",(0,a.jsx)(e.p,{children:"至此，所有模块的钱后端代码就都完成了。"})]})}function E(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(A,{...n})}):A(n)}let R=E;E.__RSPRESS_PAGE_META={},E.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F128.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E8%AE%A2%E7%B3%BB%E7%BB%9F%EF%BC%9A%E7%BB%9F%E8%AE%A1%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97-%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"128. 会议室预订系统：统计管理模块-前端开发",headingTitle:"128. 会议室预订系统：统计管理模块-前端开发",frontmatter:{}}}}]);