"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["43593"],{885248:function(e,n,s){s.r(n),s.d(n,{default:()=>i});var t=s(552676),r=s(740453);function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",blockquote:"blockquote",h3:"h3",pre:"pre",code:"code",strong:"strong"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"77http处理",children:["77.HTTP处理",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#77http处理",children:"#"})]}),"\n",(0,t.jsxs)(n.h2,{id:"1110-http处理",children:["11.10 HTTP处理",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1110-http处理",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"在小程序端我们可以使用wx.request来与第三方api服务进行数据交互，那云函数除了可以直接给小程序端提供数据以外，能不能从第三方服务器获取数据呢？答案是肯定的，而且在云函数中使用HTTP请求访问第三方服务可以不受域名限制，即不需要像小程序端一样，要将域名添加到request合法域名里；也不受http和https的限制，没有域名只有IP都是可以的，所以云函数可以应用的场景非常多，即能方便的调用第三方服务，也能够充当一个功能复杂的完整应用的后端。不过需要注意的是，云函数是部署在云端，有些局域网等终端通信的业务只能在小程序里进行。"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"node流行的HTTP库比较多，比如got、superagent、request、axios、request-promise、fech等等，推荐大家使用axios，axios是一个基于promise的HTTP库，可以使用在浏览器和Node.js环境中，下面也会以axios为例。"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"11101-get请求",children:["11.10.1 get请求",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11101-get请求",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"使用开发者工具，创建一个云函数，如axios，然后在package.json增加axios最新版latest的依赖并用npm install安装："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'"dependencies": {\n  "wx-server-sdk":"latest",\n  "axios": "latest"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"然后在index.js里输入以下代码，在前面章节里，我们在小程序端调用过知乎日报的API，下面还以知乎日报的API为例："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nconst axios = require('axios')\nexports.main = async (event, context) => {\n  const url = \"https://news-at.zhihu.com/api/4/news/latest\"\n  try {\n    const res = await axios.get(url)\n    //const util = require('util')\n    //console.log(util.inspect(res,{depth:null}))\n    return res.data; \n  } catch (e) {\n    console.error(e);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["在小程序端调用这个云函数，就能返回从知乎日报里获取到的最新文章和热门文章，云函数端获取知乎日报的数据就",(0,t.jsx)(n.strong,{children:"不需要添加域名校验"}),"，比小程序端的wx.request方便省事很多。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["注意，在上面的案例中，我们返回的不是整个res(response对象)，而是response对象里的data。直接返回整个res对象，会报",(0,t.jsx)(n.code,{children:"Converting circular structure to JSON"}),"的错误，如果你想返回整个res，可以取消上面代码里面的注释。Node的",(0,t.jsx)(n.code,{children:"util.inspect(object,[showHidden],[depth],[colors])"}),"是一个将任意对象转换为字符串的方法，通常用于调试和错误输出。"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["上面的知乎链接本来就是API，返回的是json格式的数据，所以可以直接使用axios.get()，axios还可以用于爬虫，爬取网页，比如下面的代码就是爬取百度首页，并返回首页里的",(0,t.jsx)(n.code,{children:"<title></title>"}),"里的内容（也就是网页的标题）："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nconst axios = require('axios')\nexports.main = async (event, context) => {\n  try {\n    const res = await axios.get(\"https://baidu.com\")\n    const htmlString = res.data\n    return htmlString.match(/<title[^>]*>([^<]+)<\\/title>/)[1]  \n  } catch (e) {\n    console.error(e);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"如果想使用云函数做爬虫后台，抓取网页数据，可以使用cheerio和puppeteer等第三方开源依赖，这里就不多做介绍了。"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"11102-post请求",children:["11.10.2 post请求",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11102-post请求",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["结合前面在网络API里讲过的聚合数据",(0,t.jsx)(n.a,{href:"https://www.juhe.cn/docs/api/id/63",target:"_blank",rel:"noopener noreferrer",children:"历史上的今天API"}),"，我们也可以在云函数端发起post请求："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const now = new Date(); //在云函数字符串时间时，注意要修改云函数的时区，方法在云函数实用工具库里有详细介绍\nconst month = now.getMonth()+1 //月份需要+1\nconst day = now.getDate()\nconst key = \"\" //你的聚合KEY\nconst url =\"http://api.juheapi.com/japi/toh\"\n\nconst cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nconst axios = require('axios')\nexports.main = async (event, context) => {\n  try {\n    const res = await axios.post(url,{\n      key:key,\n      v:1.0,\n      month:month,\n      day:day\n    })\n    // const res = await axios.post(`url?key=${key}&v=1.0&month=${month}&day=${day}`)\n    return res\n  } catch (e) {\n    console.error(e);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"11103-使用axios下载文件",children:["11.10.3 使用axios下载文件",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11103-使用axios下载文件",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"要使用axios下载文件，需要将axios的responseType由默认的json修改为stream，然后将下载好的文件上传到云存储里，也可以将下载好的文件写入到云函数临时的tmp文件夹里，用于更加复杂的操作。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV,\n})\nconst axios = require('axios')\n//const fs = require('fs');\nexports.main = async (event, context) => {\n  try {\n    const  url = 'https://tcb-1251009918.cos.ap-guangzhou.myqcloud.com/weapp.jpg';\n    const res = await axios.get(url,{\n      responseType: 'stream'\n    })\n\n    const buffer = res.data\n    //我们也还可以将下载好的图片保存在云函数的临时文件夹里\n    // const fileStream = await fs.createReadStream('/tmp/axiosimg.jpg')\n    return await cloud.uploadFile({\n      cloudPath: 'axiosimg.jpg',\n      fileContent: buffer, \n    })\n  } catch (e) {\n    console.error(e);\n  }\n}\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}let i=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F77.HTTP%E5%A4%84%E7%90%86.md"]={toc:[{text:"11.10 HTTP处理",id:"1110-http处理",depth:2},{text:"11.10.1 get请求",id:"11101-get请求",depth:3},{text:"11.10.2 post请求",id:"11102-post请求",depth:3},{text:"11.10.3 使用axios下载文件",id:"11103-使用axios下载文件",depth:3}],title:"77.HTTP处理",headingTitle:"77.HTTP处理",frontmatter:{}}}}]);