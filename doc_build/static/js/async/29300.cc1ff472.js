"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["29300"],{324088:function(n,i,e){e.r(i),e.d(i,{default:()=>h});var l=e(552676),s=e(740453);let r=e.p+"static/image/6dba6b683aadda6b479c4c9285cee3bf.4c49a44f.png";function c(n){let i=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",img:"img",blockquote:"blockquote",ul:"ul",li:"li",code:"code",strong:"strong"},(0,s.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.h1,{id:"1前言阅读指南",children:["1.前言：阅读指南",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#1前言阅读指南",children:"#"})]}),"\n",(0,l.jsxs)(i.h2,{id:"前言",children:["前言",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)("img",{src:r,alt:"image.png"})}),"\n",(0,l.jsx)(i.p,{children:"本文是《深入浅出微前端》小册课程的阅读指南，旨在帮助大家快速了解小册的课程概要。对于还未购买小册的同学，可以通过该指南罗列的问题来决策是否需要购买小册，对于已经购买了小册的同学，可以配合这些问题进行有目的性的学习，从而提高学习效率。"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsx)(i.p,{children:"温馨提示：该指南会随着课程的发布实时更新。"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"感性了解微前端到底解决了哪些业务问题",children:["感性了解：微前端到底解决了哪些业务问题",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#感性了解微前端到底解决了哪些业务问题",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是微前端？"}),"\n",(0,l.jsx)(i.li,{children:"微前端具备哪些特性？"}),"\n",(0,l.jsx)(i.li,{children:"在哪些业务场景中推荐（不推荐）使用微前端？"}),"\n",(0,l.jsx)(i.li,{children:"微前端中 MPA 和 SPA 方案各自有什么优缺点？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"方案了解iframe-方案",children:["方案了解：iframe 方案",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案了解iframe-方案",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"简述浏览器多进程架构的优点？"}),"\n",(0,l.jsx)(i.li,{children:"Chrome 浏览器中存在哪些进程？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器中的 Browser 主进程和 Renderer 进程有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"从新开一个标签页开始，讲述一下网页生成的整个过程？"}),"\n",(0,l.jsx)(i.li,{children:"简述浏览器的沙箱设计？"}),"\n",(0,l.jsx)(i.li,{children:"Chrome 浏览器的插件进程是否已经沙箱化？"}),"\n",(0,l.jsx)(i.li,{children:"什么是浏览器的同源策略？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"多个跨站的 Web 应用处于同一个 Renderer 进程会有什么安全风险？"}),"\n",(0,l.jsx)(i.li,{children:"什么是站点隔离？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"什么情况下浏览器会给标签页（iframe）分配不同的 Renderer 进程？"}),"\n",(0,l.jsx)(i.li,{children:"为什么浏览器设计成站点隔离，而不是同源策略的源隔离？"}),"\n",(0,l.jsx)(i.li,{children:"跨站和跨域有什么区别？跨域的应用一定跨站吗？"}),"\n",(0,l.jsx)(i.li,{children:"iframe 和浏览上下文存在什么关系？"}),"\n",(0,l.jsx)(i.li,{children:"在微前端中如何识别微应用是在 iframe 中打开？"}),"\n",(0,l.jsx)(i.li,{children:"微前端中的 iframe 方案有什么优点和缺点？"}),"\n",(0,l.jsx)(i.li,{children:"在浏览器中绕过同源策略限制的解决方案有哪些？是否存在安全风险？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"方案了解npm-方案",children:["方案了解：NPM 方案",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案了解npm-方案",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么 JavaScript 需要模块化规范？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么在浏览器中使用 ES Module 规范开发需要通过 HTTP 请求的形式？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在浏览器中使用 ES Module 规范进行开发的优势有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"浏览器中如何设置 ES Module 引入路径的别名？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"CommonJS 模块和 ES Module 模块有什么区别？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Vite 开发态热更新速度快的主要原因是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么需要在 Web 应用的开发中使用 Webpack、Vite、ESBuild 等工具？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"大部分浏览器兼容的最高 ECMAScript 标准是多少？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么需要对业务组件进行产物构建发布？如果不构建直接发布源码会有什么问题吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"业务组件和 Web 应用的产物构建存在哪些差异？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么大部分应用使用 babel-loader 进行转义时推荐屏蔽 node_modules 目录？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在什么情况下对应用和业务组件进行构建时需要使用 Polyfill?"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"使用 Rollup 和 Webpack 等构建输出的 ES Module 模块和 ES6+ 源码存在什么区别？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"使用构建工具构建 ES Module 模块的好处是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端中的微应用和业务组件的构建存在什么差异？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端 NPM 方案有什么优点和缺点？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端 NPM 方案适用于哪些业务场景？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何解决在主应用中实时调试微应用 NPM 包的源码问题？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"方案了解动态-script-方案",children:["方案了解：动态 Script 方案",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案了解动态-script-方案",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端中的动态 Script 方案如何实现？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在动态 Script 方案中如何实现 CSS 样式的激活和失效？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["通过 ",(0,l.jsx)(i.code,{children:"script"})," 标签动态加载 JS 文件后删除 ",(0,l.jsx)(i.code,{children:"script"})," 标签，JS 文件的代码还会执行吗？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"针对上述问题，如果删除 JS 文件后代码不执行，会有什么副作用？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"删除 JS 文件和删除后再次添加有什么区别？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["通过 ",(0,l.jsx)(i.code,{children:"link"})," 标签动态加载 CSS 文件后删除 ",(0,l.jsx)(i.code,{children:"link"})," 标签，CSS 文件对应的样式还会生效吗？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端动态 Script 方案相对于 NPM 方案有哪些优势？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"微前端动态 Script 方案存在哪些问题？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"方案了解web-components-方案",children:["方案了解：Web Components 方案",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案了解web-components-方案",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是 Web Components?"}),"\n",(0,l.jsx)(i.li,{children:"Web Components 的浏览器兼容情况？如何处理浏览器的兼容性问题？"}),"\n",(0,l.jsx)(i.li,{children:"Web Components 的生命周期回调函数有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"微前端中的 Web Components 方案如何实现？"}),"\n",(0,l.jsx)(i.li,{children:"Web Components 相对于动态 Script 方案有哪些优势？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"方案了解cookie-处理",children:["方案了解：Cookie 处理",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#方案了解cookie-处理",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"实现微前端中子应用免登的方案有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"跨域情况下 LocalStorage 和 Cookie 能否共享？"}),"\n",(0,l.jsx)(i.li,{children:"主子应用同域的情况下使用 Cookie 可能存在什么潜在风险？"}),"\n",(0,l.jsx)(i.li,{children:"如何实现本地 IP 地址和自定义域名的关系映射？"}),"\n",(0,l.jsx)(i.li,{children:"本地系统的 hosts 文件匹配和 DNS 域名解析的差异是什么？"}),"\n",(0,l.jsx)(i.li,{children:"同一个 IP 地址可以映射不同的域名吗？"}),"\n",(0,l.jsx)(i.li,{children:"主应用和 iframe 子应用跨域同站的情况下能否共享 Cookie?"}),"\n",(0,l.jsx)(i.li,{children:"Cookie 的 SameSite 属性有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"Chrome 浏览器将 SameSite 默认值设置为 Lax 是为了解决什么问题？"}),"\n",(0,l.jsx)(i.li,{children:"Chrome 浏览器中主应用和 iframe 子应用跨站时，iframe 子应用默认能够携带 Cookie 吗？"}),"\n",(0,l.jsx)(i.li,{children:"Chrome 浏览器中 iframe 子应用跨站时，如何才能携带 Cookie?"}),"\n",(0,l.jsx)(i.li,{children:"为本地的 Node 服务建立 HTTPS 连接的方式有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"主应用和 iframe 子应用跨站的情况下能否共享 Cookie? 为什么呢？"}),"\n",(0,l.jsx)(i.li,{children:"主子应用如何做到不同的服务地址前端应用不跨域？"}),"\n",(0,l.jsx)(i.li,{children:"Web 前端应用跨站发送 Ajax 请求时能否携带 Cookie? 如何才能携带 Cookie?"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析引言",children:["原理解析：引言",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析引言",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"简述在地址栏中输入 URL 地址后浏览器的整个运行过程？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器中的网络服务是一个独立的进程还是线程？"}),"\n",(0,l.jsx)(i.li,{children:"标签页应用的生命周期状态和事件有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器中如何做到应用内的 DOM（CSS） 和 JS 隔离？"}),"\n",(0,l.jsx)(i.li,{children:"站点隔离和跨源隔离的区别是什么？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器内部提升加载性能的功能有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"简单描述一下标签页应用的多级缓存设计以及缓存的触发顺序？"}),"\n",(0,l.jsx)(i.li,{children:"一个通用的微前端框架大致需要包含哪些设计要素？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析v8-隔离",children:["原理解析：V8 隔离",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析v8-隔离",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"在同一个 SPA 应用中动态加载两个不同的 Script 时为什么会产生同名属性冲突？"}),"\n",(0,l.jsx)(i.li,{children:"如何解决动态 Script 中的同名属性冲突问题？"}),"\n",(0,l.jsx)(i.li,{children:"不同的标签页应用、标签页和 iframe 应用为什么可以隔离 JS 运行时？"}),"\n",(0,l.jsx)(i.li,{children:"V8 是如何做到 JS 运行时隔离的？"}),"\n",(0,l.jsx)(i.li,{children:"V8 中的 Context 和 Isolate 有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"V8 中为什么需要 Context?"}),"\n",(0,l.jsx)(i.li,{children:"什么是全局执行上下文栈？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"V8 中的 Isolate 和 Context 隔离有什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器的 Web 应用中有可以实现 Isolate 或者 Context 隔离的 Web API 吗？"}),"\n",(0,l.jsx)(i.li,{children:"浏览器的 Web 应用中隔离 JS 运行时的功能有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析iframe-隔离",children:["原理解析：iframe 隔离",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析iframe-隔离",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是 iframe 隔离？"}),"\n",(0,l.jsx)(i.li,{children:"iframe 隔离和 iframe 方案有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"使用 iframe 隔离存在哪些优势？"}),"\n",(0,l.jsxs)(i.li,{children:["iframe 的 ",(0,l.jsx)(i.code,{children:"src"})," 设置成 ",(0,l.jsx)(i.code,{children:"about:blank"})," 后会和主应用形成跨域吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["将 iframe 的 ",(0,l.jsx)(i.code,{children:"src"})," 设置成 ",(0,l.jsx)(i.code,{children:"about:blank"})," 后内部的 JS 运行时环境会存在什么限制吗？"]}),"\n",(0,l.jsx)(i.li,{children:"Vue 或者 React 框架的 Hash 路由和 History 路由有什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"如何生成一个和主应用完全同域的 iframe 页面？"}),"\n",(0,l.jsx)(i.li,{children:"iframe 隔离相对于 iframe 方案存在哪些优势？"}),"\n",(0,l.jsx)(i.li,{children:"如何解决 iframe 隔离中的白屏问题？"}),"\n",(0,l.jsx)(i.li,{children:"如何解决 iframe 和主应用的 URL 同步问题？"}),"\n",(0,l.jsx)(i.li,{children:"如何解决 iframe 中的模态框无法相对于主应用进行居中的问题？"}),"\n",(0,l.jsx)(i.li,{children:"iframe 和主应用同域后有哪些优势和注意事项？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析iframe--proxy-隔离",children:["原理解析：iframe + Proxy 隔离",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析iframe--proxy-隔离",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["同域的 iframe 隔离和 ",(0,l.jsx)(i.code,{children:"about:blank"})," 的 iframe 隔离相比有什么优点和缺点？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如果想要解决同源 iframe 隔离中需要网络请求和服务端网关的问题，有没有什么解决方案呢？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何避免主子应用的路由产生冲突？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["iframe 的 ",(0,l.jsx)(i.code,{children:"src"})," 设置成 ",(0,l.jsx)(i.code,{children:"about:blank"})," 后如何解决 History API 报错的问题？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["为什么 iframe 的 ",(0,l.jsx)(i.code,{children:"src"})," 设置成 ",(0,l.jsx)(i.code,{children:"about:blank"})," 后 History API 会报错？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Proxy 常用的拦截操作有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["模块作用域中声明的 ",(0,l.jsx)(i.code,{children:"var"})," 变量是全局变量还是局部变量？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在函数作用域内声明的变量 ",(0,l.jsx)(i.code,{children:"var"})," 是全局变量还是局部变量？是否有方式可以将 ",(0,l.jsx)(i.code,{children:"var"})," 声明的变量通过 Proxy 进行拦截处理？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"with"})," + ",(0,l.jsx)(i.code,{children:"Proxy"})," 可以阻止作用域链查找吗？如何才能做到？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["代理后的 ",(0,l.jsx)(i.code,{children:"window"})," 对象执行 ",(0,l.jsx)(i.code,{children:"alert"}),"、",(0,l.jsx)(i.code,{children:"addEventListener"})," 等原生函数会存在什么问题？如何解决该问题？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["执行 ",(0,l.jsx)(i.code,{children:"bind"})," 操作有什么副作用吗？"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析快照隔离",children:["原理解析：快照隔离",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析快照隔离",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"快照隔离的思路是什么？"}),"\n",(0,l.jsx)(i.li,{children:"自执行匿名函数有什么特点？"}),"\n",(0,l.jsx)(i.li,{children:"将微应用放在自执行的匿名函数中运行可以解决隔离的哪些问题？又会产生什么问题？"}),"\n",(0,l.jsx)(i.li,{children:"通过 HTTP 请求获取的 JS 文本字符串有哪些手动执行的方式？"}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"eval"})," 和 ",(0,l.jsx)(i.code,{children:"Function"})," 存在哪些差异？"]}),"\n",(0,l.jsxs)(i.li,{children:["如何使 ",(0,l.jsx)(i.code,{children:"eval"})," 在全局作用域生效？"]}),"\n",(0,l.jsx)(i.li,{children:"简单描述快照隔离的实现过程？"}),"\n",(0,l.jsx)(i.li,{children:"快照隔离的限制有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析css-隔离",children:["原理解析：CSS 隔离",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析css-隔离",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"主应用和微应用在同一个 DOM 上下文时，实现 CSS 样式隔离的思路有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如果一个时刻只运行一个微应用，实现 CSS 样式隔离的方式有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"通过动态删除微应用的 Style 标签来减少样式影响面有什么限制的使用场景吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 Shadow DOM 中隔离 CSS 的优势是什么？有什么缺点吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 Shadow DOM 中运行低版本的 React 框架为什么会导致 React 事件失效？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析通信原理",children:["原理解析：通信原理",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析通信原理",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"观察者模式和发布 / 订阅模式的区别是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"列举浏览器中常见的观察者模式设计的通信案例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"列举常见的发布 / 订阅模式的通信案例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"MVC、MVP 和 MVVM 中会使用哪种模式进行通信？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Vue.js 的响应式设计中使用了哪种模式进行设计？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"简单描述一下观察者模式的概念？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"简单描述一下发布 / 订阅模式的概念？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在微前端中应该使用哪种模式进行通信？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"postMessage"})," 属于观察者模式还是发布 / 订阅模式？"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理解析性能优化",children:["原理解析：性能优化",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理解析性能优化",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"简述 HTTP 缓存的作用"}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Expires"})," 和 ",(0,l.jsx)(i.code,{children:"Cache-Control: max-age=N"})," 有什么区别？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Cache-Control: no-cache"})," 和 ",(0,l.jsx)(i.code,{children:"Cache-Control: no-store"})," 有什么区别？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Cache-Control: max-age=N"}),"和 ",(0,l.jsx)(i.code,{children:"Cache-Control: s-maxage=N"})," 有什么区别？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Expires"})," 在什么情况下缓存可能会计算错误？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Last-Modified"})," 和 ",(0,l.jsx)(i.code,{children:"Etag"})," 有什么区别？"]}),"\n",(0,l.jsxs)(i.li,{children:["使用 ",(0,l.jsx)(i.code,{children:"Last-Modified"})," 进行缓存可能会有哪些问题？"]}),"\n",(0,l.jsxs)(i.li,{children:["使用 ",(0,l.jsx)(i.code,{children:"Etag"})," 进行缓存有什么缺点吗？"]}),"\n",(0,l.jsx)(i.li,{children:"什么是 Resource Hints？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Early Hints?"}),"\n",(0,l.jsx)(i.li,{children:"SPA 的微前端应用中能使用 Resource Hints 中的 Prerender 功能吗？"}),"\n",(0,l.jsx)(i.li,{children:"什么是导航预加载，如何实现导航预加载？"}),"\n",(0,l.jsx)(i.li,{children:"Prefetch 缓存能被重复命中吗？"}),"\n",(0,l.jsx)(i.li,{children:"简述浏览器一帧（Frame）的执行过程?"}),"\n",(0,l.jsxs)(i.li,{children:["浏览器自带 Prefetch 的空闲时间 和 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 空闲时间有什么区别吗？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"requestAnimationFrame"})," 和 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 分别是在 Frame 的什么阶段执行？"]}),"\n",(0,l.jsxs)(i.li,{children:["递归调用\xa0",(0,l.jsx)(i.code,{children:"requestAnimationFrame"}),"\xa0会阻塞当前 Frame 的页面渲染吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["当前并行执行的微任务会阻塞\xa0",(0,l.jsx)(i.code,{children:"requestAnimationFrame"}),"\xa0的执行吗？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 回调中的 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 是在当前帧还是下一帧执行？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"requestAnimationFrame"})," 和 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 回调中的微任务会在什么时机执行？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 的最大执行时间为什么约为 50ms？超过该时间会有什么影响吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 的回调中执行任务时有哪些注意事项？"]}),"\n",(0,l.jsxs)(i.li,{children:["在\xa0",(0,l.jsx)(i.code,{children:"requestAnimationFrame"}),"\xa0和\xa0",(0,l.jsx)(i.code,{children:"requestIdleCallback"}),"\xa0中更改 DOM 合适吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["多个 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"}),"  并行运行时浏览器是如何分配运行时间的？"]}),"\n",(0,l.jsxs)(i.li,{children:["React 为什么需要任务调度？它的时间切片任务是在 ",(0,l.jsx)(i.code,{children:"requestIdleCallback"})," 中执行的吗？"]}),"\n",(0,l.jsx)(i.li,{children:"如何通过 JavaScript 手动模拟 Resource Hints 中的 Prefetch 和 Prerender 功能？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析single-spa-的-npm-示例",children:["框架解析：single-spa 的 NPM 示例",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析single-spa-的-npm-示例",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"什么是 single-spa，它的作用是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"简述一下 single-spa 的运行机制？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在主应用中加载微应用的方式有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"single-spa 的注册 API 有哪些参数？这些参数的作用是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 single-spa 中微应用可以分为哪几种类型？各自的作用是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在什么情况下需要使用 Parcel？什么情况下不推荐使用 Parcel?"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"简述在 single-spa 中激活和失活微应用的执行流程？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 single-spa 中首次激活激活微应用和再次激活微应用的执行流程有什么差异？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 single-spa 的微应用中可以提供哪些生命周期函数？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["如果同时存在需要激活和失活的微应用，那么会优先执行失活微应用的 ",(0,l.jsx)(i.code,{children:"unmount"})," 函数吗？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["什么情况下会执行 ",(0,l.jsx)(i.code,{children:"unload"})," 生命周期函数，执行 ",(0,l.jsx)(i.code,{children:"unload"})," 的作用是什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"single-spa 微应用和普通应用的入口设计存在什么差异？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["为什么普通应用不需要卸载应用的 DOM 处理？例如执行 Vue 实例的 ",(0,l.jsx)(i.code,{children:"unmount"}),"？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么 single-spa 微应用需要提供生命周期函数？如果不提供会有什么问题吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何构建微应用可以使得主应用在引入微应用时能够识别对应的生命周期函数？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"通过 NPM、动态 Script 以及 Fetch 请求加载微应用时，哪些加载方式可以支持 chunk 分离？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"什么是 Monorepo，它的作用是什么？什么是 Lerna，它有哪些功能？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"是否可以在 Lerna 中结合 Git 的 submodule 实现 single-spa 的源码引入调试？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何结合 React 的路由实现 single-spa 的 NPM 微前端示例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何实现 single-spa NPM 微前端示例的按需加载微应用能力？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["Webpack 的 ",(0,l.jsx)(i.code,{children:"import()"})," 动态加载模块时能够使用完全动态的表达式吗？例如 ",(0,l.jsx)(i.code,{children:"import(变量)"}),"?"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["Webpack 的 ",(0,l.jsx)(i.code,{children:"import()"})," 本质上是利用什么技术实现动态加载的？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"single-spa 的 NPM 方案中需要如何构建微应用？它的构建和库构建存在什么差异？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Web 应用和依赖的组件库都使用了 Lodash，如何使得 Web 应用只打包一次 Lodash ？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"组件库的构建需要排除所有的 NPM 包依赖吗？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析single-spa-的-script-示例",children:["框架解析：single-spa 的 Script 示例",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析single-spa-的-script-示例",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"方案了解：动态 Script 方案"}),"从通用性角度出发存在哪些设计缺陷？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在",(0,l.jsx)(i.strong,{children:"方案了解：动态 Script 方案"}),"中主应用如何获取微应用的生命周期函数？该获取方式会存在哪些问题？如何实现微应用的动态增加和删除？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"使用 single-spa 设计动态 Script 方案存在哪些优势？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在设计动态 Script 方案时，如果微应用需要遵循 single-spa 的生命周期函数命名规范，有哪些通用的设计方案可以使得主应用获取微应用的生命周期函数？这些设计方案各自有什么优缺点？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["主应用和 ",(0,l.jsx)(i.code,{children:"<script>"})," 脚本加载的微应用如何实现通信？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["主应用和 ",(0,l.jsx)(i.code,{children:"<script>"})," 脚本加载的微应用可以通过 ",(0,l.jsx)(i.code,{children:"LocalStorage"})," 实现通信吗？",(0,l.jsx)(i.code,{children:"LocalStorage"})," 能够存储微应用的生命周期函数吗？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何对全局属性进行创建之前后的防冲突处理？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["除了使用 ",(0,l.jsx)(i.code,{children:"<script>"})," 的 ",(0,l.jsx)(i.code,{children:"onload"})," 事件，主应用有什么方式可以更快的感知到微应用的脚本执行情况？"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析single-spa-的-fetch-示例",children:["框架解析：single-spa 的 Fetch 示例",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析single-spa-的-fetch-示例",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["在 qiankun 中配置 Webpack 的 ",(0,l.jsx)(i.code,{children:"output.library"})," 和 ",(0,l.jsx)(i.code,{children:"output.libraryTarget"})," 有什么作用？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Webpack 中 ",(0,l.jsx)(i.code,{children:"output.library"})," 配置的作用是什么？"]}),"\n",(0,l.jsxs)(i.li,{children:["简述构建 ",(0,l.jsx)(i.code,{children:"output.library"})," 之后 Webpack 的 ES Module 导出的运行时原理？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Webpack 构建后的运行时代码中 ",(0,l.jsx)(i.code,{children:"__webpack_modules__"}),"、",(0,l.jsx)(i.code,{children:"__webpack_require__"})," 和 ",(0,l.jsx)(i.code,{children:"__webpack_exports__"})," 各自的作用是什么？"]}),"\n",(0,l.jsx)(i.li,{children:"Webpack 构建后的代码是如何建立模块化作用域的？"}),"\n",(0,l.jsxs)(i.li,{children:["Webpack 开发态构建后源代码模块对应的构建代码为什么在 ",(0,l.jsx)(i.code,{children:"eval"})," 中执行？"]}),"\n",(0,l.jsxs)(i.li,{children:["Chrome DevTools 如何识别出 ",(0,l.jsx)(i.code,{children:"eval"})," 中的代码并实现调试能力？"]}),"\n",(0,l.jsx)(i.li,{children:"Webpack 如何配置才能实现和源码一致的调试能力？"}),"\n",(0,l.jsxs)(i.li,{children:["Webpack 的 ",(0,l.jsx)(i.code,{children:"devtool"})," 有哪些配置选项，这些选项有什么特性？"]}),"\n",(0,l.jsxs)(i.li,{children:["构建后生成的 ",(0,l.jsx)(i.code,{children:".map"})," 后缀文件有什么作用？"]}),"\n",(0,l.jsxs)(i.li,{children:["在生产模式下建议生成 ",(0,l.jsx)(i.code,{children:".map"})," 文件吗？为什么？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Webpack 中 ",(0,l.jsx)(i.code,{children:"output.libraryTarget"})," 配置的作用是什么？"]}),"\n",(0,l.jsx)(i.li,{children:"什么是 UMD？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"Webpack 构建时可以引入 UMD 规范的模块吗？它是通过什么方式来识别该模块的？"}),"\n",(0,l.jsxs)(i.li,{children:["如何按属性的添加顺序遍历 ",(0,l.jsx)(i.code,{children:"window"})," 对象的属性？"]}),"\n",(0,l.jsxs)(i.li,{children:["为什么配置 ",(0,l.jsx)(i.code,{children:"output.libraryTarget"})," 后可以实现更加解耦的微应用生命周期函数获取？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"Object.keys"})," 和 ",(0,l.jsx)(i.code,{children:"for...in"})," 的区别是什么？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Fetch 示例中获取微应用的 JS 文本后，除了使用 ",(0,l.jsx)(i.code,{children:"eval"})," 还有哪些可行的执行脚本方案？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 qiankun 中为什么使用 ",(0,l.jsx)(i.code,{children:"eval"})," 而不是 ",(0,l.jsx)(i.code,{children:"<script>"})," 执行脚本？"]}),"\n",(0,l.jsxs)(i.li,{children:["如何确保微应用配置 ",(0,l.jsx)(i.code,{children:"output.library"})," 时的唯一性？"]}),"\n",(0,l.jsx)(i.li,{children:"使用 Fetch 请求微应用的 JS 资源时需要考虑跨域吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析single-spa-的-code-splitting-示例",children:["框架解析：single-spa 的 Code Splitting 示例",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析single-spa-的-code-splitting-示例",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是代码分割？它的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"常见的代码分割包含哪几种情况？各自有什么使用场景？"}),"\n",(0,l.jsx)(i.li,{children:"有什么可视化工具可以指导我们对构建产物进行分析和构建优化？"}),"\n",(0,l.jsx)(i.li,{children:"使用服务端 Node 托管静态资源时，重启 Node 服务会对资源的 HTTP 缓存产生影响吗？"}),"\n",(0,l.jsx)(i.li,{children:"多应用多入口时可以使用 Webpack 的哪些配置抽离复用代码？如何实现自定义分割？"}),"\n",(0,l.jsx)(i.li,{children:"多应用多入口情况下分离可复用代码有哪些优势？再次构建又会有什么优势？"}),"\n",(0,l.jsx)(i.li,{children:"如何实现 Vue 或者 React 框架的路由按需加载？"}),"\n",(0,l.jsxs)(i.li,{children:["使用 ",(0,l.jsx)(i.code,{children:"import()"})," 动态导入进行代码分割需要进行 Webpack 配置吗？"]}),"\n",(0,l.jsx)(i.li,{children:"在 Webpack 的运行时原理中为什么需要对模块进行缓存？如果模块被多次导入缓存能起到什么作用？"}),"\n",(0,l.jsxs)(i.li,{children:["使用 ",(0,l.jsx)(i.code,{children:"import()"})," 动态导入进行代码构建后最终是通过什么方式加载分割的脚本的？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Webpack 运行时中如果使用 ",(0,l.jsx)(i.code,{children:"import()"})," 动态导入后的分割代码加载失败，会进行加载重试吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["在 Webpack 运行时中如何计算分割脚本的 ",(0,l.jsx)(i.code,{children:"publicPath"}),"？该配置是否可以指定？"]}),"\n",(0,l.jsx)(i.li,{children:"在 Webpack 运行时中主文件的模块化映射对象如何添加异步分割文件的模块化映射对象？"}),"\n",(0,l.jsx)(i.li,{children:"在 Webpack 运行时中主文件和异步分割文件是如何实现通信的？"}),"\n",(0,l.jsx)(i.li,{children:"在 Webpack 运行时中如果加载分割脚本超时，会进行超时重试吗？"}),"\n",(0,l.jsxs)(i.li,{children:["简述使用 ",(0,l.jsx)(i.code,{children:"import()"})," 动态导入进行代码分割的 Webpack 运行时原理？"]}),"\n",(0,l.jsxs)(i.li,{children:["Webpack 的 ",(0,l.jsx)(i.code,{children:"output.chunkLoadingGlobal"})," 配置在代码分割中有什么作用？"]}),"\n",(0,l.jsxs)(i.li,{children:["按需加载的本质是什么？是通过 ",(0,l.jsx)(i.code,{children:"fetch"})," 或者 ",(0,l.jsx)(i.code,{children:"<script>"})," 进行动态加载?"]}),"\n",(0,l.jsx)(i.li,{children:"在微前端中加载具备代码分割的微应用时，有哪些注意事项？"}),"\n",(0,l.jsx)(i.li,{children:"微应用中代码分割的脚本是否需要按顺序执行？"}),"\n",(0,l.jsxs)(i.li,{children:["在微前端中微应用使用 ",(0,l.jsx)(i.code,{children:"import()"})," 进行加载时，有哪些注意事项？"]}),"\n",(0,l.jsxs)(i.li,{children:["在微前端中如果两个微应用配置了相同的 ",(0,l.jsx)(i.code,{children:"output.chunkLoadingGlobal"})," 会有什么问题？"]}),"\n",(0,l.jsxs)(i.li,{children:["如何确保微应用的 ",(0,l.jsx)(i.code,{children:"output.chunkLoadingGlobal"})," 配置的唯一性？"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析single-spa-源码解析",children:["框架解析：single-spa 源码解析",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析single-spa-源码解析",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"registerApplication"})," 注册函数的作用是什么？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"registerApplication"})," 注册函数需要在主应用的什么执行阶段使用？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"registerApplication"})," 有哪些入参，这些入参各自有什么作用？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"registerApplication"})," 有哪些调用方式？各自有什么优缺点？"]}),"\n",(0,l.jsx)(i.li,{children:"在 single-spa 中主应用和微应用是如何实现通信的？"}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"registerApplication"})," 函数在注册期间的主要作用是什么？"]}),"\n",(0,l.jsx)(i.li,{children:"single-spa 如何判断微应用是否需要激活？"}),"\n",(0,l.jsxs)(i.li,{children:["single-spa 对微应用进行激活判断时是否支持动态路由 ",(0,l.jsx)(i.code,{children:"/react/:id"}),"？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"start"})," 函数的作用是什么？需要在主应用的什么阶段使用？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"reroute"})," 函数的作用是什么？"]}),"\n",(0,l.jsx)(i.li,{children:"single-spa 如何判断哪些微应用需要卸载、加载、启动和挂载？"}),"\n",(0,l.jsx)(i.li,{children:"single-spa 在什么情况下会执行微应用的加载？"}),"\n",(0,l.jsx)(i.li,{children:"single-spa 批量执行微应用的生命周期函数时会有执行顺序的要求吗？为什么？"}),"\n",(0,l.jsx)(i.li,{children:"为什么所有微应用的生命周期函数需要在异步微任务中执行？"}),"\n",(0,l.jsxs)(i.li,{children:["在 single-spa 中为什么要延迟执行导航事件 ",(0,l.jsx)(i.code,{children:"popstate"})," 和 ",(0,l.jsx)(i.code,{children:"hashchange"}),"?"]}),"\n",(0,l.jsxs)(i.li,{children:["single-spa 内部如何延迟执行导航事件 ",(0,l.jsx)(i.code,{children:"popstate"})," 和 ",(0,l.jsx)(i.code,{children:"hashchange"}),"?"]}),"\n",(0,l.jsxs)(i.li,{children:["single-spa 在什么情况下会延迟执行 ",(0,l.jsx)(i.code,{children:"reroute"}),"，为什么要延迟执行？"]}),"\n",(0,l.jsx)(i.li,{children:"single-spa 如何监听 React 或者 Vue 框架的路由变化？"}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"toLoadPromise"})," 的执行时机有哪些？"]}),"\n",(0,l.jsxs)(i.li,{children:["什么情况下需要执行 ",(0,l.jsx)(i.code,{children:"unloadApplication"}),"？"]}),"\n",(0,l.jsx)(i.li,{children:"single-spa 如何管控外部微应用生命周期函数执行的稳定性？"}),"\n",(0,l.jsx)(i.li,{children:"single-spa 的微应用在什么时机执行代码比较合适？"}),"\n",(0,l.jsxs)(i.li,{children:["为什么需要 ",(0,l.jsx)(i.code,{children:"start"})," 函数？"]}),"\n",(0,l.jsx)(i.li,{children:"简述 single-spa 的初始化激活微应用的执行流程？"}),"\n",(0,l.jsxs)(i.li,{children:["在 ",(0,l.jsx)(i.code,{children:"loadApps"})," 和 ",(0,l.jsx)(i.code,{children:"performAppChanges"})," 中各自执行 ",(0,l.jsx)(i.code,{children:"toLoadPromise"})," 的作用是什么？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"hashchagne"})," 和 ",(0,l.jsx)(i.code,{children:"popstate"})," 事件分别会在什么情况下触发？两者有什么区别？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"history.pushState"})," 或者 ",(0,l.jsx)(i.code,{children:"history.replaceState"})," 会触发 ",(0,l.jsx)(i.code,{children:"popstate"})," 事件吗？为什么？"]}),"\n",(0,l.jsx)(i.li,{children:"在浏览器的标签页中 Web 应用包含哪些状态和事件？"}),"\n",(0,l.jsx)(i.li,{children:"在 single-spa 的运行中包含哪些微应用的状态和事件？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析qiankun-使用示例",children:["框架解析：qiankun 使用示例",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析qiankun-使用示例",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"qiankun 和 single-spa 注册微应用时有哪些区别？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"qiankun 注册微应用相对 single-spa 存在什么优势？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"qiankun 注册微应用的各个参数的含义是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["qiankun 注册微应用的 ",(0,l.jsx)(i.code,{children:"entry.html"})," 和 ",(0,l.jsx)(i.code,{children:"container"})," 有什么区别？各自的作用是什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"qiankun 和 single-spa 在加载微应用时有什么区别？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 single-spa 中实现代码分割时可以抽离微应用的 CSS 样式吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 single-spa 中通过 JS 地址加载微应用有什么缺陷？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 qiankun 中通过配置 HTML 地址的方式加载微应用存在哪些优势？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 qiankun 中配置 ",(0,l.jsx)(i.code,{children:"entry"})," 为 HTML 地址和配置 ",(0,l.jsx)(i.code,{children:"entry"})," 对象有什么区别？"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"框架解析import-html-entry-源码解析",children:["框架解析：import-html-entry 源码解析",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#框架解析import-html-entry-源码解析",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["什么是 ",(0,l.jsx)(i.code,{children:"import-html-entry"}),"，它和 qiankun 的关系是什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"import-html-entry"})," 的作用是什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"import-html-entry"})," 提供了哪两种微应用加载的配置方式？各自有什么优势和劣势？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"import-html-entry"})," 提供了哪些可以使用的 API?"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Chrome 浏览器支持哪些新的 ES 语法特性？它支持执行 TypeScript 吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"import-html-entry"})," 如何配合 single-spa 实现微前端中微应用的加载？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 single-spa 中使用 ",(0,l.jsx)(i.code,{children:"import-html-entry"})," 存在哪些好处？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 ",(0,l.jsx)(i.code,{children:"import-html-entry"})," 中 ",(0,l.jsx)(i.code,{children:"importHTML"})," 和 ",(0,l.jsx)(i.code,{children:"importEntry"})," 的区别是什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"HTML Entry"})," 相对于 ",(0,l.jsx)(i.code,{children:"Config Entry"})," 存在哪些劣势和优势？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["简述 ",(0,l.jsx)(i.code,{children:"importHTML"})," 和 ",(0,l.jsx)(i.code,{children:"importEntry"})," 的内部执行流程？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["简述 ",(0,l.jsx)(i.code,{children:"processTpl"})," 是如何解析 HTML 文本的？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 在解析 HTML 的时候会提取内联样式吗？为什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 在解析 ",(0,l.jsx)(i.code,{children:"<link>"})," 标签时如何处理 ",(0,l.jsx)(i.code,{children:"preload"})," 和 ",(0,l.jsx)(i.code,{children:"prefetch"}),"？为什么？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 在解析 ",(0,l.jsx)(i.code,{children:"<script>"})," 标签时如何识别微应用的入口文件？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 在解析 ",(0,l.jsx)(i.code,{children:"<script>"})," 标签时如何处理内联脚本？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 在解析 ",(0,l.jsx)(i.code,{children:"<script>"})," 标签时如何处理 ",(0,l.jsx)(i.code,{children:"async"})," 和 ",(0,l.jsx)(i.code,{children:"crossogigin"})," 脚本？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"<script>"})," 的 ",(0,l.jsx)(i.code,{children:"type=text/ng-template"})," 的作用是什么？ ",(0,l.jsx)(i.code,{children:"processTpl"})," 如何处理此类脚本？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"processTpl"})," 如果没有在 解析 ",(0,l.jsx)(i.code,{children:"<script>"})," 标签时识别到入口文件？它最终是如何确定入口文件的？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"getEmbedHTML"})," 的作用是什么？为什么需要将样式内嵌到微应用的 HTML 文本中？它对微应用的加载和卸载有什么作用吗？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["通过 ",(0,l.jsx)(i.code,{children:"getExternalScripts"})," 批量请求 JavaScript 的脚本时，如何处理 ",(0,l.jsx)(i.code,{children:"async"})," 和 ",(0,l.jsx)(i.code,{children:"crossogigin"})," 脚本？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"请求微应用的 HTML、JS 和 CSS 时有哪些注意事项？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["通过 ",(0,l.jsx)(i.code,{children:"execScripts"})," 批量执行脚本时，如何从入口脚本识别微应用导出的生命周期函数？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 ",(0,l.jsx)(i.code,{children:"execScripts"})," 中执行脚本时如何才能实现沙箱隔离？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 ",(0,l.jsx)(i.code,{children:"execScripts"})," 中执行脚本时为什么可以直接使用 ",(0,l.jsx)(i.code,{children:"with"}),"？如果执行脚本本身的环境在严格模式下呢？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["在 ",(0,l.jsx)(i.code,{children:"execScripts"})," 中执行脚本时如何确保 ",(0,l.jsx)(i.code,{children:"proxy"})," 挂载在主应用的 ",(0,l.jsx)(i.code,{children:"window"})," 对象上？如何确保内部执行代码 ",(0,l.jsx)(i.code,{children:"window.proxy"})," 的 ",(0,l.jsx)(i.code,{children:"window"})," 指向全局对象？"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"(0, eval)"})," 有什么作用？"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计构建工具",children:["工程设计：构建工具",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计构建工具",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Web 应用的构建需要具备哪些构建特性？"}),"\n",(0,l.jsx)(i.li,{children:"在 Webapck 中进行语法转译可以使用什么工具？"}),"\n",(0,l.jsxs)(i.li,{children:["Web 应用在进行打包时为什么希望忽略 ",(0,l.jsx)(i.code,{children:"node_modules"})," 中的库包转译？"]}),"\n",(0,l.jsx)(i.li,{children:"Webpack 构建的 JavaScript 脚本具有什么特性？"}),"\n",(0,l.jsx)(i.li,{children:"Webpack 进行代码分离的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"Webpack 默认能对 ES6+ 进行 ES5 编译吗？"}),"\n",(0,l.jsx)(i.li,{children:"库的设计为什么需要构建工具？如果不构建会有什么影响？"}),"\n",(0,l.jsx)(i.li,{children:"库的设计在进行构建时需要具备哪些特性？"}),"\n",(0,l.jsx)(i.li,{children:"如何设计一个库可以支持应用在构建时使用 Tree Shaking 特性？"}),"\n",(0,l.jsx)(i.li,{children:"构建工具的类型有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"列举常用的打包工具和转译工具？"}),"\n",(0,l.jsx)(i.li,{children:"如果使用打包工具设计库构建，需要考虑哪些构建配置处理，对比 Web 应用的构建存在什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"打包工具和转译工具有什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"组件库和工具库的构建存在什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"使用转译工具设计库包的按需加载有哪些优势？"}),"\n",(0,l.jsx)(i.li,{children:"支持 TypeScript 转译的工具有哪些？各自有什么特点？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计按需加载",children:["工程设计：按需加载",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计按需加载",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"为什么在库的设计中需要考虑按需加载？"}),"\n",(0,l.jsx)(i.li,{children:"哪些类型的库不需要考虑实现按需加载？"}),"\n",(0,l.jsxs)(i.li,{children:["哪些打包工具可以识别\xa0",(0,l.jsx)(i.code,{children:"package.json"}),"\xa0中的\xa0",(0,l.jsx)(i.code,{children:"module"}),"\xa0字段呢？"]}),"\n",(0,l.jsxs)(i.li,{children:["如何使 Node 脚本支持 TypeScript 的语法设计？此时它的 ",(0,l.jsx)(i.code,{children:"tsconfig.json"})," 如何配置呢?"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"gulp-typescript"})," 具备类型检查的能力吗？在构建时能够自动产出声明文件吗？"]}),"\n",(0,l.jsxs)(i.li,{children:["如何向 ",(0,l.jsx)(i.code,{children:"package.json"})," 的 script 中的 node 脚本设置环境变量或者传递参数？"]}),"\n",(0,l.jsx)(i.li,{children:"如何实现平铺构建产物？需要考虑哪些内容的平铺处理？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计版本发布",children:["工程设计：版本发布",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计版本发布",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"package.json"})," 中的字段有哪些？各自有什么作用？"]}),"\n",(0,l.jsx)(i.li,{children:"描述一下发布 NPM 库包的完整流程？"}),"\n",(0,l.jsx)(i.li,{children:"如何查询库包已经发布的最新版本？如何进行本地版本和发布版本的比较？"}),"\n",(0,l.jsx)(i.li,{children:"在多人协作的过程中如何对库包的发布进行管控从而提高发布的稳定性？"}),"\n",(0,l.jsx)(i.li,{children:"在 Github 中如何设置一个受保护的分支？使其不能被 push 或者强制 push 代码到远程？"}),"\n",(0,l.jsx)(i.li,{children:"如何设计一个 Node 脚本来判断本地和远程的 master 分支代码一致？"}),"\n",(0,l.jsx)(i.li,{children:"semver 2.0 中的三位数版本号中 X.Y.Z 各自代表什么含义？"}),"\n",(0,l.jsx)(i.li,{children:"什么情况下需要发布 X、Y 和 Z 版本号？"}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"package-lock.json"})," 在什么情况下会生成？"]}),"\n",(0,l.jsx)(i.li,{children:"库包中的依赖类型有哪些？生产依赖和开发依赖相对于发布的库包有什么区别？"}),"\n",(0,l.jsxs)(i.li,{children:["semver 通配符中常见的 ",(0,l.jsx)(i.code,{children:"^1.0.0"}),"、",(0,l.jsx)(i.code,{children:"~1.0.0"})," 是什么含义？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"npm i"})," 安装库包时能够自动升级库包的 X 版本号吗？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"package-lock.json"})," 的作用是什么，使用它有什么好处？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"package-lock.json"})," 建议被提交到远程仓库吗？"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"npm i"})," 和 ",(0,l.jsx)(i.code,{children:"npm ci"})," 的区别是什么？"]}),"\n",(0,l.jsxs)(i.li,{children:["在有 ",(0,l.jsx)(i.code,{children:"package-lock.json"})," 的情况下如何对单独的库包进行版本升级？"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计代码检查",children:["工程设计：代码检查",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计代码检查",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是代码检查？为什么需要在 JavaScript 中进行代码检查？"}),"\n",(0,l.jsx)(i.li,{children:"代码检查的工具有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 和 TSLint 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"TypeScript 为什么要全面从 TSLint 转向 ESLint?"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 中的配置文件类型有哪些？各自的优先级是什么？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 中的层叠配置有什么作用？能否举个可实践的例子？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 的自定义解析器有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 的插件有什么作用？如何基于插件进行规则设置？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 的日志风格有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 的共享配置有什么作用？能否举一个最佳实践的例子？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 的共享配置能否配合 ESLint 插件使用？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 中的解析器、插件和共享配置的差异是什么？"}),"\n",(0,l.jsx)(i.li,{children:"如果让你设计一套代码风格指南，并配合 ESLint 工具进行约束，你会如何设计？"}),"\n",(0,l.jsx)(i.li,{children:"如何在写代码时实时获取 ESLint 校验提示信息？有哪些可行的方案？"}),"\n",(0,l.jsx)(i.li,{children:"在 VS Code 的 ESLint 插件中如果有校验错误信息，VS Code 会如何表现出来？"}),"\n",(0,l.jsx)(i.li,{children:"如何实现 VS Code 的 ESLint 插件的自动保存格式化功能？"}),"\n",(0,l.jsx)(i.li,{children:"VS Code 的配置有哪两种类型？如何在团队内共享 VS Code 的 ESLint 配置？"}),"\n",(0,l.jsx)(i.li,{children:"如何确保构建的代码没有 ESLint 错误？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计代码格式",children:["工程设计：代码格式",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计代码格式",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"为什么需要使用 Prettier 进行代码格式化？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 和 Prettier 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 代码检查的规则可以分为哪两种类型？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 中哪种类型的规则可以通过格式化一键修复？"}),"\n",(0,l.jsx)(i.li,{children:"ESLint 和 Prettier 组合使用时如果有规则冲突，应该如何处理？"}),"\n",(0,l.jsx)(i.li,{children:"如何检查项目中的 ESLint 和 Prettier 是否存在规则冲突？"}),"\n",(0,l.jsx)(i.li,{children:"Prettier 在 VS Code 中会有提示信息吗？"}),"\n",(0,l.jsx)(i.li,{children:"如何实现 Prettier 插件的保存自动格式化功能？"}),"\n",(0,l.jsx)(i.li,{children:"Prettier 在库构建时建议一键格式化处理吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计提交规范",children:["工程设计：提交规范",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计提交规范",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是 Git 钩子？"}),"\n",(0,l.jsx)(i.li,{children:"如何才能跳过本地的 Git 钩子执行？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Shebang？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"在 Git 钩子中可以使用 Node 脚本进行设计吗？"}),"\n",(0,l.jsx)(i.li,{children:"Git 钩子的类型有哪些？Git 钩子有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"团队协作中在本地设计 Git 钩子会有什么问题？"}),"\n",(0,l.jsx)(i.li,{children:"社区用于增强 Git 钩子的工具有哪些？为什么需要设计这些增强工具？"}),"\n",(0,l.jsx)(i.li,{children:"如何设计一个 Git 钩子可以在检测 ESLint 失败后放弃提交代码？"}),"\n",(0,l.jsxs)(i.li,{children:["Git 钩子的默认生效目录 ",(0,l.jsx)(i.code,{children:".git/hooks"})," 可以被更改吗？"]}),"\n",(0,l.jsx)(i.li,{children:"如何设计一个可共享 Git 钩子目录的 Git 项目？"}),"\n",(0,l.jsx)(i.li,{children:"NPM 的 Life Cycle Scripts（Script 钩子）有哪些？各自有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"如何将 NPM 包封住成 CLI 工具？如何基于 Node 设计 CLI 工具？"}),"\n",(0,l.jsx)(i.li,{children:"npm 和 npx 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"简述 husky 的工作原理？"}),"\n",(0,l.jsx)(i.li,{children:"如何共享一个 Git 钩子，可以使得 ESLint 校验失败后放弃代码提交？"}),"\n",(0,l.jsx)(i.li,{children:"简述 lint-staged 的工作原理？"}),"\n",(0,l.jsx)(i.li,{children:"lint-staged 检测是暂存区所在的文件还是暂存区中变化的代码？"}),"\n",(0,l.jsx)(i.li,{children:"如何使用 Node 脚本获取 Git 暂存区的文件列表？"}),"\n",(0,l.jsx)(i.li,{children:"相对于普通的 ESLint 校验，使用 lint-staged 的好处是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计变更日志",children:["工程设计：变更日志",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计变更日志",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是 Git 的提交说明，它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"提交说明和变更日志有什么关联关系？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Angular 规范的提交说明？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范的提交说明包含哪几个部分？"}),"\n",(0,l.jsx)(i.li,{children:"Angualr 规范的 Header 中包含哪几个字段信息？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范中 Header 的提交类型 type 有哪些？哪些类型必须放入变更日志？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范中 Header 的 scope 可以根据哪些维度进行范围划分？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范中 Header 的 subject 书写有哪些注意事项？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范中 Body 是必须说明的吗？Body 的书写有哪些注意事项？"}),"\n",(0,l.jsx)(i.li,{children:"Angular 规范中 Footer 的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"如何使用 commitizen 才能生成符合 Angular 规范的提交说明？"}),"\n",(0,l.jsx)(i.li,{children:"commitizen 为什么需要适配器？"}),"\n",(0,l.jsx)(i.li,{children:"cz-conventional-changelog 适配器有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"commitizen 可以同时使用多个适配器吗？"}),"\n",(0,l.jsx)(i.li,{children:"简述 commitizen 的工作原理？"}),"\n",(0,l.jsxs)(i.li,{children:["git 命令中 ",(0,l.jsx)(i.code,{children:"--allow-empty"}),"、",(0,l.jsx)(i.code,{children:"--amend"}),"、",(0,l.jsx)(i.code,{children:"--retry"})," 参数的作用是什么？"]}),"\n",(0,l.jsx)(i.li,{children:"简述 cz-conventional-changelog 适配器的工作原理？"}),"\n",(0,l.jsx)(i.li,{children:"cz-conventional-changelog 中 Angular 规范的 type 可以定制吗？"}),"\n",(0,l.jsx)(i.li,{children:"结合 commitizen、Webpack 以及 Vue CLI 描述一下通用插件的设计思路？"}),"\n",(0,l.jsx)(i.li,{children:"如何对 Angular 规范的提交说明进行汉化处理？"}),"\n",(0,l.jsx)(i.li,{children:"如何在团队开发的过程中使大家都可以强制遵循 Angular 规范的提交说明？"}),"\n",(0,l.jsx)(i.li,{children:"commitlint 的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"使用 commitlint 校验的好处是什么？"}),"\n",(0,l.jsx)(i.li,{children:"开发者有什么方式可以绕过 commitlint 校验？"}),"\n",(0,l.jsx)(i.li,{children:"如何自动生成变更日志？"}),"\n",(0,l.jsx)(i.li,{children:"在 Git 中如果使用相同的提交说明重复提交，有没有什么方式可以合并提交说明？"}),"\n",(0,l.jsx)(i.li,{children:"合并提交说明的好处是什么？"}),"\n",(0,l.jsx)(i.li,{children:"变更日志的作用是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计单元测试",children:["工程设计：单元测试",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计单元测试",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"为什么需要单元测试？它的作用有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"除了单元测试，你还知道哪些和前端息息相关的测试类型？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"单元测试和 e2e 测试的区别是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"你所了解的测试框架有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Jest 测试框架有哪些特性?"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何设计插入排序算法的测试用例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"TDD 和 BDD 的差异是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"测试套件、测试用例和断言各自有什么作用？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Jest 中断言函数提供的匹配器有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Jest 有哪些支持 TypeScrip 开发的配置类型？各自有什么优缺点？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"测试目录的放置风格有哪些？各自有什么优缺点？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 TypeScript 和 Jest 中如何配置路径映射？路径映射的好处是什么？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 Jest 中如何确保大部分源码可以被测试覆盖？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 Jest 中测试覆盖率的覆盖类型有哪些？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在 ESLint 中如何支持校验 Jest 测试代码？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"VS Code 插件 Jest 有哪些功能？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何使得源代码可以实时展示测试覆盖率百分比？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何实时知道源代码中哪些代码没有被测试覆盖？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何使得测试代码实现保存自动执行测试用例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何防止含有失败测试用例的源代码被提交到远程仓库？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"在提交代码时如何实现只执行改动源码相关的测试用例？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何防止含有失败测试用例的代码被发布版本？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计文档设计",children:["工程设计：文档设计",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计文档设计",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"库的文档一般需要包含哪些内容说明？"}),"\n",(0,l.jsx)(i.li,{children:"列举你所了解的静态网站生成器？"}),"\n",(0,l.jsx)(i.li,{children:"如何将编写的 Markdown 文档转换成 HTML?"}),"\n",(0,l.jsx)(i.li,{children:"VuePress 具有哪些特点？和其它站点生成器相比有什么独特的地方？"}),"\n",(0,l.jsx)(i.li,{children:"如何将之前设计的变更日志快速集成到 VuePress 中？"}),"\n",(0,l.jsx)(i.li,{children:"VuePress 支持在 Markdown 中使用 Vue 有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"如何对 Markdown 文档进行格式规范校验？"}),"\n",(0,l.jsx)(i.li,{children:"是否有必要在代码提交时对 Markdown 进行格式校验？"}),"\n",(0,l.jsx)(i.li,{children:"列举你所了解的注释标准？"}),"\n",(0,l.jsx)(i.li,{children:"TSDoc 注释标准有什么特点？"}),"\n",(0,l.jsx)(i.li,{children:"TSDoc 和 JSDoc 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"TSDoc 具备自己的文档生成器吗？"}),"\n",(0,l.jsx)(i.li,{children:"TSDoc 的注释标签类型有哪些？各自有什么特点？"}),"\n",(0,l.jsx)(i.li,{children:"如何快速生成支持 TSDoc 标准的注释？"}),"\n",(0,l.jsx)(i.li,{children:"支持 TSDoc 标准的文档生成器有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"TypeDoc 文档生成器有什么特点？"}),"\n",(0,l.jsx)(i.li,{children:"如何将 TypeDoc 生成的文档集成到 VuePress 中？"}),"\n",(0,l.jsx)(i.li,{children:"如何在 Github 中托管静态网页？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计ci--cd",children:["工程设计：CI / CD",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计ci--cd",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是 CI 和 CD，它们有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"使用 CI 和 CD 的好处有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"持续交付和持续部署有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"Web 应用和 NPM 包开发在 CI 和 CD 流程各自可执行的动作包括哪些？"}),"\n",(0,l.jsx)(i.li,{children:"Web 应用和 NPM 包开发在 CD 流程的设计上有什么差异？"}),"\n",(0,l.jsx)(i.li,{children:"列举你所了解的 CI / CD 平台？"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 有什么特点？相对于其它 CI / CD 平台的优势是什么？"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 包含哪些组成部分？"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 中的工作流有哪些触发事件？"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 中的 Job 默认是并行还是串行执行?"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 中的 Step 和 Action 可以并行执行吗？"}),"\n",(0,l.jsx)(i.li,{children:"Github Actions 中的 Action 可以使用 Node 进行设计吗？"}),"\n",(0,l.jsx)(i.li,{children:"列举你认为可以封装的通用型 Action？"}),"\n",(0,l.jsx)(i.li,{children:"CI 工作流程可以基于哪些事件进行触发？"}),"\n",(0,l.jsxs)(i.li,{children:["在 CI 流程中使用 ",(0,l.jsx)(i.code,{children:"npm ci"})," 和 ",(0,l.jsx)(i.code,{children:"npm i"})," 有什么区别？"]}),"\n",(0,l.jsx)(i.li,{children:"如何加快 CI 流程的执行速度？"}),"\n",(0,l.jsx)(i.li,{children:"项目在本地利用 Git 钩子检测和在远程使用 CI / CD 检测有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"如何实时感知 CI / CD 的执行状态？"}),"\n",(0,l.jsx)(i.li,{children:"Github Action 失败后能否禁用 Merge Pull Request 操作？"}),"\n",(0,l.jsx)(i.li,{children:"在开发中可以设计哪些和 Issues 或者 Pull Request 息息相关的自动化操作？"}),"\n",(0,l.jsx)(i.li,{children:"在 Coveralls 上传 Jest 测试报告的好处有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"在 CD 中进行文档部署的好处有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"在远程的 CD 服务器上如何实现 NPM 免登？"}),"\n",(0,l.jsx)(i.li,{children:"NPM 的 token 主要分为哪几种类型？适合 CD 流程的是哪一种 token 类型？"}),"\n",(0,l.jsx)(i.li,{children:"如何在本地进行 NPM 非登录态的 token 认证?"}),"\n",(0,l.jsx)(i.li,{children:"如何避免在 CD 流程中暴露 NPM 的 token 信息？"}),"\n",(0,l.jsx)(i.li,{children:"在 Github Actions 中合并分支可以使用什么事件触发工作流？"}),"\n",(0,l.jsx)(i.li,{children:"库包的 CI / CD 设计有哪些流程是可以重叠的？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"工程设计readme-说明",children:["工程设计：README 说明",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#工程设计readme-说明",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"什么是 README，它有什么作用？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"一个完整的 README 文档应该包含哪些说明信息？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何给 README 说明添加徽章？可以添加哪些徽章？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何给 Github Actions 的 CI / CD 流程添加执行结果徽章？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何生成单元测试覆盖率徽章？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何生成版本信息、NPM 包下载量、包大小等徽章？"}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"如何生成自定义徽章？"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理进阶浏览器的线程和任务",children:["原理进阶：浏览器的线程和任务",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理进阶浏览器的线程和任务",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"简述 Chrome 浏览器多线程架构的优点？"}),"\n",(0,l.jsx)(i.li,{children:"Renderer 进程中有哪些线程？"}),"\n",(0,l.jsx)(i.li,{children:"简述 Chrome 线程中的任务执行机制？"}),"\n",(0,l.jsx)(i.li,{children:"Renderer 主线程组要负责哪些任务工作？"}),"\n",(0,l.jsx)(i.li,{children:"如何查看浏览器中页面的执行任务？"}),"\n",(0,l.jsx)(i.li,{children:"Web 页面中的 JavaScript 为什么是单线程的运行模式？"}),"\n",(0,l.jsx)(i.li,{children:"Web 页面中的 JavaScript 编译执行和 UI 渲染为什么需要互斥？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理进阶v8-的编译原理",children:["原理进阶：V8 的编译原理",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理进阶v8-的编译原理",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"什么是解释器？什么是编译器？两者有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"前端和后端编译器的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"中间表示 IR 的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"优化编译器如何实现对代码的编译优化？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 JIT，它有什么优缺点？"}),"\n",(0,l.jsx)(i.li,{children:"解释器、传统编译器和 JIT 编译器有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"解释器和 JIT 编译器的混合使用有什么优势？"}),"\n",(0,l.jsx)(i.li,{children:"早期的 JavaScript 为什么采用解释执行的方式运行？"}),"\n",(0,l.jsx)(i.li,{children:"JavaScript 是解释型语言还是编译型语言？"}),"\n",(0,l.jsx)(i.li,{children:"简述 JavaScript 的编译原理？"}),"\n",(0,l.jsx)(i.li,{children:"V8 在编译的过程中将 JavaScript 转换成字节码有什么优势？"}),"\n",(0,l.jsx)(i.li,{children:"弱类型和强类型、静态类型和动态类型语言的区别？"}),"\n",(0,l.jsx)(i.li,{children:"一二三地址指令寄存器架构各自有什么优缺点？"}),"\n",(0,l.jsx)(i.li,{children:"V8 在什么情况下会对 JavaScript 代码进行优化和去优化？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理进阶v8-的嵌入实践",children:["原理进阶：V8 的嵌入实践",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理进阶v8-的嵌入实践",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"将 C++ 源代码编译成可执行文件需要经历哪几个编译步骤？"}),"\n",(0,l.jsx)(i.li,{children:"C++ 的编译工具有哪些？"}),"\n",(0,l.jsx)(i.li,{children:"GNU 的 gcc 和 clang 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"clang 和 LLVM 有什么关联关系？"}),"\n",(0,l.jsx)(i.li,{children:"g++ 和 gcc 有什么区别？"}),"\n",(0,l.jsx)(i.li,{children:"C++ 中静态库和动态库有什么区别？各自有什么优缺点？"}),"\n",(0,l.jsx)(i.li,{children:"如何制作 V8 的静态库？"}),"\n",(0,l.jsx)(i.li,{children:"如何在 Mac 的命令终端中添加环境变量？"}),"\n",(0,l.jsx)(i.li,{children:"g++ 有哪些编译参数？宏定义参数有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Homebrew？它有什么作用？"}),"\n",(0,l.jsx)(i.li,{children:"如何下载和使用 V8 动态库？"}),"\n",(0,l.jsx)(i.li,{children:"如何使用 CMake 编译 V8 应用？"}),"\n",(0,l.jsx)(i.li,{children:"V8 可以独立使用吗？"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"原理进阶v8-的概念说明",children:["原理进阶：V8 的概念说明",(0,l.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#原理进阶v8-的概念说明",children:"#"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"V8 除了可以在 Chrome 和 Node.js 中使用，还可以在哪些应用场景中使用？"}),"\n",(0,l.jsx)(i.li,{children:"小程序中应用的双线程架构的优缺点是什么？"}),"\n",(0,l.jsx)(i.li,{children:"列举你所知道的 JavaScript 引擎？"}),"\n",(0,l.jsx)(i.li,{children:"在 Andriod 和 iOS 中的 JavaScript 引擎都是 V8 吗？"}),"\n",(0,l.jsx)(i.li,{children:"如何在 C++ 应用中执行 JavaScript 文件？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Isolate，它的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 HandleScope，什么是 Handle，它们的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"什么是 Context，什么是全局上下文栈，它们的作用是什么？"}),"\n",(0,l.jsx)(i.li,{children:"Isolate 隔离和 Context 隔离的区别是什么？为什么需要这两个不同的概念？"}),"\n",(0,l.jsx)(i.li,{children:"全局上下文栈和执行上下文栈的关联关系是什么？"}),"\n",(0,l.jsx)(i.li,{children:"执行上下文栈和作用域链有什么关联关系？"}),"\n"]})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,s.ah)(),n.components);return i?(0,l.jsx)(i,{...n,children:(0,l.jsx)(c,{...n})}):c(n)}let h=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%BE%AE%E5%89%8D%E7%AB%AF%2F1.%E5%89%8D%E8%A8%80%EF%BC%9A%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"感性了解：微前端到底解决了哪些业务问题",id:"感性了解微前端到底解决了哪些业务问题",depth:2},{text:"方案了解：iframe 方案",id:"方案了解iframe-方案",depth:2},{text:"方案了解：NPM 方案",id:"方案了解npm-方案",depth:2},{text:"方案了解：动态 Script 方案",id:"方案了解动态-script-方案",depth:2},{text:"方案了解：Web Components 方案",id:"方案了解web-components-方案",depth:2},{text:"方案了解：Cookie 处理",id:"方案了解cookie-处理",depth:2},{text:"原理解析：引言",id:"原理解析引言",depth:2},{text:"原理解析：V8 隔离",id:"原理解析v8-隔离",depth:2},{text:"原理解析：iframe 隔离",id:"原理解析iframe-隔离",depth:2},{text:"原理解析：iframe + Proxy 隔离",id:"原理解析iframe--proxy-隔离",depth:2},{text:"原理解析：快照隔离",id:"原理解析快照隔离",depth:2},{text:"原理解析：CSS 隔离",id:"原理解析css-隔离",depth:2},{text:"原理解析：通信原理",id:"原理解析通信原理",depth:2},{text:"原理解析：性能优化",id:"原理解析性能优化",depth:2},{text:"框架解析：single-spa 的 NPM 示例",id:"框架解析single-spa-的-npm-示例",depth:2},{text:"框架解析：single-spa 的 Script 示例",id:"框架解析single-spa-的-script-示例",depth:2},{text:"框架解析：single-spa 的 Fetch 示例",id:"框架解析single-spa-的-fetch-示例",depth:2},{text:"框架解析：single-spa 的 Code Splitting 示例",id:"框架解析single-spa-的-code-splitting-示例",depth:2},{text:"框架解析：single-spa 源码解析",id:"框架解析single-spa-源码解析",depth:2},{text:"框架解析：qiankun 使用示例",id:"框架解析qiankun-使用示例",depth:2},{text:"框架解析：import-html-entry 源码解析",id:"框架解析import-html-entry-源码解析",depth:2},{text:"工程设计：构建工具",id:"工程设计构建工具",depth:2},{text:"工程设计：按需加载",id:"工程设计按需加载",depth:2},{text:"工程设计：版本发布",id:"工程设计版本发布",depth:2},{text:"工程设计：代码检查",id:"工程设计代码检查",depth:2},{text:"工程设计：代码格式",id:"工程设计代码格式",depth:2},{text:"工程设计：提交规范",id:"工程设计提交规范",depth:2},{text:"工程设计：变更日志",id:"工程设计变更日志",depth:2},{text:"工程设计：单元测试",id:"工程设计单元测试",depth:2},{text:"工程设计：文档设计",id:"工程设计文档设计",depth:2},{text:"工程设计：CI / CD",id:"工程设计ci--cd",depth:2},{text:"工程设计：README 说明",id:"工程设计readme-说明",depth:2},{text:"原理进阶：浏览器的线程和任务",id:"原理进阶浏览器的线程和任务",depth:2},{text:"原理进阶：V8 的编译原理",id:"原理进阶v8-的编译原理",depth:2},{text:"原理进阶：V8 的嵌入实践",id:"原理进阶v8-的嵌入实践",depth:2},{text:"原理进阶：V8 的概念说明",id:"原理进阶v8-的概念说明",depth:2}],title:"1.前言：阅读指南",headingTitle:"1.前言：阅读指南",frontmatter:{}}}}]);