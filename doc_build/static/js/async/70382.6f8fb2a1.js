"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["70382"],{871146:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var s=r(552676),i=r(740453);let d=r.p+"static/image/f8a05783d1c6bb58f68013f8bb3813fb.c8ec318b.webp",o=r.p+"static/image/9482fafa9bd1b28942ec0dd547d75ce9.ffe2a78a.webp",l=r.p+"static/image/848b7e5b37b68f860f47192811e39a86.ee4e3a38.webp",c=r.p+"static/image/d7f5ff1f8380a54d0a0349e46ec9e77b.76c65e79.webp";function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",ul:"ul",li:"li",strong:"strong",code:"code",img:"img",pre:"pre"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"31-实战掘金智能设备通用服务-项目介绍",children:["31 实战：掘金智能设备通用服务-项目介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-实战掘金智能设备通用服务-项目介绍",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"接下来的几节课我们来学习一个实战项目，通过它，希望大家能把前面学到的知识融汇贯通起来。"}),"\n",(0,s.jsx)(n.p,{children:"这个实战项目我想设计的综合一点，涉及服务端和前端、软件和硬件，但也不会太过复杂，因为如果使用很复杂的框架，对于一些不了解框架的同学来说需要很多额外的理解成本。"}),"\n",(0,s.jsx)(n.p,{children:"这个项目是个真实的项目，它是由我主导，从掘金社区孵化出来的，不是为了课程临时写的 Demo。我希望通过这样的项目更能让大家体会到真实项目的复杂性。"}),"\n",(0,s.jsxs)(n.h2,{id:"项目的设计",children:["项目的设计",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#项目的设计",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"项目背景",children:["项目背景",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#项目背景",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"掘金社区今年（2023年）打算尝试做一些可编程智能周边，所以提前找了一些智能设备进行编程尝试，这些设备主要是蓝牙设备。"}),"\n",(0,s.jsx)(n.p,{children:"具体的设备智能设备列表如下："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.mipow.com/products/mipow-smart-bulb",target:"_blank",rel:"noopener noreferrer",children:"Mipow-Playbulb-LED"})," | ",(0,s.jsx)(n.strong,{children:"GATT ✔︎"})," | ",(0,s.jsx)(n.strong,{children:"SPP x"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.mipow.com/products/playbulb-sphere",target:"_blank",rel:"noopener noreferrer",children:"Mipow-Playbulb-Sphere"})," | ",(0,s.jsx)(n.strong,{children:"GATT ✔︎"})," | ",(0,s.jsx)(n.strong,{children:"SPP x"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.mipow.com/products/playbulb-candle",target:"_blank",rel:"noopener noreferrer",children:"Mipow-Playbulb-Candle"})," | ",(0,s.jsx)(n.strong,{children:"GATT ✔︎"})," | ",(0,s.jsx)(n.strong,{children:"SPP x"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.cnblogs.com/yanye0xff/p/16049232.html",target:"_blank",rel:"noopener noreferrer",children:"Epaper 蓝牙价签"})," | ",(0,s.jsx)(n.strong,{children:"GATT ✔︎"})," | ",(0,s.jsx)(n.strong,{children:"SPP x"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.divoom-gz.com/product/timebox-mini.html",target:"_blank",rel:"noopener noreferrer",children:"Divoom-Timebox-Mini"})," | ",(0,s.jsx)(n.strong,{children:"GATT ✔︎"})," | ",(0,s.jsx)(n.strong,{children:"SPP x"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://divoom.com/products/divoom-pixoo",target:"_blank",rel:"noopener noreferrer",children:"Pixoo 16x16"})," | ",(0,s.jsx)(n.strong,{children:"GATT x"})," | ",(0,s.jsx)(n.strong,{children:"SPP ✔︎"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://divoom.com/products/divoom-pixoo-max",target:"_blank",rel:"noopener noreferrer",children:"Pixoo-Max"})," | ",(0,s.jsx)(n.strong,{children:"GATT x"})," | ",(0,s.jsx)(n.strong,{children:"SPP ✔︎"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://divoom.com/products/divoom-ditooplus",target:"_blank",rel:"noopener noreferrer",children:"Ditoo-Plus"})," | ",(0,s.jsx)(n.strong,{children:"GATT x"})," | ",(0,s.jsx)(n.strong,{children:"SPP ✔︎"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://divoom.com/products/divoom-backpack",target:"_blank",rel:"noopener noreferrer",children:"Divoom Backpack"})," | ",(0,s.jsx)(n.strong,{children:"GATT x"})," | ",(0,s.jsx)(n.strong,{children:"SPP ✔︎"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://divoom.com/products/zooe",target:"_blank",rel:"noopener noreferrer",children:"Divoom Zooe"})," | ",(0,s.jsx)(n.strong,{children:"GATT x"})," | ",(0,s.jsx)(n.strong,{children:"SPP ✔︎"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"我们的项目主要是编写控制这些智能设备的 JavaScript 程序，以及调试设备的模拟器，这样方便我们在没有购入设备的情况下进行开发。"}),"\n",(0,s.jsx)(n.p,{children:"如果你继续这门课的学习，我建议你购买这些设备中的一、两款。Divoom 设备在国内的电商平台上也可以比较方便地购买，之前码上掘金编程挑战赛的时候，我们也是用的这些设备作为比赛获奖的奖品。"}),"\n",(0,s.jsxs)(n.h3,{id:"技术选型和方案设计",children:["技术选型和方案设计",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#技术选型和方案设计",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"蓝牙设备分为两类，一类是 GATT 协议的低功耗设备，这些设备可以通过标准的 Web Bluetooth API 进行通信，而 Chrome 浏览器已经支持了这个 API，所以我们可以直接使用这个 API 进行通信。另一类是 SPP 协议的设备，这些设备不能直接使用 Web Bluetooth API 进行通信，我们需要通过 Node.js 来实现一个蓝牙串口服务，然后通过这个服务来进行通信。"}),"\n",(0,s.jsxs)(n.p,{children:["Node.js 实现蓝牙串口服务，我们可以使用现成的",(0,s.jsx)(n.code,{children:"node-bluetooth-serial-port"}),"模块。通过这个模块，我们可以启动一个蓝牙通信服务。但是，我们的 Web 需要访问这个服务，还需要通过一个 HTTP 协议的接口进行通信，所以我们需要在 Node.js 中启动一个 HTTP 服务，然后通过这个 HTTP 服务来访问蓝牙串口服务。"]}),"\n",(0,s.jsx)(n.p,{children:"所以最终的技术选型和方案是这样的："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"我们设计一个 DeviceAdapter，用来抽象蓝牙设备，它底层支持 SPP Server 和 WebGATTServer 两种实例。其中 SPP Server 是 Node.js 实现的连接蓝牙串口的 HTTP 服务，而 WebGATTServer 是 Web Bluetooth API 实现的蓝牙通信服务。"}),"\n",(0,s.jsx)(n.p,{children:"在 DeviceAdapter 的上层，我们实现 Divoom 和 LightBulb 两种蓝牙设备。"}),"\n",(0,s.jsxs)(n.h3,{id:"目录结构",children:["目录结构",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#目录结构",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"我们来简单设计一下项目结构："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:".\n├── LICENSE\n├── README.md\n├── build.js\n├── .eslintrc.cjs\n├── dist\n├── docs\n├── examples\n├── test\n├── node_modules\n├── package.json\n├── server\n└── src\n"})}),"\n",(0,s.jsx)(n.p,{children:"其中 dist 目录存放编译后的客户端代码，docs 目录存放项目文档，examples 目录存放项目示例，test 目录存放项目测试代码，server 目录存放 Node.js 服务端代码和蓝牙服务代码，src 目录存放客户端代码。"}),"\n",(0,s.jsxs)(n.p,{children:["项目中我们准备采用 ESBuild 编译，",(0,s.jsx)(n.code,{children:"build.js"}),"是编译配置。"]}),"\n",(0,s.jsxs)(n.p,{children:["我们引入了 ESLint 进行代码检查，",(0,s.jsx)(n.code,{children:".eslintrc.cjs"}),"是 ESLint 的配置文件。"]}),"\n",(0,s.jsx)(n.p,{children:"在这里我们还没有加入持续集成的配置，这块先不用着急，等我们后续需设置持续集成时（一般是第一个版本发布之后）再进行配置。"}),"\n",(0,s.jsxs)(n.h3,{id:"项目依赖",children:["项目依赖",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#项目依赖",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["接下来，我们先初始化项目并安装依赖。我们可以用 ",(0,s.jsx)(n.code,{children:"npm init"})," 来初始化项目，配置依赖后，",(0,s.jsx)(n.code,{children:"package.json"})," 文件的内容大致如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n \xa0"name": "jcode-bluetooth",\n \xa0"version": "0.0.1",\n \xa0"description": "jcode web bluetooth lib",\n \xa0"main": "dist/jcode-bluetooth.js",\n \xa0"type": "module",\n \xa0"scripts": {\n \xa0 \xa0"start": "npm run dev",\n \xa0 \xa0"dev": "node build.js",\n \xa0 \xa0"server": "node server",\n \xa0 \xa0"build": "mode=production node build.js",\n \xa0 \xa0"prepublishOnly": "npm run build",\n \xa0 \xa0"lint": "eslint --ext .js,.vue src",\n \xa0 \xa0"lint:fix": "eslint --ext .js,.vue src --fix",\n \xa0 \xa0"test": "jest"\n  },\n \xa0"author": "akira-cn",\n \xa0"license": "MIT",\n \xa0"devDependencies": {\n \xa0 \xa0"esbuild": "^0.15.14",\n \xa0 \xa0"eslint": "^8.28.0",\n \xa0 \xa0"eslint-config-sprite": "^1.0.6",\n  },\n \xa0"dependencies": {\n \xa0 \xa0"node-bluetooth-serial-port": "^2.2.7"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["我们主要关注一下",(0,s.jsx)(n.code,{children:"scripts"}),"和",(0,s.jsx)(n.code,{children:"dependencies"}),"字段，",(0,s.jsx)(n.code,{children:"scripts"}),"字段定义了一些脚本命令，",(0,s.jsx)(n.code,{children:"dependencies"}),"字段定义了项目依赖。我们项目需要依赖",(0,s.jsx)(n.code,{children:"node-bluetooth-serial-port"}),"模块，这个模块是 Node.js 实现的蓝牙串口服务，我们需要通过这个模块来实现蓝牙串口服务。"]}),"\n",(0,s.jsxs)(n.p,{children:["此外，我们需要配置",(0,s.jsx)(n.code,{children:"devDependencies"}),"字段，这里我们需要安装 ESLint 和 ESBuild，ESLint 是用来检查代码的，ESBuild 是用来编译代码的。"]}),"\n",(0,s.jsx)(n.p,{children:"ESLint 的配置如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"module.exports = {\n \xa0globals: {\n \xa0 \xa0globalThis: true,\n  },\n \xa0extends: 'eslint-config-sprite',\n \xa0rules: {\n \xa0 \xa0complexity: ['warn', 25],\n \xa0 \xa0'no-unused-vars': 'warn',\n \xa0 \xa0'no-restricted-globals': 'off',\n \xa0 \xa0'max-params': ['warn', 7],\n \xa0 \xa0'import/no-anonymous-default-export': 'off',\n \xa0 \xa0'no-console': 'warn',\n \xa0 \xa0'import/no-named-as-default': 'off',\n \xa0 \xa0'import/no-named-as-default-member': 'off',\n \xa0 \xa0'no-return-await': 'off',\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这里有个细节需要注意，因为我们采用 ESModule 开发项目，而 ESLint 默认是 CommonJS 模块，所以我们需要将 ESLint 配置文件的后缀名设为",(0,s.jsx)(n.code,{children:".cjs"}),"，这样 ESLint 才能正确识别 ESModule。"]}),"\n",(0,s.jsxs)(n.h3,{id:"实际效果",children:["实际效果",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实际效果",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这个项目是我们的一个实际项目，它有线上运行的版本，因此我们可以看到它的实际效果。在这里我先放一些效果出来，增加你的兴趣，后续我们会一一实现这些例子。"}),"\n",(0,s.jsx)(n.p,{children:"下面是 Divoom 像素屏运行贪吃蛇 AI 的效果，笔记本电脑屏幕上是模拟器，笔记本电脑左下角是真实设备。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"Feb-28-2023 18-52-38.gif"})}),"\n",(0,s.jsx)(n.p,{children:"下面是在蓝牙像素屏运行 WebGL 动画的效果。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"Feb-28-2023 18-57-05.gif"})}),"\n",(0,s.jsx)(n.p,{children:"下面是用蓝牙加上语音识别模块控制 LED 智能灯的颜色和频率的例子。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:"Feb-28-2023 19-01-23.gif"})}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"这一节课我先介绍一下整个项目的背景，我们要实现一个比较通用的控制 GATT 和 SPP 蓝牙设备的服务，这个服务的技术方案是用 Web Bluetooth API 和 Node.js 实现的蓝牙串口服务来控制对应的蓝牙设备。"}),"\n",(0,s.jsx)(n.p,{children:"我们根据需要创建了实际的目录结构，然后初始化了项目并安装了依赖。最后我放了一些实际效果出来，增加你的兴趣。"}),"\n",(0,s.jsx)(n.p,{children:"后续的课程中，我们将一步步实现整个项目的所有功能。"})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}let a=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["%E4%BB%8E%E5%89%8D%E7%AB%AF%E5%88%B0%E5%85%A8%E6%A0%88%2F31%20%E5%AE%9E%E6%88%98%EF%BC%9A%E6%8E%98%E9%87%91%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1-%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D.md"]={toc:[{text:"项目的设计",id:"项目的设计",depth:2},{text:"项目背景",id:"项目背景",depth:3},{text:"技术选型和方案设计",id:"技术选型和方案设计",depth:3},{text:"目录结构",id:"目录结构",depth:3},{text:"项目依赖",id:"项目依赖",depth:3},{text:"实际效果",id:"实际效果",depth:3},{text:"小结",id:"小结",depth:2}],title:"31 实战：掘金智能设备通用服务-项目介绍",headingTitle:"31 实战：掘金智能设备通用服务-项目介绍",frontmatter:{}}}}]);