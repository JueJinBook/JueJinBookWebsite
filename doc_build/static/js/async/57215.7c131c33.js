"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["57215"],{333630:function(e,r,n){n.r(r),n.d(r,{default:()=>t});var l=n(552676),s=n(740453);let i=n.p+"static/image/84434ded9db749bc5b888081a8c3c1ca.7270c00f.png",c=n.p+"static/image/8c2821287800ef53fff12cfe36ed0476.c1dcee50.png",a=n.p+"static/image/f4cb590e25000fa898ee4ed6a70bb2f8.3044051c.png";function d(e){let r=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",ul:"ul",li:"li",img:"img",code:"code"},(0,s.ah)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(r.h1,{id:"26手写-babel思路篇",children:["26.手写 Babel：思路篇",(0,l.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#26手写-babel思路篇",children:"#"})]}),"\n",(0,l.jsx)(r.p,{children:"学到这里，我们对 babel 插件的写法和 babel 内置的 preset 的实现都有了比较多的了解，但是对 babel 本身的实现可能还不是特别清晰。所以，我们通过写一个简单的 babel 来深入探索下 babel 的实现原理。"}),"\n",(0,l.jsx)(r.p,{children:"希望完成这个案例之后，能够帮你真正掌握 babel。"}),"\n",(0,l.jsxs)(r.h2,{id:"整体思路",children:["整体思路",(0,l.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#整体思路",children:"#"})]}),"\n",(0,l.jsxs)(r.h3,{id:"babel-的编译流程",children:["babel 的编译流程",(0,l.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#babel-的编译流程",children:"#"})]}),"\n",(0,l.jsx)(r.p,{children:"我们知道，babel 的主要编译流程是 parse、transform、generate。"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"parse 是把源码转成 AST"}),"\n",(0,l.jsx)(r.li,{children:"transform 是对 AST 做增删改"}),"\n",(0,l.jsx)(r.li,{children:"generate 是打印 AST 成目标代码并生成 sourcemap"}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)("img",{src:a,alt:""})}),"\n",(0,l.jsx)(r.p,{children:"babel 7 把这些功能的实现放到了不同的包里面："}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/parser"})," 解析源码成 AST，对应 parse 阶段"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/traverse"})," 遍历 AST 并调用 visitor 函数，对应 transform 阶段"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/generate"})," 打印 AST，生成目标代码和 sorucemap，对应 generate 阶段"]}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"其中，遍历过程中需要创建 AST，会用到："}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/types"})," 创建、判断 AST"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/template"}),"  根据模块批量创建 AST"]}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"上面是每一个阶段的功能， babel 整体功能的入口是在："}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/core"})," 解析配置、应用 plugin、preset，整体整体编译流程"]}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"插件和插件之间有一些公共函数，这些都是在："}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/helpers"})," 用于转换 es next 代码需要的通过模板创建的 AST，比如 _typeof、_defineProperties 等"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/helper-xxx"})," 其他的插件之间共享的用于操作 AST 的公共函数"]}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"当然，除了编译期转换的时候会有公共函数以外，运行时也有，这部分是放在："}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/runtime"})," 主要是包含 corejs、helpers、regenerator 这 3 部分：","\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"helper： helper 函数的运行时版本（不是通过 AST 注入了，而是运行时引入代码）"}),"\n",(0,l.jsx)(r.li,{children:"corejs： es next 的 api 的实现，corejs 2 只支持静态方法，corejs 3 还支持实例方法"}),"\n",(0,l.jsx)(r.li,{children:"regenerator：async await 的实现，由 facebook 维护"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(r.p,{children:["（babel 做语法转换是自己实现的 helper，但是做 polyfill 都不是自己实现的，而是借助了第三方的 ",(0,l.jsx)(r.a,{href:"https://github.com/zloirock/core-js",target:"_blank",rel:"noopener noreferrer",children:"corejs"}),"、",(0,l.jsx)(r.a,{href:"https://github.com/facebook/regenerator",target:"_blank",rel:"noopener noreferrer",children:"regenerator"}),"）"]}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)("img",{src:c,alt:""})}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)("img",{src:i,alt:""})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"@babel/cli"})," babel 的命令行工具，支持通过 glob 字符串来编译多个文件"]}),"\n"]}),"\n",(0,l.jsxs)(r.h3,{id:"我们要实现哪些包",children:["我们要实现哪些包",(0,l.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#我们要实现哪些包",children:"#"})]}),"\n",(0,l.jsx)(r.p,{children:"上面介绍的是 babel 完成功能所内置的一些包，我们如果要写一个简易的 babel，也得实现这些包，但可以做一些简化。"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"parser 包"}),"是肯定要实现的，babel parser 是基于 acorn fork 的，我们也基于 acorn，做一点扩展。完成从源码到 AST 的转换。"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"traverse 包"}),"是对 AST 的遍历，需要知道不同类型的 AST 都遍历哪些 key，这些是在 @babel/types 包里面定义的，我们也用类似的实现方式，并且会调用对应的 visitor，实现 path 和 path.scope 的一些 api 然后传入。"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"generate 包"}),"是打印 AST 成目标代码，生成 sourcemap。打印这部分每个 AST 类型都要写一个对应的函数来处理，生成 sourcemap 使用 source-map 这个包，关联 parse 时记录的 loc 和打印时计算的位置来生成每一个 mapping。"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"types 包"}),"用于创建 AST，会维护创建和判断各种 AST 的 api，并且提供每种 AST 需要遍历的属性是哪些，用于 traverse 的过程"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"template 包"}),"是批量创建 AST 的，这里我们实现一个简单的版本，传入字符串，parse 成 AST 返回。"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"core 包"}),"是整体流程的串联，支持 plugins 和 presets，调用插件，合并成最终的 visitors，然后再 traverse。"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"helper 包"}),"我们也会实现一个，因为支持了 plugin，那么中有一些公共的函数可以复用"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"runtime 包"}),"我们也提供一下，不过只加入一些用于做语法转换的辅助函数就好了"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"cli 包"})," 实现一个命令行工具，来调用 core 包的功能"]}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"这是我们大概会做的事情，把这些都实现一遍就算一个比较完整的 babel 了。实现的过程中更能加深我们对 babel、对转译器的认识，不只是掌握 babel 本身。"}),"\n",(0,l.jsxs)(r.h2,{id:"总结",children:["总结",(0,l.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,l.jsx)(r.p,{children:"这一节讲了下整体的思路，后面章节会一步步实现，希望能够帮助大家深入 babel 的本质。"})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,s.ah)(),e.components);return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}let t=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["Babel%20%E6%8F%92%E4%BB%B6%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F26.%E6%89%8B%E5%86%99%20Babel%EF%BC%9A%E6%80%9D%E8%B7%AF%E7%AF%87.md"]={toc:[{text:"整体思路",id:"整体思路",depth:2},{text:"babel 的编译流程",id:"babel-的编译流程",depth:3},{text:"我们要实现哪些包",id:"我们要实现哪些包",depth:3},{text:"总结",id:"总结",depth:2}],title:"26.手写 Babel：思路篇",headingTitle:"26.手写 Babel：思路篇",frontmatter:{}}}}]);