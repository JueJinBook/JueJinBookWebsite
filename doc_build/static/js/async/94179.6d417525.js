"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["94179"],{161489:function(n,e,c){c.r(e),c.d(e,{default:()=>a});var d=c(552676),s=c(740453);let i=c.p+"static/image/d66df7a34625779d6fff65cbbb5a3a05.90c1b430.webp",l=c.p+"static/image/2833a58ce6468fd6164ad2ea6e955d35.2203264d.webp",t=c.p+"static/image/7471e810f989c078c3672de155510291.2ebc18a2.webp",o=c.p+"static/image/c13a4fb9864f01ad38199a405250941d.1309e36e.webp";function r(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",img:"img",pre:"pre",code:"code",strong:"strong",ol:"ol",li:"li",ul:"ul"},(0,s.ah)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"1第一日遵守各司其责原则",children:["1.第一日：遵守各司其责原则",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1第一日遵守各司其责原则",children:"#"})]}),"\n",(0,d.jsxs)(e.h2,{id:"第一个故事切换到夜间模式",children:["第一个故事：切换到夜间模式",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#第一个故事切换到夜间模式",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"在WEB开发中，HTML负责网页的结构，CSS负责网页上各个元素的展示样式，JS则负责网页和用户的交互。想要成为一名优秀的前端工程师，首先要做的就是遵守这三者各司其职的原则，让我们的代码易于维护和扩展。"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:o,alt:""})}),"\n",(0,d.jsx)(e.p,{children:"但是，有时候我们常常一不小心就破坏了这个原则。又或者，我们为了实现业务需求，根本不管这个规则。这都会导致我们的代码结构混乱，维护困难。那么下面，我就通过一个例子，来谈谈遵守各司其职这个原则的好处。"}),"\n",(0,d.jsx)(e.p,{children:"现在我们有一个任务，它的具体需求是这样的：给一个网页实现一个深色系和浅色系主题的切换，以使得在夜晚访问这个网页的读者能够使用“夜间模式”。"}),"\n",(0,d.jsx)(e.p,{children:"这个网页的HTML大概是这样的："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <title>深夜食堂</title>\n  <style>\n    body, html {\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n      overflow: hidden;\n    }\n    body {\n      padding: 10px;\n      box-sizing: border-box;\n    }\n    div.pic img {\n      width: 100%;\n    }\n    #modeBtn {\n      font-size: 2rem;\n      float: right;\n    }\n  </style>\n</head>\n<body>\n  <header>\n    <button id="modeBtn">\uD83C\uDF1E</button>\n    <h1>深夜食堂</h1>\n  </header>\n  <main>\n    <div class="pic">\n      <img src="https://p2.ssl.qhimg.com/t0120cc20854dc91c1e.jpg">\n    </div>\n    <div class="description">\n      <p>\n          这是一间营业时间从午夜十二点到早上七点的特殊食堂。这里的老板，不太爱说话，却总叫人吃得热泪盈\n          眶。在这里，自卑的舞蹈演员偶遇隐退多年舞界前辈，前辈不惜讲述自己不堪回首的经历不断鼓舞年轻人，最终令其重拾自信；轻言绝交的闺蜜因为吃到共同喜爱的美食，回忆起从前的友谊，重归于好；乐观的绝症患者遇到同命相连的女孩，两人相爱并相互给予力量，陪伴彼此完美地走过了最后一程；一味追求事业成功的白领，在这里结交了真正暖心的朋友，发现真情比成功更有意义。食物、故事、真情，汇聚了整部剧的主题，教会人们坦然面对得失，对生活充满期许和热情。每一个故事背后都饱含深情，情节跌宕起伏，令人流连忘返 [6]  。\n      </p>\n    </div>\n  </main>\n</body>\n</html>\n'})}),"\n",(0,d.jsx)(e.p,{children:"现在的页面，在手机上看起来是这样的效果："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:t,alt:""})}),"\n",(0,d.jsxs)(e.p,{children:["任务的要求是当用户点击网页右上角的太阳\uD83C\uDF1E图标时，将网页变为",(0,d.jsx)(e.strong,{children:"深夜模式"}),"，即用深色背景、浅色字体来显示网页内容，同时太阳\uD83C\uDF1E标记变为月亮\uD83C\uDF1C标记。"]}),"\n",(0,d.jsx)(e.p,{children:"这个任务很简单，我们可能非常快的就写下按钮的响应处理："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"const btn = document.getElementById('modeBtn');\nbtn.addEventListener('click', (e) => {\n  const body = document.body;\n  if(e.target.innerHTML === '\uD83C\uDF1E') {\n    body.style.backgroundColor = 'black';\n    body.style.color = 'white';\n    e.target.innerHTML = '\uD83C\uDF1C';\n  } else {\n    body.style.backgroundColor = 'white';\n    body.style.color = 'black';\n    e.target.innerHTML = '\uD83C\uDF1E';\n  }\n});\n"})}),"\n",(0,d.jsx)(e.p,{children:"上面这段代码给按钮注册了click事件，当用户点击按钮的时候，如果当前按钮的文字是\uD83C\uDF1E，说明是要从日间模式切换成夜间模式，那么将body的背景样式换成深色，文字样式换成浅色，否则将body的背景样式换成浅色，文字样式换成深色。"}),"\n",(0,d.jsx)(e.p,{children:"这是点击按钮后切换的网页呈现效果："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:l,alt:""})}),"\n",(0,d.jsx)(e.p,{children:"看起来，我们完美地实现了产品的需求，可以交差了。但是实际上，上面的代码存在以下三个问题："}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"对于其他不了解需求的同事，阅读这段代码能够直接理解这个按钮按下的含义吗？"}),"\n",(0,d.jsx)(e.li,{children:"如果产品需求变更，要求用深灰色背景、浅黄色文字来显示夜间模式，JS代码可以避免修改吗？"}),"\n",(0,d.jsx)(e.li,{children:"如果要给切换过程增加动画效果，能方便添加吗？"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"作为读者的你，知道如何解决这些问题吗？"}),"\n",(0,d.jsxs)(e.h2,{id:"第二个故事用class属性表示元素的业务状态",children:["第二个故事：用class属性表示元素的业务状态",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#第二个故事用class属性表示元素的业务状态",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"第一个故事中，我们直接用JS操作元素，让元素在夜间和白天模式互换："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"  body.style.backgroundColor = 'black';\n  body.style.color = 'white';\n"})}),"\n",(0,d.jsxs)(e.p,{children:["这样做的缺点是其他的程序员只知道这两个语句是将",(0,d.jsx)(e.code,{children:"body"}),"的",(0,d.jsx)(e.code,{children:"background"}),"样式改为了黑色，将",(0,d.jsx)(e.code,{children:"color"}),"样式改为了白色，却并不知道这个样式代表的是什么业务需求或者状态。"]}),"\n",(0,d.jsxs)(e.p,{children:["之所以会这样，是因为我们将",(0,d.jsx)(e.strong,{children:"本该由CSS完成的工作交由JS来做了"}),"，本来应该由CSS设置元素的样式，却让JS代替了。所以，我们需要重构一下代码，让它能体现出业务的需求。"]}),"\n",(0,d.jsx)(e.p,{children:"我们把夜间模式下元素的样式的设置还给CSS来完成："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"body.night {\n  background-color: black;\n  color: white;\n}\n"})}),"\n",(0,d.jsx)(e.p,{children:"然后将JS代码重构为如下形式："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"const btn = document.getElementById('modeBtn');\nbtn.addEventListener('click', (e) => {\n  const body = document.body;\n  if(body.className !== 'night') {\n    body.className = 'night';\n    e.target.innerHTML = '\uD83C\uDF1C';\n  } else {\n    body.className = '';\n    e.target.innerHTML = '\uD83C\uDF1E';\n  }\n});\n"})}),"\n",(0,d.jsxs)(e.p,{children:["如上代码所示，当",(0,d.jsx)(e.code,{children:"body"}),"元素的",(0,d.jsx)(e.code,{children:"class"}),"属性不等于",(0,d.jsx)(e.code,{children:"night"}),"时，表示（点击前）当前元素的状态是白天模式，所以现在需要将它的状态修改为夜间模式，于是我们只要将它的",(0,d.jsx)(e.code,{children:"class"}),"属性设置为",(0,d.jsx)(e.code,{children:"night"}),"，页面就会呈现夜间模式的样式。同理，当",(0,d.jsx)(e.code,{children:"body"}),"元素的",(0,d.jsx)(e.code,{children:"class"}),"属性等于",(0,d.jsx)(e.code,{children:"night"}),"时，表示（点击前）body元素是夜间模式，所以需要将这个元素的状态修改为白天模式，也就是默认状态，即",(0,d.jsx)(e.code,{children:"class"}),"属性等于空。"]}),"\n",(0,d.jsx)(e.p,{children:"上面的代码，虽然改动十分微小，只是把之前的两行代码："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"  body.style.backgroundColor = 'black';\n  body.style.color = 'white';\n"})}),"\n",(0,d.jsx)(e.p,{children:"替换成一行："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"  body.className = 'night';\n"})}),"\n",(0,d.jsx)(e.p,{children:"但是，它能解决前面提出的几个问题:"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:["首先，className设为night，这个操作本身透露了需求信息，",(0,d.jsx)(e.strong,{children:"它描述了这是一个夜间（night）模式的业务状态"}),"。这样就便于后来的维护者快速理解业务需求。"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:["其次，如果产品需求变更，把模式对应的颜色换了，我们不需要修改JS代码，只需要修改",(0,d.jsx)(e.code,{children:"body.night"}),"的样式规则即可！"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"第三，如果要增加切换过程的动画效果，可以使用CSS3支持的过渡动画，例如："}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"body {\n  padding: 10px;\n  box-sizing: border-box;\n  transition: all 1s;\n}\nbody.night {\n  background-color: black;\n  color: white;\n  transition: all 1s;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["给",(0,d.jsx)(e.code,{children:"body"}),"和",(0,d.jsx)(e.code,{children:"body.night"}),"都添加样式规则",(0,d.jsx)(e.code,{children:"transition all 1s"}),"，就可以实现简单的切换动画了。"]}),"\n",(0,d.jsxs)(e.p,{children:["最后，实际上还有个细节可以改进，那就是",(0,d.jsx)(e.code,{children:"e.target.innerHTML = '\uD83C\uDF1C';"}),"这样的切换也不是很好，也应该合并到CSS中。这个可以通过伪元素来实现："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"#modeBtn::after {\n  content: '\uD83C\uDF1E';\n}\nbody.night #modeBtn::after {\n  content: '\uD83C\uDF1C';\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["我们去掉",(0,d.jsx)(e.code,{children:'<button id="modeBtn"></button>'}),"中间的文本内容，然后给它添加伪元素样式，这样我们JS代码简化成："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-js",children:"const btn = document.getElementById('modeBtn');\nbtn.addEventListener('click', (e) => {\n  const body = document.body;\n  if(body.className !== 'night') {\n    body.className = 'night';\n  } else {\n    body.className = '';\n  }\n});\n"})}),"\n",(0,d.jsx)(e.p,{children:"这时，JS代码只负责切换元素的状态，而不需要代替CSS改变元素的样式了。"}),"\n",(0,d.jsx)(e.p,{children:"完整的代码如下："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.a,{href:"https://junyux.github.io/FE-Advance/day01/index-v2.html",target:"_blank",rel:"noopener noreferrer",children:"在线演示"})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <title>深夜食堂</title>\n  <style>\n    body, html {\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n      overflow: hidden;\n    }\n    body {\n      padding: 10px;\n      box-sizing: border-box;\n      transition: all 1s;\n    }\n    body.night {\n      background-color: black;\n      color: white;\n      transition: all 1s;\n    }\n    div.pic img {\n      width: 100%;\n    }\n    #modeBtn {\n      font-size: 2rem;\n      float: right;\n    }\n    #modeBtn::after {\n      content: \'\uD83C\uDF1E\';\n    }\n    body.night #modeBtn::after {\n      content: \'\uD83C\uDF1C\';\n    }\n  </style>\n</head>\n<body>\n  <header>\n    <button id="modeBtn"></button>\n    <h1>深夜食堂</h1>\n  </header>\n  <main>\n    <div class="pic">\n      <img src="https://p2.ssl.qhimg.com/t0120cc20854dc91c1e.jpg">\n    </div>\n    <div class="description">\n      <p>\n          这是一间营业时间从午夜十二点到早上七点的特殊食堂。这里的老板，不太爱说话，却总叫人吃得热泪盈\n          眶。在这里，自卑的舞蹈演员偶遇隐退多年舞界前辈，前辈不惜讲述自己不堪回首的经历不断鼓舞年轻人，最终令其重拾自信；轻言绝交的闺蜜因为吃到共同喜爱的美食，回忆起从前的友谊，重归于好；乐观的绝症患者遇到同命相连的女孩，两人相爱并相互给予力量，陪伴彼此完美地走过了最后一程；一味追求事业成功的白领，在这里结交了真正暖心的朋友，发现真情比成功更有意义。食物、故事、真情，汇聚了整部剧的主题，教会人们坦然面对得失，对生活充满期许和热情。每一个故事背后都饱含深情，情节跌宕起伏，令人流连忘返 [6]  。\n      </p>\n    </div>\n  </main>\n</body>\n<script>\n  const btn = document.getElementById(\'modeBtn\');\n  btn.addEventListener(\'click\', (e) => {\n    const body = document.body;\n    if(body.className !== \'night\') {\n      body.className = \'night\';\n    } else {\n      body.className = \'\';\n    }\n  });\n</scrpit>\n</html>\n'})}),"\n",(0,d.jsxs)(e.p,{children:["从这个故事，我们可以看出，元素的class属性不仅仅只是为了给CSS提供类选择器，还能",(0,d.jsx)(e.strong,{children:"表示元素的业务状态"}),"。这样，我们就可以将这些业务状态对应的展示样式交由CSS处理，而JS只需要处理状态的切换即可，从而保证了各司其职的原则，使得我们的代码既能体现业务的需求，也便于将来的维护和扩展。"]}),"\n",(0,d.jsxs)(e.p,{children:["对于这个例子来说，对于状态的切换，可不可以",(0,d.jsx)(e.strong,{children:"完全可以不使用JS，纯用CSS来实现呢"}),"？"]}),"\n",(0,d.jsxs)(e.h2,{id:"第三个故事最好的js代码是没有js代码",children:["第三个故事：最好的JS代码是没有JS代码",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#第三个故事最好的js代码是没有js代码",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["不使用JS，只使用CSS实现“夜间模式”效果，看起来是一个不小的挑战。不过仔细想想，也不是不可能做到。其实这个问题，最核心的部分是要",(0,d.jsx)(e.strong,{children:"使用CSS代替JS来切换并记住与用户交互的状态"}),"。"]}),"\n",(0,d.jsx)(e.p,{children:"让我们回忆了一下，在HTML中，能够完成状态切换的元素也是有的，比如表单元素中的选择框（checkbox）元素，那么……"}),"\n",(0,d.jsx)(e.p,{children:"尝试改变一下HTML文档结构："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-html",children:'<body>\n  <input id="modeCheckBox" type="checkbox">\n  <div class="content">\n    <header>\n      <button id="modeBtn"></button>\n      <h1>深夜食堂</h1>\n    </header>\n    <main>\n      <div class="pic">\n        <img src="https://p2.ssl.qhimg.com/t0120cc20854dc91c1e.jpg">\n      </div>\n      <div class="description">\n        <p>\n            这是一间营业时间从午夜十二点到早上七点的特殊食堂。这里的老板，不太爱说话，却总叫人吃得热泪盈\n            眶。在这里，自卑的舞蹈演员偶遇隐退多年舞界前辈，前辈不惜讲述自己不堪回首的经历不断鼓舞年轻人，最终令其重拾自信；轻言绝交的闺蜜因为吃到共同喜爱的美食，回忆起从前的友谊，重归于好；乐观的绝症患者遇到同命相连的女孩，两人相爱并相互给予力量，陪伴彼此完美地走过了最后一程；一味追求事业成功的白领，在这里结交了真正暖心的朋友，发现真情比成功更有意义。食物、故事、真情，汇聚了整部剧的主题，教会人们坦然面对得失，对生活充满期许和热情。每一个故事背后都饱含深情，情节跌宕起伏，令人流连忘返 [6]  。\n        </p>\n      </div>\n    </main>\n  </div>\n</body>\n'})}),"\n",(0,d.jsxs)(e.p,{children:["上面的代码中，我们在body的子元素中添加一个",(0,d.jsx)(e.code,{children:'type="checkbox"'}),"的input元素。当我们点击这个元素时，就有两种状态：普通状态和选中状态。其中，选中状态可以用伪类选择器",(0,d.jsx)(e.code,{children:"#modeCheckBox:checked"}),"来标记。"]}),"\n",(0,d.jsxs)(e.p,{children:["由于",(0,d.jsx)(e.code,{children:"<input>"}),"元素是body的第一个子元素，它后面的子元素可以通过CSS的兄弟节点选择器来命中。为了便于统一操作，我们给header和main元素外层增加一个",(0,d.jsx)(e.code,{children:'<div class="content">'}),"的容器，这样我们就可以通过CSS选择器改变这个容器的样式："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"/* 匹配checkbox选中状态下的.content */\n#modeCheckBox:checked + .content {\n  background-color: black;\n  color: white;\n  transition: all 1s;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["上面的这条规则表示当checkbox选中状态下，",(0,d.jsx)(e.code,{children:".content"}),"元素的样式为黑底白字。"]}),"\n",(0,d.jsxs)(e.p,{children:["然后，微调一下上一版本的样式，将body中的",(0,d.jsx)(e.code,{children:"padding"}),"移到",(0,d.jsx)(e.code,{children:".content"}),"容器中，将",(0,d.jsx)(e.code,{children:"body.night"}),"的样式移到",(0,d.jsx)(e.code,{children:"#modeCheckBox:checked + .content"}),"规则中。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"body {\n  box-sizing: border-box;\n}\n\n.content {\n  padding: 10px;\n  transition: all 1s;\n}\n\n#modeCheckBox:checked + .content {\n  background-color: black;\n  color: white;\n  transition: all 1s;\n}\n"})}),"\n",(0,d.jsx)(e.p,{children:"这样我们就可以通过点击checkbox元素来进行“夜间模式”状态切换了："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)("img",{src:i,alt:""})}),"\n",(0,d.jsx)(e.p,{children:"如上图所示，当checkbox被选中时，页面进入夜间模式；当checkbox不被选中时，页面又进入白天模式。"}),"\n",(0,d.jsx)(e.p,{children:"当然，这个效果和需求还有一定差距 —— 不能让用户点击页面顶部的checkbox来替代点击右上角\uD83C\uDF1E图标，这不符合业务需求。于是，我们打算使用label元素代替checkbox触发用户的点击行为。"}),"\n",(0,d.jsx)(e.p,{children:"通过label元素的for属性指定的id，能够将label元素与对应的表单元素绑定，这样当用户点击label元素的时候，就相当于直接点击对应的表单元素。"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-html",children:'<body>\n  <input id="modeCheckBox" type="checkbox">\n  <div class="content">\n    <header>\n      <label id="modeBtn" for="modeCheckBox"></label>\n      <h1>深夜食堂</h1>\n    </header>\n    <main>\n      <div class="pic">\n        <img src="https://p2.ssl.qhimg.com/t0120cc20854dc91c1e.jpg">\n      </div>\n      <div class="description">\n        <p>\n            这是一间营业时间从午夜十二点到早上七点的特殊食堂。这里的老板，不太爱说话，却总叫人吃得热泪盈\n            眶。在这里，自卑的舞蹈演员偶遇隐退多年舞界前辈，前辈不惜讲述自己不堪回首的经历不断鼓舞年轻人，最终令其重拾自信；轻言绝交的闺蜜因为吃到共同喜爱的美食，回忆起从前的友谊，重归于好；乐观的绝症患者遇到同命相连的女孩，两人相爱并相互给予力量，陪伴彼此完美地走过了最后一程；一味追求事业成功的白领，在这里结交了真正暖心的朋友，发现真情比成功更有意义。食物、故事、真情，汇聚了整部剧的主题，教会人们坦然面对得失，对生活充满期许和热情。每一个故事背后都饱含深情，情节跌宕起伏，令人流连忘返 [6]  。\n        </p>\n      </div>\n    </main>\n  </div>\n</body>\n'})}),"\n",(0,d.jsx)(e.p,{children:"如上代码所示，我们将原来的button元素用label元素代替，并将label元素的for属性指向checkbox的id（modeCheckBox）。这样就能够让label元素绑定checkbox元素。"}),"\n",(0,d.jsx)(e.p,{children:"然后，我们再将checkbox框隐藏起来："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-css",children:"#modeCheckBox {\n  display: none;\n}\n"})}),"\n",(0,d.jsxs)(e.p,{children:["这样，我们就完美地实现了",(0,d.jsx)(e.strong,{children:"只用CSS，不使用JS代码"}),"实现的“夜间模式”切换。"]}),"\n",(0,d.jsx)(e.p,{children:"完整代码如下："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.a,{href:"https://junyux.github.io/FE-Advance/day01/index-v3.html",target:"_blank",rel:"noopener noreferrer",children:"在线演示"})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <title>深夜食堂</title>\n  <style>\n    body, html {\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n      overflow: hidden;\n    }\n    body {\n      box-sizing: border-box;\n    }\n    .content {\n      padding: 10px;\n      transition: all 1s;\n    }\n    div.pic img {\n      width: 100%;\n    }\n    #modeCheckBox {\n      display: none;\n    }\n    #modeCheckBox:checked + .content {\n      background-color: black;\n      color: white;\n      transition: all 1s;\n    }\n    #modeBtn {\n      font-size: 2rem;\n      float: right;\n    }\n    #modeBtn::after {\n      content: \'\uD83C\uDF1E\';\n    }\n    #modeCheckBox:checked + .content #modeBtn::after {\n      content: \'\uD83C\uDF1C\';\n    }\n  </style>\n</head>\n<body>\n  <input id="modeCheckBox" type="checkbox">\n  <div class="content">\n    <header>\n      <label id="modeBtn" for="modeCheckBox"></label>\n      <h1>深夜食堂</h1>\n    </header>\n    <main>\n      <div class="pic">\n        <img src="https://p2.ssl.qhimg.com/t0120cc20854dc91c1e.jpg">\n      </div>\n      <div class="description">\n        <p>\n            这是一间营业时间从午夜十二点到早上七点的特殊食堂。这里的老板，不太爱说话，却总叫人吃得热泪盈\n            眶。在这里，自卑的舞蹈演员偶遇隐退多年舞界前辈，前辈不惜讲述自己不堪回首的经历不断鼓舞年轻人，最终令其重拾自信；轻言绝交的闺蜜因为吃到共同喜爱的美食，回忆起从前的友谊，重归于好；乐观的绝症患者遇到同命相连的女孩，两人相爱并相互给予力量，陪伴彼此完美地走过了最后一程；一味追求事业成功的白领，在这里结交了真正暖心的朋友，发现真情比成功更有意义。食物、故事、真情，汇聚了整部剧的主题，教会人们坦然面对得失，对生活充满期许和热情。每一个故事背后都饱含深情，情节跌宕起伏，令人流连忘返 [6]  。\n        </p>\n      </div>\n    </main>\n  </div>\n</body>\n</html>\n'})}),"\n",(0,d.jsx)(e.p,{children:"现在，我们来比较一下这个版本和第二个故事中有JS的版本，它们各自的的优缺点在哪里："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"JS版本更加简洁，虽然用了JS，但HTML结构更简单。而且JS版本的兼容性要好一些，因为CSS版本使用了兄弟结点选择器，在早期的浏览器上，可能不能被支持。"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"CSS版本不用写JS代码，这样就不用维护JS代码，也不可能有JS的bug，所以也是有优势的，尤其是在移动端页面，不用担心浏览器兼容性的前提下，使用这一版更加放心。"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["虽然这两个版本各有优劣，但是要知道，再简单的代码，也可能会有bug，唯一不会有bug的方式就是不用写代码。",(0,d.jsx)(e.strong,{children:"所以，最好的JS代码就是没有JS代码。"})," 这个项目到这里就结束了，记住你学到的这些，就离高级前端工程师更近了一步。"]})]})}function h(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(r,{...n})}):r(n)}let a=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%2010%20%E6%97%A5%E8%B0%88%2F1.%E7%AC%AC%E4%B8%80%E6%97%A5%EF%BC%9A%E9%81%B5%E5%AE%88%E5%90%84%E5%8F%B8%E5%85%B6%E8%B4%A3%E5%8E%9F%E5%88%99.md"]={toc:[{text:"第一个故事：切换到夜间模式",id:"第一个故事切换到夜间模式",depth:2},{text:"第二个故事：用class属性表示元素的业务状态",id:"第二个故事用class属性表示元素的业务状态",depth:2},{text:"第三个故事：最好的JS代码是没有JS代码",id:"第三个故事最好的js代码是没有js代码",depth:2}],title:"1.第一日：遵守各司其责原则",headingTitle:"1.第一日：遵守各司其责原则",frontmatter:{}}}}]);