"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["12805"],{446754:function(n,e,s){n.exports=s.p+"static/image/0cd776b292842eec695a49eb89e153a7.3ab709b6.webp"},629442:function(n,e,s){n.exports=s.p+"static/image/1b92f412ed6e80210bc2da259240b827.623ae844.webp"},206510:function(n,e,s){n.exports=s.p+"static/image/2c89b9e452080be0eda5514fad9c0a25.e55ddec8.gif"},972074:function(n,e,s){n.exports=s.p+"static/image/b3174263375bc3e11dbd19a10b16a81b.9a38baf1.webp"},393216:function(n,e,s){s.r(e),s.d(e,{default:()=>k});var t=s(552676),a=s(740453);let i=s.p+"static/image/fa12b9102815e0fbd44190869a068252.20e3f486.webp";var r=s(206510);let c=s.p+"static/image/31cc60354de5f90c2bc2fd9bd1cc8246.84ba87e1.webp",o=s.p+"static/image/8abf0ac360f8e76e49cc6e0b80a769b3.b057b391.gif",d=s.p+"static/image/40dceb48840d5914caa8ef6174fe096a.0f267774.webp",p=s.p+"static/image/102647da3756040d20640c254ae34f62.c91fe5d2.webp",m=s.p+"static/image/f4f26b11483a227e3122680e225a58f0.3e5850c8.webp",l=s.p+"static/image/cd62ef53f500a3ef7844d8c04fd6e58d.99247c88.gif";var x=s(972074);let j=s.p+"static/image/f522d91ce67a80056e9fbfe64f712c1f.208e7787.webp",h=s.p+"static/image/f5e5011a311b1a4a8efbd1f5356cfe29.034d8095.gif",f=s.p+"static/image/72ff4663ab274f5ec468162973609413.7deeba09.webp",u=s.p+"static/image/e51fea796b2344e9701e1dc1dbfe1b41.67dfb39f.gif",g=s.p+"static/image/d6416bf490178e622669f412847464bc.48d53668.webp",b=s.p+"static/image/56431661570cb44f413e27d0f12abd15.c9f9c7d4.gif",w=s.p+"static/image/9e7e97600deb2ec7134985a1ed0bdea6.088074c9.gif",v=s.p+"static/image/eba8eafbc53cfd04132f30e089c797de.8f4cff78.webp",y=s.p+"static/image/8b36e94ab2fc7f24ffeb1f46cba6eef4.ace7d87b.webp";var E=s(629442),C=s(446754);function A(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"167-考试系统答题页面",children:["167. 考试系统：答题页面",(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#167-考试系统答题页面",children:"#"})]}),"\n",(0,t.jsx)(e.p,{children:"写完了答卷的后端部分，这节来写下前端页面。"}),"\n",(0,t.jsx)(e.p,{children:"在问卷星里，编辑完试卷后，点击发布后，会生成链接和二维码："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:C,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"打开链接就可以答题了："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:x,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"答完点提交会立刻判卷，给出分数，还可以查看正确答案和解析："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:E,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"这节我们来实现这部分功能。"}),"\n",(0,t.jsx)(e.p,{children:"首先给编辑按钮加上跳转编辑器的链接："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"<Link to={`/edit/${item.id}`}>编辑</Link>\n"})}),"\n",(0,t.jsx)(e.p,{children:"试下效果："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:w,alt:"2024-08-27 10.03.31.gif"})}),"\n",(0,t.jsx)(e.p,{children:"跳转成功，id 也是对的。"}),"\n",(0,t.jsx)(e.p,{children:"我们编辑下，点击保存："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:b,alt:"2024-08-27 15.12.05.gif"})}),"\n",(0,t.jsx)(e.p,{children:"加个返回按钮："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'<Button type="default">\n    <Link to="/">返回</Link>\n</Button>\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:u,alt:"2024-08-27 15.15.13.gif"})}),"\n",(0,t.jsx)(e.p,{children:"编辑完，点击保存，然后返回列表页就好了。"}),"\n",(0,t.jsx)(e.p,{children:"然后生成考试链接："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,t.jsx)(e.p,{children:"用 Popover 加个考试连接按钮。"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'<Popover content={window.location.origin + \'/exam/\' + item.id} trigger="click">\n    <Button type="default">\n        考试链接\n    </Button>\n</Popover>\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:h,alt:"2024-08-27 15.20.05.gif"})}),"\n",(0,t.jsx)(e.p,{children:"复制这个链接打开就是试卷。"}),"\n",(0,t.jsx)(e.p,{children:"当然，我们还没实现这个路由。"}),"\n",(0,t.jsx)(e.p,{children:"加一下："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'{\n    path: "exam/:id",\n    element: <Exam />,\n},\n'})}),"\n",(0,t.jsx)(e.p,{children:"然后实现下这个组件："}),"\n",(0,t.jsx)(e.p,{children:"pages/Exam/index.tsx"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'import { useParams } from "react-router-dom";\n\nexport function Exam() {\n\n    let { id } = useParams();\n\n    return <div>\n        Exam: {id}\n    </div>\n}\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"这个页面要做的事情就是拿到 json，根据 json 渲染表单："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:x,alt:""})}),"\n",(0,t.jsx)(e.p,{children:"然后点击提交的时候保存答卷。"}),"\n",(0,t.jsx)(e.p,{children:"先渲染下 json："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'import { useEffect, useState } from "react";\nimport { useParams } from "react-router-dom";\nimport { Question } from "../Edit";\nimport { examFind } from "../../interfaces";\nimport { Button, Checkbox, Input, message, Radio } from "antd";\nimport \'./index.scss\';\n\nexport function Exam() {\n\n    let { id } = useParams();\n    const [json, setJson] = useState<Array<Question>>([])\n\n    async function query() {\n        if(!id) {\n            return;\n        }\n        try {\n            const res = await examFind(+id);\n            if(res.status === 201 || res.status === 200) {\n                try{\n                    setJson(JSON.parse(res.data.content))\n                } catch(e) {}\n            } \n        } catch(e: any){\n            message.error(e.response?.data?.message || \'系统繁忙，请稍后再试\');\n        }\n    }\n\n    useEffect(() => {\n        query();        \n    }, [])\n\n    function renderComponents(arr: Array<Question>) {\n        return arr.map(item => {\n            let formComponent;\n            if(item.type === \'radio\') {\n                formComponent = <Radio.Group>\n                    {\n                        item.options?.map(option => <Radio value={option}>{option}</Radio>)\n                    }\n                </Radio.Group>\n            } else if(item.type === \'checkbox\') {\n                formComponent = <Checkbox.Group options={item.options} />\n            } else if(item.type === \'input\'){\n                formComponent =  <Input/>\n            }\n\n            return <div className="component-item" key={item.id}>\n                <p className="question">{item.question}</p>\n                <div className="options">\n                    {formComponent}\n                </div>\n            </div>\n        })\n    }\n\n    return <div className="exam-container">\n        {renderComponents(json)}\n        <Button type="primary" className="btn">提交</Button>\n    </div>\n}\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"index.scss"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-scss",children:".exam-container {\n    width: 800px;\n    margin: 30px auto;\n\n    .component-item {\n        margin: 20px;\n\n        line-height: 40px;\n        font-size: 20px;\n    }\n    .btn {\n        width: 300px;\n    }\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"请求 examFind 接口，拿到 json 之后调用 renderComponents 渲染。"}),"\n",(0,t.jsx)(e.p,{children:"加上一个提交按钮。"}),"\n",(0,t.jsx)(e.p,{children:"看下效果："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:l,alt:"2024-08-27 15.33.21.gif"})}),"\n",(0,t.jsx)(e.p,{children:"然后做下点击提交按钮的处理。"}),"\n",(0,t.jsx)(e.p,{children:"我们按照这种格式来保存答卷："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:"[\n    {\n        id: 1,\n        answer: 'xxx'\n    },\n    {\n        id: 2,\n        answer: 'yyy'\n    }\n]\n"})}),"\n",(0,t.jsx)(e.p,{children:"每个元素对应一道题的答案，id 是题目 id，answer 是答案。"}),"\n",(0,t.jsx)(e.p,{children:"interfaces/index.tsx 加一下提交答案的接口："}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"const answerServiceInstance = axios.create({\n    baseURL: 'http://localhost:3003/',\n    timeout: 3000\n});\n\nanswerServiceInstance.interceptors.request.use(requestInterceptor)\n\nanswerServiceInstance.interceptors.response.use(\n    responseIntercepor, \n    responseErrorIntercepor\n)\n\nexport async function answerAdd(data: { examId: number, content: string}) {\n    return await answerServiceInstance.post('/answer/add', data);\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"这里调用答案微服务的接口需要单独创建一个 axios 的实例。"}),"\n",(0,t.jsx)(e.p,{children:"然后在页面调用下："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,t.jsx)(e.p,{children:"加一个 state 来存储  answer 数组，拿到 json 的时候初始化 answers 数组。"}),"\n",(0,t.jsx)(e.p,{children:"然后表单 onChange 的时候修改 answers 数组元素。"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)("img",{src:p,alt:"image.png"}),"\n点击提交的时候，打印下："]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'import { useEffect, useState } from "react";\nimport { useParams } from "react-router-dom";\nimport { Question } from "../Edit";\nimport { examFind } from "../../interfaces";\nimport { Button, Checkbox, Input, message, Radio } from "antd";\nimport \'./index.scss\';\n\nexport function Exam() {\n\n    let { id } = useParams();\n    const [json, setJson] = useState<Array<Question>>([])\n    const [answers, setAnswers] = useState<Array<{ id: number, answer: string}>>([]);\n\n    async function query() {\n        if(!id) {\n            return;\n        }\n        try {\n            const res = await examFind(+id);\n            if(res.status === 201 || res.status === 200) {\n                try{\n                    const content = JSON.parse(res.data.content);\n                    setJson(content)\n                    setAnswers(content.map((item: {id: number}) => {\n                        return {\n                            id: item.id\n                        }\n                    }));\n                } catch(e) {}\n            } \n        } catch(e: any){\n            message.error(e.response?.data?.message || \'系统繁忙，请稍后再试\');\n        }\n    }\n\n    useEffect(() => {\n        query();        \n    }, [])\n\n\n    function setAnswer(id: number, value: string) {\n        setAnswers(answers.map(item => {\n            return item.id === id ? {\n                id,\n                answer: value\n            } : item\n        }))\n    }\n\n    function renderComponents(arr: Array<Question>) {\n        return arr.map((item) => {\n            let formComponent;\n            if(item.type === \'radio\') {\n                formComponent = <Radio.Group onChange={(e) => {\n                    setAnswer(item.id, e.target.value)\n                }}>\n                    {\n                        item.options?.map(option => <Radio value={option}>{option}</Radio>)\n                    }\n                </Radio.Group>\n            } else if(item.type === \'checkbox\') {\n                formComponent = <Checkbox.Group options={item.options} onChange={(values) => {\n                    setAnswer(item.id, values.join(\',\'))\n                }}/>\n            } else if(item.type === \'input\'){\n                formComponent =  <Input onChange={(e) => {\n                    setAnswer(item.id, e.target.value)\n                }}/>\n            }\n\n            return <div className="component-item" key={item.id}>\n                <p className="question">{item.question}</p>\n                <div className="options">\n                    {formComponent}\n                </div>\n            </div>\n        })\n    }\n\n    return <div className="exam-container">\n        {renderComponents(json)}\n        <Button type="primary" className="btn" onClick={() => {\n            console.log(answers)\n        }}>提交</Button>\n    </div>\n}\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"试下效果："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:o,alt:"2024-08-27 16.01.23.gif"})}),"\n",(0,t.jsx)(e.p,{children:"接下来只要调用下新建答卷的接口就好了。"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"const addAnswer = useCallback(async function () {\n    if(!id) {\n        return;\n    }\n    try {\n        const res = await answerAdd({\n            examId: +id,\n            content: JSON.stringify(answers)\n        });\n\n        if(res.status === 201 || res.status === 200) {\n            try{\n                message.success('提交成功');\n\n                navigate('/res/' + res.data.id);\n            } catch(e) {}\n        } \n    } catch(e: any){\n        message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n    }\n}, [answers]);\n"})}),"\n",(0,t.jsxs)(e.p,{children:["测试下：\n",(0,t.jsx)("img",{src:r,alt:"2024-08-27 16.14.41.gif"})]}),"\n",(0,t.jsx)(e.p,{children:"提交成功，跳转的链接也是对的。"}),"\n",(0,t.jsx)(e.p,{children:"看下返回的响应："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)("img",{src:i,alt:"image.png"})}),"\n",(0,t.jsx)(e.p,{children:"保存的答案也是对的。"}),"\n",(0,t.jsx)(e.p,{children:"案例代码在小册仓库："}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exam-system-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,t.jsxs)(e.h2,{id:"总结",children:["总结",(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,t.jsx)(e.p,{children:"这节实现了答题页面。"}),"\n",(0,t.jsx)(e.p,{children:"编辑完考试可以生成链接，打开链接答题后就会保存提交的答案。"}),"\n",(0,t.jsx)(e.p,{children:"渲染试卷 json 的逻辑和预览时一样。"}),"\n",(0,t.jsx)(e.p,{children:"表单 onChange 的时候修改 answers 状态，当点击提交的时候调用接口保存答卷。"}),"\n",(0,t.jsx)(e.p,{children:"这样从新建考试，编辑试卷，到答题提交答案的流程就完成了。"})]})}function N(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(A,{...n})}):A(n)}let k=N;N.__RSPRESS_PAGE_META={},N.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F167.%20%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F%EF%BC%9A%E7%AD%94%E9%A2%98%E9%A1%B5%E9%9D%A2.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"167. 考试系统：答题页面",headingTitle:"167. 考试系统：答题页面",frontmatter:{}}}}]);