"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["75396"],{603790:function(e,n,t){e.exports=t.p+"static/image/364b5960fd041aa3bcbca25943631da5.660ccd19.webp"},636445:function(e,n,t){e.exports=t.p+"static/image/cdbdce5b62a8470f198a5fdf9f7b02ae.c5d77664.webp"},259021:function(e,n,t){t.r(n),t.d(n,{default:()=>P});var r=t(552676),i=t(740453);let s=t.p+"static/image/1f069bd7be81c3d3f86890e4698c8ab7.0d008a22.gif",a=t.p+"static/image/ed42c435561d9dc7f2bee285bf592ca4.f7941816.webp",c=t.p+"static/image/e21e4e3da784fc447cd636384e20b28c.5cc1787d.webp",p=t.p+"static/image/1094b5b6531202eeec7e6bd20dacf1ad.24453b57.webp",l=t.p+"static/image/8eb734632f9a108b0353386d79d588d1.dd9b51b0.webp",d=t.p+"static/image/38a85ed583ffca058dfd79e4788adfdb.26325f14.webp",o=t.p+"static/image/97ea64d21c6af4d1e28e1cca0b68df5c.7416f15b.webp",h=t.p+"static/image/d1f704511f9dca21d818b328ce8f1cb9.4dab4bad.webp",g=t.p+"static/image/757810e07b1605e6e60e09e6385e7afd.7045a06c.webp",x=t.p+"static/image/e2d58359c49253fc593b6b880f438f9c.473dbf7a.gif",j=t.p+"static/image/a5bfd7f446017fb6f6af21ed55505fea.63be3537.webp";var m=t(636445),u=t(603790);let b=t.p+"static/image/2b9b9ff24c7fc7774807de4555f866f8.923943ce.webp",f=t.p+"static/image/62d67d0aaf487e9e851c5a1c47e7c197.3d46a6d3.webp",w=t.p+"static/image/3871c600dfd3ae1c1fd04be7115de4b7.b4dbe560.webp",v=t.p+"static/image/2f88763ce15635b8c045dcb73350d1f1.8373120c.webp",y=t.p+"static/image/1f136a8f688ca9517552de27d53f86ce.bb7ea751.webp",S=t.p+"static/image/3b2f7ff8c2bfc2419317ff46f1b2f4d6.41ad7be6.webp";function A(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",strong:"strong",h2:"h2"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"106-如何用代码动态生成-ppt",children:["106. 如何用代码动态生成 PPT",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#106-如何用代码动态生成-ppt",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"假设有一天，你需要整理一份中国所有大学信息的 ppt。"}),"\n",(0,r.jsx)(n.p,{children:"大学的信息是能搜到的，但是一份份整理到 ppt 里也太麻烦了。"}),"\n",(0,r.jsx)(n.p,{children:"能不能用代码自动生成 PPT呢？"}),"\n",(0,r.jsx)(n.p,{children:"自然是可以的。"}),"\n",(0,r.jsxs)(n.p,{children:["这里大学的信息可以从",(0,r.jsx)(n.a,{href:"https://www.icourse163.org/university/view/all.htm#/",target:"_blank",rel:"noopener noreferrer",children:"中国大学 MOOC"}),"这里抓取："]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:S,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"我们用 puppeteer 来爬取大学的校徽、名字、介绍，然后用这些信息来生成 pdf 等。"}),"\n",(0,r.jsx)(n.p,{children:"创建个 Nest 项目："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nest new ppt-generate\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:y,alt:""}),"\n安装 puppeteer："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install --save puppeteer\n"})}),"\n",(0,r.jsx)(n.p,{children:"然后在 AppService 里引入下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Injectable } from '@nestjs/common';\nimport puppeteer from 'puppeteer';\n\nlet cache = null;\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  async getUniversityData() {\n    if(cache) {\n      return cache;\n    }\n  \n    const browser = await puppeteer.launch({\n        headless: true,\n        defaultViewport: {\n            width: 0,\n            height: 0\n        }\n    });\n    \n    const page = await browser.newPage();\n    \n    await page.goto('https://www.icourse163.org/university/view/all.htm');\n    \n    await page.waitForSelector('.u-usitys');\n    \n    const universityList = await page.$eval('.u-usitys', el => {\n        return [...el.querySelectorAll('.u-usity')].map(item => {\n          return {\n            name: item.querySelector('img').alt,\n            img: item.querySelector('img').src,\n            link: item.getAttribute('href')\n          }\n      })\n    });\n\n    await browser.close();\n\n    cache = universityList;\n\n    return universityList;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"这里用 puppeteer 抓取中国大学 mooc 的学校列表的信息。"}),"\n",(0,r.jsx)(n.p,{children:"headless 指定 true，不用看界面了。"}),"\n",(0,r.jsx)(n.p,{children:"然后简单在内存做了下 cache，没用 redis。"}),"\n",(0,r.jsx)(n.p,{children:"在 AppController 里加个路由："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Get('list')\nasync universityList() {\n    return this.appService.getUniversityData();\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"把服务跑起来："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm run start:dev\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"试一下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"然后继续点进详情页，拿到学校的描述："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"抓取每个学校数据的时间太长，我们用 SSE（server sent event） 的方式返回数据。"}),"\n",(0,r.jsx)(n.p,{children:"Sever Sent Event 就是服务端返回的 Content-Type 是 text/event-stream，这是一个流，可以多次返回内容，通过这种方式来随时推送数据。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"SSE 类似这样用："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"改下 AppController"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"@Sse('list')\nasync universityList() {\n    return this.appService.getUniversityData();\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"还有 AppService"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Injectable } from '@nestjs/common';\nimport puppeteer from 'puppeteer';\nimport { Observable, Subscriber } from 'rxjs';\n\nlet cache = null;\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  async getUniversityData() {\n    if(cache) {\n      return cache;\n    }\n\n    async function getData(observer: Subscriber<Record<string, any>>) {\n      \n      const browser = await puppeteer.launch({\n          headless: true,\n          defaultViewport: {\n              width: 0,\n              height: 0\n          }\n      });\n      \n      const page = await browser.newPage();\n      \n      await page.goto('https://www.icourse163.org/university/view/all.htm');\n      \n      await page.waitForSelector('.u-usitys');\n\n      const universityList: Array<Record<string, any>> = await page.$eval('.u-usitys', el => {\n          return [...el.querySelectorAll('.u-usity')].map(item => {\n            return {\n              name: item.querySelector('img').alt,\n              img: item.querySelector('img').src,\n              link: item.getAttribute('href')\n            }\n        })\n      });\n\n      for(let i = 0; i < universityList.length; i ++) {\n        const item = universityList[i];\n        await page.goto('https://www.icourse163.org' + item.link);\n\n        await page.waitForSelector('.m-cnt');\n\n        const content = await page.$eval('.m-cnt p', el => el.textContent);\n        item.desc = content;\n\n        observer.next({data: item});\n\n      }\n\n      await browser.close();\n\n      cache = universityList;\n    }\n\n    return  new Observable((observer) => {\n      getData(observer);\n    });\n\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"主要是返回一个 rxjs 的 Observable 然后不断用 observer.next 返回数据。"}),"\n",(0,r.jsx)(n.p,{children:"试一下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SSE 和爬虫简直是绝配！"})}),"\n",(0,r.jsxs)(n.p,{children:["接下来生成 ppt，用 ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/pptxgenjs",target:"_blank",rel:"noopener noreferrer",children:"pptxgenjs"})," 这个包。"]}),"\n",(0,r.jsx)(n.p,{children:"用法很简单："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"new 一个实例，添加一个 Slide，然后添加 text image 等内容，最后写入文件。"}),"\n",(0,r.jsx)(n.p,{children:"我们先测试下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install --save pptxgenjs\n"})}),"\n",(0,r.jsx)(n.p,{children:"新建 test.js"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const pptxgen = require('pptxgenjs');\n\nconst ppt = new pptxgen();\n\nconst slide  = ppt.addSlide();\n\nslide.addText('北京大学', { x: '10%', y: '10%', color: '#ff0000', fontSize: 30,  align: ppt.AlignH.center,});\n\nslide.addImage({ \n    path: \"https://nos.netease.com/edu-image/F78C41FA9703708FB193137A688F7195.png?imageView&thumbnail=150y150&quality=100\", \n    x: '42%',\n    y: '25%',\n});\n\nslide.addText(`北京大学创办于1898年，初名京师大学堂，是中国第一所国立综合性大学，也是当时中国最高教育行政机关。辛亥革命后，于1912年改为现名。 学校为教育部直属全国重点大学，国家“211工程”、“985工程”建设大学、C9联盟，以及东亚研究型大学协会、国际研究型大学联盟、环太平洋大学联盟、东亚四大学论坛的重要成员。`, \n    { x: '10%', y: '60%', color: '#000000', fontSize: 14,}\n);\n\nppt.writeFile({\n    fileName: '中国所有大学.pptx'\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"分别指定文字和图片的 x、y，对齐方式 align。"}),"\n",(0,r.jsx)(n.p,{children:"跑一下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"node ./test.js\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"打开看一下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:"没问题。"}),"\n",(0,r.jsx)(n.p,{children:"然后我们在 list 接口里加一下这个："}),"\n",(0,r.jsx)(n.p,{children:"顺便替换下校徽图片，之前取的这个："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"换成这里的："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Injectable } from '@nestjs/common';\nimport puppeteer from 'puppeteer';\nimport { Observable, Subscriber } from 'rxjs';\nconst pptxgen = require('pptxgenjs');\n\nlet cache = null;\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  async getUniversityData() {\n    if(cache) {\n      return cache;\n    }\n\n    async function getData(observer: Subscriber<Record<string, any>>) {\n      \n      const browser = await puppeteer.launch({\n          headless: true,\n          defaultViewport: {\n              width: 0,\n              height: 0\n          }\n      });\n      \n      const page = await browser.newPage();\n      \n      await page.goto('https://www.icourse163.org/university/view/all.htm');\n      \n      await page.waitForSelector('.u-usitys');\n\n      const universityList: Array<Record<string, any>> = await page.$eval('.u-usitys', el => {\n          return [...el.querySelectorAll('.u-usity')].map(item => {\n            return {\n              name: item.querySelector('img').alt,\n              link: item.getAttribute('href')\n            }\n        })\n      });\n\n      const ppt = new pptxgen();\n\n      for(let i = 0; i < universityList.length; i ++) {\n        const item = universityList[i];\n        await page.goto('https://www.icourse163.org' + item.link);\n\n        await page.waitForSelector('.m-cnt');\n\n        const content = await page.$eval('.m-cnt p', el => el.textContent);\n        item.desc = content;\n\n        item.img = await page.$eval('.g-doc img', el => el.getAttribute('src'));\n\n        observer.next({data: item});\n\n        const slide = ppt.addSlide();\n\n        slide.addText(item.name, { x: '10%', y: '10%', color: '#ff0000', fontSize: 30,  align: ppt.AlignH.center,});\n\n        slide.addImage({ \n            path: item.img, \n            x: '42%',\n            y: '25%',\n        });\n\n        slide.addText(item.desc, \n            { x: '10%', y: '60%', color: '#000000', fontSize: 14,}\n        );\n      }\n\n      await browser.close();\n\n      await ppt.writeFile({\n        fileName: '中国所有大学.pptx'\n      })\n\n      cache = universityList;\n    }\n\n    return  new Observable((observer) => {\n      getData(observer);\n    });\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:c,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"跑一下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"跑完之后可以看到，动态生成了 400 多张 ppt："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)("img",{src:s,alt:""})}),"\n",(0,r.jsxs)(n.p,{children:["案例代码上传了 github：",(0,r.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/ppt-generate",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/ppt-generate"})]}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:["总结",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"我们使用 puppeteer 抓取了大学的信息，用 SSE 的方式创建了接口，不断返回爬取到的数据。"}),"\n",(0,r.jsx)(n.p,{children:"然后用 pptxgenjs 来生成了 ppt。"}),"\n",(0,r.jsx)(n.p,{children:"这样，400 多张 PPT 瞬间就生成了，不用自己手动搞。"})]})}function E(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}let P=E;E.__RSPRESS_PAGE_META={},E.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F106.%20%E5%A6%82%E4%BD%95%E7%94%A8%E4%BB%A3%E7%A0%81%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%20PPT.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"106. 如何用代码动态生成 PPT",headingTitle:"106. 如何用代码动态生成 PPT",frontmatter:{}}}}]);