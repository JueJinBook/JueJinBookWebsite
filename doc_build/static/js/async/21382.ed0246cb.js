"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["21382"],{297814:function(e,n,d){d.r(n),d.d(n,{default:()=>r});var c=d(552676),a=d(740453);function i(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong",pre:"pre",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"87小程序码",children:["87.小程序码",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#87小程序码",children:"#"})]}),"\n",(0,c.jsxs)(n.h2,{id:"132-小程序码",children:["13.2 小程序码",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#132-小程序码",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["通过服务端云函数可以获取一个小程序任意页面的小程序码，扫描该小程序码就可以直接进入小程序对应的页面，所有生成的小程序码永久有效，可长期使用。小程序码具有更好的辨识度，且拥有展示“公众号关注组件”等高级能力。当用户扫小程序码打开小程序时，开发者可在小程序内配置公众号关注组件",(0,c.jsx)(n.code,{children:"official-account"}),"，用户可以快捷关注公众号。"]}),"\n",(0,c.jsxs)(n.h3,{id:"1321-获取小程序码",children:["13.2.1 获取小程序码",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1321-获取小程序码",children:"#"})]}),"\n",(0,c.jsxs)(n.h4,{id:"1小程序码的接口说明",children:["1、小程序码的接口说明",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1小程序码的接口说明",children:"#"})]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"wxacode.get，适用于需要的码数量较少的业务场景，可接受 path 参数较长，页面路径最大长度 128 字节；生成的小程序码永久有效，个数有限。"}),"\n",(0,c.jsx)(n.li,{children:"wxacode.getUnlimited，获取小程序码，适用于需要的码数量极多的业务场景。生成的小程序码，永久有效，数量暂无限制，但是此方法只支持32个字符。"}),"\n",(0,c.jsx)(n.li,{children:"wxacode.createQRCode（不推荐使用），和wxacode.get类似，只是生成的不是小程序码，而是小程序的二维码"}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"wxacode.get 和 wxacode.createQRCode 总共生成的码数量限制为10万个，也就是究极你的小程序的一生，只能通过这两种方式生成10万个小程序码和小程序二维码，不过如果参数相同，是不算次数的，所以10万个还是挺多的。"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"wxacode.get和wxacode.getUnlimited的区别"}),"\n如果你的小程序页面参数是动态更新的，建议使用wxacode.getUnlimited，如果你的小程序页面包含了非常多的运营类的参数，32个字符不够用，或者动态页面较少，那可以使用wxacode.get，通常用wxacode.getUnlimited比较稳妥。\nwxacode.getUnlimited可能32个字符不够用，比如想追踪分享小程序码的用户的openid，比如希望记录更多运营数据，不过即使不够用，也是有替代方法的，就是在数据库里添加一个字段ID，将你要记录的这些参数与这个简短而独一无二的ID对应，这个会浪费一点数据库的性能，不过也在可以接受范围之类。\n除此之外，在云调用时传递的参数上，wxacode.get是必须填写path的（path为小程序的页面路径，即包含page和scene），而wxacode.getUnlimited的page和scene是分开的，可以只填scene，不必填写page。"]}),"\n",(0,c.jsxs)(n.h4,{id:"2新建云函数并添加权限",children:["2、新建云函数并添加权限",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2新建云函数并添加权限",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"首先我们使用开发者工具，新建一个云函数比如wxacode，然后在config.json里添加如下权限配置（前面已经反复强调权限配置文件json的格式），也就是我们在处理云调用时，一定要先添加权限，而且权限文件的格式不能出错。"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:'{\n  "permissions": {\n    "openapi": [\n      "wxacode.get",\n      "wxacode.getUnlimited"\n    ]\n  }\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"然后在index.js里添加如下代码，我们先以wxacode.getUnlimited这个接口为例获取小程序码，然后再把小程序码上传到云存储里，"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const cloud = require('wx-server-sdk')\ncloud.init({\n  env: cloud.DYNAMIC_CURRENT_ENV\n})\n\nexports.main = async (event, context) => {\n  const wxacodeResult = await cloud.openapi.wxacode.getUnlimited({\n    scene: 'uid=1jigsdff', //只支持数字，大小写英文以及部分特殊字符：!#$&'()*+,/:;=?@-._~，不能有空格之类的其他字符\n    page: 'page/index/index',  //注意这个必须是已经发布的小程序存在的页面（否则报错），根路径前不要填加 /,不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面；但是你要填写就不要写错路径\n  })\n\n  const uploadResult = await cloud.uploadFile({\n    cloudPath: `wxacode.jpg`,\n    fileContent: wxacodeResult.buffer,\n  })\n\n  return uploadResult.fileID\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"而如果是使用wxacode.get这个接口，它传递的参数会有所不同，"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const result = await cloud.openapi.wxacode.get({\n  path: 'page/index/index?uid=1jigsdff',\n})\n"})}),"\n",(0,c.jsx)(n.p,{children:"调用这个云函数，就能在云存储里看到生成的wxacode.jpg小程序码了。我们可以把集合的某个字段的id，或者页面id等参数写进小程序码里。"}),"\n",(0,c.jsxs)(n.h3,{id:"1322-通过小程序码进入小程序",children:["13.2.2 通过小程序码进入小程序",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1322-通过小程序码进入小程序",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"通过追踪带有参数的小程序码，我们就能知道用户到底是通过我们生成的哪个小程序码进入到小程序的，这个功能应用的场景有很多，尤其是运营上特别有用，比如追踪用户的分享来增加积分或返利，追踪各个渠道的运营效果等等，要完成这样的步骤，除了生成带参数的小程序外，还需小程序能识别该小程序码。"}),"\n",(0,c.jsxs)(n.h4,{id:"1小程序码与场景值",children:["1、小程序码与场景值",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1小程序码与场景值",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"场景值用来描述用户进入小程序的路径，比如公众号文章的自定义菜单、模板消息、文章等，二维码的扫描、长按、通过识别手机相册的二维码等，微信群聊或单聊等，微信首页顶部搜索框等，也就是用户到底是通过什么方式进入到我们的小程序的，会有一个对应的场景值，扫描小程序码的是1047，长按图片识别小程序码为1048，扫描手机相册中选取的小程序码为1049。"}),"\n",(0,c.jsxs)(n.p,{children:["我们可以在 App生命周期的 onLaunch 和 onShow，或",(0,c.jsx)(n.code,{children:"wx.getLaunchOptionsSync"}),"(注意，这个接口是一个对象，不是一个函数) 中获取上述场景值，在下面的options对象里就会包含scene"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"  onLaunch (options) {\n    console.log('onLaunch方法',options)\n  },\n  onShow (options) {\n    console.log('onShow方法',options)\n  },\n"})}),"\n",(0,c.jsx)(n.p,{children:"在options对象里就包含着scene这个属性，属性的值即为场景值："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:'path: "" //页面路径\nquery: {} //页面的参数\nreferrerInfo: {} //来源小程序、公众号或 App 的 appId\nscene: 1047 //场景值\nshareTicket: //带 shareTicket 的转发可以获取到更多的转发信息，例如群聊的名称以及群的标识 openGId\n'})}),"\n",(0,c.jsxs)(n.h4,{id:"2获取小程序码里的参数",children:["2、获取小程序码里的参数",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2获取小程序码里的参数",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["值得注意的是，使用",(0,c.jsx)(n.code,{children:"cloud.openapi.wxacode.get"}),"和",(0,c.jsx)(n.code,{children:"cloud.openapi.wxacode.getUnlimited"}),"生成的小程序码所带的参数在调试时需要使用开发工具的条件编译自定义参数 ",(0,c.jsx)(n.code,{children:"scene=xxxx"})," 进行模拟，开发工具模拟时的scene的参数值需要进行encodeURIComponent。\n首先我们需要encodeURIComponent()方法将我们要传递的参数进行编码，比如我们要传递",(0,c.jsx)(n.code,{children:"“a=3&b=4&c=5”"}),"这样的参数，我们可以直接在控制台里进行编码："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"encodeURIComponent('a=3&b=4&c=5')\n"})}),"\n",(0,c.jsxs)(n.p,{children:["编码之后的结果为",(0,c.jsx)(n.code,{children:"a%3D3%26b%3D4%26c%3D5"}),"，调试时可以添加编译模式，在启动参数里填入"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"scene=a%3D3%26b%3D4%26c%3D5\n"})}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"小程序码不只是一个技术问题，更多的是涉及到运营，让运营的效果可以量化追踪，是增长黑客、数据运营的关键，场景值可以让我们了解小程序的增长来源；而将一些参数写进小程序码，可以让我们根据参数的不同来采取不同的运营策略，比如广告点击、返利、分销、拼团、分享追踪等等。作为开发人员，可以多和运营交流，让小程序的增长更有效果。"}),"\n"]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}let r=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F87.%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%81.md"]={toc:[{text:"13.2 小程序码",id:"132-小程序码",depth:2},{text:"13.2.1 获取小程序码",id:"1321-获取小程序码",depth:3},{text:"1、小程序码的接口说明",id:"1小程序码的接口说明",depth:4},{text:"2、新建云函数并添加权限",id:"2新建云函数并添加权限",depth:4},{text:"13.2.2 通过小程序码进入小程序",id:"1322-通过小程序码进入小程序",depth:3},{text:"1、小程序码与场景值",id:"1小程序码与场景值",depth:4},{text:"2、获取小程序码里的参数",id:"2获取小程序码里的参数",depth:4}],title:"87.小程序码",headingTitle:"87.小程序码",frontmatter:{}}}}]);