"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["60471"],{347074:function(n,e,r){r.r(e),r.d(e,{default:()=>t});var a=r(552676),i=r(740453);let s=r.p+"static/image/5e9b35b0ad22abbc0e42e42deedae8e1.e2cae87e.webp",h=r.p+"static/image/242dc11f801942fca3dd22373f3fe58e.7d49247f.webp";function c(n){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",img:"img",code:"code",ul:"ul",li:"li",strong:"strong",br:"br"},(0,i.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"1-开篇大模型时代如何跟上节奏",children:["1-开篇：大模型时代，如何跟上节奏？",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-开篇大模型时代如何跟上节奏",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"大模型时代已经到来，随着基础模型越来越卷，可预见的未来我们会看到 token 越来越便宜、性能越来越强、速度越来越快，甚至是端侧运行的大模型。"}),"\n",(0,a.jsx)(e.p,{children:"就当下的时间节点，基础模型的质量、速度和价格已经是完全可用的程度，正处于大模型应用爆发的前夜。"}),"\n",(0,a.jsxs)(e.h2,{id:"为什么是-javascript",children:["为什么是 JavaScript？",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#为什么是-javascript",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"我们先从观察者的视角来看：什么是大模型时代的语言？"}),"\n",(0,a.jsxs)(e.p,{children:["我们打开 ",(0,a.jsx)(e.a,{href:"https://platform.openai.com/docs/api-reference",target:"_blank",rel:"noopener noreferrer",children:"OpenAI API"})," 的官方网站，其官方支持的 API 只有 Python 和 JavaScript，包括像大模型流行的应用框架 LangChain、dify 等等，都是只提供了 Python 和 JavaScript 版本，前者的地位不言而喻，但为何是 JavaScript？"]}),"\n",(0,a.jsx)(e.p,{children:"因为随着各种 SaaS/PaaS 平台的建设，传统开发中的服务器、数据库等基础设施的复杂度被隔离，通过简单的 API 我们就能完成服务器和数据库的全球部署。也就是，开发者可以将目光转到真正对用户有价值的领域，也就是直接跟用户产生交互的前端部分。"}),"\n",(0,a.jsx)(e.p,{children:"这也就是为何全栈工程师越来越流行，借助 Node.js 和各种云服务，我们可以利用好前后端同构的优势，迅速部署应用。"}),"\n",(0,a.jsx)(e.p,{children:"而大模型时代的到来更加速了这一趋势，创意成为一个应用能否流行的核心，技术成为工具，我们可以迅速搭建有趣的大模型应用呈现给用户，然后收集反馈、持续迭代，这都离不开唯一的全栈语言 —— JavaScript。"}),"\n",(0,a.jsxs)(e.h2,{id:"为什么是-langchain",children:["为什么是 LangChain？",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#为什么是-langchain",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"首先是我们为什么需要一个大模型的应用框架？"}),"\n",(0,a.jsx)(e.p,{children:"因为 LLM 的 API 只是提供了一个非常基础的调用方式，当我们要构建一个复杂的 Chat Bot 时，就需要考虑如何保存聊天的上下文、如何进行网络搜索、如何加载 pdf 等等工程问题，这些都是应用框架可以帮助我们解决的。"}),"\n",(0,a.jsx)(e.p,{children:"那为什么是 LangChain？"}),"\n",(0,a.jsx)(e.p,{children:"首先是足够的流行度和认可度，目前已经在 Github 获得 83k star，并且其上升速度非常恐怖："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:h,alt:"CleanShot 2024-04-25 at 22.49.57@2x.png"})}),"\n",(0,a.jsx)(e.p,{children:"从 LangChain 一经推出，就成为大模型应用框架领域的明星，star 数多意味着生态活跃，我们需要的各种集成工具都能轻易获得。"}),"\n",(0,a.jsx)(e.p,{children:"而 LangChain.js 并不是 Python 版本的套壳，而是一个完整的团队从 0 开始构建的生态，足以看出官方对 JavaScript 生态的重视："}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)("img",{src:s,alt:"CleanShot 2024-04-25 at 22.57.47@2x.png"})}),"\n",(0,a.jsx)(e.p,{children:"所以，作为前端程序员，我们想抓住大模型的浪潮，需要的就是动作够快。"}),"\n",(0,a.jsx)(e.p,{children:"我们从熟悉的语言 JavaScript 入手，去使用大模型领域最流行的框架去构建应用，在第一线去感受大模型的发展和能力特点。从实战中得到的经验更有价值，我们不只是看技术文章对大模型应用的分析，而且直接参与到大模型应用的开发中，尝试自己一些想法，落地一些应用，这可以让我们跟上大模型时代的浪潮。"}),"\n",(0,a.jsxs)(e.h2,{id:"小册如何学",children:["小册如何学",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#小册如何学",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"本小册希望从应用侧程序员的角度，带大家用自己最熟悉的语言 JavaScript 去入门大模型的开发，希望大家用较低的理解和上手成本，开始大模型应用从 POC 到落地的完整流程。"}),"\n",(0,a.jsxs)(e.p,{children:["小册主要分成",(0,a.jsx)(e.code,{children:"四个部分"}),"："]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"背景知识"}),(0,a.jsx)(e.br,{}),"\n","这里我们主要介绍基础的背景知识和基本工具的配置。我们会讲到获取 OpenAI API 比较方便的一些方式、学习配置 Deno 和 Jupyter NoteBook 来辅助开发 LLM app、以及 LangChain.js 的基础知识入门。"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"检索增强生成（RAG）"}),(0,a.jsx)(e.br,{}),"\n","这一模块我们会从概念开始，讲解 RAG 这一最流行的大模型编程范式，几乎市面上所有 Chat Bot 都有 RAG 的影子。我们会对其中每个流程的原理、实现方式、优化方式进行展开讲解。"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Agent"}),(0,a.jsx)(e.br,{}),"\n","这一模块我们会探索迈向 AGI 的第一步，我们去了解其原理和实现方式，并探讨其应用价值和落地方式，这一模块非常有趣，你可以看到 LLM 作为一个逻辑引擎是如何思考和运作的。"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"实战部分"}),(0,a.jsx)(e.br,{}),"\n","LLM 应用缺的是想象力，实战模块我们将再向未来迈进一步，去讨论下一个时代的交互范式—— LLM_UI，我们也会带大家思考如何利用好 LLM 的优势，最终实现两个非常有趣味性又有应用前景的实战项目。"]}),"\n"]}),"\n",(0,a.jsxs)(e.h2,{id:"写在最后",children:["写在最后",(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#写在最后",children:"#"})]}),"\n",(0,a.jsx)(e.p,{children:"我希望大家在每一章的结束，不止局限于教程中的例子，可以去发散想象自己之前的开发中有哪些任务可以通过大模型来优化甚至是取代，动手去做一些 Toy Projects，并尝试不同的 Prompts 方式去激发大模型的能力，可能就会迸发出下一个独角兽级的 idea。"}),"\n",(0,a.jsx)(e.p,{children:"最后，拥抱变化！"}),"\n",(0,a.jsx)(e.p,{children:"这个世界上唯一不变的就是一切都在变。"}),"\n",(0,a.jsx)(e.p,{children:"希望大家能在这本小册里玩得开心 ❤️"})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}let t=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["%E4%BB%8E%E5%89%8D%E7%AB%AF%E5%88%B0%20AI%EF%BC%9ALangChain.js%20%E5%85%A5%E9%97%A8%E5%92%8C%E5%AE%9E%E6%88%98_online%2F1-%E5%BC%80%E7%AF%87%EF%BC%9A%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%97%B6%E4%BB%A3%EF%BC%8C%E5%A6%82%E4%BD%95%E8%B7%9F%E4%B8%8A%E8%8A%82%E5%A5%8F%EF%BC%9F.md"]={toc:[{text:"为什么是 JavaScript？",id:"为什么是-javascript",depth:2},{text:"为什么是 LangChain？",id:"为什么是-langchain",depth:2},{text:"小册如何学",id:"小册如何学",depth:2},{text:"写在最后",id:"写在最后",depth:2}],title:"1-开篇：大模型时代，如何跟上节奏？",headingTitle:"1-开篇：大模型时代，如何跟上节奏？",frontmatter:{}}}}]);