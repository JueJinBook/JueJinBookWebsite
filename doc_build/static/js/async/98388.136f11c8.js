"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["98388"],{101914:function(n,e,s){s.r(e),s.d(e,{default:()=>d});var i=s(552676),r=s(740453);let l=s.p+"static/image/1.1.83caee56.png";function h(n){let e=Object.assign({h1:"h1",a:"a",p:"p",strong:"strong",h2:"h2",ol:"ol",li:"li",img:"img",blockquote:"blockquote"},(0,r.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"1什么是分布式版本控制系统dvcs",children:["1什么是分布式版本控制系统（DVCS)",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1什么是分布式版本控制系统dvcs",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"分布式 VCS （Distributed VCS / DVCS）和中央式的区别在于，分布式 VCS 除了中央仓库之外，还有本地仓库：团队中每一个成员的机器上都有一份本地仓库，这个仓库里包含了所有的版本历史，或者换句话说，每个人在自己的机器上就可以提交代码、查看历史，而无需联网和中央仓库交互——当然，取而代之的，你需要和本地仓库交互。"}),"\n",(0,i.jsxs)(e.p,{children:["中央式 VCS 的中央仓库有两个主要功能：",(0,i.jsx)(e.strong,{children:"保存版本历史"}),"、",(0,i.jsx)(e.strong,{children:"同步团队代码"}),"。而在分布式 VCS 中，保存版本历史的工作转交到了每个团队成员的本地仓库中，中央仓库就只剩下了同步团队代码这一个主要任务。它的中央仓库依然也保存了历史版本，但这份历史版本更多的是作为团队间的同步中转站。"]}),"\n",(0,i.jsxs)(e.h2,{id:"工作模型",children:["工作模型",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#工作模型",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"依然以三人团队为例，分布式 VCS 的工作模型大致是这样："}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["首先，你作为主工程师，独立搭建了项目架构，",(0,i.jsx)(e.strong,{children:"并把这些代码提交到了本地仓库"}),"；"]}),"\n",(0,i.jsxs)(e.li,{children:["然后，你在服务器上创建了一个中央仓库，并把 1 中的提交",(0,i.jsx)(e.strong,{children:"从本地仓库推送到了服务器的中央仓库"}),"；"]}),"\n",(0,i.jsxs)(e.li,{children:["其他同事",(0,i.jsx)(e.strong,{children:"把中央仓库的所有内容克隆到本地，拥有了各自的本地仓库"}),"，从此刻开始，你们三人开始并行开发；"]}),"\n",(0,i.jsxs)(e.li,{children:["在之后的开发过程中，你们三人总是每人独立负责开发一个功能，在这个功能开发过程中，",(0,i.jsx)(e.strong,{children:"一个人会把它的每一步改动提交到本地仓库"}),"。注意：由于本地提交无需立即上传到中央仓库，所以每一步提交不必是一个完整功能，而可以是功能中的一个步骤或块。"]}),"\n",(0,i.jsxs)(e.li,{children:["在一个人把某个功能开发完成之后，他就可以把这个功能相关的所有提交",(0,i.jsx)(e.strong,{children:"从本地仓库推送到中央仓库"}),"；"]}),"\n",(0,i.jsxs)(e.li,{children:["每次当有人把新的提交推送到中央仓库的时候，另外两个人就可以选择",(0,i.jsx)(e.strong,{children:"把这些提交同步到自己的机器上，并把它们和自己的本地代码合并"}),"。"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)("img",{src:l,alt:"分布式 VCS"})}),"\n",(0,i.jsx)(e.p,{children:"可以看出，这个工作模型和上一节讲的「中央式 VCS 的工作模型」很相似，只是把代码的提交和上传过程拆开了。"}),"\n",(0,i.jsx)(e.p,{children:"另外，和上节讲的中央式 VCS 工作模型一样，这个也只是分布式 VCS 的一个最基本的工作模型，实际的开发工作会比这个麻烦和复杂。但这是个核心模型，你把它理解了，就可以更好地看懂后面的内容。"}),"\n",(0,i.jsxs)(e.h2,{id:"优点与缺点",children:["优点与缺点",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#优点与缺点",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"分布式 VCS 的优点："}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"大多数的操作可以在本地进行，所以速度更快，而且由于无需联网，所以即使不在公司甚至没有在联网，你也可以提交代码、查看历史，从而极大地减小了开发者的网络条件和物理位置的限制（例如，你可以在飞机上提交代码、切换分支等等）；"}),"\n",(0,i.jsx)(e.li,{children:"由于可以提交到本地，所以你可以分步提交代码，把代码提交做得更细，而不是一个提交包含很多代码，难以 review 也难以回溯。"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"分布式 VCS 的缺点："}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"由于每一个机器都有完整的本地仓库，所以初次获取项目（Git 术语：clone）的时候会比较耗时；"}),"\n",(0,i.jsx)(e.li,{children:"由于每个机器都有完整的本地仓库，所以本地占用的存储比中央式 VCS 要高。"}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"对于一般的程序项目而言，由于项目的大多数内容都是文本形式的代码，所以工程的体积都并不是很大，再加上文本内容自身的特点，VCS 可以利用算法来把仓库的体积极大地压缩。这就导致，在实际中，Git 等分布式 VCS 的仓库体积并不大，初次获取项目的耗时和本地仓库的存储占用都很小。所以对于大多数的程序项目而言，分布式 VCS 「尺寸大、初次下载慢」的问题其实并不严重。"}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"不过也有一些例外，比如游戏开发。游戏的开发中有大量的大尺寸数据和媒体文件，并且这些文件的格式也不容易压缩尺寸，如果用分布式 VCS 会导致仓库的体积非常庞大。所以一些大型游戏的开发会选择中央式的 VCS 来管理代码。"}),"\n"]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["Git%20%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97%2F1%E4%BB%80%E4%B9%88%E6%98%AF%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%EF%BC%88DVCS).md"]={toc:[{text:"工作模型",id:"工作模型",depth:2},{text:"优点与缺点",id:"优点与缺点",depth:2}],title:"1什么是分布式版本控制系统（DVCS)",headingTitle:"1什么是分布式版本控制系统（DVCS)",frontmatter:{}}}}]);