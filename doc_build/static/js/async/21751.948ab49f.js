"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["21751"],{428858:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var s=r(552676),i=r(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",hr:"hr",blockquote:"blockquote",h3:"h3",code:"code",pre:"pre",strong:"strong"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"7一面-6开发环境相关知识点与高频考题解析",children:["7.一面 6：开发环境相关知识点与高频考题解析",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7一面-6开发环境相关知识点与高频考题解析",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"工程师的开发环境决定其开发效率，常用的开发环境配置也是面试考查点之一。"}),"\n",(0,s.jsxs)(n.h2,{id:"知识点梳理",children:["知识点梳理",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#知识点梳理",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"IDE"}),"\n",(0,s.jsx)(n.li,{children:"Git"}),"\n",(0,s.jsx)(n.li,{children:"Linux 基础命令"}),"\n",(0,s.jsx)(n.li,{children:"前端构建工具"}),"\n",(0,s.jsx)(n.li,{children:"调试方法"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"本小节会重点介绍 Git 的基本用法、代码部署和开发中常用的 Linux 命令，然后以 webpack 为例介绍下前端构建工具，最后介绍怎么抓包解决线上问题。这些都是日常开发和面试中常用到的知识。"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"ide",children:["IDE",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ide",children:"#"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"题目：你平时都使用什么 IDE 编程？有何提高效率的方法？"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["前端最常用的 IDE 有 ",(0,s.jsx)(n.a,{href:"https://www.jetbrains.com/webstorm/",target:"_blank",rel:"noopener noreferrer",children:"Webstorm"}),"、",(0,s.jsx)(n.a,{href:"https://www.sublimetext.com/",target:"_blank",rel:"noopener noreferrer",children:"Sublime"}),"、",(0,s.jsx)(n.a,{href:"https://atom.io/",target:"_blank",rel:"noopener noreferrer",children:"Atom"})," 和 ",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer",children:"VSCode"}),"，我们可以分别去它们的官网看一下。"]}),"\n",(0,s.jsx)(n.p,{children:"Webstorm 是最强大的编辑器，因为它拥有各种强大的插件和功能，但是我没有用过，因为它收费。不是我舍不得花钱，而是因为我觉得免费的 Sublime 已经够我用了。跟面试官聊到 Webstorm 的时候，没用过没事儿，但一定要知道它：第一，强大；第二，收费。"}),"\n",(0,s.jsx)(n.p,{children:"Sublime 是我日常用的编辑器，第一它免费，第二它轻量、高效，第三它插件非常多。用 Sublime 一定要安装各种插件配合使用，可以去网上搜一下“sublime”常用插件的安装以及用法，还有它的各种快捷键，并且亲自使用它。这里就不一一演示了，网上的教程也很傻瓜式。"}),"\n",(0,s.jsx)(n.p,{children:"Atom 是 GitHub 出品的编辑器，跟 Sublime 差不多，免费并且插件丰富，而且跟 Sublime 相比风格上还有些小清新。但是我用过几次就不用了，因此它打开的时候会比较慢，卡一下才打开。当然总体来说也是很好用的，只是个人习惯问题。"}),"\n",(0,s.jsx)(n.p,{children:"VSCode 是微软出品的轻量级（相对于 Visual Studio 来说）编辑器，微软做 IDE 那是出了名的好，出了名的大而全，因此 VSCode 也有上述 Sublime 和 Atom 的各种优点，但是我也是因为个人习惯问题（本人不愿意尝试没有新意的新东西），用过几次就不用了。"}),"\n",(0,s.jsx)(n.p,{children:"总结一下："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"如果你要走大牛、大咖、逼格的路线，就用 Webstorm"}),"\n",(0,s.jsx)(n.li,{children:"如果你走普通、屌丝、低调路线，就用 Sublime"}),"\n",(0,s.jsx)(n.li,{children:"如果你走小清新、个性路线，就用 VSCode 或者 Atom"}),"\n",(0,s.jsx)(n.li,{children:"如果你面试，最好有一个用的熟悉，其他都会一点"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"最后注意：千万不要说你使用 Dreamweaver 或者 notepad++ 写前端代码，会被人鄙视的。如果你不做 .NET 也不要用 Visual Studio ，不做 Java 也不要用 Eclipse。"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"git",children:["Git",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#git",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["你此前做过的项目一定要用过 Git，而且必须是命令行，如果没用过，你自己也得恶补一下。对 Git 的基本应用比较熟悉的同学，可以跳过这一部分了。macOS 自带 Git，Windows 需要安装 Git 客户端，去 ",(0,s.jsx)(n.a,{href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer",children:"Git 官网"})," 下载即可。"]}),"\n",(0,s.jsx)(n.p,{children:"国内比较好的 Git 服务商有 coding.net，国外有大名鼎鼎的 GitHub，但是有时会有网络问题，因此建议大家注册一个 coding.net 账号然后创建项目，来练练手。"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"题目：常用的 Git 命令有哪些？如何使用 Git 多人协作开发？"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"常用的-git-命令",children:["常用的 Git 命令",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#常用的-git-命令",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["首先，通过",(0,s.jsx)(n.code,{children:"git clone <项目远程地址>"}),"下载下来最新的代码，例如",(0,s.jsx)(n.code,{children:"git clone git@git.coding.net:username/project-name.git"}),"，默认会下载",(0,s.jsx)(n.code,{children:"master"}),"分支。"]}),"\n",(0,s.jsxs)(n.p,{children:["然后修改代码，修改过程中可以通过",(0,s.jsx)(n.code,{children:"git status"}),"看到自己的修改情况，通过",(0,s.jsx)(n.code,{children:"git diff <文件名>"}),"可查阅单个文件的差异。"]}),"\n",(0,s.jsx)(n.p,{children:"最后，将修改的内容提交到远程服务器，做如下操作"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'git add .\ngit commit -m "xxx"\ngit push origin master\n'})}),"\n",(0,s.jsxs)(n.p,{children:["如果别人也提交了代码，你想同步别人提交的内容，执行",(0,s.jsx)(n.code,{children:"git pull origin master"}),"即可。"]}),"\n",(0,s.jsxs)(n.h3,{id:"如何多人协作开发",children:["如何多人协作开发",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#如何多人协作开发",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["多人协作开发，就不能使用",(0,s.jsx)(n.code,{children:"master"}),"分支了，而是要每个开发者单独拉一个分支，使用",(0,s.jsx)(n.code,{children:"git checkout -b <branchname>"}),"，运行",(0,s.jsx)(n.code,{children:"git branch"}),"可以看到本地所有的分支名称。"]}),"\n",(0,s.jsxs)(n.p,{children:["自己的分支，如果想同步",(0,s.jsx)(n.code,{children:"master"}),"分支的内容，可运行",(0,s.jsx)(n.code,{children:"git merge master"}),"。切换分支可使用",(0,s.jsx)(n.code,{children:"git checkout <branchname>"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"在自己的分支上修改了内容，可以将自己的分支提交到远程服务器"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'git add .\ngit commit -m "xxx"\ngit push origin <branchname>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["最后，待代码测试没问题，再将自己分支的内容合并到",(0,s.jsx)(n.code,{children:"master"}),"分支，然后提交到远程服务器。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"git checkout master\ngit merge <branchname>\ngit push origin master\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"关于-svn",children:["关于 SVN",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#关于-svn",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"关于 SVN 笔者的态度和针对 IE 低版本浏览器的态度一样，你只需要查询资料简单了解一下。面试的时候可能会问到，但你只要熟悉了 Git 的操作，面试官不会因为你不熟悉 SVN 而难为你。前提是你要知道一点 SVN 的基本命令，自己上网一查就行。"}),"\n",(0,s.jsx)(n.p,{children:"不过 SVN 和 Git 的区别你得了解。SVN 是每一步操作都离不开服务器，创建分支、提交代码都需要连接服务器。而 Git 就不一样了，你可以在本地创建分支、提交代码，最后再一起 push 到服务器上。因此，Git 拥有 SVN 的所有功能，但是却比 SVN 强大得多。（Git 是 Linux 的创始人 Linus 发明的东西，因此也倍得推崇。）"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"linux-基础命令",children:["Linux 基础命令",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#linux-基础命令",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"目前互联网公司的线上服务器都使用 Linux 系统，测试环境为了保证和线上一致，肯定也是使用 Linux 系统，而且都是命令行的，没有桌面，不能用鼠标操作。因此，掌握基础的 Linux 命令是非常必要的。下面总结一些最常用的 Linux 命令，建议大家在真实的 Linux 系统下亲自试一下。"}),"\n",(0,s.jsx)(n.p,{children:"关于如何得到 Linux 系统，有两种选择：第一，在自己电脑的虚拟机中安装一个 Linux 系统，例如 Ubuntu/CentOS 等，下载这些都不用花钱；第二，花钱去阿里云等云服务商租一个最便宜的 Linux 虚拟机。推荐第二种。一般正式入职之后，公司都会给你分配开发机或者测试机，给你账号和密码，你自己可以远程登录。"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"题目：常见 linux 命令有哪些？"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"登录",children:["登录",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#登录",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["入职之后，一般会有现有的用户名和密码给你，你拿来之后直接登录就行。运行 ",(0,s.jsx)(n.code,{children:"ssh name@server"})," 然后输入密码即可登录。"]}),"\n",(0,s.jsxs)(n.h3,{id:"目录操作",children:["目录操作",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#目录操作",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["创建目录 ",(0,s.jsx)(n.code,{children:"mkdir <目录名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["删除目录 ",(0,s.jsx)(n.code,{children:"rm <目录名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["定位目录 ",(0,s.jsx)(n.code,{children:"cd <目录名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["查看目录文件 ",(0,s.jsx)(n.code,{children:"ls"})," ",(0,s.jsx)(n.code,{children:"ll"})]}),"\n",(0,s.jsxs)(n.li,{children:["修改目录名 ",(0,s.jsx)(n.code,{children:"mv <目录名称> <新目录名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["拷贝目录 ",(0,s.jsx)(n.code,{children:"cp <目录名称> <新目录名称>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"文件操作",children:["文件操作",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#文件操作",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["创建文件 ",(0,s.jsx)(n.code,{children:"touch <文件名称>"})," ",(0,s.jsx)(n.code,{children:"vi <文件名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["删除文件 ",(0,s.jsx)(n.code,{children:"rm <文件名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["修改文件名 ",(0,s.jsx)(n.code,{children:"mv <文件名称> <新文件名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["拷贝文件 ",(0,s.jsx)(n.code,{children:"cp <文件名称> <新文件名称>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"文件内容操作",children:["文件内容操作",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#文件内容操作",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["查看文件 ",(0,s.jsx)(n.code,{children:"cat <文件名称>"})," ",(0,s.jsx)(n.code,{children:"head <文件名称>"})," ",(0,s.jsx)(n.code,{children:"tail <文件名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["编辑文件内容 ",(0,s.jsx)(n.code,{children:"vi <文件名称>"})]}),"\n",(0,s.jsxs)(n.li,{children:["查找文件内容 ",(0,s.jsx)(n.code,{children:"grep '关键字' <文件名称>"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"前端构建工具",children:["前端构建工具",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前端构建工具",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["构建工具是前端工程化中不可缺少的一环，非常重要，而在面试中却有其特殊性 —— ",(0,s.jsx)(n.strong,{children:"面试官会通过询问构建工具的作用、目的来询问你对构建工具的了解，只要这些你都知道，不会再追问细节"}),"。因为，在实际工作中，真正能让你编写构建工具配置文件的机会非常少，一个项目就配置一次，后面就很少改动了。而且，如果是大众使用的框架（如 React、Vue 等），还会直接有现成的脚手架工具，一键创建开发环境，不用手动配置。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"题目：前端为何要使用构建工具？它解决了什么问题？"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"何为构建工具",children:["何为构建工具",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#何为构建工具",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["“构建”也可理解为“编译”，就是将开发环境的代码转换成运行环境代码的过程。",(0,s.jsx)(n.strong,{children:"开发环境的代码是为了更好地阅读，而运行环境的代码是为了更快地执行，两者目的不一样，因此代码形式也不一样"}),"。例如，开发环境写的 JS 代码，要通过混淆压缩之后才能放在线上运行，因为这样代码体积更小，而且对代码执行不会有任何影响。总结一下需要构建工具处理的几种情况："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"处理模块化"}),"：CSS 和 JS 的模块化语法，目前都无法被浏览器兼容。因此，开发环境可以使用既定的模块化语法，但是需要构建工具将模块化语法编译为浏览器可识别形式。例如，使用 webpack、Rollup 等处理 JS 模块化。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"编译语法"}),"：编写 CSS 时使用 Less、Sass，编写 JS 时使用 ES6、TypeScript 等。这些标准目前也都无法被浏览器兼容，因此需要构建工具编译，例如使用 Babel 编译 ES6 语法。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"代码压缩"}),"：将 CSS、JS 代码混淆压缩，为了让代码体积更小，加载更快。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"构建工具介绍",children:["构建工具介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#构建工具介绍",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["最早普及使用的构建工具是 ",(0,s.jsx)(n.a,{href:"http://www.gruntjs.net/",target:"_blank",rel:"noopener noreferrer",children:"Grunt"})," ，不久又被 ",(0,s.jsx)(n.a,{href:"https://www.gulpjs.com.cn/",target:"_blank",rel:"noopener noreferrer",children:"Gulp"})," 给追赶上。Gulp 因其简单的配置以及高效的性能而被大家所接受，也是笔者个人比较推荐的构建工具之一。如果你做一些简单的 JS 开发，可以考虑使用。"]}),"\n",(0,s.jsx)(n.p,{children:"如果你的项目比较复杂，而且是多人开发，那么你就需要掌握目前构建工具届的神器 —— webpack 。不过神器也有一个缺点，就是学习成本比较高，需要拿出专门的时间来专心学习，而不是三言两语就能讲完的。我们下面就演示一下 webpack 最简单的使用，全面的学习还得靠大家去认真查阅相关文档，或者参考专门讲解 webpack 的教程。"}),"\n",(0,s.jsxs)(n.h3,{id:"webpack-演示",children:["webpack 演示",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webpack-演示",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"接下来我们演示一下 webpack 处理模块化和混淆压缩代码这两个基本功能。"}),"\n",(0,s.jsxs)(n.p,{children:["首先，你需要安装 Node.js，没有安装的可以去 ",(0,s.jsx)(n.a,{href:"http://nodejs.cn/download/",target:"_blank",rel:"noopener noreferrer",children:"Node.js 官网"})," 下载并安装。安装完成后运行如下命令来验证是否安装成功。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"node -v\nnpm -v\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后，新建一个目录，进入该目录，运行",(0,s.jsx)(n.code,{children:"npm init"}),"，按照提示输入名称、版本、描述等信息。完成之后，该目录下出现了一个",(0,s.jsx)(n.code,{children:"package.json"}),"文件，是一个 JSON 文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["接下来，安装 wepback，运行",(0,s.jsx)(n.code,{children:"npm i --save-dev webpack"}),"，网络原因需要耐心等待几分钟。"]}),"\n",(0,s.jsxs)(n.p,{children:["接下来，编写源代码，在该目录下创建",(0,s.jsx)(n.code,{children:"src"}),"文件夹，并在其中创建",(0,s.jsx)(n.code,{children:"app.js"}),"和",(0,s.jsx)(n.code,{children:"dt.js"}),"两个文件，文件内容分别是："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// dt.js 内容\nmodule.exports = {\n    getDateNow: function () {\n        return Date.now()\n    }\n}\n\n// app.js 内容\nvar dt = require('./dt.js')\nalert(dt.getDateNow())\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后，再返回上一层目录，新建",(0,s.jsx)(n.code,{children:"index.html"}),"文件（该文件和",(0,s.jsx)(n.code,{children:"src"}),"属于同一层级），内容是"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>test</title>\n</head>\n<body>\n    <div>test</div>\n    \n    <script src='./dist/bundle.js'><\/script>\n</body>\n</html>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["然后，编写 webpack 配置文件，新建",(0,s.jsx)(n.code,{children:"webpack.config.js"}),"，内容是"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const path = require('path');\nconst webpack = require('webpack');\nmodule.exports = {\n  context: path.resolve(__dirname, './src'),\n  entry: {\n    app: './app.js',\n  },\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'bundle.js',\n  },\n  plugins: [\n    new webpack.optimize.UglifyJsPlugin({\n        compress: {\n          //supresses warnings, usually from module minification\n          warnings: false\n        }\n    }),\n  ]\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"总结一下，目前项目的文件目录是："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src\n  +-- app.js\n  +-- dt.js\nindex.html\npackage.json\nwebpack.config.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["接下来，打开",(0,s.jsx)(n.code,{children:"package.json"}),"，然后修改其中",(0,s.jsx)(n.code,{children:"scripts"}),"的内容为："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'  "scripts": {\n    "start": "webpack"\n  }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["在命令行中运行",(0,s.jsx)(n.code,{children:"npm start"}),"，即可看到编译的结果，最后在浏览器中打开",(0,s.jsx)(n.code,{children:"index.html"}),"，即可弹出",(0,s.jsx)(n.code,{children:"Date.now()"}),"的值。"]}),"\n",(0,s.jsxs)(n.h3,{id:"总结",children:["总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["最后再次强调，",(0,s.jsx)(n.strong,{children:"深刻理解构建工具存在的价值，比你多会一些配置代码更加有意义，特别是对于应对面试来说"}),"。"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"调试方法",children:["调试方法",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调试方法",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"调试方法这块被考查最多的就是如何进行抓包。"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"题目：如何抓取数据？如何使用工具来配置代理？"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["PC 端的网页，我们可以通过 Chrome、Firefox 等浏览器自带的开发者工具来查看网页的所有网络请求，以帮助排查 bug。这种监听、查看网络请求的操作称为",(0,s.jsx)(n.strong,{children:"抓包"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["针对移动端的抓包工具，Mac 系统下推荐使用 Charles 这个工具，首先 ",(0,s.jsx)(n.a,{href:"https://www.charlesproxy.com/download/",target:"_blank",rel:"noopener noreferrer",children:"下载"})," 并安装，打开。Windows 系统推荐使用 ",(0,s.jsx)(n.a,{href:"http://rj.baidu.com/soft/detail/10963.html",target:"_blank",rel:"noopener noreferrer",children:"Fiddler"}),"，下载安装打开。两者使用基本一致，下面以 Charles 为例介绍。"]}),"\n",(0,s.jsxs)(n.p,{children:["接下来，将安装好 Charles 的电脑和要抓包的手机，连接到同一个网络（一般为公司统一提供的内网，由专业网络工程师搭建），保证 IP 段相同。然后，将手机设置网络代理（每种不同手机如何设置网络代理，网上都有傻瓜式教程），代理的 IP 为电脑的 IP，代理的端口为",(0,s.jsx)(n.code,{children:"8888"}),"。然后，Charles 可能会有一个弹框提示是否允许连接代理，这里选择“允许”即可。这样，使用手机端访问的网页或者联网的请求，Charles 就能监听到了。"]}),"\n",(0,s.jsxs)(n.p,{children:["在开发过程中，经常用到抓包工具来做代理，将线上的地址代理到测试环境，Charles 和 Fiddler 都可实现这个功能。以 Charles 为例，点击菜单栏中 Tools 菜单，然后二级菜单中点击 Map Remote，会弹出配置框。首先，选中 Enable Map Remote 复选框，然后点击 Add 按钮，添加一个代理项。例如，如果要将线上的",(0,s.jsx)(n.code,{children:"https://www.aaa.com/api/getuser?name=xxx"}),"这个地址代理到测试地址",(0,s.jsx)(n.code,{children:"http://168.1.1.100:8080/api/getuser?name=xxx"}),"，配置如下图"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"本小节总结了前端开发环境常考查的知识，这些知识也是前端程序员必须掌握的，否则会影响开发效率。"})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let h=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["Web%20%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97%E4%B8%8E%E9%AB%98%E9%A2%91%E8%80%83%E9%A2%98%E8%A7%A3%E6%9E%90%2F7.%E4%B8%80%E9%9D%A2%206%EF%BC%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%8E%E9%AB%98%E9%A2%91%E8%80%83%E9%A2%98%E8%A7%A3%E6%9E%90.md"]={toc:[{text:"知识点梳理",id:"知识点梳理",depth:2},{text:"IDE",id:"ide",depth:2},{text:"Git",id:"git",depth:2},{text:"常用的 Git 命令",id:"常用的-git-命令",depth:3},{text:"如何多人协作开发",id:"如何多人协作开发",depth:3},{text:"关于 SVN",id:"关于-svn",depth:3},{text:"Linux 基础命令",id:"linux-基础命令",depth:2},{text:"登录",id:"登录",depth:3},{text:"目录操作",id:"目录操作",depth:3},{text:"文件操作",id:"文件操作",depth:3},{text:"文件内容操作",id:"文件内容操作",depth:3},{text:"前端构建工具",id:"前端构建工具",depth:2},{text:"何为构建工具",id:"何为构建工具",depth:3},{text:"构建工具介绍",id:"构建工具介绍",depth:3},{text:"webpack 演示",id:"webpack-演示",depth:3},{text:"总结",id:"总结",depth:3},{text:"调试方法",id:"调试方法",depth:2},{text:"小结",id:"小结",depth:2}],title:"7.一面 6：开发环境相关知识点与高频考题解析",headingTitle:"7.一面 6：开发环境相关知识点与高频考题解析",frontmatter:{}}}}]);