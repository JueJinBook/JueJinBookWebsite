"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["56379"],{691160:function(e,n,i){i.r(n),i.d(n,{default:()=>c});var s=i(552676),t=i(740453);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",img:"img",pre:"pre",code:"code",h4:"h4"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"61问卷小程序",children:["61.问卷小程序",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#61问卷小程序",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"95-问卷小程序",children:["9.5 问卷小程序",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#95-问卷小程序",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"无论是问卷调查、投票、活动报名、考试测评、预约等这些都是“产品”名词，背后所使用到的技术都是一致的，都是基础的表单组件以搭积木的形式来组装，而这些表单组件（积木）的顺序、描述、类型、值等等信息都会存储到数据库。"}),"\n",(0,s.jsxs)(n.h3,{id:"951-问卷的数据库设计",children:["9.5.1 问卷的数据库设计",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#951-问卷的数据库设计",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"前面章节的form表单都是将表单组件在wxml里罗列出来，而问卷/问答则还要求表单组件是被数据库控制的，而不是直接在wxml里写好的，也就是单选题、多选题、填空题这些都是由数据库来控制；不仅如此，连问卷/考题的交互数据也是由数据库控制的，如什么时候翻页、跳转，什么时候开始或结束等，这些复杂的功能在数据库里对应的可能只是一个简单的字段。"}),"\n",(0,s.jsx)(n.p,{children:"要设计问卷的数据库，我们首先要将一个完整的问卷拆分成一个个表单组件，综合分析各类表单组件返回的数据对象的结构以及多种不同类型的选项的特征，再将表单组件整理成为数据库的字段。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://i.hackweek.org/img//9/formdata.jpg",alt:"将问卷控件拆分为字段"})}),"\n",(0,s.jsx)(n.p,{children:"将问卷的UI控件（单选、多选、填空等）、交互逻辑（必选，翻页、跳转）、功能（开始时间、截止时间、回答人数上限）等转化为相应的函数与数据库的数据是做应用开发非常重要的环节。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n  _id:"",\n  _openid:"",\n  title:"云开发训练营调查表",      //问卷的标题\n  desc:"问卷调查，聊一聊对云开发的看法", //问卷的说明\n  time:300,  //问卷或考题的限制时长，可以以秒或毫秒为单位\n  starttime:"",   //问卷什么时候可以开始作答\n  endtime:"",  //问卷截止时间\n  grade:114,  //考题的总分统计\n  limit:100,         //问卷回答人数的上限\n  //问卷或考卷的交互也要注意如何转化为字段\n  subjects:[{  \n    subid:"sub001",    //组件的id\n    subtitle:"您的姓名？",     //问卷题目或考题的标题\n    subdesc:"请填写您的姓名",    //问卷选项或考题的描述\n    formtype:"",     //type的值为组件的名称，input、checkbox、radio、slider等\n    subvalue:"",     //小程序端填写表单所提交的值或初始值\n    placeholder:"",  //占位符\n    //问卷选项或考题之间的联动、矩阵跳转等逻辑也要转化为字段   \n  },{...},{...},]  \n}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"952-不同类型题目的渲染与提交",children:["9.5.2 不同类型题目的渲染与提交",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#952-不同类型题目的渲染与提交",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"尽管问卷不同形式的题目背后的数据类型大同小异，但是在前端渲染时，要注意题目与组件的对应关系，比如单行文本题、多行文本题都是String，但是在前端却对应着input组件，textarea组件。我们可以使用formtype这个字段的值来控制。"}),"\n",(0,s.jsxs)(n.h4,{id:"1问卷模板的创建",children:["1、问卷模板的创建",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1问卷模板的创建",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"在数据库的设计时，我们可以把问卷的模板（空的问卷记录）和用户填写的问卷（每个用户都有一个记录）放在同一个集合里比如quiz，但是需要注意的是问卷的模板的权限是“所有人可读仅管理员可写”，而用户填写的记录“仅创建者可读写”，这就要求quiz集合的权限为“所有人可读写”，这种权限范围过大，一般不推荐，更建议使用云函数来将用户提交的数据给存储到数据库，这时集合的权限可以设置为“所有人可读，仅创建者可读写”。"}),"\n",(0,s.jsxs)(n.p,{children:["比如我们可以将如下记录导入到quiz集合，更加建议使用云开发控制台数据库的高级操作里的脚本，将以下对象作为add请求data属性的值",(0,s.jsx)(n.code,{children:'db.collection("quiz").add({data:{}})'}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'{\n  "id":"quiz-001",    \n  "title":"云开发训练营调查表",  \n  "desc":"问卷调查，聊一聊对云开发的看法", \n  "_openid":"",\n  "subjects":[{\n    "id":"sub001",   \n    "subtitle":"您的姓名",\n    "subdesc":"请在下方填入您的真实姓名",\n    "formtype":"input",  \n    "option":"请在下方填入您的真实姓名",\n    "subvalue":null  \n  },{\n    "id":"sub002",   \n    "subtitle":"您的婚姻状况",\n    "subdesc":"请选择您的性别",\n    "formtype":"radio",  \n    "option":["未婚","单身","已婚"],\n    "subvalue":null\n  },{\n    "id":"sub003",   \n    "subtitle":"您感兴趣的话题",\n    "subdesc":"请选择您比较感兴趣的话题",\n    "formtype":"checkbox",  \n    "option":["前端","后端","小程序","移动端","物联网","游戏开发","开发工具"] ,\n    "subvalue":null\n  }]\n}\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"2问卷的渲染",children:["2、问卷的渲染",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2问卷的渲染",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"使用开发者工具新建一个页面比如quiz，然后输入以下代码，我们在onLoad生命周期函数里请求数据库，将quiz里的问卷模板给读取出来："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const db = wx.cloud.database()\nconst _ = db.command\nPage({\n  data:{\n    quiz:{}\n  },\n  async onLoad(){\n    this.getQuiz()\n  },\n  async getQuiz(){\n    const quiz = (await db.collection('quiz').where({\n      id:\"quiz-001\"\n    }).get()).data[0]\n    this.setData({\n      quiz\n    })\n    console.log(this.data.quiz)\n  }\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:"然后我们可以再判断formtype、option的值将获取到的模板数据渲染成对应的组件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<view>{{quiz.title}}</view>\n<view>{{quiz.desc}}</view>\n<form bindsubmit="formSubmit">\n  <block wx:for-items="{{quiz.subjects}}" wx:for-index="idx" wx:for-item="subject" wx:key="item">\n    <view>{{idx+1}}、{{subject.subtitle}}</view>\n    <view>{{subject.subdesc}}</view>\n    <block wx:if="{{subject.formtype == \'radio\'}}">\n      <radio-group name="{{subject.id}}">\n        <block wx:for-items="{{subject.option}}" wx:for-index="subid" wx:for-item="option" wx:key="item">\n          <label>\n            <radio value="{{subid+1}}" />{{option}}</label>\n        </block>\n      </radio-group>\n    </block>\n    <block wx:if="{{subject.formtype == \'input\'}}">\n      <input name="{{subject.id}}" placeholder="{{subject.option}}" />\n    </block>\n    <block wx:if="{{subject.formtype == \'checkbox\'}}">\n      <checkbox-group name="{{subject.id}}">\n        <block wx:for-items="{{subject.option}}" wx:for-index="subid" wx:for-item="option" wx:key="item">\n          <label><checkbox value="{{subid}}" />{{option}}</label>\n        </block>\n      </checkbox-group>\n    </block>\n  </block>\n  <button form-type="submit">提交</button>\n</form>\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"3问卷的提交",children:["3、问卷的提交",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3问卷的提交",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"问卷提交前，可以先根据实际的需求来校验一下，比如一个用户只能提交一次，这时候就需要先查询数据库是否有用户的记录，如果有就不能再提交；比如用户可以提交多次，最后一次会覆盖前面的提交，可以获取用户提交的记录，然后update即可等，除此之外，还需要校验用户填写的内容是否规范，比如不能为空等，这些内容在前面都讲解过，这里就不再详述了。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'//将用户提交的数据传递给云函数，让云函数来处理，大家可以自行去写这个quiz的云函数\nasync formSubmit(e){\n  const quiz = e.detail.value \n  console.log("用户提交的数据",quiz)\n  wx.cloud.callFunction({\n    name:"quiz",\n    data:quiz\n  }).then(res=>{console.log(res)})\n},\n'})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F61.%E9%97%AE%E5%8D%B7%E5%B0%8F%E7%A8%8B%E5%BA%8F.md"]={toc:[{text:"9.5 问卷小程序",id:"95-问卷小程序",depth:2},{text:"9.5.1 问卷的数据库设计",id:"951-问卷的数据库设计",depth:3},{text:"9.5.2 不同类型题目的渲染与提交",id:"952-不同类型题目的渲染与提交",depth:3},{text:"1、问卷模板的创建",id:"1问卷模板的创建",depth:4},{text:"2、问卷的渲染",id:"2问卷的渲染",depth:4},{text:"3、问卷的提交",id:"3问卷的提交",depth:4}],title:"61.问卷小程序",headingTitle:"61.问卷小程序",frontmatter:{}}}}]);