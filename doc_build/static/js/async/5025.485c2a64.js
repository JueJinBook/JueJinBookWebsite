"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["5025"],{631821:function(e,i,s){s.r(i),s.d(i,{default:()=>el});var n=s(552676),a=s(740453);let c=s.p+"static/image/3892a0c5ad8f9539a23b72f58d331271.e684b821.webp",r=s.p+"static/image/d66a2adf8ab8a6c615258fe4fa9ca87d.9c235019.gif",d=s.p+"static/image/5bcd4eb3aca54d388c7babb62848d2f3.9d846f65.gif",l=s.p+"static/image/7a7cb3ca9e8353c5a522294120b5cab9.b5dde6ff.webp",p=s.p+"static/image/5aea03ff0b245565448c227a0b15432b.5aa78285.webp",t=s.p+"static/image/805f4e506e91ca0f420bc6f6feff601b.0a56b591.webp",h=s.p+"static/image/943520272a620f903f94d92f2cf7c612.927daae0.webp",m=s.p+"static/image/20be283b0c61879624bfcba348ffcca9.e3b26cf8.webp",x=s.p+"static/image/4276d8cf59117799bf849962442a027a.3d6f3e4e.webp",j=s.p+"static/image/7c3776facf8f1519f84a5513756449aa.fba685f8.webp",b=s.p+"static/image/e9ca2af73875f2c5abcc1035ad775dda.8dada70e.webp",g=s.p+"static/image/b5f1aedd0d8feb27b927d9414bb994a2.da333828.webp",f=s.p+"static/image/97644249fb8dd47f93552666519c4b73.0beb2556.webp",o=s.p+"static/image/7fa43907483b645428babfee5bc451b2.e17bea32.webp",u=s.p+"static/image/e24ef93797504aca2d74948835122e0c.15e2ed18.webp",w=s.p+"static/image/3e995f5d0d58c492b06dcf608256bdcc.83ae6769.webp",v=s.p+"static/image/2509c14dc7a27793e5a5168cc8e9d164.16fc50b2.webp",q=s.p+"static/image/7278cdcdb27acc48530e520f9d5c55a4.9d6ba45f.webp",_=s.p+"static/image/fcbc8ac9f3dcf605f5127c3b08c7395f.05446b31.webp",E=s.p+"static/image/e3715175aaac1840173a47787e70ad2e.4d89c9f5.webp",P=s.p+"static/image/afb3aec35bcc2a9b862271deff795ec9.ae5acfe2.webp",k=s.p+"static/image/dafa75f166a0c1c202e2d36bbbe74507.1626addd.webp",N=s.p+"static/image/7ecf42736677c251d5bcf712d53bd66c.1142ab05.webp",y=s.p+"static/image/b36336c9435e3ebefea029e9a30140ee.0d6284f4.webp",A=s.p+"static/image/d151a5610a5c27bee6724ce85fa03caa.a45cc840.webp",C=s.p+"static/image/dab087c8dcc522794da59f38ca88e90c.2bdfff58.webp",R=s.p+"static/image/abf9881a55ee11b3e657641c37354033.99c69779.webp",B=s.p+"static/image/4f7cabd144d8264499125b1e91ecb023.6d8abc2d.webp",D=s.p+"static/image/ed47754449931f0b036c78f1e69683ab.e775e853.webp",S=s.p+"static/image/0d9d642c4ff2bd44f5a5e3863dc4e187.37c115c2.webp",U=s.p+"static/image/bff079c4dc4fb266467d5d50b1b461a6.b477fb13.webp",G=s.p+"static/image/1eed451fd82725a91419513cd572a73b.3993dee1.webp",T=s.p+"static/image/f1e8aeb2e9650e721d9591ea4b7d56bc.04f5a35b.webp",F=s.p+"static/image/e385209e99cbb1cba8f6fefe1a44adf3.c7c4b100.webp",M=s.p+"static/image/59c903439e4cd5765319e4b63de20ba1.1153addf.webp",O=s.p+"static/image/836196b264277873cef65a9cb27f1dd0.16a3302f.webp",H=s.p+"static/image/7f56ffd74e1596e7a667352939d1e776.d626270c.webp",I=s.p+"static/image/7d84c366273084ab530d797a41d38b78.b859c154.webp",Q=s.p+"static/image/b6c12ec6abe7d3fde554cf63302c5ebf.a73cdb1f.webp",W=s.p+"static/image/9ff37c150631cc940eb0ac7fa1871d06.b6ecd925.webp",z=s.p+"static/image/31eaab42fcc5516df9c24e113a1ba20b.cc1c2acc.webp",J=s.p+"static/image/74d3c57ef52b5e1ab246ed7f42e78457.20aa4d19.webp",K=s.p+"static/image/067d35d016eae64ece534f2c5c2f5074.747bf93e.webp",L=s.p+"static/image/92f590929c52c1b8224d8e97f65fc206.ab4c897e.webp",V=s.p+"static/image/1f1cc0f0363a37ad21acb893b0613304.3aa0a1a6.webp",X=s.p+"static/image/286452069bba59244b9070b0bf9c3366.957f52b8.webp",Y=s.p+"static/image/f322349d2ac401fc5e241399d5827587.c942786b.webp",Z=s.p+"static/image/436d3ac59205c332b1cb040e88e15a6f.2bce3536.webp",$=s.p+"static/image/ae35ae78a5c99cfc4e46579d8d35c623.4ce9776c.webp",ee=s.p+"static/image/5a19ebca6cdb376e0cbbf2b02ed7dbaf.32a36ade.webp",ei=s.p+"static/image/38430c567c95216f4f4ce1a67ff4c3f9.0688e376.webp",es=s.p+"static/image/b680c7e10e8ef64d35ef9710fdb6c7a7.c6b86413.webp",en=s.p+"static/image/79215f7cea3543ede905c15d1744a46b.486a365d.webp",ea=s.p+"static/image/9329ec6753d906adc352b16aca4c6487.12471622.webp",ec=s.p+"static/image/328fb4d626a980f0e7ddbe700552b661.d055213a.webp";function er(e){let i=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",ul:"ul",li:"li",h2:"h2"},(0,a.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.h1,{id:"147-prisma-的全部命令",children:["147. Prisma 的全部命令",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#147-prisma-的全部命令",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"上节我们入门了 prisma，定义了 model 和表的映射，并且做了 CRUD。"}),"\n",(0,n.jsx)(i.p,{children:"这节来过一遍 Prisma 的全部命令。"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"npx prisma -h\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:ec,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"有这些："}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"init：创建 schema 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"generate： 根据 shcema 文件生成 client 代码"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"db：同步数据库和 schema"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"migrate：生成数据表结构更新的 sql 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"studio：用于 CRUD 的图形化界面"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"validate：检查 schema 文件的语法错误"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"format：格式化 schema 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"version：版本信息"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"我们一个个来过一遍。"}),"\n",(0,n.jsx)(i.p,{children:"先创建个新项目："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"mkdir prisma-all-command\ncd prisma-all-command\nnpm init -y\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:ea,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"全局安装 prisma，这个是命令行工具的包："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"npm install -g prisma\n"})}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-init",children:["prisma init",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-init",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"首先来试一下 init 命令："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:en,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"这个就是创建 schema 文件的，可以指定连接的 database，或者指定 url。"}),"\n",(0,n.jsx)(i.p,{children:"我们试一下："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma init\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:es,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"执行 init 命令后生成了 prisma/shcema.prisma 和 .env 文件："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:ei,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:ee,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"包含了 db provider，也就是连接的数据库，以及连接的 url："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:$,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:Z,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"删掉这俩文件，重新生成。"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma init --datasource-provider mysql\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:Y,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"这样生成的就是连接 mysql 的 provider 和 url 了："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:X,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:V,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"其实就是改这两处的字符串，prisma init 之后自己改也行。"}),"\n",(0,n.jsx)(i.p,{children:"再删掉这俩文件，我们重新生成。"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma init --url mysql://root:guang@localhost:3306/prisma_test\n"})}),"\n",(0,n.jsx)(i.p,{children:"这次指定连接字符串。"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:L,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"可以看到，provider 会根据你指定的 url 来识别，并且 .env 里的 url 就是我们传入的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:K,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:J,alt:""})}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-db",children:["prisma db",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-db",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"创建完 schema 文件，如何定义 model 呢？"}),"\n",(0,n.jsx)(i.p,{children:"其实 init 命令的打印提示了："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:z,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"你可以执行 prisma db pull 把数据库里的表同步到 schema 文件。"}),"\n",(0,n.jsx)(i.p,{children:"我们试一下："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma db pull\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:W,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"提示发现了 2 个 model 并写入了 schema 文件。"}),"\n",(0,n.jsx)(i.p,{children:"现在连接的 prisma_test 数据库里是有这两个表的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:Q,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"生成的 model 定义是这样的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:I,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"其中，@@index 是定义索引，这里定义了 authorId 的外键索引。"}),"\n",(0,n.jsx)(i.p,{children:"此外，db 命令还有别的功能："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma db -h\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:H,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"试下 prisma db push 命令："}),"\n",(0,n.jsx)(i.p,{children:"首先在 mysql workbench 里把这两个表删掉："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:O,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"然后执行 db push："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma db push\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:M,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"提示同步到了 database，并且生成了 client 代码。"}),"\n",(0,n.jsx)(i.p,{children:"在 mysql workbench 里可以看到新的表："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:F,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"seed 命令是执行脚本插入初始数据到数据库。"}),"\n",(0,n.jsx)(i.p,{children:"我们用 ts 来写，先安装相关依赖："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"npm install typescript ts-node @types/node --save-dev\n"})}),"\n",(0,n.jsx)(i.p,{children:"创建 tsconfig.json"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"npx tsc --init\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:T,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"然后写下初始化脚本 prisma/seed.ts"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-javascript",children:"import { PrismaClient } from '@prisma/client'\n\nconst prisma = new PrismaClient({\n  log: [\n    {\n      emit: 'stdout',\n      level: 'query'\n    },\n  ],\n});\n\nasync function main() {\n    const user = await prisma.user.create({\n        data: {\n            name: '东东东',\n            email: 'dongdong@dong.com',\n            Post: {\n                create: [\n                    {\n                        title: 'aaa',\n                        content: 'aaaa'\n                    },\n                    {\n                        title: 'bbb',\n                        content: 'bbbb'\n                    }\n                ]\n            },\n        },\n    })\n    console.log(user)\n}\n\nmain();\n"})}),"\n",(0,n.jsx)(i.p,{children:"在 package.json 添加 seed 命令的配置："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:G,alt:""})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'"prisma": {\n    "seed": "npx ts-node prisma/seed.ts"\n},\n'})}),"\n",(0,n.jsx)(i.p,{children:"然后执行 seed："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma db seed\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:U,alt:"image.png"})}),"\n",(0,n.jsx)(i.p,{children:"在 mysql workbench 里可以看到数据被正确插入了："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:S,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:D,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"其实 seed 命令就是把跑脚本的过程封装了一下，和直接用 ts-node 跑没啥区别。"}),"\n",(0,n.jsx)(i.p,{children:"然后是 prisma db execute，这个是用来执行 sql 的。"}),"\n",(0,n.jsx)(i.p,{children:"比如我写一个 prisma/test.sql 的文件："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-sql",children:"delete from Post WHERE id = 2;\n"})}),"\n",(0,n.jsx)(i.p,{children:"然后执行 execute："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma db execute --file prisma/test.sql --schema prisma/schema.prisma\n"})}),"\n",(0,n.jsx)(i.p,{children:"这里 --file 就是指定 sql 文件的。"}),"\n",(0,n.jsx)(i.p,{children:"而 --schema 指定 schema 文件，主要是从中拿到数据库连接信息。"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:B,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"然后去 mysql workbench 里看一下，确实 id 为 2 的 Post 数据没有了："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:R,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"这就是 db 的 4 个命令。"}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-migrate",children:["prisma migrate",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-migrate",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"mirgrate 是迁移的意思，在这里是指表的结构变化。"}),"\n",(0,n.jsx)(i.p,{children:"prisma migrate 有这些子命令："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:C,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"我们分别来看一下。"}),"\n",(0,n.jsx)(i.p,{children:"首先是 prisma migrate dev。"}),"\n",(0,n.jsx)(i.p,{children:"这个我们前面用过，它会根据 schema 的变化生成 sql 文件，并执行这个 sql，还会生成 client 代码。"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma migrate dev --name init\n"})}),"\n",(0,n.jsx)(i.p,{children:"因为之前创建过表，并且有数据。"}),"\n",(0,n.jsx)(i.p,{children:"它会提示是否要 reset："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:v,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"选择是，会应用这次 mirgration，生成 sql 文件："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:A,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"并且会生成 client 代码，而且会自动执行 prisma db seed，插入初始化数据。"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:y,alt:""})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:N,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"这样就既创建了表，又插入了初始数据，还生成了 client。"}),"\n",(0,n.jsx)(i.p,{children:"我们开发的时候经常用这个命令。"}),"\n",(0,n.jsx)(i.p,{children:"在 prisma/migrations 下会保存这次 migration 的 sql 文件。"}),"\n",(0,n.jsx)(i.p,{children:"目录名是 “年月日时分秒_名字” 的格式："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:k,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"那如果我们改一下 schema 文件，再次执行 migrate dev 呢？"}),"\n",(0,n.jsx)(i.p,{children:"在 Post 的 model 定义里添加 tag 字段："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:P,alt:""})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'tag       String  @default("")\n'})}),"\n",(0,n.jsx)(i.p,{children:"然后 migrate dev："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma migrate dev --name age-field\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:E,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"这次生成的 sql 只包含了修改表结构的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:_,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"在数据库中有个 _prisma_migrations 表，记录着数据库 migration 的历史："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:q,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"如果把这个表删掉，再次 mirgate dev 就会有前面的是否 reset 的提示了："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:v,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"如果你想手动触发reset，可以用 reset 命令："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:w,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"它会清空数据然后执行所有 migration"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma migrate reset\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:u,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"会提示会丢失数据，确认后就会重置表，然后执行所有 migration："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:o,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"还会生成 client 代码，并且执行 prisma db seed 来初始化数据。"}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-generate",children:["prisma generate",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-generate",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"generate 命令只是用来生成 client 代码的，他并不会同步数据库："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:f,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"只是根据 schema 定义，在 node_modules/@prisma/client 下生成代码，用于 CRUD。"}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-studio",children:["prisma studio",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-studio",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"这个是可以方便 CRUD 数据的图形界面："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma studio\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:g,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"选择一个 model："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:b,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"会展示它的所有数据："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:j,alt:""})}),"\n",(0,n.jsxs)(i.p,{children:["可以编辑记录：\n",(0,n.jsx)("img",{src:x,alt:""})]}),"\n",(0,n.jsxs)(i.p,{children:["删除记录：\n",(0,n.jsx)("img",{src:m,alt:""})]}),"\n",(0,n.jsxs)(i.p,{children:["新增记录：\n",(0,n.jsx)("img",{src:h,alt:""})]}),"\n",(0,n.jsx)(i.p,{children:"不过一般我们都用 mysql workbench 来做。"}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-validate",children:["prisma validate",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-validate",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"这个是用来检查 schema 文件是否有语法错误的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"比如我写错一个类型，然后执行 validate："}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"prisma validate\n"})}),"\n",(0,n.jsx)(i.p,{children:"会提示这里有错误："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:p,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"当然，我们安装了 prisma 的插件之后，可以直接在编辑器里看到这个错误："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:l,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"就和 eslint 差不多。"}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-format",children:["prisma format",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-format",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"这个是用来格式化 prisma 文件的："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:d,alt:""})}),"\n",(0,n.jsx)(i.p,{children:"当然，你安装了 prisma 的 vscode 插件之后，也可以直接用编辑器的 format："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:r,alt:""})}),"\n",(0,n.jsxs)(i.h2,{id:"prisma-version",children:["prisma version",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#prisma-version",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"这个就是展示一些版本信息的，比较简单："}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)("img",{src:c,alt:""})}),"\n",(0,n.jsxs)(i.p,{children:["案例代码在",(0,n.jsx)(i.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/prisma-all-command",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,n.jsxs)(i.h2,{id:"总结",children:["总结",(0,n.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,n.jsx)(i.p,{children:"这节我们学习了 prisma 的全部命令："}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"init：创建 schema 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"generate： 根据 shcema 文件生成 client 代码"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"db：同步数据库和 schema"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"migrate：生成数据表结构更新的 sql 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"studio：用于 CRUD 的图形化界面"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"validate：检查 schema 文件的语法错误"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"format：格式化 schema 文件"}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"version：版本信息"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"其中，prisma init、prisma migrate dev 是最常用的。"}),"\n",(0,n.jsx)(i.p,{children:"prisma db pull、prisma db push 也可以方便的用来做 schema 和数据库的同步。"}),"\n",(0,n.jsx)(i.p,{children:"常用的命令也没有几个，多拥几遍就熟了。"})]})}function ed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,a.ah)(),e.components);return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(er,{...e})}):er(e)}let el=ed;ed.__RSPRESS_PAGE_META={},ed.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F147.%20Prisma%20%E7%9A%84%E5%85%A8%E9%83%A8%E5%91%BD%E4%BB%A4.md"]={toc:[{text:"prisma init",id:"prisma-init",depth:2},{text:"prisma db",id:"prisma-db",depth:2},{text:"prisma migrate",id:"prisma-migrate",depth:2},{text:"prisma generate",id:"prisma-generate",depth:2},{text:"prisma studio",id:"prisma-studio",depth:2},{text:"prisma validate",id:"prisma-validate",depth:2},{text:"prisma format",id:"prisma-format",depth:2},{text:"prisma version",id:"prisma-version",depth:2},{text:"总结",id:"总结",depth:2}],title:"147. Prisma 的全部命令",headingTitle:"147. Prisma 的全部命令",frontmatter:{}}}}]);