"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["82976"],{501626:function(n,e,a){a.r(e),a.d(e,{default:()=>h});var r=a(552676),c=a(740453);function s(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",code:"code",h4:"h4",pre:"pre",blockquote:"blockquote"},(0,c.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"67动态数据可视化",children:["67.动态数据可视化",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#67动态数据可视化",children:"#"})]}),"\n",(0,r.jsxs)(e.h2,{id:"106-动态数据可视化",children:["10.6 动态数据可视化",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#106-动态数据可视化",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"数据可视化是将错综复杂的数据以及潜藏在数据背后的数据现象，以更加清晰直观的图形化方式给展示出来，这也一直是数据分析非常重要的课题。Web前端数据可视化有非常多的开源项目，比如D3、echarts、AntV、Hightcharts等，而其中百度出品的echarts，国内使用比较多，且有适用于小程序的版本echarts-for-weixin。"}),"\n",(0,r.jsxs)(e.h3,{id:"1061-引入echarts",children:["10.6.1 引入echarts",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1061-引入echarts",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:["echarts可视化图表支持柱状图、散点图、饼图、折线图、漏斗图、仪表盘等多种形式的图表。我们可以在手机微信里搜索",(0,r.jsx)(e.code,{children:"echarts图表示例"}),"小程序了解实际的效果。这个示例的源码可以通过以下链接下载："]}),"\n",(0,r.jsxs)(e.p,{children:["echarts小程序版：",(0,r.jsx)(e.a,{href:"https://github.com/ecomfe/echarts-for-weixin",target:"_blank",rel:"noopener noreferrer",children:"echarts-for-weixin Github地址"})]}),"\n",(0,r.jsxs)(e.h4,{id:"1在页面引入ec-canvas组件",children:["1、在页面引入ec-canvas组件",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1在页面引入ec-canvas组件",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"上面的源码是可以运行的完整代码，我们可以导入到开发者工具为后面的学习做一个参考。要在自己的项目中使用echarts，首先需要将ec-canvas文件夹复制粘贴到我们当前的小程序根目录下，目录结构如下："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"miniprogram //小程序根目录  \n├── pages\n├── ec-canvas\n├── app.js\n├── app.json\n├── app.wxss     \n"})}),"\n",(0,r.jsxs)(e.p,{children:["然后使用开发者工具在pages下新建一个chart页面（也就是在app.json的pages配置项里添加",(0,r.jsx)(e.code,{children:"pages/chart/chart"}),"），在页面chart.json里usingComponents配置项里引入ec-canvas组件："]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'{\n  "usingComponents": {\n    "ec-canvas": "../../ec-canvas/ec-canvas"\n  }\n}\n'})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["当页面的json文件引入组件之后，开发者工具会反馈",(0,r.jsx)(e.code,{children:"[JS 文件编译错误] 以下文件体积超过 500KB，已跳过压缩以及 ES6 转 ES5 的处理"}),"，这是因为echarts.js包含的图表类型比较多，文件过大有700k+，所以控制台会有报错提示（可以忽略），出现该提示也表明我们引入成功。当然我们也可以根据自己的需求，在",(0,r.jsx)(e.a,{href:"https://echarts.apache.org/zh/builder.html",target:"_blank",rel:"noopener noreferrer",children:"echarts官网定制页"}),"只选择自己要使用的图表类型。然后将定制下载的echarts.min.js的名称改为echarts替换掉组件里面的echarts.js即可，可以减轻一半的体积。"]}),"\n"]}),"\n",(0,r.jsxs)(e.h4,{id:"2在页面中使用echarts",children:["2、在页面中使用echarts",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2在页面中使用echarts",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"echarts-for-weixin开源项目的源码就是一个完整的小程序案例，不同的图表类型都有一个单独的展示页面和详细的代码，基本可以做到复制粘贴就可以跑起来的水平，下面只是粗略讲解一些在使用过程中需要注意的事项。"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"//在chart.wxml输入如下代码创建一个ec-canvas组件\n<view class=\"container\">\n  <ec-canvas id=\"mychart-dom-bar\" canvas-id=\"mychart-bar\" ec=\"{{ ec }}\"></ec-canvas>\n</view>\n\n//在chart.wxss里给ec-canvas组件设置大小与位置，尤其是要注意container的css，你可以写在app.wxss作为全局样式，也可以写在单个页面里，取决你的开发需求\nec-canvas { \n  width: 100%;\n  height: 200px; \n}\n.container {\n  margin:20px 0 ;\n  width: 100%;\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n}\n\n//以下代码来自于源码案例的仪表盘pages/gauge/gauge.js，直接复制粘贴到chart.js就可以看到效果了，使用起来非常方便\nimport * as echarts from '../../ec-canvas/echarts';\nconst app = getApp();\nfunction initChart(canvas, width, height, dpr) {\n  const chart = echarts.init(canvas, null, {\n    width: width,\n    height: height,\n    devicePixelRatio: dpr // new\n  });\n  canvas.setChart(chart);\n\n  var option = {\n    backgroundColor: \"#ffffff\",\n    color: [\"#37A2DA\", \"#32C5E9\", \"#67E0E3\"],\n    series: [{\n      name: '业务指标', //图表的名称\n      type: 'gauge', //图表的类型\n      detail: {\n        formatter: '{value}%'\n      },\n      axisLine: {  //坐标\n        show: true,\n        lineStyle: {\n          width: 30,\n          shadowBlur: 0,\n          color: [\n            [0.3, '#67e0e3'],\n            [0.7, '#37a2da'],\n            [1, '#fd666d']\n          ]\n        }\n      },\n      data: [{\n        value: 40,\n        name: '完成率',\n      }]\n    }]\n  };\n\n  chart.setOption(option, true);\n  return chart;\n}\n\nPage({\n  data: {\n    ec: {\n      onInit: initChart //调用initChart函数，获取返回的chart\n    }\n  },\n});\n"})}),"\n",(0,r.jsx)(e.p,{children:"更多配置详情可以参考：echarts官方技术文档，echarts图表类型太多，配置项与API也相当复杂，建议有兴趣的朋友之后再来研究。"}),"\n",(0,r.jsxs)(e.h3,{id:"1062-echarts与云数据库",children:["10.6.2 echarts与云数据库",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1062-echarts与云数据库",children:"#"})]}),"\n",(0,r.jsxs)(e.h4,{id:"1将options的数据存储到数据库",children:["1、将options的数据存储到数据库",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1将options的数据存储到数据库",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"云开发数据库是文档型数据库，用来存储数据可视化的数据非常方便，我们只需要将option的整个值作为对象新增或更新到记录里就可以。"}),"\n",(0,r.jsx)(e.p,{children:"比如上面的案例，我们可以新建一个集合比如chart，然后根据需要修改它的权限为“所有人可读，仅创建者可读写”，然后使用云开发控制台数据库标签的高级脚本，执行如下脚本"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"db.collection('chart').add({\n  data:{\n    _id:\"gauge001\",//只需要在这里添加一个_id的字段即可\n    backgroundColor: \"#ffffff\",\n    color: [\"#37A2DA\", \"#32C5E9\", \"#67E0E3\"],\n    series: [{\n      name: '业务指标', //图表的名称\n      type: 'gauge', //图表的类型\n      detail: {\n        formatter: '{value}%'\n      },\n      axisLine: {  //坐标\n        show: true,\n        lineStyle: {\n          width: 30,\n          shadowBlur: 0,\n          color: [\n            [0.3, '#67e0e3'],\n            [0.7, '#37a2da'],\n            [1, '#fd666d']\n          ]\n        }\n      },\n      data: [{\n        value: 40,\n        name: '完成率',\n      }]\n    }]\n  }\n})\n"})}),"\n",(0,r.jsx)(e.p,{children:"而在小程序端的chart.js，将initChart函数做如下修改即可，这样echarts数据可视化的数据就来自于对云数据库的请求了："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'const colName = "chart" //集合名\nconst docId = "gauge001" //记录的_id\nfunction initChart(canvas, width, height, dpr) {\n  const chart = echarts.init(canvas, null, {\n    width: width,\n    height: height,\n    devicePixelRatio: dpr // new\n  });\n  canvas.setChart(chart);\n\n  db.collection(colName).where({\n    _id:docId\n  }).get().then(res=>{\n    const option = res.data[0]\n    chart.setOption(option);\n    return chart;\n  })\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"当我们要更改为其他类型的图表时，比如柱状图，采用同样的方法将option的对象上传到数据库，到时候只需要修改docId的值即可。结合了云开发数据库的数据可视化在处理上更加方便灵活了。"}),"\n",(0,r.jsxs)(e.h4,{id:"2动态可视化数据",children:["2、动态可视化数据",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2动态可视化数据",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"不仅如此，由于云数据库支持多端SDK（小程序端、web端、移动端、管理端）和通过HTTP API的方式进行增删改查，这样云开发就能很容易实现跨端的动态数据可视化了，比如可以结合云开发的CloudID获取用户的微信步数，并将一周的步数进行线形图或柱状图的可视化。"})]})}function t(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,c.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(s,{...n})}):s(n)}let h=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F67.%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.md"]={toc:[{text:"10.6 动态数据可视化",id:"106-动态数据可视化",depth:2},{text:"10.6.1 引入echarts",id:"1061-引入echarts",depth:3},{text:"1、在页面引入ec-canvas组件",id:"1在页面引入ec-canvas组件",depth:4},{text:"2、在页面中使用echarts",id:"2在页面中使用echarts",depth:4},{text:"10.6.2 echarts与云数据库",id:"1062-echarts与云数据库",depth:3},{text:"1、将options的数据存储到数据库",id:"1将options的数据存储到数据库",depth:4},{text:"2、动态可视化数据",id:"2动态可视化数据",depth:4}],title:"67.动态数据可视化",headingTitle:"67.动态数据可视化",frontmatter:{}}}}]);