"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["3534"],{807096:function(e,n,s){s.r(n),s.d(n,{default:()=>_});var c=s(552676),a=s(740453);let i=s.p+"static/image/71e1da84ef0048045624adc8d714cf01.0c6ff1cc.gif",r=s.p+"static/image/894a8a4d3acd3953ae22107485dd8b0a.945b44cf.webp",l=s.p+"static/image/505503226cfeab0b44787d97a3a7194d.037a5227.webp",d=s.p+"static/image/31f4353b118a5447eaec7924c9d3a5e2.03fd5421.gif",t=s.p+"static/image/e6f41b13d5191f7957c55c4b2eeaa5c4.c1b43490.webp",p=s.p+"static/image/5e80ed4202f95d6bb6cef46495de426e.389c8a33.webp",h=s.p+"static/image/304ef53d4ca49b58790e35d7e4fca66a.bc3f72df.webp",o=s.p+"static/image/c91c5ed6374f3c42c94f576236805573.2a161212.webp",j=s.p+"static/image/2b4f73f7312b2fe264b786c3364f3b17.d9b8fac8.webp",x=s.p+"static/image/c884e78fc16ece8e7e5542c9c6344908.5c90a390.webp",f=s.p+"static/image/2b86ef28de41048f8d88a788decafa20.036dcf9f.webp",g=s.p+"static/image/f2befb51aca4259c6670329364d85c6a.16be7634.webp",b=s.p+"static/image/a190ce8183964f816de9642fd1780421.19c238d8.webp",m=s.p+"static/image/160e19dc3e4f7400d07fb5343b74130d.02bf0596.gif",u=s.p+"static/image/f8d705962737c473026ecda157123057.929a87c2.webp",w=s.p+"static/image/9ee7753a60cb4483239345a110ea6167.d9ceefba.webp",E=s.p+"static/image/69b24013f129bea5ae159f77d5a330e1.1f15bee0.webp",y=s.p+"static/image/3339ad8cf7214b55ae3a21dbd8448d0a.33422611.webp",A=s.p+"static/image/21ffd6b38c120d61161599445f7f89bb.00aad282.webp",v=s.p+"static/image/90349ea5199754bb344ac73dc58d4d46.ad8b4c47.webp",S=s.p+"static/image/e111db23871da54311f908f80a7f17ee.7de6ee5e.webp",F=s.p+"static/image/875e1dd5ea7ac9bb19ac8b1b9dacd640.ca48974d.gif";function N(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"第59章reactplayground项目实战链接分享代码下载",children:["第59章—ReactPlayground项目实战：链接分享、代码下载",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第59章reactplayground项目实战链接分享代码下载",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"\uFEFF这节我们继续完善 playground 的功能。"}),"\n",(0,c.jsx)(n.p,{children:"代码写完后我们希望能通过链接分享出去，别人访问链接就可以看到这段代码。"}),"\n",(0,c.jsx)(n.p,{children:"vue playground 是有这个功能的："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:F,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"点击分享按钮，链接会复制到剪贴板。"}),"\n",(0,c.jsx)(n.p,{children:"然后在新的浏览器窗口打开，可以看到分享的代码："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"我们也来实现下。"}),"\n",(0,c.jsx)(n.p,{children:"大家想一下，我们要分享或者说保存的是哪部分数据呢？"}),"\n",(0,c.jsx)(n.p,{children:"其实就是 context 里的 files。"}),"\n",(0,c.jsx)(n.p,{children:"files 包含所有文件的信息，编辑、编译、预览都是围绕 files 来的。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"而 files 是一个对象，我们只需要 JSON.stringify 一下，就变为字符串了。"}),"\n",(0,c.jsx)(n.p,{children:"我们把它放到 url 后面，然后初始化的时候读取出来 JSON.parse 一下，作为 files 的初始数据不就行了？"}),"\n",(0,c.jsx)(n.p,{children:"在 Context.Provider 里设置下 JSON.stringify(files) 到 location.hash"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\n    const hash = JSON.stringify(files)\n    window.location.hash = encodeURIComponent(hash)\n}, [files])\n"})}),"\n",(0,c.jsx)(n.p,{children:"当 files 内容变化的时候，会同步修改。"}),"\n",(0,c.jsx)(n.p,{children:"这里还要对字符串 encodeURIComponent 下，把 url 里不支持的字符做下转换："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到，确实会把 files 内容保存到 hash。"}),"\n",(0,c.jsx)(n.p,{children:"那把这个 url 分享出去之后，初始化的时候用 hash 中的 files 就好了："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const getFilesFromUrl = () => {\n  let files: Files | undefined\n  try {\n      const hash = decodeURIComponent(window.location.hash.slice(1))\n      files = JSON.parse(hash)\n  } catch (error) {\n    console.error(error)\n  }\n  return files\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"对 hash decodeURIComponent 一下，然后 JSON.parse 作为 files 的内容。"}),"\n",(0,c.jsx)(n.p,{children:"试下效果："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"我在 chrome 里改了一下代码内容，新建了一个 Aaa.tsx 组件。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"在别的浏览器打开这个链接试下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"可以看到，App.tsx、Aaa.tsx 组件都是我们改动的内容。"}),"\n",(0,c.jsx)(n.p,{children:"这样分享 url 功能就完成了。"}),"\n",(0,c.jsx)(n.p,{children:"当然，直接把文件内容放到 hash 上不大好，太长了，我们要压缩下。"}),"\n",(0,c.jsxs)(n.p,{children:["用 ",(0,c.jsx)(n.a,{href:"https://www.npmjs.com/package/fflate",target:"_blank",rel:"noopener noreferrer",children:"fflate"})," 这个包："]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"安装下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save fflate\n"})}),"\n",(0,c.jsx)(n.p,{children:"在 utils.ts 添加两个方法"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:'import { strFromU8, strToU8, unzlibSync, zlibSync } from "fflate"\n\nexport function compress(data: string): string {\n    const buffer = strToU8(data)\n    const zipped = zlibSync(buffer, { level: 9 })\n    const str = strFromU8(zipped, true)\n    return btoa(str)\n}\n\nexport function uncompress(base64: string): string {\n    const binary = atob(base64)\n\n    const buffer = strToU8(binary, true)\n    const unzipped = unzlibSync(buffer)\n    return strFromU8(unzipped)\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"这里的 atob、btoa 是二进制的 ASC 码和 base64 的字符串的转换："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"compress 方法里，我们先调用 fflate 包的 strToU8 把字符串转为字节数组，然后 zlibSync 压缩，之后 strFromU8 转为字符串。"}),"\n",(0,c.jsx)(n.p,{children:"最后用 btoa 把这个 base64 编码的字符串转为 asc 码。"}),"\n",(0,c.jsx)(n.p,{children:"uncompress 方法正好反过来。"}),"\n",(0,c.jsx)(n.p,{children:"我们调用下试试效果："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"useEffect(() => {\n    const hash = compress(JSON.stringify(files))\n    window.location.hash = hash\n}, [files])\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"const getFilesFromUrl = () => {\n  let files: Files | undefined\n  try {\n      const hash = uncompress(window.location.hash.slice(1))\n      files = JSON.parse(hash)\n  } catch (error) {\n    console.error(error)\n  }\n  return files\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"现在，代码内容会压缩后以 asc 码字符串的方式保存在 url 里："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"在另一个窗口里打开这个 url："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"内容同样能恢复。"}),"\n",(0,c.jsx)(n.p,{children:"这样，代码分享功能就完成了。"}),"\n",(0,c.jsx)(n.p,{children:"在 Header 里加个按钮："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"<ShareAltOutlined \n  style={{marginLeft: '10px'}}\n  onClick={() => {\n    copy(window.location.href);\n    message.success('分享链接已复制。')\n  }}\n/>\n"})}),"\n",(0,c.jsx)(n.p,{children:"这里用到了 copy-to-clipboard 包，安装下："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save copy-to-clipboard\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"点击分享按钮，会把 url 复制到剪贴板，可以直接粘贴。"}),"\n",(0,c.jsx)(n.p,{children:"然后我们再来实现下代码下载功能："}),"\n",(0,c.jsx)(n.p,{children:"我们需要在浏览器里把多个文件打成 zip 包，这需要用到 jszip："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save jszip\n"})}),"\n",(0,c.jsx)(n.p,{children:"然后触发代码下载，我们用 file-saver："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"npm install --save file-saver\nnpm install --save-dev @types/file-saver \n"})}),"\n",(0,c.jsx)(n.p,{children:"在 utils.ts 加一个 downloadFiles 方法："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"export async function downloadFiles(files: Files) {\n    const zip = new JSZip()\n\n    Object.keys(files).forEach((name) => {\n        zip.file(name, files[name].value)\n    })\n\n    const blob = await zip.generateAsync({ type: 'blob' })\n    saveAs(blob, `code${Math.random().toString().slice(2, 8)}.zip`)\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"然后在 Header 加一个按钮："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-javascript",children:"<DownloadOutlined \n  style={{marginLeft: '10px'}}\n  onClick={async () => {\n    await downloadFiles(files);\n    message.success('下载完成')\n  }}\n/>\n"})}),"\n",(0,c.jsx)(n.p,{children:"试一下："}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"下载成功！"}),"\n",(0,c.jsxs)(n.p,{children:["案例代码上传了",(0,c.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/react-course-code/tree/main/react-playground-project",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"}),"，可以切换到这个 commit 查看："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"git reset --hard ea67b94f512f023779077dfedca02e87c6d59b4f\n"})}),"\n",(0,c.jsxs)(n.h2,{id:"总结",children:["总结",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"这节我们实现了链接分享、代码下载功能。"}),"\n",(0,c.jsx)(n.p,{children:"链接分享原理就是把 files 信息 JSON.stringify 之后保存到 location.hash。"}),"\n",(0,c.jsx)(n.p,{children:"然后初始化的时候从 location.hash 读取出来 JSON.parse 之后设置到 files。"}),"\n",(0,c.jsx)(n.p,{children:"不过最好是做下压缩，我们用 fflate 这个包来对字符串进行压缩，然后用 btoa 转为 asc 码字符串。"}),"\n",(0,c.jsx)(n.p,{children:"代码下载则是基于 jszip 和 file saver 包实现的。"}),"\n",(0,c.jsx)(n.p,{children:"这样，playground 里写的代码内容就可以通过 url 分享出去，并且可以下载了。"})]})}function z(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(N,{...e})}):N(e)}let _=z;z.__RSPRESS_PAGE_META={},z.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC59%E7%AB%A0%E2%80%94ReactPlayground%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%9A%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB%E3%80%81%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第59章—ReactPlayground项目实战：链接分享、代码下载",headingTitle:"第59章—ReactPlayground项目实战：链接分享、代码下载",frontmatter:{}}}}]);