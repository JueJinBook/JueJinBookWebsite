"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["7545"],{539120:function(e,c,s){e.exports=s.p+"static/image/605df5f246ab02d18d547b7cf9de98c0.1a18e462.webp"},520421:function(e,c,s){s.r(c),s.d(c,{default:()=>J});var n=s(552676),i=s(740453),a=s(539120);let r=s.p+"static/image/d654dce63b337fb7ee22baed3e5e2bd7.741151a0.webp",d=s.p+"static/image/ec9ec793c04596b65c8ad6f628043ec8.a8be41e8.webp",p=s.p+"static/image/fcab22232b8944e82581447a5baf8d70.d616ad4d.webp",t=s.p+"static/image/234d83b65545ebdc2d26df58d3ec895f.e3c26940.webp",l=s.p+"static/image/fd6b5a53c5bc94745f6d0331620b44d4.1abb4208.webp",h=s.p+"static/image/a2b1ee24f1f022697e7ff80edd767994.0ee52748.webp",x=s.p+"static/image/608f7396c2ba3497f029db270bcb1988.73343604.webp",j=s.p+"static/image/98d31a1623ce11ef867aafc7c00243e6.0853397d.webp",b=s.p+"static/image/8886141f31f14ee863cf6ebfec4234be.219c6921.webp",m=s.p+"static/image/fc02ebc55f1240e843e0e5719ee8b042.2143cd51.webp",g=s.p+"static/image/14048fc91c24aecd9c911c04412add6f.df208cd3.webp",f=s.p+"static/image/541bfd9b6a98999e10173330b3e3b53f.4f177bcd.webp",o=s.p+"static/image/70a210c1a8ba93e9390046d8df4d5160.4875021d.webp",w=s.p+"static/image/4d86768b25e3a1ca5c82e532da3d2235.503d248c.webp",u=s.p+"static/image/56f92a44ffce4fad999394cfb539c80f.fb17ec02.webp",E=s.p+"static/image/c392eb8a37572c4906b8e47c4a9606e2.4c58e3d2.webp",A=s.p+"static/image/f3c8455922f6eed4c6b8744a30a86e38.05596732.webp",_=s.p+"static/image/e7b6c369760b31a5259c29f7a93de242.46987c68.webp",B=s.p+"static/image/f082d19e97e02099b929a6b5de67e309.2cbb8a80.webp",k=s.p+"static/image/955e952377cea2e5b3917e0b62e1d1c6.8f4c6229.webp",S=s.p+"static/image/d66a06f2d87b000bc78195697fd30b71.6453c1cc.webp",C=s.p+"static/image/241335d0b7c32d454e9504ef75731fa4.1520df20.webp",F=s.p+"static/image/76b7e91578b691c86c8cc35ae4b7dcbf.4fb56281.webp",v=s.p+"static/image/ee00c48e8bac26851c5f6f72b5742993.f4305f52.webp",P=s.p+"static/image/5b44e253765ded57e260534c76121beb.16c8f2a4.webp",R=s.p+"static/image/851861fb431fccd1f652997d17cb4834.e0455d3e.webp",D=s.p+"static/image/2a54b0f02158c2114e875ff00cfd7cfa.90ec34a0.webp",M=s.p+"static/image/0d91027f95c4c2f2399c1f053c85d04b.88f4957e.webp",y=s.p+"static/image/8be75076a0b54b5c6df9d47fe93ac87c.43c08057.webp",G=s.p+"static/image/3330c6aa8b19ff2c60c17622e4cf47bf.d69cde50.webp";function O(e){let c=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(c.h1,{id:"44线上报错如何直接调试本地源码",children:["44.线上报错如何直接调试本地源码？",(0,n.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#44线上报错如何直接调试本地源码",children:"#"})]}),"\n",(0,n.jsx)(c.p,{children:"当线上有报错的时候，大家是怎么定位问题的呢？"}),"\n",(0,n.jsx)(c.p,{children:"断点调试么？"}),"\n",(0,n.jsx)(c.p,{children:"但是这时候代码是被压缩过的，变量名都是 a、b、c、d 这种，根本看不出啥来。"}),"\n",(0,n.jsx)(c.p,{children:"如果调试线上报错能像本地开发的时候一样就好了。"}),"\n",(0,n.jsx)(c.p,{children:"其实这是可以做到的，这节就分享下如何优雅的调试线上报错："}),"\n",(0,n.jsx)(c.p,{children:"首先，我们准备一段 JS 代码："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:G,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"这是我随便找的一段 JS 代码，里面抛了一个错误。"}),"\n",(0,n.jsx)(c.p,{children:"然后用 webpack 进行编译："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:y,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"在 index.html 里引入构建产物："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:M,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"然后跑个静态服务器 npx http-server ."}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:D,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"浏览器访问，就会发现代码确实报错了："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:R,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"那问题来了，怎么定位错误原因呢？"}),"\n",(0,n.jsx)(c.p,{children:"首先，我们可以使用异常断点，在抛异常的地方断住："}),"\n",(0,n.jsx)(c.p,{children:"创建一个 vscode 调试配置："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:P,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"勾选 uncaught exceptions，在未被捕获的异常处断住："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:v,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"然后启动调试："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:F,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"你会发现代码在抛异常的地方断住了，这就是异常断点的功能。当你不知道哪里抛的异常的时候，可以用这个。"}),"\n",(0,n.jsx)(c.p,{children:"但现在代码是被压缩过的，看不出啥来："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:C,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"怎么能直接定位到抛异常的源码呢？"}),"\n",(0,n.jsx)(c.p,{children:"这时候就要用到 sourcemap 了，它就是用于把编译后的源码映射回源码的："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:S,alt:""})}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:k,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"首先要生成 sourcemap，这个配置下 webpack 的 devtool 为 hidden-source-map 即可："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:B,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"hidden-source-map 的意思是生成 sourcemap 但是不关联。"}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:_,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"如果你配成 source-map，代码是关联了 sourcemap 的："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:A,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"关联 sourcemap 需要在文件末尾加上 //# sourceMappingURL=xxx.js.map 的代码。"}),"\n",(0,n.jsx)(c.p,{children:"但现在这个文件是线上的，不能直接改本地文件。我们可以使用 charles 的断点功能来修改它："}),"\n",(0,n.jsx)(c.p,{children:"charles 默认不代理 127.0.0.1 的请求，我们要配下 hosts："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:E,alt:""})}),"\n",(0,n.jsxs)(c.p,{children:["比如我配了一个 ",(0,n.jsx)(c.a,{href:"http://www.guangtest.com",target:"_blank",rel:"noopener noreferrer",children:"www.guangtest.com"})," 的域名到 127.0.0.1。"]}),"\n",(0,n.jsx)(c.p,{children:"试一下："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:u,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"hosts 配置生效了（如果 hosts 不生效，一般是你用了某个翻墙软件改了系统代理，关掉即可）："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:w,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"然后我们要让 charles 拦截这个 url 的请求，需要安装一个插件 SwitchyOmega"}),"\n",(0,n.jsx)(c.p,{children:"不过在那之前要指定一个数据目录，也就是浏览器把插件、历史、cookie 等数据保存在哪里："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:o,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"不指定的话每次调试都会创建一个临时数据目录来跑调试，上次安装的插件就没有了。"}),"\n",(0,n.jsx)(c.p,{children:"chrome 应用商店搜索 switchy omega："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:f,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"配置下代理服务器，这里我 charles 是在 127.0.0.1:8888 的："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:g,alt:""})}),"\n",(0,n.jsxs)(c.p,{children:["之后配下 auto switch，让 ",(0,n.jsx)(c.a,{href:"http://www.guangtest.com",target:"_blank",rel:"noopener noreferrer",children:"www.guangtest.com"})," 的请求都走我们刚刚配的代理："]}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:m,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"之后点击应用选项。"}),"\n",(0,n.jsx)(c.p,{children:"代理方式设置成 auto switch，也就是根据配置的规则自动切换代理："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:b,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"这个网页的代理配成 charles 之后，在 charles 就可以抓到对应的请求了："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:j,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"接下来就是断点修改响应的内容了："}),"\n",(0,n.jsx)(c.p,{children:"点击 Proxy > Breakpoint Settings"}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:x,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"添加一个对 guangtest.com 的 dist/index.js 响应的断点："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:h,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"强制刷下页面，charles 就会断住："}),"\n",(0,n.jsx)(c.p,{children:"我们可以修改响应的内容，然后点击 execute 来执行修改："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:l,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"我加上了这样一行 sourcemap 的关联："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"在 chrome devtools 里可以看到拿到的响应是被修改过的："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:p,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"异常断点现在直接在源码处断住了："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:d,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"接下来就可以直接调试源码了，可以通过作用域、调用栈等信息来定位报错原因："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:r,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"这样我们就完成了直接本地调试线上报错代码对应的源码！"}),"\n",(0,n.jsxs)(c.p,{children:["案例代码在",(0,n.jsx)(c.a,{href:"https://github.com/QuarkGluonPlasma/fe-debug-exercize",target:"_blank",rel:"noopener noreferrer",children:"小册仓库"})]}),"\n",(0,n.jsx)(c.p,{children:"有的同学可能会问，前面我们不是学过一个小技巧，sources 面板可以右键点击 add soruce map，就可以手动关联 sourcemap么："}),"\n",(0,n.jsx)(c.p,{children:(0,n.jsx)("img",{src:a,alt:""})}),"\n",(0,n.jsx)(c.p,{children:"没错，那样比较简单，不用 charles 来断点修改文件内容，但那个是一次性的，刷新就没了。"}),"\n",(0,n.jsx)(c.p,{children:"而 charles 断点修改的内容会缓存，强制刷新才会重新请求。"}),"\n",(0,n.jsx)(c.p,{children:"这两种方式都可以。"}),"\n",(0,n.jsxs)(c.h2,{id:"总结",children:["总结",(0,n.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,n.jsx)(c.p,{children:"通过 sourcemap，我们可以调试线上报错的时候直接对应到本地源码来断点调试。"}),"\n",(0,n.jsx)(c.p,{children:"要让线上代码关联 sourcemap 可以通过 charles 断点修改对应的响应，加上一行 sourceMappingURL=xxx 的注释。"}),"\n",(0,n.jsx)(c.p,{children:"然后在 VSCode Debugger 里加个异常断点，这样就可以在异常处断住。"}),"\n",(0,n.jsx)(c.p,{children:"这样就可以快速定位线上错误的原因了，体验就和本地开发时一样！"}),"\n",(0,n.jsx)(c.p,{children:"当然，更快捷的方式是 VSCode Debugger 异常断点断住的时候右键 chrome devtools 的 sources 面板，手动 add source map。不过这种方式是一次性的。"})]})}function T(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,i.ah)(),e.components);return c?(0,n.jsx)(c,{...e,children:(0,n.jsx)(O,{...e})}):O(e)}let J=T;T.__RSPRESS_PAGE_META={},T.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F44.%E7%BA%BF%E4%B8%8A%E6%8A%A5%E9%94%99%E5%A6%82%E4%BD%95%E7%9B%B4%E6%8E%A5%E8%B0%83%E8%AF%95%E6%9C%AC%E5%9C%B0%E6%BA%90%E7%A0%81%EF%BC%9F.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"44.线上报错如何直接调试本地源码？",headingTitle:"44.线上报错如何直接调试本地源码？",frontmatter:{}}}}]);