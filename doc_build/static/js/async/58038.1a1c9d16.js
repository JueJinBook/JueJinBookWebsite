"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["58038"],{532210:function(e,n,r){r.r(n),r.d(n,{default:()=>eW});var d=r(552676),c=r(740453);let i=r.p+"static/image/6387578b9b5c839fb608b84c78f78a64.466774b9.gif",s=r.p+"static/image/d14fa99958f300ce42128fdbddbeda89.4b4c2a05.webp",l=r.p+"static/image/b083a3fa7f169be80f3fc9a2c815b661.8d95a531.webp",a=r.p+"static/image/263c44cd19cb304b32b042ba6ab6ae7b.cfaa70ea.webp",o=r.p+"static/image/057c56399d071c295717e8224a2ab9e9.c247002f.webp",h=r.p+"static/image/94bcc768a37ecbf9a8cb49270818f3d2.61498117.webp",t=r.p+"static/image/21acf548dc2b427a1b33032298a563b5.ee3256f1.webp",x=r.p+"static/image/805ef8b08bbf0175d90ad93755047e6f.20e997ec.gif",j=r.p+"static/image/d3237e246d88cded315ac5f5e474d600.2abdc07c.gif",p=r.p+"static/image/4d66bc013a7f2a2a14a8c2a27f2975e9.23f5ba26.webp",f=r.p+"static/image/b1c0dc465cbbdd8d703f7d1bdd8d7f2f.52435cbf.gif",b=r.p+"static/image/01ccee25241812dfb1c6f5bb2a4f0d21.378fe11c.gif",g=r.p+"static/image/66f8d825984bb5f48a45616702d14624.2ebeb244.webp",m=r.p+"static/image/ca1ac63c33600b8e96f7bba6a56c1cad.8b65af08.webp",u=r.p+"static/image/263d826a3ee38641275339005d233d79.0313ddea.webp",S=r.p+"static/image/711c38e2cfa9539d660e5f725597099f.c91f8b5a.webp",k=r.p+"static/image/ab3bf081ba9112abaa84cec716a522ce.6b003c47.webp",v=r.p+"static/image/e4558bb7ec9c106f59c2d57ea8e13b37.01eda07c.gif",y=r.p+"static/image/a5dcb7f8041b25fd11103afc44be7a64.2ff7340a.gif",w=r.p+"static/image/50ed189d537071b10fa98effbbb26864.f9fc09c5.gif",C=r.p+"static/image/65c8616de21eb2a4e58c2240fec92cc0.9def16fc.gif",N=r.p+"static/image/4baa67c5f4488f409eb2662260d8b17b.cf4ed23a.gif",_=r.p+"static/image/db1d3b650d0dbc70a18d2834a81f8965.7af1b816.gif",q=r.p+"static/image/d54e5ec273c370c980aa419f99f75c26.887bd994.webp",G=r.p+"static/image/c36ceea1b5028039b3b85f553c6eef99.790c715b.gif",M=r.p+"static/image/4f7b2f702709ea83eb2c65a6b2e456ca.f2d1e223.webp",D=r.p+"static/image/c205d3421e5724155d8718d95fbf2e04.29ddcd69.gif",L=r.p+"static/image/eb0128d61c5e1e14f5449eba7f9c3bad.37e8c8c9.webp",B=r.p+"static/image/1717b5539ff13fdd214d64c9f8cf4b24.61ecaa69.gif",E=r.p+"static/image/318adb099b932d0661583f0660ea696f.35198824.webp",W=r.p+"static/image/156a6fe9120c256569bf2f6af9916b4b.0dd1740a.gif",R=r.p+"static/image/9ed630e6e44d4a8779d49e37f6cd91e7.a18d0830.webp",z=r.p+"static/image/3feb25ed1f70870e78aebb179c380329.02cbd8e1.webp",V=r.p+"static/image/08729736c7ebf2e68329412f2f7a0fb5.44a7bc2e.gif",O=r.p+"static/image/f3978f1726e0b38de20b38658de2a978.50685f57.webp",H=r.p+"static/image/ba9d55fec4cd7d19150ffdb7e4483cfa.58466f2d.gif",P=r.p+"static/image/dd73d4d563d4535f44722ccb801c87fe.7a16f0db.webp",T=r.p+"static/image/d08f52253b8b045b879a0fd6d7d14391.3c1064a6.gif",Z=r.p+"static/image/9baf33f506804849e89d1fdff2512224.9a20b6ed.webp",Y=r.p+"static/image/193df3dda892242483adc8fccb9dd82f.d70382f7.gif",A=r.p+"static/image/3122e95819842da8d6b168b4a89e02b4.a9c5944e.webp",J=r.p+"static/image/d3df35146d5e5a2601abc0d91ee71fe1.dbb57c6a.gif",X=r.p+"static/image/04b361718f19bccf34bab2eedb3d6043.4f26e15f.webp",F=r.p+"static/image/dc999a9e9503cc951ea1bb6b7474e4cb.66e5eba8.gif",K=r.p+"static/image/0abce18aca4b9386c1b9cb6edb0b14ec.fb8bc8c7.webp",I=r.p+"static/image/c86b71aa829773bfc96e566d6cbf44a1.d7b9941d.gif",U=r.p+"static/image/af0d7829a3beae981c91d737fc175b5d.ef17dc94.webp",Q=r.p+"static/image/3e9f885bc7562d694586190ffaced8b7.e64cb213.gif",$=r.p+"static/image/94b8d98862f47f495cc3bdac37f377cf.5c412442.webp",ee=r.p+"static/image/4d1105bc0d2250fe3ad0bbb64a24b8c7.d30aae17.gif",en=r.p+"static/image/341480f4ad6e051ada2712f75de19596.47c62a8a.webp",er=r.p+"static/image/e0e87b0005e870c5f6df9e850b792a9c.41f795aa.gif",ed=r.p+"static/image/b7537c79a8b0f38ee43156e35e25711f.d6d6fc78.webp",ec=r.p+"static/image/f8a4d9cde9cbc963a86bfc55bdb3e638.3920d470.webp",ei=r.p+"static/image/96befc5ad5b2443a00a9fc9ba23c9619.144c4ea7.webp",es=r.p+"static/image/e082aab453a6b73e9d3a4c484dd9c07c.4b32b475.webp",el=r.p+"static/image/b496f0bea825875255907d1e3f5c4da8.37425f67.webp",ea=r.p+"static/image/29efec977af9fb4b9983e7803f62f719.f2bbee69.gif",eo=r.p+"static/image/c988aa44a815e7e7664b32b4c8f422c0.e0b4194b.gif",eh=r.p+"static/image/577d0cd712d0574505c1d01b9b16299d.4e65ab1f.gif",et=r.p+"static/image/10e93778af0c816915ab7479b640b1fa.2159f126.gif",ex=r.p+"static/image/d6ce5c23f4e2e1a01df0f0ae5fff73a8.751d878f.gif",ej=r.p+"static/image/454fdcbf55d359e93a5e80f2f69e7ebd.c5723512.gif",ep=r.p+"static/image/e783c2092174b7bf1f1cff33b1f81bb6.3d1c18e0.webp",ef=r.p+"static/image/1cdebea2651d254dddfcf7a98650c7a4.3054640a.gif",eb=r.p+"static/image/913b76d0a44fd7993351d4c89d8de165.1ed00d94.gif",eg=r.p+"static/image/fec35deb0641a3278684a11bd73d504b.4bde6551.gif",em=r.p+"static/image/1399f648aa1cf31a329c892adc07aedf.a2d48f2c.gif",eu=r.p+"static/image/069f03c2343ab2c51f6ffb6d11a93e0b.05d4443d.webp",eS=r.p+"static/image/312fb6f9d4451150c5fdfc6adfcfe695.d33e6360.gif",ek=r.p+"static/image/d9329c2d2db66b0b5a377e612aded22e.edb9bbe4.gif",ev=r.p+"static/image/943af1090a0e0bb7581fbd3e313f34fb.d28c98d0.gif",ey=r.p+"static/image/08ccb8cb7652afd75c3c08faa392c3a1.772d3b71.gif",ew=r.p+"static/image/9a451a18f78b957401d55cf6b5c7c19f.eb54648d.gif",eC=r.p+"static/image/f9edae1feaff15873e2ec8213a66eb3b.1745149f.gif",eN=r.p+"static/image/e83ed47f2034da4ff5c8f1b4563dc6e4.07788cda.gif",e_=r.p+"static/image/ac784d3fdaa1ff260bdf256fe4616fc0.9a6b209f.gif",eq=r.p+"static/image/ffe1aa0bb7d1b12eb4435e1661f22adc.7026cfbe.gif",eG=r.p+"static/image/b95a4c51146f8d83fba6fa5d681d0050.e8102c1f.gif",eM=r.p+"static/image/7641e12a9ffd6d53184d975710612bbb.4ee125c7.gif",eD=r.p+"static/image/290805d8900275b5c1afc5cd15f1a1e1.f31a8d72.webp",eL=r.p+"static/image/282c0172f70e1f18c6feb8f00ad64b31.04b7e1da.webp";function eB(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",h3:"h3",pre:"pre",img:"img",blockquote:"blockquote",h4:"h4"},(0,c.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"第42章css图像处理与特效指南",children:["第42章—CSS图像处理与特效指南",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第42章css图像处理与特效指南",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["\uFEFF在现代 Web 设计中，图像处理和特效已经成为提高用户体验和吸引注意的重要元素之一。CSS 提供了一系列强大的功能，使 Web 开发者能够对 Web 页面上的图像或元素进行各种处理和增强效果。这节课将带你深入了解 CSS 中的一些关键特性，包括 ",(0,d.jsx)(n.code,{children:"filter"})," 属性、",(0,d.jsx)(n.code,{children:"filter()"})," 函数、CSS 混合模式（CSS Blend Mode）以及 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性等。"]}),"\n",(0,d.jsx)(n.p,{children:"CSS 的这些功能不仅能够创建令人印象深刻的视觉效果，还可以进行图像处理，使图像在 Web 上更具吸引力。无论你是 Web 设计师还是 Web 开发人员，都可以从这些功能中受益。以下是我们将在这节课中涵盖的主要内容："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"filter"})})," ",(0,d.jsx)(n.strong,{children:"属性"}),"：我们将介绍如何使用 ",(0,d.jsx)(n.code,{children:"filter"})," 属性来对图像进行各种处理，如模糊、亮度调整、对比度增强、饱和度控制等。这些简单但强大的功能可用于改善图像的外观"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"filter()"})})," ",(0,d.jsx)(n.strong,{children:"函数："})," 了解如何使用 ",(0,d.jsx)(n.code,{children:"filter()"})," 函数将多个滤镜效果组合在一起，以创建更复杂的图像处理效果。我们将演示如何应用多个滤镜来实现创意和独特的效果"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"混合模式（Blend Mode）"})," ：我们将深入研究 CSS 的混合模式（即 CSS 的 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 和 ",(0,d.jsx)(n.code,{children:"background-blend-mode"}),"），这些模式允许图像之间以不同的方式进行混合，如正片叠底、叠加、差值等。你将了解如何利用混合模式来创建引人注目的效果"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"backdrop-filter"})})," ",(0,d.jsx)(n.strong,{children:"属性"}),"：介绍 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性，它允许我们对元素的背景进行模糊和处理，创造出毛玻璃效果和其他视觉吸引人的效果"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"这些功能的用途广泛，不仅可以用于 Web 设计中的装饰和美化，还可以用于改善用户界面的交互性，比如缩放和拖动图像。无论你是想为网站增添一些独特的视觉元素，还是想在图像处理方面更有创意，这节课都将为你提供有关如何实现这些目标的深入知识。"}),"\n",(0,d.jsx)(n.p,{children:"现在，让我们开始探索这些强大的 CSS 图像处理和特效功能，以提升你的网页设计和前端开发技能！"}),"\n",(0,d.jsxs)(n.h2,{id:"css-的-filter-属性",children:["CSS 的 filter 属性",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-的-filter-属性",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["滤镜功能已不再是图形设计软件（例如 Photoshop）独有的功能，它也成为 CSS 的一个非常重要的特性，我们可以使用 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 特性来实现各种图像处理和特效效果。也就是说，你无需使用复杂的图形设计软件，就可以在 Web 上轻松地改变图像的外观和行为。"]}),"\n",(0,d.jsxs)(n.h3,{id:"css-的-filter-是什么",children:["CSS 的 filter 是什么",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-的-filter-是什么",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性对应着图形设计软件中的“滤镜”功能，允许 Web 开发人员对 HTML 元素的内容做一些特效处理，比如模糊、亮度调整、对比度增强、颜色转换等。例如，在某些特殊的场景下，希望将整个 Web 页面置灰，那么就可以使用 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 来实现："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"html {\n    filter: grayscale(100%);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eL,alt:""})}),"\n",(0,d.jsxs)(n.h3,{id:"基本用法",children:["基本用法",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基本用法",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["首先，让我们来看看 ",(0,d.jsx)(n.code,{children:"filter"})," 属性的基本用法。要应用 ",(0,d.jsx)(n.code,{children:"filter"})," 属性，只需在 CSS 中选中一个元素，然后添加以下规则："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: <filter-value-list>;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["其中 ",(0,d.jsx)(n.code,{children:"<filter-value-list>"})," 是 CSS 的滤镜函数，它包括："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"<filter-value-list> = <blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>\n"})}),"\n",(0,d.jsxs)(n.p,{children:["你可以使用一个或多个滤镜函数作为 ",(0,d.jsx)(n.code,{children:"filter"})," 属性的值，例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: hue-rotate(30deg);\n}\n\n.element {\n    filter: blur(5px) brightness(134%);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["如果你在 ",(0,d.jsx)(n.code,{children:"filter"})," 属性上使用多个滤镜函数，需要使用空格符将它们分隔开。另外，要是你错误地应用了一个滤镜函数，那么整个 ",(0,d.jsx)(n.code,{children:"filter"})," 将会失去作用。"]}),"\n",(0,d.jsx)(n.p,{children:"接下来，我们一起来看看这些滤镜函数所起的作用。"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eD,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/MWZvjMj",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/MWZvjMj"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"模糊blur",children:["模糊：blur()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#模糊blur",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["模糊是一种常见的图像处理效果，可以用来创建柔和的外观和实现高斯模糊效果。你只需要往 ",(0,d.jsx)(n.code,{children:"blur()"})," 函数中传递一个长度单位值，就可以轻松实现模糊效果。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: blur(10px);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eM,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ZEVJBQe",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ZEVJBQe"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["传给 ",(0,d.jsx)(n.code,{children:"blur()"})," 函数的值是用于指定应用的模糊程度，需要注意的是，该参数的值只能使用长度单位（",(0,d.jsx)(n.code,{children:"<length>"}),"）表示，不接受百分比作为参数，而且该值越大，其模糊程度就越高。"]}),"\n",(0,d.jsxs)(n.h4,{id:"亮度brightness",children:["亮度：brightness()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#亮度brightness",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["如果你需要给元素增加或减少亮度，那就可以使用 ",(0,d.jsx)(n.code,{children:"brightness()"})," 函数。以下是如何使用 ",(0,d.jsx)(n.code,{children:"brightness()"})," 函数的示例："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: brightness(80%);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eG,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/yLGoVjo",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLGoVjo"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["其中不变的图像以 ",(0,d.jsx)(n.code,{children:"100%"})," 的值表示，值为 ",(0,d.jsx)(n.code,{children:"0%"})," 将图像完全变黑，因此在 ",(0,d.jsx)(n.code,{children:"0% ~ 100%"})," 之间的值将使图像变暗，使用超过 ",(0,d.jsx)(n.code,{children:"100%"})," 的值来增加亮度。"]}),"\n",(0,d.jsxs)(n.p,{children:["在使用 ",(0,d.jsx)(n.code,{children:"brightness()"})," 函数改变元素亮度时，还可以使用小数值，比如上面示例中的 ",(0,d.jsx)(n.code,{children:"80%"})," ，可以写为 ",(0,d.jsx)(n.code,{children:"0.8"})," ："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: brightness(.8);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["也就是说，",(0,d.jsx)(n.code,{children:"brightness()"})," 函数的参数值可以是任何数字，其中 ",(0,d.jsx)(n.code,{children:"1"})," 表示原始亮度，大于 ",(0,d.jsx)(n.code,{children:"1"})," 的值会增加亮度，小于 ",(0,d.jsx)(n.code,{children:"1"})," 的值会降低亮度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: brightness(0.7);\n}\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"对比度contrast",children:["对比度：contrast()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#对比度contrast",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"contrast()"})," 函数可用来调整图像的对比度，你可以像下面这样使用 ",(0,d.jsx)(n.code,{children:"contrast()"})," 函数："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: contrast(150%);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eq,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/WNLEoaR",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/WNLEoaR"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"contrast()"})," 函数的值为 ",(0,d.jsx)(n.code,{children:"0%"})," 表示完全灰度图像，而值为 ",(0,d.jsx)(n.code,{children:"100%"})," 表示原始对比度，大于 ",(0,d.jsx)(n.code,{children:"100%"})," 时将增加图像的对比度。比如上面示例中的 ",(0,d.jsx)(n.code,{children:"150%"})," 表示图像对比度增加到原始值的 ",(0,d.jsx)(n.code,{children:"1.5"})," 倍。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"contrast()"})," 函数和亮度 ",(0,d.jsx)(n.code,{children:"brightness()"})," 函数相似，其参数值可以是任何数字，其中 ",(0,d.jsx)(n.code,{children:"1"})," 表示原始对比度，大于 ",(0,d.jsx)(n.code,{children:"1"})," 的值会增加对比度，小于 ",(0,d.jsx)(n.code,{children:"1"})," 的值会降低对比度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: contrast(.7);\n}\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"灰度grayscale",children:["灰度：grayscale()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#灰度grayscale",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"grayscale()"})," 函数可用于将图像转换为灰度图像。以下是如何使用 ",(0,d.jsx)(n.code,{children:"grayscale()"})," 函数的示例："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: grayscale(1);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:e_,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWevbod",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWevbod"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像将完全转换为灰度图像，参数值 ",(0,d.jsx)(n.code,{children:"1"})," 表示完全灰度化。你可以使用从 ",(0,d.jsx)(n.code,{children:"0"})," 到 ",(0,d.jsx)(n.code,{children:"1"})," 的值来控制灰度的程度，",(0,d.jsx)(n.code,{children:"0"})," 表示没有灰度，",(0,d.jsx)(n.code,{children:"1"})," 表示完全灰度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: grayscale(0.5);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像被部分灰度化，参数值 ",(0,d.jsx)(n.code,{children:"0.5"})," 表示将图像的颜色减弱一半。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: grayscale(0);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像将取消灰度效果，即还原为彩色图像。"]}),"\n",(0,d.jsxs)(n.p,{children:["你还可以使用百分比值来实现部分灰度效果。如果不传递参数，元素将完全变为灰度。如果传递一个大于 ",(0,d.jsx)(n.code,{children:"100%"})," 的值，它将被限制在 ",(0,d.jsx)(n.code,{children:"100%"}),"。"]}),"\n",(0,d.jsxs)(n.h4,{id:"反转invert",children:["反转：invert()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#反转invert",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["像灰度 ",(0,d.jsx)(n.code,{children:"grayscale()"})," 函数一样，你可以将 ",(0,d.jsx)(n.code,{children:"invert()"})," 函数的值设置为 ",(0,d.jsx)(n.code,{children:"1"})," 或 ",(0,d.jsx)(n.code,{children:"0"})," 来打开或关闭反转。其中参数值 ",(0,d.jsx)(n.code,{children:"1"})," 表示完全反转（打开反转），",(0,d.jsx)(n.code,{children:"0"})," 表示没有反转（关闭反转），也可以使用从 ",(0,d.jsx)(n.code,{children:"0 ~ 1"})," 之间的值来控制颜色反转的程度："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: invert(1);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eN,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/OJrjbYX",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/OJrjbYX"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"invert()"})," 函数的参数值也可以使用百分比值。如果不传递任何参数给 ",(0,d.jsx)(n.code,{children:"invert()"})," 函数，反转完全打开。"]}),"\n",(0,d.jsxs)(n.h4,{id:"透明度opacity",children:["透明度：opacity()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#透明度opacity",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"opacity()"})," 函数的工作方式类似于 CSS 的 ",(0,d.jsx)(n.code,{children:"opacity"})," 属性，可用于调整元素的不透明度或透明度，你可以传递一个数字（",(0,d.jsx)(n.code,{children:"0 ~ 1"})," 之间的数字）或百分比（",(0,d.jsx)(n.code,{children:"0% ~ 100%"})," 之间的百分比值）来增加或减少不透明度，其中 ",(0,d.jsx)(n.code,{children:"0"})," （或 ",(0,d.jsx)(n.code,{children:"0%"}),"）表示完全透明，",(0,d.jsx)(n.code,{children:"1"})," （或 ",(0,d.jsx)(n.code,{children:"100%"}),"）表示完全不透明。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: opacity(.5);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eC,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/dywzNbx",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/dywzNbx"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，如果 ",(0,d.jsx)(n.code,{children:"opacity()"})," 函数不传递任何参数，元素将保持完全可见状态。我们可以使用 ",(0,d.jsx)(n.code,{children:"opacity()"})," 函数控制元素的透明度级别，使元素实现淡入淡出等效果。"]}),"\n",(0,d.jsxs)(n.h4,{id:"饱和度saturate",children:["饱和度：saturate()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#饱和度saturate",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"saturate()"})," 与 ",(0,d.jsx)(n.code,{children:"brightness()"})," 函数非常相似，并接受相同的参数类型：数字或百分比。不同之处在于，",(0,d.jsx)(n.code,{children:"saturate()"})," 用于增加或减少颜色的饱和度，而不是亮度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: saturate(200%);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ew,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWevdGg",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWevdGg"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像饱和度被增加到原始饱和度的两倍。",(0,d.jsx)(n.code,{children:"saturate()"})," 函数的参数值可以是任何数字，其中 ",(0,d.jsx)(n.code,{children:"100%"})," 表示原始饱和度，大于 ",(0,d.jsx)(n.code,{children:"100%"})," 的值会增加饱和度，而小于 ",(0,d.jsx)(n.code,{children:"100%"})," 的值会减少饱和度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: saturate(50%);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像饱和度被降低到原始饱和度的一半。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: saturate(0%);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像饱和度被降低到 ",(0,d.jsx)(n.code,{children:"0%"}),"，将图像转换为完全的灰度图像。"]}),"\n",(0,d.jsxs)(n.h4,{id:"复古的棕褐色调sepia",children:["复古的棕褐色调：sepia()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#复古的棕褐色调sepia",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["你可以使用 ",(0,d.jsx)(n.code,{children:"sepia()"})," 函数添加类似于 ",(0,d.jsx)(n.code,{children:"grayscale()"})," 函数的棕褐色调效果。棕褐色调是一种摄影印刷技术，它将黑色调转换为棕色调以使图像变得温暖。你可以将数字或百分比作为 ",(0,d.jsx)(n.code,{children:"sepia()"})," 的参数，从而增加或减少效果。如果不传递参数，将添加完整的棕褐色调效果（等同于 ",(0,d.jsx)(n.code,{children:"sepia(100%)"}),"）。以下是如何使用 ",(0,d.jsx)(n.code,{children:"sepia()"})," 函数的示例："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: sepia(1);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ey,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/eYbEvep",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/eYbEvep"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素的图像被完全转换为复古的棕褐色调，参数值 ",(0,d.jsx)(n.code,{children:"1"})," 表示完全应用 ",(0,d.jsx)(n.code,{children:"sepia()"})," 效果。你可以使用从 ",(0,d.jsx)(n.code,{children:"0 ~ 1"})," 的值来控制棕褐色调的程度，",(0,d.jsx)(n.code,{children:"0"})," 表示没有棕褐色调（彩色图像），",(0,d.jsx)(n.code,{children:"1"})," 表示完全棕褐。这个函数可用于创建复古或怀旧的图像效果。"]}),"\n",(0,d.jsxs)(n.h4,{id:"色调旋转hue-rotate",children:["色调旋转：hue-rotate()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#色调旋转hue-rotate",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7223230325122400288/section/7231515598088306720",target:"_blank",rel:"noopener noreferrer",children:"在学习 CSS 颜色函数的使用过程中"}),"，学到了 ",(0,d.jsx)(n.code,{children:"hsl()"})," 中的色相是指颜色轮的旋转。滤镜的 ",(0,d.jsx)(n.code,{children:"hue-rotate()"})," 函数的工作方式与 ",(0,d.jsx)(n.code,{children:"hsl()"})," 函数相似。",(0,d.jsx)(n.code,{children:"hue-rotate()"})," 函数可用于旋转图像的色相。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: hue-rotate(45deg);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ev,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/xxmLqpq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/xxmLqpq"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["可以给 ",(0,d.jsx)(n.code,{children:"hue-rotate()"})," 函数传递一个角度，如 ",(0,d.jsx)(n.code,{children:"deg"})," 、",(0,d.jsx)(n.code,{children:"rad"})," 、",(0,d.jsx)(n.code,{children:"turn"})," 或 ",(0,d.jsx)(n.code,{children:"grads"})," 等，它会改变元素所有颜色的色相，从而改变了它所参考的颜色轮的部分。如果不传递任何参数，它将不产生任何效果。这个函数可用于改变图像的色调，创建丰富多彩的效果。"]}),"\n",(0,d.jsxs)(n.h4,{id:"投影drop-shadow",children:["投影：drop-shadow()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#投影drop-shadow",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"drop-shadow()"})," 函数和 CSS 的 ",(0,d.jsx)(n.code,{children:"box-shadow"})," 或 ",(0,d.jsx)(n.code,{children:"text-shadow"})," 属性非常相似，可以为元素应用一个紧贴曲线的阴影。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"drop-shadow()"})," 投影实际上是输入图像的 Alpha 蒙板的一个模糊、偏移的版本，用特定的颜色绘制并合成在图像下面。简单地说，",(0,d.jsx)(n.code,{children:"box-shadow"})," 在元素的整个框后面创建一个矩形阴影，而 ",(0,d.jsx)(n.code,{children:"drop-shadow()"})," 过滤器则是创建一个符合图像本身形状（Alpha 通道）的阴影。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".box-shadow {\n    box-shadow: 5px 5px 5vmin 5vmin rgb(250 20 20 / 0.5);\n}\n\n.drop-shadow {\n    filter: drop-shadow(5px 5px 5vmin rgb(250 20 20 / 0.5));\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"drop-shadow()"})," 函数接受一个 ",(0,d.jsx)(n.code,{children:"shadow"})," 参数，其中包含空格分隔的 ",(0,d.jsx)(n.code,{children:"offset-x"}),"、",(0,d.jsx)(n.code,{children:"offset-y"}),"、",(0,d.jsx)(n.code,{children:"blur"})," 和",(0,d.jsx)(n.code,{children:"color"})," 值。它与 ",(0,d.jsx)(n.code,{children:"box-shadow"})," 几乎相同，但不支持 ",(0,d.jsx)(n.code,{children:"inset"})," 关键字和 ",(0,d.jsx)(n.code,{children:"spread"})," 值。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ek,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/BavdWGb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/BavdWGb"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"drop-shadow()"})," 函数的参数可以根据需要组合使用，以创建不同的阴影效果。这个函数非常有用，可以用于为元素添加立体感或突出显示。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"drop-shadow()"})," 同样有多阴影的概念，只是使用方法和 ",(0,d.jsx)(n.code,{children:"text-shadow"})," 、",(0,d.jsx)(n.code,{children:"box-shadow"})," 不同，即在 ",(0,d.jsx)(n.code,{children:"filter"})," 属性使用多个 ",(0,d.jsx)(n.code,{children:"drop-shadow()"})," 函数，并且以空格符隔开。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".parent-element {\n    filter: \n        drop-shadow(10rem 0 0 rgb(0 30 200 / 0.8)) \n        drop-shadow(-10rem 0 0 rgb(0 30 200 / 0.8)) \n        drop-shadow(20rem 0 0 rgb(0 30 200 / 0.8)) \n        drop-shadow(-20rem 0 0 rgb(0 30 200 / 0.8));\n    transition: filter 600ms;\n}\n\n.parent-element:hover {\n    filter: drop-shadow(0 0 0 rgb(0 30 200 / 0.8));\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eS,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/BavdRoX",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/BavdRoX"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["需要注意的是，即使使用相同的参数，",(0,d.jsx)(n.code,{children:"drop-shadow()"})," 并不会渲染与 ",(0,d.jsx)(n.code,{children:"box-shadow"})," 完全相同的阴影效果。当使用相同的值时，",(0,d.jsx)(n.code,{children:"box-shadow"})," 通常会产生更暗、更重的阴影效果，而 ",(0,d.jsx)(n.code,{children:"drop-shadow()"})," 则不然。我怀疑这与 CSS 滤镜是基于 SVG 滤镜的事实有关。无论如何，你可能需要通过调整 ",(0,d.jsx)(n.code,{children:"drop-shadow()"})," 的值来弥补这种差异。"]}),"\n",(0,d.jsxs)(n.h4,{id:"引用外部文件url",children:["引用外部文件：url()",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#引用外部文件url",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"url()"})," 滤镜允许你从链接的 SVG 元素或文件中应用 SVG 滤镜，让其作为滤镜效果的一部分。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<figure>\n    <img src="filter.png" alt="" />\n</figure>\n\n\x3c!-- SVG Filter effect --\x3e\n<svg xmlns="http://www.w3.org/2000/svg">\n    <defs>\n        <filter id="filter" x="-20%" y="-20%" width="140%" height="140%" filterUnits="objectBoundingBox" primitiveUnits="userSpaceOnUse" color-interpolation-filters="linearRGB">\n            <feGaussianBlur stdDeviation="3 10" x="0%" y="0%" width="100%" height="100%" in="SourceGraphic" edgeMode="none" result="blur" />\n            <feMorphology operator="erode" radius="3 3" x="0%" y="0%" width="100%" height="100%" in="blur" result="morphology" />\n            <feTurbulence type="turbulence" baseFrequency="0.015 0.1" numOctaves="2" seed="2" stitchTiles="stitch" x="0%" y="0%" width="100%" height="100%" result="turbulence" />\n            <feColorMatrix type="saturate" values="5" x="0%" y="0%" width="100%" height="100%" in="turbulence" result="colormatrix1" />\n            <feDisplacementMap in="SourceGraphic" in2="colormatrix1" scale="20" xChannelSelector="R" yChannelSelector="B" x="0%" y="0%" width="100%" height="100%" result="displacementMap" />\n        </filter>\n    </defs>\n</svg> \n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'figure {\n    filter: url("#filter");\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eu,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/jOXLmVr",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/jOXLmVr"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"如果你引用的是外部的 SVG 文件作为滤镜效果的一部分，那么你可以像下面这样使用："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: url('filter.svg#filter-id');\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素将应用一个名为 ",(0,d.jsx)(n.code,{children:"filter-id"})," 的外部滤镜效果，这个滤镜效果定义在名为 ",(0,d.jsx)(n.code,{children:"filter.svg"})," 的外部 SVG 文件中。你可以在 SVG 文件中定义各种自定义滤镜效果，然后在 CSS 中使用 ",(0,d.jsx)(n.code,{children:"url()"})," 函数引用它们。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:em,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["SVG Filters：",(0,d.jsx)(n.a,{href:"https://yoksel.github.io/svg-filters/#/",target:"_blank",rel:"noopener noreferrer",children:"https://yoksel.github.io/svg-filters/#/"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"这种方式允许你创建复杂的自定义滤镜效果，并将它们应用于元素，以改变其外观。"}),"\n",(0,d.jsxs)(n.h3,{id:"复合效果",children:["复合效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#复合效果",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性允许你同时应用多个滤镜函数，以改变元素的外观。这些滤镜函数以空格分隔并按顺序应用。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    filter: grayscale(50%) brightness(120%) blur(3px);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，",(0,d.jsx)(n.code,{children:".element"})," 元素同时应用了三个不同的滤镜函数：",(0,d.jsx)(n.code,{children:"grayscale()"}),"、",(0,d.jsx)(n.code,{children:"brightness()"}),"和",(0,d.jsx)(n.code,{children:"blur()"}),"。它们按照指定的顺序依次应用。首先，元素被转化为 ",(0,d.jsx)(n.code,{children:"50%"})," 的灰度，然后亮度增加到 ",(0,d.jsx)(n.code,{children:"120%"}),"，最后应用了 ",(0,d.jsx)(n.code,{children:"3px"})," 的模糊效果。"]}),"\n",(0,d.jsxs)(n.p,{children:["你可以按照自己的需求组合和调整滤镜函数，以创建各种不同的效果。这使得可以轻松地调整图像的外观，添加动态效果或创建视觉特效。只需确保在 ",(0,d.jsx)(n.code,{children:"filter"})," 属性中按正确的顺序列出所需的滤镜函数即可。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eg,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/OJrjjMZ",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/OJrjjMZ"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"实际示例",children:["实际示例",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实际示例",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["现在让我们来看看一些实际应用示例，以展示 ",(0,d.jsx)(n.code,{children:"filter"})," 属性如何改善 Web 设计和用户界面。"]}),"\n",(0,d.jsxs)(n.h4,{id:"图像遮罩",children:["图像遮罩",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#图像遮罩",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"通过将亮度、饱和度和对比度滤镜组合在一起，你可以为图像创建遮罩效果，使文本更易于阅读。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".card__background {\n    filter: brightness(0.75) saturate(1.2) contrast(0.85);\n    transition: filter 200ms linear, transform 200ms linear;\n}\n\n.card-grid:has(.card:hover) .card:not(:hover) {\n    filter: brightness(0.5) saturate(0) contrast(1.2) blur(20px);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eb,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/gOZxxMe",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/gOZxxMe"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"图像悬浮效果",children:["图像悬浮效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#图像悬浮效果",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["使用 ",(0,d.jsx)(n.code,{children:"filter"})," 属性可以在悬浮时应用特效，比如色调旋转或调整图片色彩饱和度："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".rgb-first {\n    opacity: 0;\n    filter: hue-rotate(230deg);\n    transition: 0.5s ease all;\n    will-change: opacity, filter;\n}\n\n.rgb-second {\n    opacity: 0;\n    filter: saturate(164%);\n    transition: 0.7s ease all;\n    will-change: opacity, filter;\n}\n\n.rgbize:hover .rgb-first{\n    opacity: 0.8;\n    will-change: opacity;\n}\n\n.rgbize:hover .rgb-second{\n    opacity: 0.6;\n    will-change: opacity;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ef,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/wvRqRLb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/wvRqRLb"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"调整产品图片色彩",children:["调整产品图片色彩",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调整产品图片色彩",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ep,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"假设你有一张像上图一样的产品图原稿，你可以使用组合滤镜调试出不同风格的产品图。这样一来可以节省图片的使用率："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"@layer filter {\n    :is(.btn, .text,.car__bodywork) {\n        --hue: 0deg;\n        filter: sepia() saturate(1000%) hue-rotate(var(--hue));\n    }\n    \n    :is(.btn--color-1, .text-color-1, .car__color-1) {\n        --hue: 60deg;\n    }\n    \n    :is(.btn--color-2, .text-color-2, .car__color-2) {\n        --hue: 120deg;\n    }\n    \n    :is(.btn--color-3, .text-color-3, .car__color-3) {\n        --hue: 180deg;\n    }\n  \n    :is(.btn--color-4, .text-color-4, .car__color-4) {\n        --hue: 240deg;\n    }\n    \n    :is(.btn--color-5, .text-color-5, .car__color-5) {\n        --hue: 300deg;\n    }\n    \n    :is(.btn--color-6, .text-color-6, .car__color-6) {\n        --hue: 360deg;\n    }\n  \n  .btn--light {\n    filter: invert(100%);\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["上面代码首先使用 ",(0,d.jsx)(n.code,{children:"sepia()"})," 函数给图片添加完整的棕褐色、然后使用 ",(0,d.jsx)(n.code,{children:"saturate()"})," 函数给图片增加饱和度，最后使用 ",(0,d.jsx)(n.code,{children:"hue-rotate()"})," 函数调整图片的色相。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ej,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/xxmLMKL",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/xxmLMKL"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"导航菜单",children:["导航菜单",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#导航菜单",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ex,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/PoXKVjM",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PoXKVjM"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["上面示例中，导航面板和底下彩色阴影效果都是使用 ",(0,d.jsx)(n.code,{children:"filter"})," 来实现的："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".phone_content {\n    filter: contrast(20);\n}\n\n.phone_bottom {\n    filter: blur(10px);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"注意，这个效果也离不开其他元素上的样式。比如导航菜单底下的彩色模糊的彩色阴影效果，它需要下面这段代码衬托："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".phone::before {\n    box-shadow: \n        0 0 25px 9px rgb(255 0 0 / 0.33),\n        50px 10px 25px 8px rgb(18 255 0 / 0.33),\n        -40px 8px 25px 9px rgb(242 255 0 / 0.33);\n}\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"gooey-效果",children:["Gooey 效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gooey-效果",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["我们可以使用 ",(0,d.jsx)(n.code,{children:"filter"})," 的 ",(0,d.jsx)(n.code,{children:"blur()"})," 和 ",(0,d.jsx)(n.code,{children:"contrast()"})," 函数实现 Gooey 效果（一种融合的效果）。其中，",(0,d.jsx)(n.code,{children:"blur()"})," 给图像设置高斯模糊效果， ",(0,d.jsx)(n.code,{children:"contrast()"})," 调整图像的对比度，当他们“合体”的时候，产生了奇妙的融合现象。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"@layer gooey {\n    @keyframes move {\n        50% {\n            translate: 0 0;\n        }\n    }\n    \n    .container {\n        filter: blur(10px) contrast(30);\n\n        \n        &::before,\n        &::after {\n          --size: 80px;\n          animation: move 4s ease-out infinite;\n        }\n        \n        &::before {\n          --size: 120px;\n          background: linear-gradient(\n              to bottom left in oklab, \n              oklch(55% .45 350) 0%, oklch(100% .4 95) 100%\n          );\n          translate: -200px 0;\n        }\n        \n        &::after {\n          background: conic-gradient(\n              from 0deg at 0% 0% in oklch, \n              oklch(75% 0.5 156) 0%, oklch(70% 0.5 261) 100%\n          );\n          translate: 200px 0;\n        }\n    }\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:et,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWevoLr",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWevoLr"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"使用相似的方法，使文本带有一种融合的动画效果："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="container">\n    <h1>Awesome!</h1>\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".container {\n    filter: contrast(20);\n}\n\nh1 {\n    filter: blur(0.5rem);\n    animation: letterspacing 10s infinite alternate cubic-bezier(0.2, 0, 0, 1);\n}\n\n@keyframes letterspacing {\n    0% {\n        letter-spacing: -5rem;\n        filter: blur(0.5rem);\n    }\n\n    50% {\n        filter: blur(0.5rem);\n    }\n\n    100% {\n        letter-spacing: 1rem;\n        filter: blur(1.5rem);\n    }\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eh,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/jOXLddB",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/jOXLddB"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["其实，你还可以使用 ",(0,d.jsx)(n.code,{children:"filter"})," 的 ",(0,d.jsx)(n.code,{children:"url()"})," 函数和 SVG 的滤镜结合起来制作 Gooey 效果，效果会更好，而且更简单。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="wrapper">\n    <a class="button" href="#">Hover me!</a>\n</div>\n\n<svg style="visibility: hidden; position: absolute;" width="0" height="0" xmlns="http://www.w3.org/2000/svg" version="1.1">\n    <defs>\n        <filter id="goo"><feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />    \n            <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9" result="goo" />\n            <feComposite in="SourceGraphic" in2="goo" operator="atop"/>\n        </filter>\n    </defs>\n</svg>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".wrapper {\n    filter: url('#goo');\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:eo,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/KKbvJYq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/KKbvJYq"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["正如你看到的，CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性为 Web 设计和前端开发提供了强大的图像处理和特效功能。通过简单的 CSS 代码，你可以实现各种视觉效果，从模糊到对比度调整，再到颜色反转。希望这些示例能帮助你更好地理解如何使用 ",(0,d.jsx)(n.code,{children:"filter"})," 属性，为你的 Web 设计和用户界面增加创意和吸引力。不断尝试和实验，发掘更多可能性，让你的网站更加引人注目！"]}),"\n",(0,d.jsxs)(n.h2,{id:"css-的-filter-函数",children:["CSS 的 filter() 函数",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-的-filter-函数",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["首先要明确一点的是，",(0,d.jsx)(n.code,{children:"filter()"})," 是 CSS 的一个函数，同时也是一个属性值，而 ",(0,d.jsx)(n.code,{children:"filter"})," 是 CSS 的一个属性。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"filter()"})," 函数在“",(0,d.jsx)(n.a,{href:"https://www.w3.org/TR/filter-effects/#FilterCSSImageValue",target:"_blank",rel:"noopener noreferrer",children:"滤镜效果规范"}),"”中有定义："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"filter() = filter( [ <image> | <string> ], <filter-value-list> )\n"})}),"\n",(0,d.jsxs)(n.p,{children:["该函数接受两个参数，第一个参数是 ",(0,d.jsx)(n.code,{children:"<image>"})," ，第二个参数与 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性指定的滤镜函数列表（",(0,d.jsx)(n.code,{children:"<filter-value-list>"}),"）。它可以将 ",(0,d.jsx)(n.code,{children:"<image>"})," 参数应用 CSS 滤镜规则，并返回一个处理后的图像。然后，这个图像可以与接受图像的任何属性一起使用。"]}),"\n",(0,d.jsxs)(n.p,{children:["你或许会感到困惑，",(0,d.jsx)(n.code,{children:"filter()"})," 会出现在什么地方？或者说，我们应该在什么时候，什么地方使用 ",(0,d.jsx)(n.code,{children:"filter()"})," 函数。想象一下，我们在开发 Web 应用的时候，有时并不想在元素本身上应用滤镜（",(0,d.jsx)(n.code,{children:"filter"}),"），而只是希望在背景上应用滤镜。可是，在 CSS 中并没有一个像 ",(0,d.jsx)(n.code,{children:"background-filter"})," 的属性存在。这就是 ",(0,d.jsx)(n.code,{children:"filter()"})," 函数可能派上用场的地方。"]}),"\n",(0,d.jsx)(n.p,{children:"来看一个简单的示例："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'.element {\n    background: filter(url("filter.jpg"), blur(5px));\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ea,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/NWevmpE",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/NWevmpE"})," （请使用 Safari 查看 Demo）"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["因此，你现在可以在背景图上应用滤镜，你也可以将其视为 ",(0,d.jsx)(n.code,{children:"background-filter"})," 、 ",(0,d.jsx)(n.code,{children:"background-opacity"})," 或 ",(0,d.jsx)(n.code,{children:"background-blur"})," 等。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:':root {\n    --bg: url("filter.png");\n    --background-blur: filter(var(--bg), blur(10px));\n    --background-brightness: filter(var(--bg), brightness(80%));\n    --background-contrast: filter(var(--bg), contrast(150%));\n    --background-grayscale: filter(var(--bg), grayscale(1));\n    --background-invert: filter(var(--bg), invert(1));\n    --background-opacity: filter(var(--bg), opacity(.5));\n    --background-saturate: filter(var(--bg), saturate(200%));\n    --background-sepia: filter(var(--bg), sepia(1));\n    --background-hue-rotate: filter(var(--bg), hue-rotate(45deg));\n    \n    background: var(--bg);\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:el,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/BavdEmO",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/BavdEmO"})," （请使用 Safari 浏览器查看）"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意：由于原始图像的尺寸和起点必须保留，因此某些滤镜效果，如对完全不透明图像的 ",(0,d.jsx)(n.code,{children:"<drop-shadow()>"})," ，可能没有任何效果。"]}),"\n",(0,d.jsxs)(n.h3,{id:"filter-属性与-filter-函数的差异",children:["filter 属性与 filter() 函数的差异",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#filter-属性与-filter-函数的差异",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["刚才也提到了，",(0,d.jsx)(n.code,{children:"filter"})," 和 ",(0,d.jsx)(n.code,{children:"filter()"})," 两者最大的差异是："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"filter"})," 是一个 CSS 属性，它可以应用在任何元素上"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"filter()"})," 是一个 CSS 函数，而且是一个属性值，它只能运用于值为 ",(0,d.jsx)(n.code,{children:"<image>"})," 类型的属性上，比如 ",(0,d.jsx)(n.code,{children:"background-image"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["另外一个差异是，",(0,d.jsx)(n.code,{children:"filter"})," 属性会影响元素的后代元素，而 ",(0,d.jsx)(n.code,{children:"filter()"})," 则不会。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<figure class="filter">\n    <p>CSS Filter Property</p>\n</figure>\n\n<figure class="filter">\n    <p>CSS Filter Function</p>\n</figure>    \n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'@layer filter {\n    figure {\n        --bg: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/153385/jpgls-leaf.jpg");\n        --filter: \n            blur(2px) \n            brightness(80%) \n            contrast(150%) \n            grayscale(1) \n            invert(1)\n            opacity(0.5) \n            saturate(200%) \n            sepia(1) \n            hue-rotate(45deg);\n        background-color: rgb(0 0 0 / 0.25);\n        background-size: cover;\n        background-position: center;\n        background-repeat: no-repeat;\n    \n        &:nth-child(1) {\n            background-image: var(--bg);\n            filter: var(--filter);\n        }\n    \n        &:nth-child(2) {\n            background-image: filter(var(--bg), var(--filter));\n        }\n    }\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:es,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/vYvJMMr",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/vYvJMMr"})," （请使用 Safari 浏览器查看）"]}),"\n"]}),"\n",(0,d.jsxs)(n.h2,{id:"css-混合模式blend-mode",children:["CSS 混合模式（Blend Mode）",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-混合模式blend-mode",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"在现代 Web 设计中，我们经常追求超越传统的颜色、图像和文本排列的平凡效果。我们寻求的是创造性和视觉上令人愉悦的用户体验。这就是 CSS 混合模式（CSS Blend Mode）的力量所在。"}),"\n",(0,d.jsxs)(n.h3,{id:"css-混合模式是什么",children:["CSS 混合模式是什么？",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-混合模式是什么",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Blend_modes",target:"_blank",rel:"noopener noreferrer",children:"维基百科是这样描述混合模式的"}),"：“混合模式（或称为混合方式）在数字图像编辑和计算机图形中用于确定两个图层如何混合在一起。大多数应用程序中的默认混合模式是通过顶部层上的内容覆盖底部图层以隐藏底部图层”。"]}),"\n",(0,d.jsx)(n.p,{children:"混合模式通过在设计工具中使用，比如 Photoshop、Sketch 或 Figma："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ei,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"通过混合两个或更多图层的颜色来创建一种合成效果。通过改变颜色的混合方式，你可以实现非常有趣的视觉效果。"}),"\n",(0,d.jsx)(n.p,{children:"CSS 混合模式（CSS Blend Mode）是一种用于控制 HTML 元素之间颜色混合的技术。它允许你定义两个或多个元素之间的颜色交互，从而创建各种视觉效果。其基本原理是，它定义了如何将一个元素的颜色与另一个元素的颜色进行混合，从而创建新的颜色效果。这些混合模式是基于图形设计工具中的同名功能而来，使 Web 开发者能够在 Web 设计或开发中实现更多的创意和复杂效果。"}),"\n",(0,d.jsxs)(n.p,{children:["你可以在 CSS 中使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 或 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 属性可以应用设计工具中的大多数混合模式。其中，",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 将混合应用于整个元素，它将会影响整个元素，包括其伪元素及其后代元素；而 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 将混合应用于元素的背景。"]}),"\n",(0,d.jsx)(n.p,{children:"总之，CSS 混合模式是一项强大的技术，它可以应用于文本、图像、背景和其他 HTML 元素，使它们在呈现时以不同的方式混合其颜色。它可用于改善 Web 应用或网站的外观和用户体验，并允许开发者实现各种创意和艺术效果。"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ec,alt:""})}),"\n",(0,d.jsxs)(n.h3,{id:"css-混合模式分类",children:["CSS 混合模式分类",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-混合模式分类",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["CSS 混合模式可以按不同的方式分类。如果按照 CSS 属性的使用方式来分的话，它主要分为 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 和 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," ："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 用于 HTML 元素上，将混合应用于整个元素，它将会影响整个元素，包括其伪元素及其后代元素；"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"background-blend-mode"})," 将混合应用于元素的背景"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["如果不按属性来分，它可以分为",(0,d.jsx)(n.strong,{children:"可分离"}),"和",(0,d.jsx)(n.strong,{children:"不可分离"}),"两种类型："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["可分离的混合模式将每个颜色分量（如 RGB）单独考虑，其包括 ",(0,d.jsx)(n.code,{children:"normal"})," 、",(0,d.jsx)(n.code,{children:"multiply"})," 、",(0,d.jsx)(n.code,{children:"screen"})," 、",(0,d.jsx)(n.code,{children:"overlay"})," 、",(0,d.jsx)(n.code,{children:"darken"})," 、",(0,d.jsx)(n.code,{children:"lighten"})," 、",(0,d.jsx)(n.code,{children:"color-dodge"})," 、",(0,d.jsx)(n.code,{children:"color-burn"})," 、",(0,d.jsx)(n.code,{children:"hard-light"})," 、",(0,d.jsx)(n.code,{children:"soft-light"})," 、",(0,d.jsx)(n.code,{children:"difference"})," 和 ",(0,d.jsx)(n.code,{children:"exclusion"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["不可分离的混合模式将所有颜色分量平等考虑，其包括 ",(0,d.jsx)(n.code,{children:"hue"})," 、",(0,d.jsx)(n.code,{children:"saturation"})," 、",(0,d.jsx)(n.code,{children:"color"})," 和 ",(0,d.jsx)(n.code,{children:"luminosity"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"其次可以按照设计软件中的混合模式来分类："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"normal"})," ，混合模式的默认值，表示没有任何混合效果"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["变暗模式，主要包括 ",(0,d.jsx)(n.code,{children:"darken"})," 、",(0,d.jsx)(n.code,{children:"multiple"})," 和 ",(0,d.jsx)(n.code,{children:"color-burn"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["变亮模式，主要包括 ",(0,d.jsx)(n.code,{children:"lighten"})," 、",(0,d.jsx)(n.code,{children:"screen"})," 和 ",(0,d.jsx)(n.code,{children:"color-dodge"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["调整对比度模式，主要包括 ",(0,d.jsx)(n.code,{children:"overlay"})," 、",(0,d.jsx)(n.code,{children:"soft-light"})," 和 ",(0,d.jsx)(n.code,{children:"hard-light"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["反色模式，主要包括 ",(0,d.jsx)(n.code,{children:"difference"})," 和 ",(0,d.jsx)(n.code,{children:"exclusion"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["更改单个 HSL 模式，主要包括 ",(0,d.jsx)(n.code,{children:"hue"})," 、",(0,d.jsx)(n.code,{children:"saturation"})," 、",(0,d.jsx)(n.code,{children:"luminosity"})," 和 ",(0,d.jsx)(n.code,{children:"color"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"每种混合模式都有其特定的用途和效果，开发者可以根据需要选择合适的混合模式来实现不同的视觉效果。"}),"\n",(0,d.jsxs)(n.h3,{id:"css-混合模式的使用与基础原理",children:["CSS 混合模式的使用与基础原理",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-混合模式的使用与基础原理",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["不管是使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 对元素进行混合，还是使用 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 对元素背景层进行混合，它们都需要有多个元素（或层）进行混合，至少需要两个元素（或层）进行混合。这是因为混合模式是一种根据两种输入颜色创建新颜色的方式，因此，层次结构对我们计算新颜色的方式很重要。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="card mix-blend-mode">\n    <img src="middle.png" />\n</div>\n\n<div class="card background-blend-mode">\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'.card {\n    width: 300px;\n    aspect-ratio: 3 / 4;\n\n    \n    & img {\n        display: block;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        object-position: center;\n    }\n}\n\n.mix-blend-mode {\n    position: relative;\n    \n    &::before,\n    &::after {\n        content:"";\n        position: absolute;\n        inset: 0;\n    }\n    \n    /* 顶层是一个渐变层 */\n    &::before {\n        background: linear-gradient(225deg in oklab,oklch(70% 0.5 340) 0%,oklch(90% 0.5 200) 91% 91%);\n        z-index: 3;\n    }\n    \n    /* 中间层是一张图片 */\n    & img {\n        position: relative;\n        z-index: 2;\n    }\n    \n    /* 底层是一个纯色 */\n    &::after {\n        background: hsl(2400 60% 50%);\n        z-index: 1;\n    }\n}\n\n.background-blend-mode {\n    --bg-top:linear-gradient(225deg in oklab,oklch(70% 0.5 340) 0%,oklch(90% 0.5 200) 91% 91%);\n    --bg-middle: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/153385/jpgls-leaf.jpg");\n    --bg-bottom: hsl(240 60% 50%);\n      \n    background: var(--bg-top) no-repeat left top, var(--bg-middle) no-repeat center;\n    background-color: var(--bg-bottom);\n    background-size: cover;\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ed,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"接下来，我们来看一下在顶层和中间层使用不同的混合模式的效果，从而了解混合模式每个值所起的作用。"}),"\n",(0,d.jsxs)(n.h4,{id:"正片叠底multiply",children:["正片叠底：multiply",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#正片叠底multiply",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"正片叠底混合模式就像将多个透明图层叠放在一起。白色像素将变为透明，而黑色像素将保持为黑色。介于两者之间的颜色将会相乘其亮度（光）值。这意味着亮色会变得更亮，而暗色会变得更暗，通常会产生较暗的结果。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: multiply;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: multiply;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:er,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/BavwjYO",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/BavwjYO"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["正如你所看到的，正片叠底混合模式（",(0,d.jsx)(n.code,{children:"multiply"}),"）简单地将每个颜色通道的值相乘。由于这些值在 ",(0,d.jsx)(n.code,{children:"0"})," 和 ",(0,d.jsx)(n.code,{children:"1"})," 之间进行了归一化，因此其乘积始终比原始值更暗："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:en,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在这种模式下，计算每个颜色通道（红、绿、蓝）的新值，新值等于相应颜色通道的两个输入值相乘。例如，如果一个像素的背景颜色通道为 ",(0,d.jsx)(n.code,{children:"0.5"}),"（半亮度），前景颜色通道为 ",(0,d.jsx)(n.code,{children:"0.8"}),"（较亮），则计算结果为 ",(0,d.jsx)(n.code,{children:"0.5 x 0.8 = 0.4"}),"。这个过程针对每个颜色通道分别进行，得到新的 RGB 值。"]}),"\n",(0,d.jsxs)(n.h4,{id:"屏幕screen",children:["屏幕：screen",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#屏幕screen",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["屏幕混合模式（",(0,d.jsx)(n.code,{children:"screen"}),"）实际上与正片叠混合模式（",(0,d.jsx)(n.code,{children:"multiply"}),"）相似，但它反转了输入和结果，因此它的效果与正片叠底效果相反，通常会产生更亮的结果。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: screen;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: screen;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:ee,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/bGOoEPJ",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/bGOoEPJ"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["使用屏幕混合模式会将亮度值相乘。同样，我们需要将这些值归一化在 ",(0,d.jsx)(n.code,{children:"0"})," 和 ",(0,d.jsx)(n.code,{children:"1"})," 之间来计算。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:$,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在这种模式下，计算每个颜色通道的新值，新值等于 ",(0,d.jsx)(n.code,{children:"1"})," 减去相应颜色通道的两个输入值相乘。这相当于将颜色通道的亮度反转，使其变得更亮。例如，如果一个像素的背景颜色通道为 ",(0,d.jsx)(n.code,{children:"0.5"}),"，前景颜色通道为 ",(0,d.jsx)(n.code,{children:"0.8"})," ，则计算结果为",(0,d.jsx)(n.code,{children:"1 - (0.5 x 0.8) = 0.6"}),"。同样，这个过程针对每个颜色通道分别进行，得到新的 RGB 值。"]}),"\n",(0,d.jsxs)(n.h4,{id:"叠加overlay",children:["叠加：overlay",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#叠加overlay",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["叠加混合模式（",(0,d.jsx)(n.code,{children:"overlay"}),"）将正片叠底（",(0,d.jsx)(n.code,{children:"multiply"}),"）和屏幕（",(0,d.jsx)(n.code,{children:"screen"}),"）两种模式结合起来。基础（背景层）的深色变得更深，而基础（背景层）的浅色变得更亮。中间范围的颜色，比如 ",(0,d.jsx)(n.code,{children:"50%"})," 的灰色，不受影响。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: overlay;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: overlay;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:Q,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ExGwKxW",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ExGwKxW"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["叠加混合模式（",(0,d.jsx)(n.code,{children:"overlay"}),"）共实是很有趣的。如果背景值较亮（",(0,d.jsx)(n.code,{children:"> 127.5"}),"），则它会以一半的强度应用屏幕混合（",(0,d.jsx)(n.code,{children:"screen"}),"），使前景变得更亮；如果背景值较暗（ 小于或等于 ",(0,d.jsx)(n.code,{children:"127.5"}),"），则它会以一半的强度应用正片叠底混合（",(0,d.jsx)(n.code,{children:"multiply"}),"），使前景变得更暗。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:U,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["叠加混合模式（",(0,d.jsx)(n.code,{children:"overlay"}),"）的计算方法如下："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["如果背景颜色通道值大于 ",(0,d.jsx)(n.code,{children:"0.5"}),"（通常用 ",(0,d.jsx)(n.code,{children:"255"})," 的一半来表示，即 ",(0,d.jsx)(n.code,{children:"127.5"}),"），则将背景颜色通道值减去 ",(0,d.jsx)(n.code,{children:"0.5"}),"，然后将结果与前景颜色通道值相乘，得到新的颜色通道值。"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["如果背景颜色通道值小于或等于 ",(0,d.jsx)(n.code,{children:"0.5"})," （通常用 ",(0,d.jsx)(n.code,{children:"255"})," 的一半来表示，即 ",(0,d.jsx)(n.code,{children:"127.5"}),"），则将背景颜色通道值加上 ",(0,d.jsx)(n.code,{children:"0.5"}),"，然后将结果与前景颜色通道值相乘，得到新的颜色通道值。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["这个计算过程分别针对每个颜色通道（红、绿、蓝）进行，得到新的 RGB 值。这样，",(0,d.jsx)(n.code,{children:"overlay"})," 混合模式会根据背景颜色的亮度来选择是应用正片叠底（使颜色变暗）还是应用屏幕（使颜色变亮），从而产生一种同时调整亮度和对比度的效果。"]}),"\n",(0,d.jsxs)(n.h4,{id:"变暗darken",children:["变暗：darken",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#变暗darken",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["变暗混合模式（",(0,d.jsx)(n.code,{children:"darken"}),"）会比较前景层与背景层的暗色亮度，并选择两者中最暗的部分。它通过比较每个颜色通道的 RGB 值而不是亮度（与正片叠和屏幕混合模式不同）来实现这一点。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: darken;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: darken;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:I,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/yLGzOoa",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLGzOoa"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["变暗混合模式（",(0,d.jsx)(n.code,{children:"darken"}),"）是根据每个颜色通道的 RGB 值进行计算的："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"对于每个颜色通道（红、绿、蓝），比前景层和背景层相应颜色通道的 RGB 值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"选择两者中较小的 RGB 值作为新的颜色通道值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"使用新的 RGB 值为创建新的颜色，这个颜色通常会比原来的颜色更暗"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["简单地说，",(0,d.jsx)(n.code,{children:"darken"})," 会比较每个颜色的 RGB 值并选择最暗的值，从而创建一个新的颜色。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:K,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["这个计算过程分别针对每个颜色通道进行，从而实现了变暗混合模式（",(0,d.jsx)(n.code,{children:"darken"}),"）。它会选择每个颜色通道中更暗的像素值，以创建一个新的颜色，使图像中的颜色更加深沉。"]}),"\n",(0,d.jsxs)(n.h4,{id:"变亮lighten",children:["变亮：lighten",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#变亮lighten",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["变亮混合模式（",(0,d.jsx)(n.code,{children:"lighten"}),"）刚好与变暗混合模式（",(0,d.jsx)(n.code,{children:"darken"}),"）相反："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: lighten;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: lighten;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:F,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ExGwKoo",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ExGwKoo"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["变亮混合模式（",(0,d.jsx)(n.code,{children:"lighten"}),"）做的事情与变暗混合模式（",(0,d.jsx)(n.code,{children:"darken"}),"）完全相同，只是它选择了最亮的值。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:X,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这个计算过程分别针对每个颜色通道进行，从而实现了变亮混合模式。它会选择每个颜色通道中更亮的像素值，以创建一个新的颜色，使图像中的颜色更加明亮。"}),"\n",(0,d.jsxs)(n.h4,{id:"颜色加深color-burn",children:["颜色加深：color-burn",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#颜色加深color-burn",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["颜色加深混合模式（",(0,d.jsx)(n.code,{children:"color-burn"}),"）与正片叠底混合模式（",(0,d.jsx)(n.code,{children:"multiply"}),"）非常相似，但它增加了对比度，导致中间色调更饱和，同时减少了亮光部分。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: color-burn;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: color-burn;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:J,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/poqWyLN",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/poqWyLN"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["颜色加深混合模式（",(0,d.jsx)(n.code,{children:"color-burn"}),"）的工作方式是反转背景，将其除以前景，然后反转结果："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"针对每个颜色通道（红、绿、蓝），首先反转背景层的颜色通道值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"然后将反转后的背景层颜色通道值除以前景层的颜色通道值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"最后，再次反转结果"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:A,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这个计算过程会导致颜色加深，尤其是在中间色调和阴影部分，从而增加了对比度并提高了颜色的饱和度。高光部分通常会减少。这使得图像中的阴影区域变得更加突出，但可能会损失一些亮度。这就是颜色加深混合模式的效果。"}),"\n",(0,d.jsxs)(n.h4,{id:"颜色减淡color-dodge",children:["颜色减淡：color-dodge",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#颜色减淡color-dodge",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["如果使用颜色减淡混合模式（",(0,d.jsx)(n.code,{children:"color-dodge"}),"），它会将背景层颜色变亮以反映前景层颜色。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: color-dodge;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: color-dodge;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:Y,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/GRPMZdb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/GRPMZdb"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，纯黑色颜色不受颜色减淡模式（",(0,d.jsx)(n.code,{children:"color-dodge"}),"）影响。"]}),"\n",(0,d.jsxs)(n.p,{children:["CSS 混合模式中的颜色减淡模式（",(0,d.jsx)(n.code,{children:"color-dodge"}),"）是通过以下计算方式实现的："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"对于每个颜色通道（红、绿、蓝），首先反转前景（源）层的颜色通道值，然后将背景层的颜色通道值除以反转后的前景层的颜色通道值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"这个计算将导致背景颜色变亮，以反映前景颜色。颜色通道值越接近白色的地方，变化越明显，而对于纯黑色颜色通道值，不会产生变化"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"使用新的颜色通道值来创建新的颜色，这个颜色通常比原来的颜色更亮"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:Z,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这个计算过程分别针对每个颜色通道进行，从而实现了颜色减淡混合模式，它将背景颜色变亮，以反映前景颜色。"}),"\n",(0,d.jsxs)(n.p,{children:["注意，颜色加深混合模式（",(0,d.jsx)(n.code,{children:"color-burn"}),"）和颜色减淡混合模式（",(0,d.jsx)(n.code,{children:"color-dodge"}),"）具有明显的阶梯效应，它们可能产生相当强烈的效果。"]}),"\n",(0,d.jsxs)(n.h4,{id:"硬光hard-light",children:["硬光：hard-light",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#硬光hard-light",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["使用硬光混合模式（",(0,d.jsx)(n.code,{children:"hard-light"}),"）会产生鲜明的对比效果。这种混合模式要么进行屏幕混合（",(0,d.jsx)(n.code,{children:"screen"}),"），要么进行正片叠底混合（",(0,d.jsx)(n.code,{children:"multiply"}),"）。如果像素值比 ",(0,d.jsx)(n.code,{children:"50%"})," 灰色更轻，则图像会变亮，就像进行了屏幕混合一样。如果像素值比 ",(0,d.jsx)(n.code,{children:"50%"})," 灰色更暗，则会进行正片叠底混合。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: hard-light;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: hard-light;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:T,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/gOZGrBY",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/gOZGrBY"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在 CSS 混合模式中，硬光混合模式（",(0,d.jsx)(n.code,{children:"hard-light"}),"）的计算方式如下："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["如果前景颜色（前景图像的颜色）的值大于 ",(0,d.jsx)(n.code,{children:"127.5"}),"（",(0,d.jsx)(n.code,{children:"50%"}),"灰度），则将前景颜色应用于屏幕混合模式，以一半的强度"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["如果前景颜色的值小于或等于 ",(0,d.jsx)(n.code,{children:"127.5"}),"，那么将前景颜色应用于正片叠底混合模式，以一半的强度"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:P,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这个计算方式会根据前景颜色的亮度来决定是应用屏幕混合还是正片叠底混合，从而产生鲜明的对比效果。如果前景颜色较亮，则会增强图像的亮度，而如果前景颜色较暗，则会增强图像的暗部。这使得图像中的细节更加突出，同时保留了一定的对比度。"}),"\n",(0,d.jsxs)(n.h4,{id:"柔光soft-light",children:["柔光：soft-light",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#柔光soft-light",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["柔光混合模式（",(0,d.jsx)(n.code,{children:"soft-light"}),"）是标准混合模式中最复杂的一种。它产生的效果类似于叠加混合模式（",(0,d.jsx)(n.code,{children:"overlay"}),"），但更加微妙（对比度较低）。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: soft-light;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: soft-light;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:H,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/YzdrGpV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/YzdrGpV"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在 CSS 混合模式中，柔光混合模式（",(0,d.jsx)(n.code,{children:"soft-light"}),"）的计算方式如下："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将前景翻倍，并反转它"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将反转后的前景与背景的平方相乘"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["将上述结果乘以 ",(0,d.jsx)(n.code,{children:"2"}),"，并将其添加到前景和背景的乘积的两倍上"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:O,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这个计算方式会产生一种比叠加混合模式更为柔和的效果，保留了图像的细节，但降低了对比度。它常用于创建柔和的照明效果或给图像增加一些微妙的变化。"}),"\n",(0,d.jsxs)(n.h4,{id:"差异difference",children:["差异：difference",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#差异difference",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["差异混合模式（",(0,d.jsx)(n.code,{children:"difference"}),"）的工作方式可以类比为照片底片的效果。它会取每个像素的差异值，反转亮色。如果颜色值相同，则变为黑色。它会在输入颜色之间找到一种颜色。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: difference;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: difference;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:V,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/mdaBrpp",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/mdaBrpp"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["差异混合模式（",(0,d.jsx)(n.code,{children:"difference"}),"）会将底部颜色从顶部颜色中减去，任何负数都会变为正数。这个过程产生了一种颜色，该颜色位于输入颜色之间，并突出它们之间的差异。具体计算方式如下："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"对比两个输入颜色的每个通道（红、绿、蓝）的值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从顶部（前景）颜色的通道中减去底部（背景）颜色的相应通道值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"如果结果为负数，将其转换为正数"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"使用这些修改后的通道值创建新的颜色"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:z,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这种混合模式会产生一个颜色，该颜色位于输入颜色之间，并且突出它们之间的差异。如果两个输入颜色相同，结果将是黑色。如果它们有差异，结果将显示这些差异的颜色。这种混合模式用于突出图像中不同的部分，通常产生高对比度的效果。"}),"\n",(0,d.jsxs)(n.h4,{id:"排除exclusion",children:["排除：exclusion",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#排除exclusion",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["排除混合模式（",(0,d.jsx)(n.code,{children:"exclusion"}),"）和差异混合模式（",(0,d.jsx)(n.code,{children:"difference"}),"）非常相似，但不同之处在于，它不会对相同的像素返回黑色，而是返回 ",(0,d.jsx)(n.code,{children:"50%"})," 的灰色，从而产生了更柔和、对比度较低的结果。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: exclusion;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: exclusion;\n}\n"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/GRPMjBd",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/GRPMjBd"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["排除混合模式（",(0,d.jsx)(n.code,{children:"exclusion"}),"）计算如下："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["首先，将每个通道（红、绿、蓝）的颜色值标准化为介于 ",(0,d.jsx)(n.code,{children:"0"})," 和 ",(0,d.jsx)(n.code,{children:"1"})," 之间的小数"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"对于每个通道，计算底图（背景）颜色值与顶图（前景）颜色值的乘积的两倍"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将每个通道的乘积的两倍从每个通道的颜色值总和中减去"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["最后，将结果的每个通道的值重新标准化到 ",(0,d.jsx)(n.code,{children:"0"})," 到 ",(0,d.jsx)(n.code,{children:"1"})," 之间，以获得最终的混合颜色"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"简单地说，从每个通道的总和中减去每个通道的两倍乘积："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:R,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["这个过程使得相同颜色的像素产生中性的混合颜色，不同颜色的像素则产生柔和的混合效果，相对于 ",(0,d.jsx)(n.code,{children:"difference"})," 混合模式来说更加柔和。"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，其中差异混合模式（",(0,d.jsx)(n.code,{children:"difference"}),"）和排除混合模式（",(0,d.jsx)(n.code,{children:"exclusion"}),"）也被称为反转混合模式，因为它们创建的颜色几乎是其中一个输入的相反色。这些混合模式通常用于图像中创建反向效果（类似照片底片效果）。"]}),"\n",(0,d.jsxs)(n.h4,{id:"色相hue",children:["色相：hue",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#色相hue",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["色相混合模式（",(0,d.jsx)(n.code,{children:"hue"}),"）将获取前景颜色的色调值，并将其应用于背景颜色的饱和度和亮度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: hue;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: hue;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:W,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ZEVXpwb",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ZEVXpwb"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"它的计算步骤如下："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从前景颜色中提取色相值（Hue），保留前景颜色的饱和度（Saturation）和亮度（Luminosity）值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从背景颜色中提取饱和度和亮度值，保留背景颜色的色相值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将前景颜色的色调值应用到背景颜色的饱和度和亮度值上，形成新的颜色"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:E,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["这样，色相混合模式（",(0,d.jsx)(n.code,{children:"hue"}),"）会改变背景颜色的饱和度和亮度，以匹配前景颜色的色调，从而产生一种新的混合颜色。这个模式通常用于调整颜色的整体外观，而不影响亮度和对比度。"]}),"\n",(0,d.jsxs)(n.h4,{id:"饱和度saturation",children:["饱和度：saturation",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#饱和度saturation",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["饱和度混合模式（",(0,d.jsx)(n.code,{children:"saturation"}),"）与色相混合模式（",(0,d.jsx)(n.code,{children:"hue"}),"）类似，但饱和度混合模式（",(0,d.jsx)(n.code,{children:"saturation"}),"）会采用前景颜色的饱和度值，同时使用背景颜色的色相和亮度值。即，将前景颜色的饱和度应用于背景颜色的色调和亮度。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: saturation;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: saturation;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:B,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/zYyEoxN",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/zYyEoxN"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"它的计算步骤如下："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从前景颜色中提取饱和度值（Saturation），保留前景颜色的色相（Hue）和亮度（Luminosity）值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从背景颜色中提取色相和亮度值，保留背景颜色的饱和度值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将前景颜色的饱和度值应用到背景颜色的色相和亮度值上，形成新的颜色"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:L,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"这种混合模式的计算方式是将前景颜色的饱和度应用到背景颜色的色相和亮度上。这样可以改变背景颜色的饱和度，使其与前景颜色更加相似。"}),"\n",(0,d.jsxs)(n.h4,{id:"颜色color",children:["颜色：color",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#颜色color",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["颜色混合模式（",(0,d.jsx)(n.code,{children:"color"}),"）将基于前景颜色的色相（Hue）和饱和度（Saturation）以及背景颜色的亮度（Luminosity）创建一个新的颜色。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: color;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: color;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:D,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/gOZGLPZ",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/gOZGLPZ"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"它的计算步骤如下："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从前景颜色中提取色相（Hue）和饱和度值（Saturation），保留前景颜色的亮度（Luminosity）值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从背景颜色中提取亮度值，保留背景颜色的色相和饱和度值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将前景颜色的色相和饱和度值应用到背景颜色的亮度值上，形成新的颜色"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:M,alt:""})}),"\n",(0,d.jsxs)(n.h4,{id:"亮度luminosity",children:["亮度：luminosity",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#亮度luminosity",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["亮度混合模式（",(0,d.jsx)(n.code,{children:"luminosity"}),"）与颜色混合模式（",(0,d.jsx)(n.code,{children:"color"}),"）刚好相反。它将使用前景颜色的亮度值与背景颜色的色相和饱和度值创建新的颜色。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".mix-blend-mode {\n    &::before, > img {\n        mix-blend-mode: luminosity;\n    }\n}\n\n.background-blend-mode {\n    background-blend-mode: luminosity;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:G,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/gOZGLwq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/gOZGLwq"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"它的计算步骤如下："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从前景颜色中提取亮度值（Luminosity），保留前景颜色的色相值（Hue）和饱和度值（Saturation）"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"从背景颜色中提取色相值和饱和度值，保留背景颜色的亮度值"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"将前景颜色的亮度值应用到背景颜色的色相值和饱和度值上，形成新的颜色"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:q,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["注意，色相混合模式（",(0,d.jsx)(n.code,{children:"hue"}),"）、饱和度混合模式（",(0,d.jsx)(n.code,{children:"saturation"}),"）、颜色混合模式（",(0,d.jsx)(n.code,{children:"color"}),"）和亮度混合模式（",(0,d.jsx)(n.code,{children:"luminosity"}),"）与其他混合模式不同，因为它们操作的是颜色的色相（Hue）、饱和度（Saturation）和亮度（Luminosity），而不是颜色的 RGB 通道值。"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"特别声明"}),"：CSS 混合模式的计算是一个复杂的过程，W3C 规范详细阐述了它们是如何计算的，感兴趣的话，可以分别查看规范中的《",(0,d.jsx)(n.a,{href:"https://www.w3.org/TR/compositing-1/#whatiscompositing",target:"_blank",rel:"noopener noreferrer",children:"Introduction to compositing"}),"》和《",(0,d.jsx)(n.a,{href:"https://www.w3.org/TR/compositing-1/#advancedcompositing",target:"_blank",rel:"noopener noreferrer",children:"Advanced compositing features"}),"》。"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"上面向大家所呈现的是 CSS 混合模式最基础的应用。不过，我们需要知道的是，层次结构对混合模式最终的结果是有关键词影响的。就拿下面这个示例而言，图片在渐变层上面或下面，即使是使用相同的混合模式，最终结果也是不一样的："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".card::before {\n    mix-blend-mode: var(--blend-mode);\n}\n\n.card img {\n    mix-blend-mode: var(--blend-mode);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:_,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/yLGzgRq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/yLGzgRq"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["\xa0除此之外，在使用 CSS 混合模式时，还有一个细节需要注意。通过前面的学习，我们知道，在 CSS 中可以使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 或 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 属性创建混合效果。虽然这两个属性的值是一样的，但它们的使用是有着本质上区别的。",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 应用于元素上，",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 用于元素的背景层上。其中 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 很易于理解，也易于掌握，那是因为 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 仅影响元素的背景效果。可 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 则不同，它会影响元素及其所有后代元素，所以我们在使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 时要尤其注意。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="container">\n    <div class="card">\n        <img src="https://picsum.photos/800/600?random=2" alt="">\n        <h3>Modern CSS</h3>\n        <p>CSS Blend Mode: mix-blend-mode</p>\n    </div>\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".container {\n    background-image: linear-gradient(\n        to bottom left in oklab,\n        oklch(55% 0.45 350) 0%,\n        oklch(100% 0.4 95) 100%\n    );\n    \n    .card {\n        mix-blend-mode: var(--blend-mode, normal);\n        background-color: #fff;\n        border: 1px solid rgb(0 0 0 / 0.125);\n        color: #f5f5f5;\n        text-shadow: 1px 1px 0 rgb(0 0 0 / 0.25);\n        \n        &::before {\n            background-color: color-mix(in oklch, #09f, transparent 60%);\n        }\n    }\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:N,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/eYbGeRK",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/eYbGeRK"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["为了避免 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 对其后代元素产生影响，需要对 HTML 结构做出相应的调整。比如下面这个示例："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="container">\n    <div class="backdrop">\n        <p class="shapes">\uD83C\uDF43</p>\n        <p class="shapes">\uD83C\uDF42</p>\n        <p class="shapes"></p>\n    </div>\n    <div class="card">\n        <img src="https://picsum.photos/800/600?random=2" alt="">\n        <h3>Modern CSS</h3>\n        <p>CSS Blend Mode: mix-blend-mode</p>\n    </div>\n</div>\n'})}),"\n",(0,d.jsx)(n.p,{children:"关键 CSS 代码："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".backdrop {\n    filter: brightness(1.7);\n    \n    .shapes {\n        mix-blend-mode: multiply;\n    }\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:C,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/poqWpzx",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/poqWpzx"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["在这一点上，",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 和 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性是相似的。当然，你可以使用 ",(0,d.jsx)(n.code,{children:"isolation"})," 属性来阻止混合（稍后会介绍）。"]}),"\n",(0,d.jsxs)(n.p,{children:["另外， ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 还可以使用链式的混合模式。这意味着将多个混合模式一起应用于同一个元素。这可以通过在 CSS 中使用逗号分隔多个混合模式来实现。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    background-blend-mode: overlay, multiply, screen;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["在上面的示例中，我们将三个不同的混合模式（",(0,d.jsx)(n.code,{children:"overlay"}),"、",(0,d.jsx)(n.code,{children:"multiply"})," 和 ",(0,d.jsx)(n.code,{children:"screen"}),"）链接在一起，分别应用于元素的背景。这将导致这些混合模式按顺序依次应用于元素的背景，从而创建复杂的视觉效果。"]}),"\n",(0,d.jsx)(n.p,{children:"通过链接多个混合模式，你可以创造出更多样化和有趣的背景效果，以满足不同的设计需求。这使得 CSS 混合模式成为创建独特和吸引人的背景视觉效果的有力工具。例如："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:".card {\n    background: var(--bg-layer-1), var(--bg-layer-2), var(--bg-layer-3);\n    background-blend-mode: var(--blned-layer-1), var(--blend-layer-2), var(--blend-layer-3);\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:w,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/VwqMymP",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/VwqMymP"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"你可以发挥你的才智，给元素的背景添加一些动效，整体的效果又将完全不一样："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:y,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/ExGwooV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/ExGwooV"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"实际用例",children:["实际用例",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实际用例",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"使用 CSS 混合模式，我们可以在 Web 上制作出很多有创意或吸引力的视觉效果。例如，纸张效果、双色调效果、浮雕压花效果、着色器（Shaders）效果、点阵图效果和调色等效果。"}),"\n",(0,d.jsxs)(n.h4,{id:"纸张效果",children:["纸张效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#纸张效果",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"你可以将带有噪点图像、CSS 的渐变、颜色 和阴影混合在一起，产生出类似于纸张的效果。例如："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'/* 一张噪点图像 */\n.layer-1 {\n    background: url("https://garden.bradwoods.io/images/noise.webp");\n}\n\n/* CSS 渐变图像 */\n.layer-2 {\n    background: linear-gradient(\n        to bottm right,             \n        hsl(0 0% 0% / 0) 40%,             \n        hsl(0 0% 0% / 1)           \n    );\n}\n\n.layer-3 {\n    background-color:hsl(40 35% 76%);\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"将它们合在一起，并且使用正片叠加的混合模式："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'.result {\n    background: \n        url("https://garden.bradwoods.io/images/noise.webp"),\n        linear-gradient(\n            to bottom right,             \n            hsl(0 0% 0% / 0) 40%,             \n            hsl(0 0% 0% / 1)           \n        );\n    background-color: hsl(40 35% 76%);\n    background-blend-mode: multiply;\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:"此时，你看上去得到一个看似纸张的效果："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:v,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/dywVJLV",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/dywVJLV"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"浮雕在压花效果",children:["浮雕在压花效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#浮雕在压花效果",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"浮雕是图像的部分凸起于表面之上。压花则是将图像的部分压入表面之中。我们可以使用图像的三个副本来创建这种效果。其中一个位于中心，另一个向上和左移动，另一个向下和右移动。在同一图层上结合两种混合模式，即差异和屏幕，来实现这一效果。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:'.result {\n    --img: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/153385/jpgls-leaf.jpg");\n    --bg-layer-1: var(--img);\n    --bg-layer-2: var(--img);\n    --bg-layer-3: var(--img);\n    --blend: difference, screen;\n    \n    background: \n        var(--bg-layer-1) calc(50% - 1px) calc(50% - 1px) / cover, \n        var(--bg-layer-2) calc(50% + 1px) calc(50% + 1px) / cover,\n        var(--bg-layer-3) center / cover;\n    \n    filter: brightness(2) invert(1) grayscale(1);\n    background-blend-mode: var(--blend);\n}\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:k,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/QWzqmwd",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/QWzqmwd"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["注意，示例中还使用了多个 ",(0,d.jsx)(n.code,{children:"filter"})," 混合的效果。"]}),"\n",(0,d.jsxs)(n.p,{children:["正如 ",(0,d.jsx)(n.a,{href:"https://twitter.com/bennettfeely",target:"_blank",rel:"noopener noreferrer",children:"@bennettfeely"})," 提供的案例集（",(0,d.jsx)(n.a,{href:"https://bennettfeely.com/image-effects/",target:"_blank",rel:"noopener noreferrer",children:"Image Effects with CSS"}),"）所示，你可以在 ",(0,d.jsx)(n.code,{children:"filter"})," 、",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 或 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 属性上使用多个值可以为单个源图像实现很多惊人的效果。在大多数效果中，单个源背景图像重复一次或多次（比如上面示例，重复了三次），并使用 CSS 混合模式（例如 ",(0,d.jsx)(n.code,{children:"multiply"})," 、",(0,d.jsx)(n.code,{children:"overlay"})," 、",(0,d.jsx)(n.code,{children:"screen"})," 或 ",(0,d.jsx)(n.code,{children:"differecnce"})," 等）与自身混合。也有一些效果，还会使用 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性做进一步的处理，像 ",(0,d.jsx)(n.code,{children:"grayscale()"})," 、",(0,d.jsx)(n.code,{children:"brightness()"})," 和 ",(0,d.jsx)(n.code,{children:"contrast()"})," 等函数可以对图像进行调整，以获得更好的效果。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:S,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://bennettfeely.com/image-effects/",target:"_blank",rel:"noopener noreferrer",children:"https://bennettfeely.com/image-effects/"})," （",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/aaZaPP%EF%BC%89",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/aaZaPP）"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"模拟-shaders-效果",children:["模拟 Shaders 效果",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#模拟-shaders-效果",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["我们还可以使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 模拟出 Shaders 效果，使得 CSS 具备简单地着色器的功能。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:u,alt:""})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="shader">\n    <img src="tower.jpg" alt="Asakusa at dusk">\n    <div class="shader__layer specular">\n        <div class="shader__layer mask"></div>\n    </div>\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".shader {\n    position: relative;\n    overflow: hidden;\n    backface-visibility: hidden;\n}\n\n.shader__layer {\n    background: black;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-size: 100%;\n    background-position: center;\n}\n\n.specular {\n    mix-blend-mode: color-dodge;\n    background-attachment: fixed;\n    background-image: linear-gradient(180deg, black 20%, #3c5e6d 35%, #f4310e, #f58308 80%, black);\n}\n\n.mask {\n    mix-blend-mode: multiply;\n    background-image: url(/tower_spec.jpg);\n}\n"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/MWZEVPq",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/MWZEVPq"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h4,{id:"改变产品图片颜色",children:["改变产品图片颜色",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#改变产品图片颜色",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["在介绍 CSS ",(0,d.jsx)(n.code,{children:"filter"})," 属性时，我们有一个示例是通过 ",(0,d.jsx)(n.code,{children:"filter"})," 属性来改变宝马车颜色的。同样的，你也可以使用 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 的 ",(0,d.jsx)(n.code,{children:"multiply"})," 以及调整前景色来动态调整产品图案的颜色。例如，你有一张下图这样的沙发产品图："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:m,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"你首先要做的是，使用设计软件根据描述出一个与产品图外形相似的 SVG 图案："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:g,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"将其导出为 SVG 文件，或者导出相应的 SVG 代码。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="couch">\n    <svg id="js-couch" class="couch__overlay" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="none" width="1000" height="394">\n        <defs>\n            <path d="M996.35 77.55q-1.85-1.95-8.65-3.75l-62.4-17.1q-9.3-2.75-12.15-2.5-1.8.15-2.85.45l-.75.3q2.25-16.3 3.75-22.05 1.15-4.4 1.4-10.8.2-6.6-.7-10.85-1.25-5.65-3.1-7.8-2.95-3.35-9.65-2.7-5.95.6-39.3 1.7-38.3 1.25-39.45 1.3-10.25.5-126.75.5-5.05 0-54.2 1.3-45.8 1.25-54.05.95-19.45-.45-30.4-.7-20.2-.55-23.1-1.3-22.3-5.85-26.5 1.25-2.65 4.55-3.85 7.9-.6 1.7-.7 2.5-.65-2.2-2.05-4.55-2.75-4.65-6.45-5.2-3.85-.55-13.65-.4-7.4.1-12 .4-.4.05-18.7.9-16.55.8-19.15 1.1-3.4.4-14.6 1.1-11.3.75-13.05.65h-9.8q-8.65-.05-11.45-.4-2.85-.35-9.25-.6-6.7-.15-8.5-.25-2.7-.1-27.75-.1-25.1 0-29.6.1-92.35 1.15-99 1.65-5.15.4-20 0-15.3-.4-24.4-1.25-6.75-.6-21-1.55-12.95-.9-14.85-1.1-6.45-1.05-11.05-1.5-8.7-.85-12.85.5-5.45 1.75-8.1 4.65-3.2 3.4-2.9 8.6.25 4.65 2.1 11.8 1 3.8 2.55 9.1 1 3.85 2.35 10.1-.1 1-1.5 1-1.75 0-7.7.85-7.1 1-9.8 2.05-2.4.9-23 4.75-21.2 3.9-22.05 4.15-8.2 1.85-15.05 3.35Q7.4 69.1 5.65 70.3 2.5 72.45 2 73.1.6 75 .75 79.2q.15 4.15 1.3 12.75.9 6.85 1.45 10 .5 2.75 8.55 54 6.65 42.15 7.35 46.85 1.15 7.65 4.9 28.55 4.55 25.2 6.35 31.2 2.45 8.15 3.8 11.75 1.85 4.9 3.2 5.75 1.25.8 6.85.65 2.75-.05 5.3-.25l23.85.35q.1 0 1 .95t2 .95q1.9 0 3.4-1.4l23.1-.25 43.65.4q135.05 2.15 137.9 1.9 1.25-.1 72.9.5 72.45.65 76.85.45 8.1-.35 64 .4 143.35.95 146 1.1.55.05 75.3.3 74.7.3 79.8.6 8.65.5 68.25-.35l51.75.5 1.6.4q1.95.35 3.8.05 1.45-.25 3.5-.2 1.9 0 3.35-.3 2.1-.45 8.25-.8 6.25-.3 8.75-.05 1.7.2 8 1 5.75.3 7.4-1.75 1.75-2.2 4.95-10.85 2.8-7.55 4.05-12.4.65-2.5 3.6-17.2 2.75-13.75 3.15-14.8.45-1.25 4.45-22.85 4.05-22.4 4.4-24.4.3-1.45 3.75-25.2 3.35-23.2 4-26.3 1.15-5.5 2.35-18.8 1.4-15.7.8-23.7-.6-8.35-3.35-11.15z" id="a" />\n        </defs>\n        <use xlink:href="#a"/>\n    </svg>\n\n    <img class="couch__img" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/1376484/couch-8_xrckc2.png" alt="">\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".couch__overlay {\n    z-index: 2;\n    fill: #fcff4d;\n    mix-blend-mode: multiply;\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["你只需要动态调整 ",(0,d.jsx)(n.code,{children:".couch__overlay"})," 的 ",(0,d.jsx)(n.code,{children:"fill"})," 的颜色，就能动态调整沙发颜色："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:b,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/wvRrjGy",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/wvRrjGy"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["使用类似的原理，你还可以实现更复杂的效果，比如 ",(0,d.jsx)(n.a,{href:"https://jasonday.github.io/custom-product-demo/",target:"_blank",rel:"noopener noreferrer",children:"@jasonday 写的这个这个案例"}),"："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:f,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/PoXJeGO",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/PoXJeGO"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"同样的，采用相似的方法，你还可以改变图标的颜色："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:p,alt:""})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"svg {\n    mix-blend-mode: screen;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:j,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/oNJGdwY",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/oNJGdwY"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"阻止混合模式",children:["阻止混合模式",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#阻止混合模式",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["要阻止混合模式效果，你可以使用 CSS 的 ",(0,d.jsx)(n.code,{children:"isolation"})," 属性。将 ",(0,d.jsx)(n.code,{children:"isolation"})," 属性的值设置为 ",(0,d.jsx)(n.code,{children:"isolate"}),"，它将创建一个新的堆叠上下文，从而防止元素与背景或其他元素混合。这会将元素视为一个独立的图层，不受其他元素的混合影响。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    isolation: isolate;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:"这样，元素将不再与其周围的元素混合，而成为一个单独的图层。来看一个简单的示例："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="container">\n    <div class="isolation">\n        <div class="card"></div>\n    </div>\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".container {\n    --blend: screen;\n    --isolation: auto;\n    \n    background-image: linear-gradient(\n        to bottom left in oklab,\n        oklch(55% 0.45 350) 0%,\n        oklch(100% 0.4 95) 100%\n    );\n    \n    .card {\n        background-color: #fff;\n        mix-blend-mode: var(--blend);\n    }\n    \n    .isolation {\n        isolation: var(--isolation);\n    }\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["当 ",(0,d.jsx)(n.code,{children:"--isolation"})," 属性为 ",(0,d.jsx)(n.code,{children:"isolate"})," 时，",(0,d.jsx)(n.code,{children:".isolation"})," 将会把 ",(0,d.jsx)(n.code,{children:".card"})," 和 ",(0,d.jsx)(n.code,{children:".container"})," 进行隔离，运用在 ",(0,d.jsx)(n.code,{children:".card"})," 上的 ",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 不会与 ",(0,d.jsx)(n.code,{children:".container"})," 的背景进行混合："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:x,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/wvRrjVN",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/wvRrjVN"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["但请注意，这不适用于 ",(0,d.jsx)(n.code,{children:"background-blend-mode"}),"，因为 ",(0,d.jsx)(n.code,{children:"background"})," 属性已经被隔离。"]}),"\n",(0,d.jsxs)(n.h2,{id:"css-的-backdrop-filter-属性",children:["CSS 的 backdrop-filter 属性",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-的-backdrop-filter-属性",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["你可能已经注意到一些网站上的引人注目的背景效果，例如磨砂玻璃效果、视频叠加、半透明导航头部、不适当图像审查、图像加载等视觉效果。这些令人印象深刻的效果正是通过 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性实现的。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:t,alt:""})}),"\n",(0,d.jsxs)(n.p,{children:["在 CSS 中，可用于 ",(0,d.jsx)(n.code,{children:"filter"})," 属性的滤镜函数都可以用于 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性。它和 ",(0,d.jsx)(n.code,{children:"filter"})," 不同的是，",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 只会给元素的背景应用滤镜效果。例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".element {\n    backdrop-filter: blur(5px) brightness(0.8);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["上面的代码会在 ",(0,d.jsx)(n.code,{children:".element"})," 元素的背景上应用模糊（",(0,d.jsx)(n.code,{children:"blur()"}),"）和降低亮度（",(0,d.jsx)(n.code,{children:"brightness()"}),"）的滤镜效果。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性最经典的案例是用来制作毛玻璃的 UI 效果，也常称 Glass UI 或 Glassmorphism UI。"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:h,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/TurkAysenur/full/ZEpxeYm",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/TurkAysenur/full/ZEpxeYm"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:o,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/Hyperplexed/full/vYpXNJd",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/Hyperplexed/full/vYpXNJd"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["以创建玻璃效果（Glassmorphism）为例。玻璃效果的主要思路是在彩色背景上创建玻璃面板。通过使用 CSS 的不透明度和 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性来实现这种效果。以下是使用 CSS 来实现玻璃效果的步骤："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"在容器中添加生动的背景，可以是图片，也可以是视频"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"焦点对象（或目标对象）应用不透明度"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["使用 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 属性为背景添加模糊效果"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"添加浅色边框"}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["使用 ",(0,d.jsx)(n.code,{children:"box-shadow"})," 添加阴影效果"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"使用以上步骤，让我们一起来创建一个简单的信用卡效果，如下所示："}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:a,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/gOZGdVd",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/gOZGdVd"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"首先，我们将使用 HTML 和 CSS 创建整个结构，然后再实现玻璃效果。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<section>\n    <div class="circle-1 circle"></div>\n    <div class="circle-2 circle"></div>\n    <div class="circle-3 circle"></div>\n    <div class="card">\n        <div>\n            <h1>ANURAG GHARAT</h1>\n            <p>1892 1232 1242 0099</p>\n        </div>\n        <p>07/27</p>\n        <i class="ri-visa-line"></i>\n    </div>\n</section>\n'})}),"\n",(0,d.jsx)(n.p,{children:"实现玻璃效果的核心 CSS 代码："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".card {\n    background: rgb(39 39 39 / 0.1);\n    backdrop-filter: blur(60px);\n\n    border: 2px solid rgb(255  255 255 / 0.2);\n    box-shadow: 0 0 80px rgb(0 0 0 / 0.3);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["你也可以使用像 ",(0,d.jsx)(n.a,{href:"https://ui.glass/generator/",target:"_blank",rel:"noopener noreferrer",children:"Glass UI 这样的在线工具"}),"帮助你生成玻璃效果："]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:l,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Glass UI: ",(0,d.jsx)(n.a,{href:"https://ui.glass/generator/",target:"_blank",rel:"noopener noreferrer",children:"https://ui.glass/generator/"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"在工具上调整相应参数，直到符合你期望的 UI 效果，然后复制出相应的代码即可："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:".card {\n    backdrop-filter: blur(16px) saturate(180%);\n    \n    background-color: rgba(17, 25, 40, 0.75);\n    border-radius: 12px;\n    border: 1px solid rgba(255, 255, 255, 0.125);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["再来看一个炫的模糊暗角效果。这个效果是通过创建一个带有 ",(0,d.jsx)(n.code,{children:"backdrop-filter: blur()"})," 的叠加层以及一个创建暗角的 ",(0,d.jsx)(n.code,{children:"mask-image"})," 来实现的。这个遮罩图由六个渐变组合而成，每个角落使用的是径向渐变，中间使用两个线性渐变（我们曾在《",(0,d.jsx)(n.a,{href:"https://juejin.cn/book/7223230325122400288/section/7259668885224456252",target:"_blank",rel:"noopener noreferrer",children:"CSS 的 Clipping 和 Masking"}),"》一节课中有过介绍）。"]}),"\n",(0,d.jsx)(n.p,{children:"请看下面的图像，以了解这些渐变是如何组合成一个遮罩图的。黑色区域标记了我们叠加层上可见的部分。"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:s,alt:""})}),"\n",(0,d.jsx)(n.p,{children:"以下是这种用法的示例："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-HTML",children:'<div class="wrapper">\n    <div class="blur-vignette"></div>\n</div>\n'})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-CSS",children:"@layer vignette {\n    .wrapper {\n        --radius: 18px;\n        --inset: 10px;\n        --transition-length: 22px;\n        --blur: 21px;\n    \n        position: relative;\n        aspect-ratio: 1 / 1;\n        width: 300px;\n        background: url(https://media.istockphoto.com/id/910527852/photo/taxi-ride-in-new-york-city.jpg?s=612x612&w=0&k=20&c=ueaQ7ZPYwOgSsfWOloyI41HmXaLIlYT853vG6x9xa1I=)\n          0% 0% / cover;\n        border-radius: var(--radius);\n        place-self: center;\n    \n        .blur-vignette {\n            --r: max(var(--transition-length), calc(var(--radius) - var(--inset)));\n            --corner-size: calc(var(--r) + var(--inset)) calc(var(--r) + var(--inset));\n            --corner-gradient: \n                transparent 0px,\n                transparent calc(var(--r) - var(--transition-length)), black var(--r);\n            --fill-gradient: \n                black, black var(--inset),\n                transparent calc(var(--inset) + var(--transition-length)),\n                transparent calc(100% - var(--transition-length) - var(--inset)),\n                black calc(100% - var(--inset));\n            --fill-narrow-size: calc(100% - (var(--inset) + var(--r)) * 2);\n            --fill-farther-position: calc(var(--inset) + var(--r));\n    \n            position: absolute;\n            inset: 0;\n            border-radius: var(--radius);\n            backdrop-filter: blur(var(--blur));\n    \n            mask-image: \n                linear-gradient(to right, var(--fill-gradient)),\n                linear-gradient(to bottom, var(--fill-gradient)),\n                radial-gradient(at bottom right, var(--corner-gradient)),\n                radial-gradient(at bottom left, var(--corner-gradient)),\n                radial-gradient(at top left, var(--corner-gradient)),\n                radial-gradient(at top right, var(--corner-gradient));\n            mask-size: \n                100% var(--fill-narrow-size), \n                var(--fill-narrow-size) 100%,\n                var(--corner-size), var(--corner-size), var(--corner-size),\n                var(--corner-size);\n            mask-position: \n                0 var(--fill-farther-position),\n                var(--fill-farther-position) 0, \n                0 0, \n                100% 0, \n                100% 100%, \n                0 100%;\n            mask-repeat: no-repeat;\n        }\n    }\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)("img",{src:i,alt:""})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Demo 地址：",(0,d.jsx)(n.a,{href:"https://codepen.io/airen/full/eYbGPGg",target:"_blank",rel:"noopener noreferrer",children:"https://codepen.io/airen/full/eYbGPGg"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"你可以组合不同的滤镜以实现丰富而巧妙的效果，或者仅使用一个滤镜以获得更加微妙或精确的效果。"}),"\n",(0,d.jsxs)(n.h2,{id:"小结",children:["小结",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["当涉及到处理和调整 Web 页面中的图像或元素效果时，CSS 提供了一些有用的属性和功能，比如 CSS 的 ",(0,d.jsx)(n.code,{children:"filter"})," 属性、",(0,d.jsx)(n.code,{children:"filter()"})," 函数、CSS 混合模式（",(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 和 ",(0,d.jsx)(n.code,{children:"background-blend-mode"}),"）和 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 。"]}),"\n",(0,d.jsxs)(n.p,{children:["从视觉效果上来说，它们都可以对图像或元素应用特殊的视觉效果，其中 ",(0,d.jsx)(n.code,{children:"filter"})," 、",(0,d.jsx)(n.code,{children:"filter()"})," 和 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 都接受一个或多个滤镜函数做为值或参数。不同的是，",(0,d.jsx)(n.code,{children:"filter"})," 和 ",(0,d.jsx)(n.code,{children:"backdrop-filter"})," 是 CSS 的属性，前者用于元素上，后者用于元素的背景上，而 ",(0,d.jsx)(n.code,{children:"filter()"})," 是一个 CSS 函数，它只能用于可接受 ",(0,d.jsx)(n.code,{children:"<image>"})," 值类型的属性上，比如 ",(0,d.jsx)(n.code,{children:"background-image"})," 。"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"mix-blend-mode"})," 和 ",(0,d.jsx)(n.code,{children:"background-blend-mode"})," 都是 CSS 的混合模式，前者用于元素上，后者用于元素的背景上。"]}),"\n",(0,d.jsx)(n.p,{children:"总的来说，这些 CSS 属性和功能为开发者提供了丰富的工具，用于在网页中创建各种图像处理和视觉效果，使用户体验更加丰富和吸引人。可以根据具体的需求和创造力来结合它们，以实现独特的设计和交互。"})]})}function eE(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(eB,{...e})}):eB(e)}let eW=eE;eE.__RSPRESS_PAGE_META={},eE.__RSPRESS_PAGE_META["%E7%8E%B0%E4%BB%A3CSS%2F%E7%AC%AC42%E7%AB%A0%E2%80%94CSS%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E6%95%88%E6%8C%87%E5%8D%97.md"]={toc:[{text:"CSS 的 filter 属性",id:"css-的-filter-属性",depth:2},{text:"CSS 的 filter 是什么",id:"css-的-filter-是什么",depth:3},{text:"基本用法",id:"基本用法",depth:3},{text:"模糊：blur()",id:"模糊blur",depth:4},{text:"亮度：brightness()",id:"亮度brightness",depth:4},{text:"对比度：contrast()",id:"对比度contrast",depth:4},{text:"灰度：grayscale()",id:"灰度grayscale",depth:4},{text:"反转：invert()",id:"反转invert",depth:4},{text:"透明度：opacity()",id:"透明度opacity",depth:4},{text:"饱和度：saturate()",id:"饱和度saturate",depth:4},{text:"复古的棕褐色调：sepia()",id:"复古的棕褐色调sepia",depth:4},{text:"色调旋转：hue-rotate()",id:"色调旋转hue-rotate",depth:4},{text:"投影：drop-shadow()",id:"投影drop-shadow",depth:4},{text:"引用外部文件：url()",id:"引用外部文件url",depth:4},{text:"复合效果",id:"复合效果",depth:3},{text:"实际示例",id:"实际示例",depth:3},{text:"图像遮罩",id:"图像遮罩",depth:4},{text:"图像悬浮效果",id:"图像悬浮效果",depth:4},{text:"调整产品图片色彩",id:"调整产品图片色彩",depth:4},{text:"导航菜单",id:"导航菜单",depth:4},{text:"Gooey 效果",id:"gooey-效果",depth:4},{text:"CSS 的 filter() 函数",id:"css-的-filter-函数",depth:2},{text:"filter 属性与 filter() 函数的差异",id:"filter-属性与-filter-函数的差异",depth:3},{text:"CSS 混合模式（Blend Mode）",id:"css-混合模式blend-mode",depth:2},{text:"CSS 混合模式是什么？",id:"css-混合模式是什么",depth:3},{text:"CSS 混合模式分类",id:"css-混合模式分类",depth:3},{text:"CSS 混合模式的使用与基础原理",id:"css-混合模式的使用与基础原理",depth:3},{text:"正片叠底：multiply",id:"正片叠底multiply",depth:4},{text:"屏幕：screen",id:"屏幕screen",depth:4},{text:"叠加：overlay",id:"叠加overlay",depth:4},{text:"变暗：darken",id:"变暗darken",depth:4},{text:"变亮：lighten",id:"变亮lighten",depth:4},{text:"颜色加深：color-burn",id:"颜色加深color-burn",depth:4},{text:"颜色减淡：color-dodge",id:"颜色减淡color-dodge",depth:4},{text:"硬光：hard-light",id:"硬光hard-light",depth:4},{text:"柔光：soft-light",id:"柔光soft-light",depth:4},{text:"差异：difference",id:"差异difference",depth:4},{text:"排除：exclusion",id:"排除exclusion",depth:4},{text:"色相：hue",id:"色相hue",depth:4},{text:"饱和度：saturation",id:"饱和度saturation",depth:4},{text:"颜色：color",id:"颜色color",depth:4},{text:"亮度：luminosity",id:"亮度luminosity",depth:4},{text:"实际用例",id:"实际用例",depth:3},{text:"纸张效果",id:"纸张效果",depth:4},{text:"浮雕在压花效果",id:"浮雕在压花效果",depth:4},{text:"模拟 Shaders 效果",id:"模拟-shaders-效果",depth:4},{text:"改变产品图片颜色",id:"改变产品图片颜色",depth:4},{text:"阻止混合模式",id:"阻止混合模式",depth:3},{text:"CSS 的 backdrop-filter 属性",id:"css-的-backdrop-filter-属性",depth:2},{text:"小结",id:"小结",depth:2}],title:"第42章—CSS图像处理与特效指南",headingTitle:"第42章—CSS图像处理与特效指南",frontmatter:{}}}}]);