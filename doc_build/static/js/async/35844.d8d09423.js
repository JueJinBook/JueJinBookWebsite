"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["35844"],{407080:function(n,e,i){n.exports=i.p+"static/image/3ca906fad94aa08fd979403ebc13c35d.165d6202.webp"},591870:function(n,e,i){n.exports=i.p+"static/image/6b5421308cfaeecc10c00e68983f36ad.f92c11b7.gif"},965682:function(n,e,i){n.exports=i.p+"static/image/ed1b80dbfb1870b08f62edefe04074ad.fee3355d.gif"},223129:function(n,e,i){i.r(e),i.d(e,{default:()=>P});var s=i(552676),a=i(740453),r=i(591870);let t=i.p+"static/image/970f7c27f9234983926e43c7b744e7ba.6d0875d6.webp",c=i.p+"static/image/3ec7aa4a0881e2a174bbcd47cea19ef9.1584c6e0.gif",d=i.p+"static/image/e63b2b5f715b933fb2973786cb50dc1c.13d8cddb.gif",p=i.p+"static/image/9c415758c641585fde7d81829e90caba.8d2f9087.webp",l=i.p+"static/image/4e00aa3c3de279a4e0cc49882bad4828.53b4890b.gif",o=i.p+"static/image/334825b1a60afdaef330aa14ca03bc80.0218437b.webp",m=i.p+"static/image/70a4add81ca4dd7f964ca87dc953fcd6.5d7f0c87.webp",j=i.p+"static/image/7ee080130c769b0f0426ff7a02eea1f9.663f492c.gif",x=i.p+"static/image/68893356f8878ec72b0c4361fe28bbc3.84d17a06.webp",h=i.p+"static/image/1f4de1dcc35d82025acf6c73f447f524.5b67da70.gif",g=i.p+"static/image/d36ee042dfd176042bac2dd447a92035.233ab2b1.webp",u=i.p+"static/image/cb2fbfb1f0f2681921a3ace24855f2ff.ab1b24d0.webp",f=i.p+"static/image/bb594316c13a2017372efa9dd2d2b93f.12bc6ef3.gif",b=i.p+"static/image/101ee8c1fa2fc89f1f6b51ab677e181b.334e4635.webp",v=i.p+"static/image/03bab5607da9422b221174aa7de77cfa.1b8beeff.webp",y=i.p+"static/image/f507d776cf4f7a5c0238e6d061e8f1c8.c69fdfd9.gif",w=i.p+"static/image/b9436f5d96851ce4c26e5e7ea796d7d2.68d32558.webp",N=i.p+"static/image/56229fe206e4c37d88ecef5cf6313f9e.9ce792be.webp",E=i.p+"static/image/864fb998298e717e5d0a98f8baa8b733.d8ed8020.webp",I=i.p+"static/image/c70114c5231f06a9bafa9bc61dd40a7a.f5a82103.webp",A=i.p+"static/image/dcce72b35550548ae2dce0876bbbce94.c96c906f.webp",k=i.p+"static/image/286e82ffa96d09daa02c263d2abd336e.ca931bc6.webp",F=i.p+"static/image/8ad6609c02a54a7eab4ce91b177a9a3b.fdbda020.webp",C=i.p+"static/image/8e7535aca4652e3824ee6dc82f1313bf.3b968d2d.webp",B=i.p+"static/image/28eeaf0df24831ca148ca921bcd4b87e.d9a5d475.webp";var R=i(407080),_=i(965682);function q(n){let e=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"164-考试系统试卷编辑器",children:["164. 考试系统：试卷编辑器",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#164-考试系统试卷编辑器",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节我们来写下试卷编辑器。"}),"\n",(0,s.jsx)(e.p,{children:"和问卷星的类似："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:R,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"可以选择不同的题型，然后设置题目的内容，答案、分值、答案解析等。"}),"\n",(0,s.jsx)(e.p,{children:"我们先来设计下 json 的数据结构："}),"\n",(0,s.jsx)(e.p,{children:"这只是一个列表的 json，比较简单。"}),"\n",(0,s.jsx)(e.p,{children:"大概是这样的结构："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'[\n    {\n        "type": "radio",\n        "question": "最长的河？",\n        "options": [\n            "选项1",\n            "选项2"\n        ],\n        "score": 5,\n        "answer": "选项1",\n        "answerAnalyse": "答案解析"\n    }\n]\n'})}),"\n",(0,s.jsx)(e.p,{children:"type 是题型"}),"\n",(0,s.jsx)(e.p,{children:"options 是单选的选项"}),"\n",(0,s.jsx)(e.p,{children:"score 是题目分数"}),"\n",(0,s.jsx)(e.p,{children:"answer 是答案"}),"\n",(0,s.jsx)(e.p,{children:"answerAnalyse 是答案解析"}),"\n",(0,s.jsx)(e.p,{children:"我们加一个 /edit/:id 的路由："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:B,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"写下内容："}),"\n",(0,s.jsx)(e.p,{children:"pages/Edit/index.tsx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { useParams } from "react-router-dom";\n\nexport function Edit() {\n\n    let { id } = useParams();\n\n    return <div>Edit: {id}</div>\n}\n\n'})}),"\n",(0,s.jsxs)(e.p,{children:["我们按照低代码编辑器这种布局来写，比如 ",(0,s.jsx)(e.a,{href:"https://aisuda.github.io/amis-editor-demo/#/edit/0",target:"_blank",rel:"noopener noreferrer",children:"amis"})," 编辑器："]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:C,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"左边是物料区、中间是画布区、右边是属性编辑区。"}),"\n",(0,s.jsx)(e.p,{children:"写下布局："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { useParams } from "react-router-dom";\nimport \'./index.scss\';\nimport { Button } from "antd";\n\nexport function Edit() {\n\n    let { id } = useParams();\n\n    return <div id="edit-container">\n        <div className="header">\n            <div>试卷编辑器</div>\n            <Button type="primary">预览</Button>\n        </div>\n        <div className="body">\n            <div className="materials">\n                <div className="meterial-item">单选题</div>\n                <div className="meterial-item">多选题</div>\n                <div className="meterial-item">填空题</div>\n            </div>\n            <div className="edit-area">\n\n            </div>\n            <div className="setting">\n\n            </div>\n        </div>\n    </div>\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"index.scss"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scss",children:"* {\n    margin: 0;\n    padding: 0;\n}\n\n#edit-container {\n    .header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        height: 80px;\n        font-size: 30px;\n        line-height: 80px;\n        border-bottom: 1px solid #000;\n        padding:0 20px;\n    }\n\n    .body {\n        height: calc(100vh - 80px);\n\n        display: flex;\n        .materials {\n            height: 100%;\n            width: 300px;\n            border-right: 1px solid #000;\n\n            .meterial-item {\n                padding: 20px;\n                border: 1px solid #000;\n                display: inline-block;\n                margin: 10px;\n                cursor: move;\n            }\n        }\n        \n        .edit-area {\n            height: 100%;\n            flex: 1;\n        }\n\n        .setting {\n            height: 100%;\n            width: 400px;\n            border-left: 1px solid #000;\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"就是 flex、width、height、padding 这些布局。"}),"\n",(0,s.jsx)(e.p,{children:"看下效果："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:F,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"中间部分通过就是递归渲染 json 为组件："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { useParams } from "react-router-dom";\nimport \'./index.scss\';\nimport { Button, Radio, Checkbox, Input } from "antd";\n\nexport type Question =  {\n    id: number\n    question: string\n    type: \'radio\' | \'checkbox\' | \'input\' \n    options?: string[]\n    score: number\n    answer: string\n    answerAnalyse: string\n}\n\nconst json: Array<Question> = [\n    {\n        id: 1,\n        type: "radio",\n        question: "最长的河？",\n        options: [\n            "选项1",\n            "选项2"\n        ],\n        score: 5,\n        answer: "选项1",\n        answerAnalyse: "答案解析"\n    },\n    {\n        id: 2,\n        type: "checkbox",\n        question: "最高的山？",\n        options: [\n            "选项1",\n            "选项2"\n        ],\n        score: 5,\n        answer: "选项1",\n        answerAnalyse: "答案解析"\n    },\n    {\n        id: 2,\n        type: "input",\n        question: "测试问题",\n        score: 5,\n        answer: "选项1",\n        answerAnalyse: "答案解析"\n    },\n\n]\n\nexport function Edit() {\n\n    let { id } = useParams();\n\n    function renderComponents(arr: Array<Question>) {\n        return arr.map(item => {\n            let formComponent;\n            if(item.type === \'radio\') {\n                formComponent = <Radio.Group>\n                    {\n                        item.options?.map(option => <Radio value={option}>{option}</Radio>)\n                    }\n                </Radio.Group>\n            } else if(item.type === \'checkbox\') {\n                formComponent = <Checkbox.Group options={item.options} />\n            } else if(item.type === \'input\'){\n                formComponent =  <Input/>\n            }\n\n            return <div className="component-item"  key={item.id}>\n                <p className="question">{item.question}</p>\n                <div className="options">\n                    {formComponent}\n                </div>\n                <p className="score">\n                    分值：{item.score}\n                </p>\n                <p className="answer">\n                    答案：{item.answer}\n                </p>\n                <p className="answerAnalyse">\n                    答案解析：{item.answerAnalyse}\n                </p>\n            </div>\n        })\n    }\n\n    return <div id="edit-container">\n        <div className="header">\n            <div>试卷编辑器</div>\n            <Button type="primary">预览</Button>\n        </div>\n        <div className="body">\n            <div className="materials">\n                <div className="meterial-item">单选题</div>\n                <div className="meterial-item">多选题</div>\n                <div className="meterial-item">填空题</div>\n            </div>\n            <div className="edit-area">\n                {\n                    renderComponents(json)\n                }\n            </div>\n            <div className="setting">\n\n            </div>\n        </div>\n    </div>\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"我们写死了一个 json："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"然后写了一个 renderComponents 方法来渲染它："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:A,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"css 如下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:I,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:".component-item {\n    margin: 20px;\n\n    line-height: 40px;\n    font-size: 20px;\n\n    border-bottom: 1px solid #000;\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"渲染出来是这样的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:E,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"然后我们拖拽左边的物料到画布的时候，在 json 数组加一个元素。"}),"\n",(0,s.jsx)(e.p,{children:"我们用 react-dnd 实现拖拽，安装用到的包："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"npm install react-dnd react-dnd-html5-backend\n"})}),"\n",(0,s.jsx)(e.p,{children:"在最外层加一下 DndProvider，这是 react-dnd 用来跨组件通信的："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:N,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"在物料上加上 useDrag："}),"\n",(0,s.jsx)(e.p,{children:"封装一个 pages/Edit/Material.tsx 组件"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { useDrag } from "react-dnd";\n\nexport function MaterialItem(props: { name: string, type: string}) {\n\n    const [_, drag] = useDrag({\n        type: props.type,\n        item: {\n            type: props.type\n        }    \n    });\n\n    return <div className="meterial-item" ref={drag}>{props.name}</div>;\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"用 useDrag 给它加上拖拽。"}),"\n",(0,s.jsx)(e.p,{children:"item 是传递的数据"}),"\n",(0,s.jsx)(e.p,{children:"用一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:w,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'<MaterialItem name="单选题" type="单选题"/>\n<MaterialItem name="多选题" type="多选题"/>\n<MaterialItem name="填空题" type="填空题"/>\n'})}),"\n",(0,s.jsx)(e.p,{children:"这样，就可以拖拽了："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:y,alt:"2024-08-26 17.55.36.gif"})}),"\n",(0,s.jsx)(e.p,{children:"然后处理 drop："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"accept 是可以接收的 drag 的类型，也就是这个："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,s.jsx)(e.p,{children:"drop 的时候显示个消息提示。"}),"\n",(0,s.jsx)(e.p,{children:"over 的时候加个蓝色边框"}),"\n",(0,s.jsx)(e.p,{children:"测试下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:f,alt:"2024-08-26 18.02.46.gif"})}),"\n",(0,s.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,s.jsx)(e.p,{children:"然后我们 drop 的时候把它加到 json 里就好了。"}),"\n",(0,s.jsx)(e.p,{children:"把写死的 json 清空，然后 drop 的时候往里 push 元素"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const [{ isOver }, drop] = useDrop(() => ({\n    accept: ['单选题', '多选题', '填空题'],\n    drop: (item: { type: string}) => {\n        const type = {\n            单选题: 'radio',\n            多选题: 'checkbox',\n            填空题: 'input'\n        }[item.type] as Question['type']\n\n        json.push({\n            id: new Date().getTime(),\n            type,\n            question: \"最高的山？\",\n            options: [\n                \"选项1\",\n                \"选项2\"\n            ],\n            score: 5,\n            answer: \"选项1\",\n            answerAnalyse: \"答案解析\"\n        })\n    },\n    collect: (monitor) => ({\n        isOver: monitor.isOver()\n    }),\n}));\n"})}),"\n",(0,s.jsx)(e.p,{children:"在右边展示下 json："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"<pre>\n    {\n        JSON.stringify(json, null, 4)\n    }\n</pre>\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:h,alt:"2024-08-26 22.01.21.gif"})}),"\n",(0,s.jsx)(e.p,{children:"然后点击问题的时候加一个高亮框："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const [curQuestionId, setCurQuestionId] = useState<number>();\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"<div className=\"component-item\" key={item.id} onClick={() => {\n    setCurQuestionId(item.id)\n}} style={ item.id === curQuestionId ? { border : '2px solid blue' } : {}}>\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:j,alt:"2024-08-26 22.03.45.gif"})}),"\n",(0,s.jsx)(e.p,{children:"然后选中的时候在右边展示对应的编辑表单："}),"\n",(0,s.jsx)(e.p,{children:"首先把 json 拿进来作为一个 state："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const [json, setJson] = useState<Array<Question>>([])\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'setJson((json) => [\n    ...json,\n    {\n        id: new Date().getTime(),\n        type,\n        question: "最高的山？",\n        options: [\n            "选项1",\n            "选项2"\n        ],\n        score: 5,\n        answer: "选项1",\n        answerAnalyse: "答案解析"\n    }\n])\n'})}),"\n",(0,s.jsx)(e.p,{children:"然后写下选中时的表单："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"{\n    curQuestionId && json.filter(item => item.id === curQuestionId).map((item, index) => {\n        return <div key={index}>\n            <Form\n                style={{padding: '20px'}}\n                initialValues={item}\n                onValuesChange={(changed, values) => {\n                    setJson(json => {\n                        return json.map((cur) => {\n                            return cur.id === item.id ? {\n                                id: item.id,\n                                ...values,\n                                options: typeof values.options === 'string' \n                                    ? values.options?.split(',')\n                                    : values.options\n                            } : cur\n                        })\n                    });\n                }}\n            >\n                <Form.Item\n                    label=\"问题\"\n                    name=\"question\"\n                    rules={[\n                        { required: true, message: '请输入问题!' },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"类型\"\n                    name=\"type\"\n                    rules={[\n                        { required: true, message: '请选择类型!' },\n                    ]}\n                >\n                    <Radio.Group>\n                        <Radio value='radio'>单选题</Radio>\n                        <Radio value='checkbox'>多选题</Radio>\n                        <Radio value='input'>填空题</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {\n                    item.type !== 'input' && <Form.Item\n                        label=\"选项（逗号分割）\"\n                        name=\"options\"\n                        rules={[\n                            { required: true, message: '请输入选项!' },\n                        ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                }\n                <Form.Item\n                    label=\"分数\"\n                    name=\"score\"\n                    rules={[\n                        { required: true, message: '请输入分数!' },\n                    ]}\n                >\n                    <InputNumber/>\n                </Form.Item>\n                <Form.Item\n                    label=\"答案\"\n                    name=\"answer\"\n                    rules={[\n                        { required: true, message: '请输入答案!' },\n                    ]}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    label=\"答案分析\"\n                    name=\"answerAnalyse\"\n                    rules={[\n                        { required: true, message: '请输入答案分析!' },\n                    ]}\n                >\n                    <TextArea/>\n                </Form.Item>\n            </Form>\n        </div>\n    })\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"就是根据 curQuesitonId 从 json 中找到对应的数据，用 Form 来回显"}),"\n",(0,s.jsx)(e.p,{children:"当 onValuesChange 的时候，设置回 json"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:l,alt:"2024-08-26 22.57.40.gif"})}),"\n",(0,s.jsx)(e.p,{children:"切换选中的问题的时候，有的表单值没变。"}),"\n",(0,s.jsx)(e.p,{children:"因为我们设置的是 initialValues，它只影响初始值。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const [form] = useForm();\n\nuseEffect(() => {\n    form.setFieldsValue(json.filter(item => item.id === curQuestionId)[0])\n}, [curQuestionId]);\n"})}),"\n",(0,s.jsx)(e.p,{children:"做下同步就好了。"}),"\n",(0,s.jsx)(e.p,{children:"试一下："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:d,alt:"2024-08-26 23.01.49.gif"})}),"\n",(0,s.jsx)(e.p,{children:"没啥问题。"}),"\n",(0,s.jsxs)(e.p,{children:["然后再试下编辑：\n",(0,s.jsx)("img",{src:c,alt:"2024-08-26 23.02.39.gif"})]}),"\n",(0,s.jsx)(e.p,{children:"可以看到，选中的问题，会回显在表单，编辑后会同步修改对应 json。"}),"\n",(0,s.jsx)(e.p,{children:"我们再加一个 antd 的 Segmented 组件来做 Tab"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const [key, setKey] = useState<string>('json');\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"<Segmented value={key} onChange={setKey} block options={['json', '属性']} />\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:r,alt:"2024-08-26 23.08.21.gif"})}),"\n",(0,s.jsx)(e.p,{children:"有了 tab 之后好看多了。"}),"\n",(0,s.jsx)(e.p,{children:"这样，试卷编辑功能就完成了。"}),"\n",(0,s.jsx)(e.p,{children:"案例代码在小册仓库："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exam-system-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,s.jsxs)(e.h2,{id:"总结",children:["总结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"这节我们实现了试卷编辑器的功能。"}),"\n",(0,s.jsx)(e.p,{children:"左边是物料区，中间是画布区，右边是属性编辑区。"}),"\n",(0,s.jsx)(e.p,{children:"中间画布区就是渲染 json。"}),"\n",(0,s.jsx)(e.p,{children:"用 react-dnd 实现了拖拽，拖拽物料到中间的画布区，会在 json 中增加一条。"}),"\n",(0,s.jsx)(e.p,{children:"然后点击问题的时候会高亮，并且在右边展示编辑的表单。"}),"\n",(0,s.jsx)(e.p,{children:"编辑的时候会同步修改 json，中间画布区也会重新渲染。"}),"\n",(0,s.jsx)(e.p,{children:"当然，现在的 json 还没有保存，下节我们把它保存到数据库。"})]})}function Q(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(q,{...n})}):q(n)}let P=Q;Q.__RSPRESS_PAGE_META={},Q.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F164.%20%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F%EF%BC%9A%E8%AF%95%E5%8D%B7%E7%BC%96%E8%BE%91%E5%99%A8.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"164. 考试系统：试卷编辑器",headingTitle:"164. 考试系统：试卷编辑器",frontmatter:{}}}}]);