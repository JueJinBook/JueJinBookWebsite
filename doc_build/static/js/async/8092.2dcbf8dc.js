"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["8092"],{913905:function(e,n,s){e.exports=s.p+"static/image/add7e891bfed6836d86af9a228475786.90e6c8b0.webp"},181812:function(e,n,s){e.exports=s.p+"static/image/be3aa52666c1c9d5aacecd028771533d.9fa14ea2.webp"},993752:function(e,n,s){e.exports=s.p+"static/image/e78eb481977706babe9f90311ae0a57b.e4225f9c.webp"},718060:function(e,n,s){e.exports=s.p+"static/image/ecb696093971c6b3148bdd1c09f71f96.b46dd982.webp"},904001:function(e,n,s){s.r(n),s.d(n,{default:()=>g});var c=s(552676),r=s(740453),i=s(913905),p=s(718060),d=s(181812),a=s(993752);let t=s.p+"static/image/0ad8b973e480d0202fe86078a056271b.ae7045a2.webp",o=s.p+"static/image/0f50699a883e0738c46ecff0fd1998b2.7b0f3635.webp",l=s.p+"static/image/d063aab71e549090ec5acdafcc613a05.cfe2a3ee.webp",j=s.p+"static/image/c4dbec0978e8250df91204869297f63e.cf69f67c.webp";function h(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",strong:"strong"},(0,r.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"1如何阅读本小册",children:["1.如何阅读本小册？",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1如何阅读本小册",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"众所周知，阅读源码是前端进阶的一种方式，但很多同学不会使用调试工具，不知道该怎么高效的阅读源码。市面上也没有课程专门讲调试的，而这门课程就是弥补这个领域的空白。"}),"\n",(0,c.jsx)(n.p,{children:"我们会学习网页、Node.js 的调试，还会学习调试工具的实现原理。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsxs)(n.p,{children:["课程主要分为四部分内容：",(0,c.jsx)(n.strong,{children:"用 VSCode Debugger 调试网页的 JS、用 VSCode Debugger 调试 Node.js、用 Chrome DevTools 调试网页、调试工具的原理。"})]}),"\n",(0,c.jsx)(n.p,{children:"首先，我们会学习如何用 VSCode Debugger 调试网页，以 React 项目为例，然后我们会过一遍 VSCode Chrome Debugger 的配置，之后再调试下 Vue 项目。"}),"\n",(0,c.jsx)(n.p,{children:"这个过程中会用到 sourcemap，所以接下来会讲 sourcemap 的原理和作用，webpack 的 sourcemap 配置，然后再用这些知识来调试 React、Vue 源码。"}),"\n",(0,c.jsx)(n.p,{children:"调试完 Vue、React 项目和 Vue、React 源码之后，相信任何网页的 JS 你都会调试了。"}),"\n",(0,c.jsx)(n.p,{children:"因为调试配置创建比较麻烦，接下来会讲用 VSCode Snippets 简化它的创建。"}),"\n",(0,c.jsx)(n.p,{children:"之后会进入 Node.js 的调试部分，我们会学习如何用 VSCode Debugger 调试 Node.js 代码，如何调试 npm scripts，然后过一遍 VSCode Node Debugger 的各种配置。"}),"\n",(0,c.jsx)(n.p,{children:"接下来会讲命令行工具的两种调试方式，然后再调试下 ESLint、Babel、TypeScript 的源码，Nest.js 源码。"}),"\n",(0,c.jsx)(n.p,{children:"经过这些实战案例之后，相信你对调试各种 Node.js 的代码也得心应手了。"}),"\n",(0,c.jsx)(n.p,{children:"然后我们再来学习 Chrome DevTools："}),"\n",(0,c.jsx)(n.p,{children:"我们会学习 Chrome DevTools 的 7 种打断点的方式、用 Performance 工具分析和优化网页性能、用 LightHouse 工具检测页面性能、用 Memory 工具分析内存问题、用 Layers 工具进行图层分析等。"}),"\n",(0,c.jsx)(n.p,{children:"相信学完这些之后，你会对每天都用的 Chrome DevTools 有一个更全面和深入的掌握。"}),"\n",(0,c.jsx)(n.p,{children:"之后会讲如何调试移动端网页，包括安卓和 ios 的网页。因为网页调试离不开代理，所以我们还会学习 Charles 的使用。"}),"\n",(0,c.jsx)(n.p,{children:"学完这些之后，相信你对网页、Node.js 的调试都已经挺熟悉的了。"}),"\n",(0,c.jsx)(n.p,{children:"接下来我们深入下调试工具的原理，我们讲解 Chrome DevTools 的实现原理，包括 CDP 协议，puppeteer 也是基于这个实现的，我们会实现 mini puppeteer 来深入理解 CDP。"}),"\n",(0,c.jsx)(n.p,{children:"学完各种调试工具的实现原理之后，相信你用各种调试工具的时候都会更加得心应手，而且如果需要自研调试工具的话，你也会有思路。"}),"\n",(0,c.jsx)(n.p,{children:"到了这里，调试也算学的差不多了，最后会做一个总结，然后结束本门课程。"}),"\n",(0,c.jsx)(n.p,{children:"课程中涉及到 Vue、React、Nest.js、ESLint、TypeScript 等源码的调试，如果你对某些库的源码感兴趣，也可以评论区告诉我，我会把它的源码调试方式加到课程里。"}),"\n",(0,c.jsx)(n.p,{children:"希望这门课能帮助大家“通关” 各种调试工具，全面提升调试能力，各种源码的调试对你来说都不再是难题。"}),"\n",(0,c.jsx)(n.p,{children:"那么，当一个前端开发会了调试，可以有多爽呢？"}),"\n",(0,c.jsx)(n.p,{children:"别人开发 React 组件，想查看 props 的详情，会靠 console.log 和 props 类型定义。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？靠调试。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"别人开发 Vue 组件，用到了 event 的某个值，需要 console.log 打印下看看，然后再写代码。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？靠调试。边调试边写代码。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"别人用到了 node 的某个库，不知道有啥 api，要去查文档，或者靠库的类型定义。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？靠调试。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"别人想看 Vue、React 源码，调试的都是打包后的代码，比如 react-dom.development.js。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？直接调试 Vue 和 React 最初的源码。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:a,alt:""})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:d,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"别人会用 console.log 打印日志，调试完要删掉。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？用 Logpoint，加了日志的打印也不用改源码。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"别人对 Event Loop的理解只停留在概念层面。"}),"\n",(0,c.jsx)(n.p,{children:"你呢？可以通过 Performance 分析真实的 Event Loop、网页运行的全流程。"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)("img",{src:i,alt:""})}),"\n",(0,c.jsx)(n.p,{children:"更多会调试的好处，可以自行体会。"})]})}function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}let g=x;x.__RSPRESS_PAGE_META={},x.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F1.%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%9C%AC%E5%B0%8F%E5%86%8C%EF%BC%9F.md"]={toc:[],title:"1.如何阅读本小册？",headingTitle:"1.如何阅读本小册？",frontmatter:{}}}}]);