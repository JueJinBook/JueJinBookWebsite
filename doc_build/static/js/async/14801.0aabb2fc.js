"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["14801"],{446754:function(e,n,c){e.exports=c.p+"static/image/0cd776b292842eec695a49eb89e153a7.3ab709b6.webp"},69514:function(e,n,c){e.exports=c.p+"static/image/0e89628b8c885dc5925221d9aa5407e6.90793e92.webp"},629442:function(e,n,c){e.exports=c.p+"static/image/1b92f412ed6e80210bc2da259240b827.623ae844.webp"},344137:function(e,n,c){e.exports=c.p+"static/image/38ede77b408a09c74131a536d20037ea.7672670a.webp"},574641:function(e,n,c){e.exports=c.p+"static/image/40da35a65cfc9b458c335c68925bcc30.26ac21e4.webp"},611133:function(e,n,c){e.exports=c.p+"static/image/64cce92c0a81e0960b84f34ff86c9d6b.1dd37a03.webp"},591870:function(e,n,c){e.exports=c.p+"static/image/6b5421308cfaeecc10c00e68983f36ad.f92c11b7.gif"},37365:function(e,n,c){e.exports=c.p+"static/image/718e75d8d5341f49ac84223eb50fcb0f.b13c05e5.webp"},910546:function(e,n,c){e.exports=c.p+"static/image/8543e871a1871851d09d111e34fb9e4f.47afd4d6.webp"},769713:function(e,n,c){e.exports=c.p+"static/image/9988b0927c19470b2c1d0b8fa8214084.674bcf6a.webp"},725468:function(e,n,c){e.exports=c.p+"static/image/9bc94fa75e089e81f9b30da6437d16cf.1522dd10.webp"},871992:function(e,n,c){e.exports=c.p+"static/image/a09f1a71ca79faeb13093475b49eb4d6.1df6de73.gif"},941339:function(e,n,c){e.exports=c.p+"static/image/ab0cf8defeafff707d0ca5e2d064d345.bcb8e18c.gif"},972074:function(e,n,c){e.exports=c.p+"static/image/b3174263375bc3e11dbd19a10b16a81b.9a38baf1.webp"},353154:function(e,n,c){e.exports=c.p+"static/image/cc4663c684c25a53c31d7fbff877f60b.85daa3eb.gif"},785520:function(e,n,c){e.exports=c.p+"static/image/cd247dc4e396f89fd7d98839c0ee0c4c.bcce2a82.webp"},77971:function(e,n,c){e.exports=c.p+"static/image/e2f2269fc1f4b1c373bd1d3bebc8d261.377f3a2a.webp"},965682:function(e,n,c){e.exports=c.p+"static/image/ed1b80dbfb1870b08f62edefe04074ad.fee3355d.gif"},452890:function(e,n,c){e.exports=c.p+"static/image/ff87b7949aabccd35884fb4c17b61ba2.35f1f732.webp"},443848:function(e,n,c){c.r(n),c.d(n,{default:()=>q});var s=c(552676),i=c(740453),a=c(871992),p=c(452890),r=c(344137),d=c(353154);let t=c.p+"static/image/2adfd1a613d8e4b6e06cae1afcf33fc3.ced8d974.webp";var x=c(591870),l=c(941339),j=c(769713);let b=c.p+"static/image/3e7c10a28a2a290435d7781d9c726d7d.3b6faf74.webp",h=c.p+"static/image/940cb93b9253a4384bbcd16a27ff6881.598adcf4.webp",f=c.p+"static/image/3864744f3452623a8ecbd70bd6709ca3.3b6b3b12.webp";var g=c(69514),m=c(785520),o=c(77971),u=c(629442),w=c(972074),E=c(446754),B=c(965682),_=c(725468),A=c(611133),v=c(910546),S=c(37365),k=c(574641);let y=c.p+"static/image/aea9a88ab750532ce21dc9af2b8be1de.84a29b5f.webp",C=c.p+"static/image/b304e8c710796c48c423f85c59579135.684ee937.webp",R=c.p+"static/image/f97312cc432e9d96ef6ce39016686a2d.7e0fc4bf.webp",F=c.p+"static/image/d9e67658d9bb01c503d088310656a2c7.af6a556d.webp",N=c.p+"static/image/4f47faea6cf5f6db52f181500e723e69.4e8fb390.webp",O=c.p+"static/image/b9d0a14cd3252b7b5fc9319ec2156185.541270fd.webp";function P(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"171-考试系统项目总结",children:["171. 考试系统：项目总结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#171-考试系统项目总结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"学完了微服务和 monorepo 后，我们做了这个考试系统项目。"}),"\n",(0,s.jsx)(n.p,{children:"整体是模仿问卷星的流程，从创建考试、考试编辑器、答卷、自动判分、到排行榜等，流程比较完整。"}),"\n",(0,s.jsx)(n.p,{children:"我们通过 monorepo 的方式组织项目："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:O,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"4 个微服务都是 apps 下的单独目录。"}),"\n",(0,s.jsx)(n.p,{children:"然后公共模块放在 libs 下，通过 @app/xxx 在项目里引入。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:N,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"每个微服务都是独立跑的："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm run start:dev user\nnpm run start:dev exam\nnpm run start:dev answer\nnpm run start:dev analyse\n"})}),"\n",(0,s.jsx)(n.p,{children:"之间通过 tcp 来实现通信："}),"\n",(0,s.jsx)(n.p,{children:"比如 answer 微服务调用 exam 微服务："}),"\n",(0,s.jsx)(n.p,{children:"在 exam 微服务暴露 tcp 端口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:F,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"answer 微服务连接上它："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:R,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"在 exam 写一个消息处理函数："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"在 answer 里调用它："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:k,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"但这个项目的多个模块比较独立，最终也没用到 tcp 通信。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:S,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"同样，rabbitmq 的异步通信也没用到。"}),"\n",(0,s.jsx)(n.p,{children:"实际上大多数 node 项目我觉得都没必要用微服务架构，拆分会带来通信的复杂度，不如单体架构简单。"}),"\n",(0,s.jsx)(n.p,{children:"回顾下我们做这个项目的整个过程："}),"\n",(0,s.jsx)(n.p,{children:"首先我们做了需求分析，分析了下有哪些功能："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"直接用的问卷星的页面作为原型图："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:_,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:w,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:""})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"这一步主要是明确做什么。"}),"\n",(0,s.jsx)(n.p,{children:"然后我们设计了下技术方案，做了技术选型："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:""})}),"\n",(0,s.jsx)(n.p,{children:"当然，因为微服务之间比较独立，最终没用到微服务之间的同步（基于 tcp）和异步（基于消息队列）通信。"}),"\n",(0,s.jsx)(n.p,{children:"数据库设计："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"分析了下接口："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"接下来进入开发："}),"\n",(0,s.jsx)(n.p,{children:"首先实现了 monorepo 架构："}),"\n",(0,s.jsx)(n.p,{children:"创建了 user、exam、answer、analyse 这 4 个 app，还有 redis 这个公共 lib。"}),"\n",(0,s.jsx)(n.p,{children:"4 个微服务都单独暴露 http 接口在不同端口，之间还可以通过 TCP 来做通信。"}),"\n",(0,s.jsx)(n.p,{children:"libs 下的模块可以在每个 app 里引入，可以放一些公共代码。"}),"\n",(0,s.jsx)(n.p,{children:"然后实现了用户微服务的登录、注册、修改密码的功能。"}),"\n",(0,s.jsx)(n.p,{children:"过程中又创建了 prisma、email 的 lib。"}),"\n",(0,s.jsx)(n.p,{children:"通过 prisma 的 migrate 功能，生成迁移 sql 并同步到数据库。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"之前用 TypeORM 也要做数据库迁移，不过需要自己准备这些 sql："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"从数据库迁移方面来说，prisma 确实方便很多。"}),"\n",(0,s.jsx)(n.p,{children:"然后实现了考试微服务的接口，包括考试列表、考试创建、考试删除、发布考试、保存试卷内容的接口。"}),"\n",(0,s.jsx)(n.p,{children:"具体的试卷内容是用 JSON 存储的。"}),"\n",(0,s.jsx)(n.p,{children:"我们做了一个简单的低代码编辑器："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"2024-08-27 20.33.03.gif"})}),"\n",(0,s.jsx)(n.p,{children:"可以拖拽题型到画布区，然后在右侧编辑："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:"2024-08-26 23.08.21.gif"})}),"\n",(0,s.jsx)(n.p,{children:"每个题目都设置分值、答案、答案解析"}),"\n",(0,s.jsx)(n.p,{children:"最终生成一个 json，把这个 json 保存到数据库。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"其实一般的低代码编辑器都是编辑器拖拽，服务端存 JSON。"}),"\n",(0,s.jsx)(n.p,{children:"之后实现了这答卷微服务，包括创建答卷、答卷列表、答卷详情接口，导出答卷列表 excel 等接口。"}),"\n",(0,s.jsx)(n.p,{children:"然后实现了答题页面："}),"\n",(0,s.jsx)(n.p,{children:"编辑完考试可以生成链接，打开链接答题后就会保存提交的答案。"}),"\n",(0,s.jsx)(n.p,{children:"渲染试卷 json 的逻辑和预览时一样。"}),"\n",(0,s.jsx)(n.p,{children:"表单 onChange 的时候修改 answers 状态，当点击提交的时候调用接口保存答卷。"}),"\n",(0,s.jsx)(n.p,{children:"这样从新建考试，编辑试卷，到答题提交答案的流程就完成了。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:"2024-08-27 20.37.29.gif"})}),"\n",(0,s.jsx)(n.p,{children:"答题结果也是用 json 保存的。"}),"\n",(0,s.jsx)(n.p,{children:"格式是这样："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"[\n    {\n        id: 1,\n        answer: 'xxx'\n    },\n    {\n        id: 2,\n        answer: 'yyy'\n    }\n]\n"})}),"\n",(0,s.jsx)(n.p,{children:"我们通过和试卷 json 的答案对比，实现了分数的计算："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:r,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"之后又实现了排行榜。"}),"\n",(0,s.jsx)(n.p,{children:"排行榜的功能基于 redis 的 zset 实现，用 zadd 往其中添加元素，用 zrang 取排好序的前多少个元素，加上 REV 就是按照分数从大到小排序。"}),"\n",(0,s.jsx)(n.p,{children:"然后加了一个弹窗来展示排行榜。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:"2024-08-27 20.02.19.gif"})}),"\n",(0,s.jsx)(n.p,{children:"这样，整个流程的功能就开发完了。"}),"\n",(0,s.jsx)(n.p,{children:"这个项目主要是熟悉了 monorepo 的架构，并且知道了低代码编辑器的存储方案。"}),"\n",(0,s.jsx)(n.p,{children:"如果你要开发微服务项目，也是基于这种 monorepo 的项目结构来开发。"}),"\n",(0,s.jsx)(n.p,{children:"整个项目流程都是对标问卷星来的，虽然有些简化，但功能是一样的。"}),"\n",(0,s.jsx)(n.p,{children:"不过这个项目比较简单，没用到微服务之间的通信。"}),"\n",(0,s.jsx)(n.p,{children:"实际上，单体架构的 node 项目占绝大多数，一般没必要用微服务的方式写，只会增加项目的复杂度。"})]})}function T(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}let q=T;T.__RSPRESS_PAGE_META={},T.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F171.%20%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93.md"]={toc:[],title:"171. 考试系统：项目总结",headingTitle:"171. 考试系统：项目总结",frontmatter:{}}}}]);