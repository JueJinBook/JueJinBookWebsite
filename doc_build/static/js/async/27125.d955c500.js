"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["27125"],{950065:function(e,c,d){d.r(c),d.d(c,{default:()=>m});var r=d(552676),s=d(740453);let n=d.p+"static/image/c712633df43c0376c28b0440f2d10ed0.c5bcf584.webp",i=d.p+"static/image/ed30392afaab0642092d9ac880274692.b72760b0.webp",h=d.p+"static/image/2dfff81ca4da0e920caa56b975ede1d1.77847016.webp",l=d.p+"static/image/4089f0697251e1fb4d815e074ea4b9b7.10826fa8.webp",o=d.p+"static/image/83989a396f77a792d1e2b5520f438592.a857e9de.webp",a=d.p+"static/image/6745d34867e1f509072fe87a8b07b88b.0a3d01a4.webp",x=d.p+"static/image/1e0ceba92497012afcfac9303ee97376.b39ddd33.webp",j=d.p+"static/image/d077da536e820a829fa60e007739d994.87f60d54.webp",t=d.p+"static/image/9f27b5e3b4da07b08fd74a3f808b3752.8a30d323.webp";function p(e){let c=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",strong:"strong",img:"img",ul:"ul",li:"li"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(c.h1,{id:"16drawer-篇---drawer-常识",children:["16.Drawer 篇 - Drawer 常识",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#16drawer-篇---drawer-常识",children:"#"})]}),"\n",(0,r.jsxs)(c.h2,{id:"前言",children:["前言",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["说到 ",(0,r.jsx)(c.code,{children:"Drawer"})," 大部分的朋友可能都很陌生，那 ",(0,r.jsx)(c.code,{children:"Drawer"})," 是个什么东西？\n",(0,r.jsx)(c.code,{children:"Chrome DevTools"})," 有很多部分，被分为9个 ",(0,r.jsx)(c.code,{children:"tab"})," (俗称选项卡) ( ",(0,r.jsx)(c.code,{children:"Elements"})," ， ",(0,r.jsx)(c.code,{children:"Console"})," ， ",(0,r.jsx)(c.code,{children:"Sources"})," ， ",(0,r.jsx)(c.code,{children:"Network"})," ， 等等...)"]}),"\n",(0,r.jsxs)(c.p,{children:["但是，那仅仅是它的一部分而已！有一组平行的选项卡，被隐藏在主窗口之下。这个组合被称为 ",(0,r.jsx)(c.strong,{children:(0,r.jsx)(c.code,{children:"Drawer"})})]}),"\n",(0,r.jsxs)(c.h2,{id:"1-如何打开-drawer-",children:["1. 如何打开 ",(0,r.jsx)(c.code,{children:"Drawer"})," ?",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#1-如何打开-drawer-",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["当你在 ",(0,r.jsx)(c.code,{children:"DevTools"}),"（任何选项卡）中时，按 ",(0,r.jsx)(c.code,{children:"[esc]"})," 来显示它，再次按 ",(0,r.jsx)(c.code,{children:"[esc]"})," 隐藏它："]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsxs)(c.p,{children:["默认情况下，您会看到一个 ",(0,r.jsx)(c.code,{children:"console"})," 选项卡。 与主面板的 ",(0,r.jsx)(c.code,{children:"console"})," 完全相同。 这就是为什么主面板会显示除了 ",(0,r.jsx)(c.code,{children:"console"})," 之外的每个主要标签（ ",(0,r.jsx)(c.code,{children:"Elements"})," ，",(0,r.jsx)(c.code,{children:"Sources"})," ，",(0,r.jsx)(c.code,{children:"Network"})," ...）- 因为在主面板中显示 ",(0,r.jsx)(c.code,{children:"console"})," 没有意义。"]}),"\n",(0,r.jsxs)(c.p,{children:["这样的 ",(0,r.jsx)(c.code,{children:"console"})," 很方便，例如在 ",(0,r.jsx)(c.code,{children:"Elements"})," 选项卡打开时，我们同时可以看到 ",(0,r.jsx)(c.code,{children:"console"})," 面板。但是在 ",(0,r.jsx)(c.code,{children:"Drawer"})," 中其实还隐藏了更多细节。"]}),"\n",(0,r.jsxs)(c.h2,{id:"2-drawer-里面到底有什么",children:["2. ",(0,r.jsx)(c.code,{children:"Drawer"})," 里面到底有什么？",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#2-drawer-里面到底有什么",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:[(0,r.jsx)(c.code,{children:"Drawer"})," 里隐藏着许多其他功能，大多数时候你可能不需要用到它们，这也是它们为什么被隐藏起来的原因，然鹅，你可以直接选择你想展示在这里的功能。"]}),"\n",(0,r.jsxs)(c.p,{children:["点击主页面在 ",(0,r.jsx)(c.code,{children:"Drawer"}),"的 ",(0,r.jsx)(c.code,{children:"console"})," 面板前面的 ",(0,r.jsx)(c.code,{children:"⋮"})," 图标来打开完整选项列表。另外，你也可以打开之前我们提到的 ",(0,r.jsx)(c.code,{children:"command Menu"})," ，然后输入 ",(0,r.jsx)(c.code,{children:"Drawer"})," 来打开"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(c.p,{children:"Okay，让我们再看一遍所有的选项："}),"\n",(0,r.jsxs)(c.ul,{children:["\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Animations"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Changes"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Console"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Coverage"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Network conditions"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Performance monitor"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Quick source"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Remote devices"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Rendering"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Request blocking"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Search"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"Sensors"})}),"\n",(0,r.jsx)(c.li,{children:(0,r.jsx)(c.code,{children:"What’s new"})}),"\n"]}),"\n",(0,r.jsxs)(c.h2,{id:"3-控制传感器",children:["3. 控制传感器",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#3-控制传感器",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["如果你正在你的应用中使用一些获取位置信息的 ",(0,r.jsx)(c.code,{children:"API"})," 而且想要测试一下它，总不能开着车环绕世界吧，(其实也不是不行\uD83D\uDE09)。"]}),"\n",(0,r.jsxs)(c.p,{children:[(0,r.jsx)(c.code,{children:"Drawer"})," 里的 ",(0,r.jsx)(c.code,{children:"Sensors(传感器)"})," 面板可以让你模拟特定的位置: 支持从预定义的位置中进行选择，添加自己的位置，或者手动键入纬度/经度。选定的值将被 ",(0,r.jsx)(c.code,{children:"navigator.geolocation.watchPosition"}),"（或 ",(0,r.jsx)(c.code,{children:".getCurrentPosition"})," ）报告。"]}),"\n",(0,r.jsxs)(c.p,{children:["如果你的 ",(0,r.jsx)(c.code,{children:"App"})," 使用加速计，传感器面板也可以模拟你设备在3D空间中的位置！"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsxs)(c.h2,{id:"4-模拟网络状态",children:["4 .模拟网络状态",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#4-模拟网络状态",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["就像伪造你的位置一样，你可以使用 ",(0,r.jsx)(c.code,{children:"Drawer"})," 里的 ",(0,r.jsx)(c.code,{children:"Network conditions"})," 面板模拟特定的网络行为：模拟互联网为典型的3G网络甚至离线！ 这通常用来了解页面资源的大小。或者测试应用的离线功能。\n除此之外，",(0,r.jsx)(c.code,{children:"Network conditions"})," 面板还可以模拟特定的用户代理。"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsxs)(c.h2,{id:"5拿到-source",children:["5.拿到 ",(0,r.jsx)(c.code,{children:"source"}),(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#5拿到-source",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["与 ",(0,r.jsx)(c.code,{children:"drawer console"})," 一样，当我要专注于 ",(0,r.jsx)(c.code,{children:"Elements"})," 面板时，有时我也想看源代码，这时就可以在 ",(0,r.jsx)(c.code,{children:"drawer"})," 中选择显示 ",(0,r.jsx)(c.code,{children:"Source"}),"。"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsxs)(c.p,{children:["如你所见，或许没有 ",(0,r.jsx)(c.code,{children:"“主”Source"})," 面板的花里胡哨的功能，没有 ",(0,r.jsx)(c.code,{children:"call stack"})," 或者 ",(0,r.jsx)(c.code,{children:"control"})," ( ",(0,r.jsx)(c.code,{children:"pause"}),"， ",(0,r.jsx)(c.code,{children:"step over"}),"， 等等)按钮。而且如果断点被触发，它也不会显示在 ",(0,r.jsx)(c.code,{children:"drawer"})," 的 ",(0,r.jsx)(c.code,{children:"Quick sources"})," 中，而是显示在主 ",(0,r.jsx)(c.code,{children:"Source"})," 中。"]}),"\n",(0,r.jsxs)(c.p,{children:["但是对于 ",(0,r.jsx)(c.code,{children:"快速查看代码"})," ，或者 ",(0,r.jsx)(c.code,{children:"设置断点"})," 来说，它却是非常有用的技巧。"]}),"\n",(0,r.jsxs)(c.h2,{id:"6-检查代码-coverage",children:["6. 检查代码 coverage",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#6-检查代码-coverage",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["实际开发中，你的页面可能并不需要位于尾部的许多代码。也许那是来自外部库的一大块 ",(0,r.jsx)(c.code,{children:"JavaScript"})," ，也许是被遗忘的选择器上的一些 ",(0,r.jsx)(c.code,{children:"CSS"})," 规则，它们不再匹配任何东西。"]}),"\n",(0,r.jsxs)(c.p,{children:["使用 ",(0,r.jsx)(c.code,{children:"coverage"})," 面板来获得关于冗余代码的摘要-细节信息。使用 ",(0,r.jsx)(c.code,{children:"Drawer"})," 菜单或者 ",(0,r.jsx)(c.code,{children:"Command"})," 菜单来打开它。"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsxs)(c.p,{children:[(0,r.jsx)(c.code,{children:"DevTools"})," 的 ",(0,r.jsx)(c.code,{children:"coverage"})," 工具可以跟踪当前加载的 ",(0,r.jsx)(c.code,{children:"JS"})," 和 ",(0,r.jsx)(c.code,{children:"CSS"})," 文件的 ",(0,r.jsx)(c.code,{children:"哪些行正在被执行"})," ，并显示 ",(0,r.jsx)(c.code,{children:"未使用字节的百分比"})," 。"]}),"\n",(0,r.jsxs)(c.p,{children:["它用 ",(0,r.jsx)(c.code,{children:"绿色"})," 的线条标记 ",(0,r.jsx)(c.code,{children:"运行"})," 和用 ",(0,r.jsx)(c.code,{children:"红色"})," 的线条标记 ",(0,r.jsx)(c.code,{children:"未运行"})," 。 举个例子："]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsxs)(c.h2,{id:"7-检查你修改的内容",children:["7. 检查你修改的内容",(0,r.jsx)(c.a,{className:"header-anchor","aria-hidden":"true",href:"#7-检查你修改的内容",children:"#"})]}),"\n",(0,r.jsxs)(c.p,{children:["通过浏览器进行设计和调整 ",(0,r.jsx)(c.code,{children:"css"})," ：能够在代码执行的地方进行调试是方便又有趣的开发方式。 但在某些时候，你可能希望将 ",(0,r.jsx)(c.code,{children:"已更改的内容"})," 与 ",(0,r.jsx)(c.code,{children:"最初加载的样式表"})," 进行比较。"]}),"\n",(0,r.jsxs)(c.p,{children:["为此，可以使用 ",(0,r.jsx)(c.code,{children:"DevTools' Drawer"})," 中的更改工具。"]}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:i,alt:""})}),"\n",(0,r.jsxs)(c.p,{children:["它不仅会使用差异形式的变化（像 ",(0,r.jsx)(c.code,{children:"Git"})," 这样的源控制工具一样）向你展示，同时还可以撤销它们。"]}),"\n",(0,r.jsx)(c.p,{children:"举个例子："}),"\n",(0,r.jsx)(c.p,{children:(0,r.jsx)("img",{src:n,alt:""})})]})}function w(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:c}=Object.assign({},(0,s.ah)(),e.components);return c?(0,r.jsx)(c,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}let m=w;w.__RSPRESS_PAGE_META={},w.__RSPRESS_PAGE_META["%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%20Chrome%20%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%2F16.Drawer%20%E7%AF%87%20-%20Drawer%20%E5%B8%B8%E8%AF%86.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. 如何打开 `Drawer` ?",id:"1-如何打开-drawer-",depth:2},{text:"2. `Drawer` 里面到底有什么？",id:"2-drawer-里面到底有什么",depth:2},{text:"3. 控制传感器",id:"3-控制传感器",depth:2},{text:"4 .模拟网络状态",id:"4-模拟网络状态",depth:2},{text:"5.拿到 `source`",id:"5拿到-source",depth:2},{text:"6. 检查代码 coverage",id:"6-检查代码-coverage",depth:2},{text:"7. 检查你修改的内容",id:"7-检查你修改的内容",depth:2}],title:"16.Drawer 篇 - Drawer 常识",headingTitle:"16.Drawer 篇 - Drawer 常识",frontmatter:{}}}}]);