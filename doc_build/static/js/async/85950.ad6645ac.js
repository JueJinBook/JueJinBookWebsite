"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["85950"],{897722:function(e,n,c){e.exports=c.p+"static/image/13117466ec1d7396cea1e7bd95a8c94e.d9bfb818.webp"},695548:function(e,n,c){e.exports=c.p+"static/image/1a26cd5b5f4e0326d7bb4bd2569998df.b563c0e4.gif"},935426:function(e,n,c){e.exports=c.p+"static/image/2aeb4b19f62d75477631101f34ccab95.f8b03cdb.gif"},881401:function(e,n,c){e.exports=c.p+"static/image/36d4f83f3ea330ee7f22510dfa4440b6.ac6be696.gif"},876412:function(e,n,c){e.exports=c.p+"static/image/4d036db83f45daab106154a99e746408.b2a01674.gif"},235360:function(e,n,c){e.exports=c.p+"static/image/833523d80ddd17f9d9f387e911203cdb.0c323704.gif"},371889:function(e,n,c){e.exports=c.p+"static/image/8656e8715d6d534f6ad43ba76b9d5a9c.e3be700f.gif"},697293:function(e,n,c){e.exports=c.p+"static/image/8d5f4ea116ea5ff91c3f0e55be9e3872.89524197.webp"},769713:function(e,n,c){e.exports=c.p+"static/image/9988b0927c19470b2c1d0b8fa8214084.674bcf6a.webp"},105337:function(e,n,c){e.exports=c.p+"static/image/a68a6e6c431a8cb9d00259eb58e43c22.402afaf5.gif"},904239:function(e,n,c){e.exports=c.p+"static/image/bf430287bf0219cd9131c2dbab2659cf.23b76ced.webp"},396121:function(e,n,c){e.exports=c.p+"static/image/dca5fbd108fcf552578e12facd64df58.37426c9a.webp"},86664:function(e,n,c){e.exports=c.p+"static/image/deaf71bb7ed34ac0e940a5f0d0966ca3.41480f9d.gif"},184966:function(e,n,c){e.exports=c.p+"static/image/eec21518e88a76c1b65168e887668dc6.ca166626.gif"},634829:function(e,n,c){e.exports=c.p+"static/image/fa66424807fc75a6adea9d3ac8f17d74.4f821940.gif"},893136:function(e,n,c){c.r(n),c.d(n,{default:()=>N});var i=c(552676),s=c(740453);let d=c.p+"static/image/fc1a4690ca76350306abe2b1f3af5451.1a6ea97b.webp",r=c.p+"static/image/e6505e3774cb1f6277e27abfdcd42767.eaa0e305.webp",t=c.p+"static/image/d5f88fbdd1c4ef4f8731fb4c49631265.604710d9.webp",a=c.p+"static/image/ca253659dfefabc92808b80b251103cb.b6c9c429.webp";var p=c(86664),l=c(695548),j=c(371889),x=c(935426),h=c(235360),f=c(184966),b=c(634829),g=c(769713);let m=c.p+"static/image/ba282d026c53e6f80e56bb381c29c825.fe2f2dbd.webp",o=c.p+"static/image/a326c22c46df9ff44ff7d434e255a299.1dece757.webp";var u=c(904239),k=c(697293),E=c(897722);let w=c.p+"static/image/418293689fee5e439a9984acce90430c.031169ab.webp",A=c.p+"static/image/ba5e4abce1c9ef26dd856beaf9e742a7.272fdbeb.webp";var _=c(105337),I=c(876412),S=c(881401);let B=c.p+"static/image/4f1173f1eef9876cb5d047f055e9e4c5.17545b65.webp",T=c.p+"static/image/941bcb11607cba533b6294a5475b2c92.a66b10c2.webp",y=c.p+"static/image/6c28449bdc703e146fca88c81d4aaf19.d888f3b2.webp";var q=c(396121);let v=c.p+"static/image/0d28eb783a0fe90ef9c3053084eb9cdb.5e042101.webp",R=c.p+"static/image/c49c01568807649b125ee45596a6b379.97e28f59.webp",W=c.p+"static/image/8471aa58400e25980730df041970ed09.e901b237.webp";function D(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"194-聊天室项目总结",children:["194. 聊天室：项目总结",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#194-聊天室项目总结",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"学完了 WebSocket 后，我们做了这个聊天室项目。"}),"\n",(0,i.jsx)(n.p,{children:"用户登录之后可以添加别的用户为好友。"}),"\n",(0,i.jsx)(n.p,{children:"发送好友申请后，对方同意之后就会出现在好友列表，然后就可以聊天了。"}),"\n",(0,i.jsx)(n.p,{children:"可以创建群聊，添加别的用户进入群聊。"}),"\n",(0,i.jsx)(n.p,{children:"群聊里可以多人聊天。"}),"\n",(0,i.jsx)(n.p,{children:"聊天记录做了服务端的存储，并且可以收藏聊天记录。"}),"\n",(0,i.jsx)(n.p,{children:"整个项目是围绕 WebSocket 来的，用的 socket.io 的包。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:W,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"socket.io 支持把 socket 加入 room，房间内可以广播通信。"}),"\n",(0,i.jsx)(n.p,{children:"这样一对一聊天、群聊只是房间内人数的不同。"}),"\n",(0,i.jsx)(n.p,{children:"我们围绕这个聊天过程，做了一系列数据库的设计"}),"\n",(0,i.jsx)(n.p,{children:"首先，房间名存储的是 id"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:A,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"我们创建了一个 chatroom 表来存储聊天室的信息。"}),"\n",(0,i.jsx)(n.p,{children:"这样你可以根据 id 查出这个聊天室的名字、是一对一聊天还是群聊等："}),"\n",(0,i.jsxs)(n.table,{children:["\n",(0,i.jsxs)(n.thead,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.th,{children:"字段名"}),"\n",(0,i.jsx)(n.th,{children:"数据类型"}),"\n",(0,i.jsx)(n.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.tbody,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"id"}),"\n",(0,i.jsx)(n.td,{children:"INT"}),"\n",(0,i.jsx)(n.td,{children:"聊天室ID"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"name"}),"\n",(0,i.jsx)(n.td,{children:"VARCHAR(50)"}),"\n",(0,i.jsx)(n.td,{children:"群聊名"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"type"}),"\n",(0,i.jsx)(n.td,{children:"BOOLEAN"}),"\n",(0,i.jsx)(n.td,{children:"类型（单聊、群聊）"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"create_time"}),"\n",(0,i.jsx)(n.td,{children:"DATETIME"}),"\n",(0,i.jsx)(n.td,{children:"创建时间"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"update_time"}),"\n",(0,i.jsx)(n.td,{children:"DATETIME"}),"\n",(0,i.jsx)(n.td,{children:"更新时间"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"这个聊天室表和用户表是多对多关联："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:u,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"在中间表里存储了这种关联关系："}),"\n",(0,i.jsx)(n.p,{children:"user_chatroom："}),"\n",(0,i.jsxs)(n.table,{children:["\n",(0,i.jsxs)(n.thead,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.th,{children:"字段名"}),"\n",(0,i.jsx)(n.th,{children:"数据类型"}),"\n",(0,i.jsx)(n.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.tbody,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"user_id"}),"\n",(0,i.jsx)(n.td,{children:"INT"}),"\n",(0,i.jsx)(n.td,{children:"用户ID"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{children:"chatroom_id"}),"\n",(0,i.jsx)(n.td,{children:"INT"}),"\n",(0,i.jsx)(n.td,{children:"聊天室ID"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"那我们就可以查出这个聊天室里有多少人。"}),"\n",(0,i.jsx)(n.p,{children:"反过来也可以查出用户在那些聊天室里。"}),"\n",(0,i.jsx)(n.p,{children:"用户登录之后，和服务端建立 WebSocket 连接的时候就可以根据 userId 查出他所在的聊天室，然后把它加入对应 room。"}),"\n",(0,i.jsx)(n.p,{children:"之后，用户就可以这些房间聊天了。"}),"\n",(0,i.jsx)(n.p,{children:"每条聊天记录都会做保存，存在聊天记录表里："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:R,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"每条聊天记录关联了发送用户、聊天室的信息。"}),"\n",(0,i.jsx)(n.p,{children:"这样用户进入聊天室的时候，就可以关联查出历史聊天记录，并且显示是哪个用户发的。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"收藏表就是记录了哪条用户、收藏了哪条聊天历史。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:q,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"然后用户和用户的好友关系就是多对多关联："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:T,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"但是添加好友关系之间，会发好友申请，放在 friend_request 表里，通过后才会加入好友关系表。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:B,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:S,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:I,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:_,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"你看，通过一个简单的房间的 id，我们就可以关联查出这么多东西："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:A,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"你从聊天室表为起点往左边看："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:w,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"可以关联查出来聊天记录、聊天室成员、成员的好友列表、成员的收藏等。"}),"\n",(0,i.jsx)(n.p,{children:"这就是关系型数据库的魅力，通过外键关联，你可以存储很多的关联的信息。"}),"\n",(0,i.jsx)(n.p,{children:"业务的复杂度一般取决于你关联存储的东西的多少。"}),"\n",(0,i.jsx)(n.p,{children:"所以很多人用表的数量来衡量业务复杂度，有一定的道理。"}),"\n",(0,i.jsx)(n.p,{children:"回顾下我们做这个项目的整个过程："}),"\n",(0,i.jsx)(n.p,{children:"首先我们做了需求分析，分析了下有哪些功能，并画了原型图。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f78413f01d2c43cf82ca2db9daf8ebd9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=944&h=1100&s=126010&e=png&b=ffffff",alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c28534fcdb24af183076bc3d0be4e2d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1406&h=986&s=65437&e=png&b=fefefe",alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:E,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"这一步主要是明确做什么。"}),"\n",(0,i.jsx)(n.p,{children:"最后我们做出来的也是符合这些需求分析和原型图的。"}),"\n",(0,i.jsx)(n.p,{children:"然后我们设计了下技术方案，做了技术选型："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:k,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"数据库设计："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:u,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"分析了下接口："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"接下来进入开发："}),"\n",(0,i.jsx)(n.p,{children:"我们首先创建了 nest 项目，并引入了 prisma 和 redis，实现了注册功能。"}),"\n",(0,i.jsx)(n.p,{children:"通过 prisma 的 migrate 功能，生成迁移 sql 并同步到数据库。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"这样，线上也可以用这些 sql 来初始化数据库。"}),"\n",(0,i.jsx)(n.p,{children:"之前用 TypeORM 也要做数据库迁移，不过需要自己准备这些 sql："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"从数据库迁移方面来说，prisma 确实方便很多。"}),"\n",(0,i.jsx)(n.p,{children:"之后加上了登录鉴权，做了 token 的自动续期，也就是访问接口后在 header 返回新 token，这样比双 token 的方案简单。"}),"\n",(0,i.jsx)(n.p,{children:"然后封装了 @RequireLogin 和 @UserInfo 两个自定义装饰器。"}),"\n",(0,i.jsx)(n.p,{children:"实现了用户密码修改、用户信息修改的功能。"}),"\n",(0,i.jsx)(n.p,{children:"之后进入好友模块的开发，实现了好友列表和添加好友的功能。"}),"\n",(0,i.jsx)(n.p,{children:"好友关系就是用户和用户的多对多关系，需要一个中间表来保存。"}),"\n",(0,i.jsx)(n.p,{children:"好友列表就是根据当前用户 id 查询它的好友关系。"}),"\n",(0,i.jsx)(n.p,{children:"添加好友需要创建一个好友请求，状态为申请中，同意之后改为已同意，然后添加一条好友关系的记录。"}),"\n",(0,i.jsx)(n.p,{children:"删除好友的话就是删除好友关系表中对应的记录。"}),"\n",(0,i.jsx)(n.p,{children:"之后进入页面开发，写了登录、注册、修改密码、修改信息的页面。"}),"\n",(0,i.jsx)(n.p,{children:"因为我们之前写过，所以这里大部分是复制过来的。"}),"\n",(0,i.jsx)(n.p,{children:"之后又写了好友列表、好友申请、发送好友请求的页面："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:b,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:f,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"上面都是准备工作，接下来进入聊天功能的开发："}),"\n",(0,i.jsx)(n.p,{children:"我们基于 socket.io 实现了 websocket 服务的前后端。"}),"\n",(0,i.jsx)(n.p,{children:"发送 joinRoom 消息的时候把 client socket 加入房间，房间名为 chatroomId"}),"\n",(0,i.jsx)(n.p,{children:"发送 sendMessage 消息的时候把 message 发送给房间的所有用户。"}),"\n",(0,i.jsx)(n.p,{children:"我们还做了聊天记录的保存，每个房间聊天的时候都会把聊天内容存到数据库里。"}),"\n",(0,i.jsx)(n.p,{children:"之后写了聊天的前端部分，通过 socket.io-client 来实现。"}),"\n",(0,i.jsx)(n.p,{children:"监听服务端的 message 消息，有新消息的时候添加到聊天记录里，并通过 scrollIntoView 滚动到底部。"}),"\n",(0,i.jsx)(n.p,{children:"然后串联起了从好友列表，点击聊天进入对应聊天室："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:h,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:x,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"还有从群聊列表点击进入聊天室："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:j,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:l,alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:p,alt:""})}),"\n",(0,i.jsx)(n.p,{children:"把整个流程串联了起来。"}),"\n",(0,i.jsx)(n.p,{children:"在好友列表点击聊天，会查询 userId 和 friendId 所在的一对一聊天室的 id（如果没查到，会创建一个），然后跳转到聊天页面，选中对应的聊天室。"}),"\n",(0,i.jsx)(n.p,{children:"群聊列表则是直接有 chatroomId。"}),"\n",(0,i.jsx)(n.p,{children:"然后实现了发送表情、图片、文件的功能："}),"\n",(0,i.jsx)(n.p,{children:"表情用 emoji-mart 这个包实现。"}),"\n",(0,i.jsx)(n.p,{children:"图片就是之前的上传图片，只是上传完把 url 作为消息发过去，设置下 type 为 image。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:t,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"文件也是一样上传，上传完把 url 作为消息发过去，设置 type 为 file。"}),"\n",(0,i.jsx)(n.p,{children:"然后展示 image 和 file 的时候分别作为图片展示，以及支持下载。"}),"\n",(0,i.jsx)(n.p,{children:"最后实现了收藏功能，双击聊天记录的时候调用 /favorite/add 添加收藏，参数是聊天记录 id："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:r,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"然后结合当前登录用户的 userId，就生成了一条收藏："}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,i.jsx)(n.p,{children:"这样，聊天室的前后端就都开发完了。"}),"\n",(0,i.jsx)(n.p,{children:"这个项目主要是练习 WebSocket 的，但也不是纯粹的 WebSocket，我们把它和之前学的关系型数据库结合了起来，实现了一个完整的系统。"}),"\n",(0,i.jsx)(n.p,{children:"项目重点有两个： 如何基于 WebSocket 实现聊天功能，如何把聊天功能和关系型数据库结合，也就是结合登录、好友、群聊、收藏等一系列功能。"}),"\n",(0,i.jsx)(n.p,{children:"微信、qq 等聊天软件它们也不是存粹的 WebSocket 聊天，也是和数据库结合了起来。"}),"\n",(0,i.jsx)(n.p,{children:"经过这个项目，你知道 WebSocket 如何在项目里用了么？"})]})}function M(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}let N=M;M.__RSPRESS_PAGE_META={},M.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F194.%20%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93.md"]={toc:[],title:"194. 聊天室：项目总结",headingTitle:"194. 聊天室：项目总结",frontmatter:{}}}}]);