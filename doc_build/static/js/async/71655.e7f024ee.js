"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["71655"],{396121:function(e,n,r){e.exports=r.p+"static/image/dca5fbd108fcf552578e12facd64df58.37426c9a.webp"},350537:function(e,n,r){r.r(n),r.d(n,{default:()=>I});var t=r(552676),s=r(740453);let a=r.p+"static/image/9ca22e520a54f105141dfc7bee9a5cab.7c79d5fb.gif",i=r.p+"static/image/408ec62701b045c7dcce3fae7e6fa24e.782d8efe.webp";var c=r(396121);let d=r.p+"static/image/8bd2f12e56b878218bf750ae2fad4c99.0ce41fbf.gif",o=r.p+"static/image/635e8e3b9e4e2c39324fb544230f28a8.feb9b582.webp",l=r.p+"static/image/7a9a30fbd27bca6ae21eab6ca06998bc.d2855154.webp",p=r.p+"static/image/94e65f6d6e829834d62b50b1cfc59a99.8f08c4b5.webp",h=r.p+"static/image/e9bd9f50cd3b1cef28590c35aad37fa6.a7fb85e8.webp",m=r.p+"static/image/e511958e1b8a3862277a0b04bde8ba28.4fc235e3.webp",f=r.p+"static/image/ea82cfabf14c6ea79f1a7c7f8b9ffe1d.b81fc795.webp",j=r.p+"static/image/529a0f94ba2e2af35d947716c60ea6db.3e29c8eb.webp",u=r.p+"static/image/50905918cf0b6155a408f3d5b2e15f40.a72f2810.webp",x=r.p+"static/image/4ec692082d56b643073d6ecb19a3552e.00272dbf.webp",b=r.p+"static/image/5819b7dec180cca057634105b0f4ab8f.9e9c1297.webp",g=r.p+"static/image/cb369010642878adb940af942be61efb.0000d339.webp";function v(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",h2:"h2"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"192-聊天室收藏",children:["192. 聊天室：收藏",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#192-聊天室收藏",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"最后我们再来实现下收藏功能："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/574dcb4751974f3f8f38a9c90236f1e7~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1440&h=972&s=62875&e=png&b=ffffff",alt:""})}),"\n",(0,t.jsx)(n.p,{children:"聊天的时候可以收藏某条消息，然后在收藏列表查看。"}),"\n",(0,t.jsx)(n.p,{children:"消息分为文字、图片、文件三类，收藏也是这三类。"}),"\n",(0,t.jsx)(n.p,{children:"我们先加一个收藏表："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:g,alt:""})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"model Favorite {\n  id Int @id @default(autoincrement())\n  chatHistoryId Int\n  uerId Int\n  createTime DateTime @default(now())\n  updateTime DateTime @updatedAt\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"每个收藏只要记录对应的 chatHistoryId 和 userId 即可。"}),"\n",(0,t.jsx)(n.p,{children:"这里我们同样没有用外键。"}),"\n",(0,t.jsx)(n.p,{children:"用 migrate dev 生成表："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npx prisma migrate dev --name favorite\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:b,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"sql 没啥问题："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:x,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"然后创建一个模块："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"nest g resource favorite\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:u,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"在 FavorateController 添加三个路由："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import { Controller, Get, Query } from '@nestjs/common';\nimport { FavoriteService } from './favorite.service';\nimport { RequireLogin, UserInfo } from 'src/custom.decorator';\n\n@Controller('favorite')\n@RequireLogin()\nexport class FavoriteController {\n  constructor(private readonly favoriteService: FavoriteService) {}\n\n  @Get('list')\n  async list(@UserInfo('userId') userId: number) {\n    return this.favoriteService.list(userId);\n  }\n\n  @Get('add')\n  async add(@UserInfo('userId') userId: number, @Query('chatHistoryId') chatHistoryId: number) {\n    return this.favoriteService.add(userId, chatHistoryId);\n  }\n\n  @Get('del')\n  async del(@Query('id') id: number) {\n    return this.favoriteService.del(id);\n  }\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"list、add、del 这三个路由都需要登录，在 Controller 上加上 @RequireLogin 装饰器。"}),"\n",(0,t.jsx)(n.p,{children:"然后取 request.user 里的 userId 传入 handler。"}),"\n",(0,t.jsx)(n.p,{children:"分别在 service 实现这三个方法："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import { Inject, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class FavoriteService {\n\n    @Inject(PrismaService)\n    private prismaService: PrismaService;\n\n    async list(userId: number) {\n        const favorites = await this.prismaService.favorite.findMany({\n            where: {\n                uerId: userId\n            }\n        })\n        const res = [];\n        for(let i = 0; i< favorites.length; i++) {\n            const chatHistory = await this.prismaService.chatHistory.findUnique({\n                where: {\n                    id: favorites[i].chatHistoryId\n                }\n            })\n            res.push({\n                ...favorites[i],\n                chatHistory\n            })\n        }\n        return res;\n    }\n\n    async add(userId: number, chatHistoryId: number) {\n        return this.prismaService.favorite.create({\n            data: {\n                uerId: userId,\n                chatHistoryId\n            }\n        })\n    }\n\n    async del(id: number) {\n        return this.prismaService.favorite.deleteMany({\n            where: {\n                id\n            }\n        })\n    }\n\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"list 方法把关联的 chatHistory 查出来。"}),"\n",(0,t.jsx)(n.p,{children:"测试下："}),"\n",(0,t.jsx)(n.p,{children:"添加两条收藏："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:j,alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:f,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"查看下："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:m,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"删除一条："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:h,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"查看下："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:p,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"这样，接口就都完成了。"}),"\n",(0,t.jsx)(n.p,{children:"我们再写下前端页面："}),"\n",(0,t.jsx)(n.p,{children:"先在 interfaces 添加几个接口："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"export async function queryFavoriteList() {\n    return axiosInstance.get(`/favorite/list`);\n}\n\nexport async function favoriteAdd(chatHistoryId: number) {\n    return axiosInstance.get(`/favorite/add`, {\n        params: {\n            chatHistoryId\n        }\n    });\n}\n\nexport async function favoriteDel(id: number) {\n    return axiosInstance.get(`/favorite/del`, {\n        params: {\n            id\n        }\n    });\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"写下页面 src/pages/Collection/index.tsx"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import {  Table, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { queryFavoriteList } from \"../../interfaces\";\n\ninterface Favorite {\n    id: number\n    chatHistory: {\n        id: number\n        content: string\n        type: number\n        createTime: Date\n    }\n}\n\nexport function Collection() {\n    const [favoriteList, setFavoriteList] = useState<Array<Favorite>>([]);\n\n    const columns: ColumnsType<Favorite> = [\n        {\n            title: 'ID',\n            dataIndex: 'id'\n        },\n        {\n            title: '内容',\n            render:  (_, record) => (\n                <div>\n                    {\n                        record.chatHistory.type === 0 \n                            ? record.chatHistory.content \n                            : record.chatHistory.type === 1\n                                ? <img src={record.chatHistory.content} style={{maxHeight: 200}}/>\n                                : <a href={record.chatHistory.content} download>{record.chatHistory.content}</a>\n                    }\n                </div>\n            )\n        },\n        {\n            title: '发表时间',\n            render: (_, record) => (\n                <div>\n                    {new Date(record.chatHistory.createTime).toLocaleString()}\n                </div>\n            )\n        },\n        {\n            title: '操作',\n            render: (_, record) => (\n                <div>\n                    <a href=\"\" onClick={() => {}}>删除</a>\n                </div>\n            )\n        }\n    ]\n\n    const query = async () => {\n        try{\n            const res = await queryFavoriteList();\n\n            if(res.status === 201 || res.status === 200) {\n                setFavoriteList(res.data.map((item: Favorite) => {\n                    return {\n                        ...item,\n                        key: item.id\n                    }\n                }));\n            }\n        } catch(e: any){\n            message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n        }\n    };\n\n    useEffect(() => {\n        query();\n    }, []);\n\n\n    return <div id=\"friendship-container\">\n        <div className=\"favorite-table\">\n            <Table columns={columns} dataSource={favoriteList} style={{width: '1000px'}}/>\n        </div>\n\n    </div>\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"就是请求列表接口，用 table 展示。"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:l,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"我们实现下收藏功能。"}),"\n",(0,t.jsx)(n.p,{children:"简化下交互，双击聊天记录触发收藏："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:o,alt:""})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"onDoubleClick={() => {\n    addToFavorite(item.id)\n}}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"async function addToFavorite(chatHistoryId: number) {\n    try{\n        const res = await favoriteAdd(chatHistoryId);\n\n        if(res.status === 201 || res.status === 200) {\n            message.success('收藏成功')\n        }\n    } catch(e: any){\n        message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"我们收藏几条消息："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:d,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"提示收藏成功，之后在收藏页面就可以看到了："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:c,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"然后再做下删除："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:i,alt:""})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<Popconfirm\n    title="删除收藏"\n    description="确认删除吗？"\n    onConfirm={() => delFavorite(record.id)}\n    okText="Yes"\n    cancelText="No"\n>  \n    <a href="#" >删除</a>\n</Popconfirm>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"async function delFavorite(id: number) {\n    try{\n        const res = await favoriteDel(id);\n\n        if(res.status === 201 || res.status === 200) {\n            message.success('删除成功');\n            query();\n        }\n    } catch(e: any){\n        message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"测试下："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:a,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"没啥问题。"}),"\n",(0,t.jsx)(n.p,{children:"这样，收藏功能就完成了。"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/chat-room-backend",target:"_blank",rel:"noopener noreferrer",children:"后端代码"})}),"\n",(0,t.jsxs)(n.h2,{id:"总结",children:["总结",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"这节我们实现了收藏功能。"}),"\n",(0,t.jsx)(n.p,{children:"首先创建了收藏表，关联 user 和 chatHistory。"}),"\n",(0,t.jsx)(n.p,{children:"然后创建了 list、add、del 三个接口。"}),"\n",(0,t.jsx)(n.p,{children:"之后在前端通过 table 展示 list 接口的数据，然后双击聊天记录的时候调用 add 添加收藏，点击删除的时候调用 del 删除收藏"}),"\n",(0,t.jsx)(n.p,{children:"这样就实现了收藏功能。"})]})}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(v,{...e})}):v(e)}let I=y;y.__RSPRESS_PAGE_META={},y.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F192.%20%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%9A%E6%94%B6%E8%97%8F.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"192. 聊天室：收藏",headingTitle:"192. 聊天室：收藏",frontmatter:{}}}}]);