"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["47177"],{982887:function(e,s,c){c.r(s),c.d(s,{default:()=>z});var n=c(552676),i=c(740453);let d=c.p+"static/image/b239f79f719376884192d0a693d67118.cc2810f1.webp",a=c.p+"static/image/076bb631a1947200bfc9a4f55596a78e.7e6868d3.webp",p=c.p+"static/image/fd942e752f38516a319e949ef10a5168.726370f4.webp",l=c.p+"static/image/ec60dfa517219deff9eab97cd63f207d.e4a77a23.webp",r=c.p+"static/image/84d8dfb65da4535e4a390627b54d57ec.6575fb58.webp",t=c.p+"static/image/00f9031eb5adbf2c1e589422f8632204.b8cafbce.webp",j=c.p+"static/image/c9b6f6e379041e45a539c0962d08185f.c7b2754e.webp",b=c.p+"static/image/b6b6fcfbe2258a1d1841db866c4dc8bf.4af9c59f.webp",x=c.p+"static/image/eae74dbd9b48230ad5635ae9c546ccd1.a07638be.webp",h=c.p+"static/image/6c703011c4717828e8da255b6c7ffee1.be867a30.webp",m=c.p+"static/image/19bc2882ae01f989845658a7bcf6bbe1.b7b67e13.webp",g=c.p+"static/image/dce19a916d446a02374c4aae9cc613ff.252335bb.webp",f=c.p+"static/image/ef9b74cd722d98e83917765f3e76b80c.9035587e.webp",o=c.p+"static/image/10374ee0e68598df639312ce82e046c6.dbda54ca.webp",u=c.p+"static/image/760ada34ed302b98d7d7825c108778d7.8d3e1df1.webp",w=c.p+"static/image/11a051b3f80659ec56ec4731e63cb02b.a1824099.webp",E=c.p+"static/image/34952635a9dc0cb1dd41ee76076c73cc.44af1331.webp",k=c.p+"static/image/10ec6d198aba02dcf14579eb48037803.f2ce4dbf.webp",_=c.p+"static/image/0fd318447a2334001b466843c81b6e75.53f657c0.webp",A=c.p+"static/image/bcb145bbbc8ccbb6428a572764d11e92.15fd7f9d.webp",B=c.p+"static/image/46f274e8125800d76f48e52dcf4a6e24.e61a7ab0.webp",S=c.p+"static/image/0d19fd8903e1625abc527e864e49c9f9.bf111ee2.webp",R=c.p+"static/image/dbe7e42725239980d65e9dadb7bc0c6b.a41e96bb.webp",F=c.p+"static/image/8c0c3f6c3decee70d2adb742f2a3c69b.588b7e6a.webp",C=c.p+"static/image/f89bcd7ce25079a1d5cf53b4e7a94082.89d23de8.webp",T=c.p+"static/image/dbbfbf602c2234ef3bdf7ecdb3d9f958.16e02f05.webp",y=c.p+"static/image/b0575ed497d26f5be60b5d09289c78aa.92714782.webp",P=c.p+"static/image/993fb3d5c4bd4529b3675ffb0d890c5e.e7941166.webp",M=c.p+"static/image/0ef0c0e3a548930d462bc26c34590713.f96bb0c2.webp",v=c.p+"static/image/fd4e8428ae8e88a3758ffc5ad4e499ab.acca36d2.webp",D=c.p+"static/image/8b213b1e133eaf094626f206fd4b4dc4.8d10b906.webp",G=c.p+"static/image/dcfb104ec0b64bc81c4a49a1acd41cd0.bf4b5138.webp",N=c.p+"static/image/24026fc5e10cf431b23b399df6d6f5fe.db4b5658.webp",O=c.p+"static/image/4ae534d130505ef359b681c7275ad532.f4829a21.webp",q=c.p+"static/image/91f4cb51a19cbf9605cbd94ba9db5842.ae16a4a0.webp",J=c.p+"static/image/14ffc7745658d8063a32f61bd42f4b2e.9452b00e.webp";function L(e){let s=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img",h2:"h2"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"第39章react组件库都是怎么构建的",children:["第39章—React组件库都是怎么构建的",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#第39章react组件库都是怎么构建的",children:"#"})]}),"\n",(0,n.jsx)(s.p,{children:"\uFEFF大家都用过组件库，react 流行的组件库有阿里的 ant-design、字节的 semi-design、arco-design 等。"}),"\n",(0,n.jsx)(s.p,{children:"那这些组件库都是怎么打包的呢？"}),"\n",(0,n.jsx)(s.p,{children:"我们自己写个组件库的话，怎么写打包逻辑呢？"}),"\n",(0,n.jsx)(s.p,{children:"这篇文章我们就来探究下。"}),"\n",(0,n.jsx)(s.p,{children:"新建一个项目："}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"mkdir component-lib-test\n\ncd component-lib-test\n\nnpm init -y\n"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:J,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"分别安装 ant-design、arco-design、semi-design"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"pnpm install antd\n\npnpm install @douyinfe/semi-ui\n\npnpm install @arco-design/web-react\n"})}),"\n",(0,n.jsx)(s.p,{children:"npm、yarn 会把所有依赖铺平，看着比较乱。而 pnpm 不会，node_modules 下很清晰："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:q,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"首先看下 antd，分为了 lib、es、dist 3 个目录："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:O,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"分别看下这三个目录的组件代码："}),"\n",(0,n.jsx)(s.p,{children:"lib 下的组件是 commonjs 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:N,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"es 下的组件是 es module 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:G,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"dist 下的组件是 umd 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:D,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"然后在 package.json 里分别声明了 commonjs、esm、umd 还有类型的入口："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:v,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"这样，当你用 require 引入的就是 lib 下的组件，用 import 引入的就是 es 下的组件。"}),"\n",(0,n.jsx)(s.p,{children:"而直接 script 标签引入的就是 unpkg 下的组件。"}),"\n",(0,n.jsx)(s.p,{children:"再来看看 semi-design 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:M,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"也是一样："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:P,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"只不过多了个 css 目录。"}),"\n",(0,n.jsx)(s.p,{children:"antd 没有这个目录是因为它已经换成 css in js 的方案了，不需要单独引入 css 文件。"}),"\n",(0,n.jsx)(s.p,{children:"然后是 arco-design 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:y,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"也是一样："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:T,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"同样是 lib、es、dist 3 个目录，同样是分别声明了 esm、commonjs、umd 的入口。"}),"\n",(0,n.jsx)(s.p,{children:"也就是说，组件库都是这样的，分别打包出 3 份代码（esm、commonjs、umd），然后在 package.json 里声明不同模块规范的入口。"}),"\n",(0,n.jsx)(s.p,{children:"那问题来了，如果我有一个 esm 的模块，怎么分别构建出 esm、commonjs、umd 的 3 份代码呢？"}),"\n",(0,n.jsx)(s.p,{children:"这个问题很容易回答。"}),"\n",(0,n.jsx)(s.p,{children:"umd 的代码用 webpack 打包就行。"}),"\n",(0,n.jsx)(s.p,{children:"esm 和 commonjs 的不用打包，只需要用 tsc 或者 babel 编译下就好了。"}),"\n",(0,n.jsx)(s.p,{children:"我们分别看下这三个组件库都是怎么做的："}),"\n",(0,n.jsx)(s.p,{children:"先是 arco-design 的："}),"\n",(0,n.jsx)(s.p,{children:"它的构建逻辑在 arco-cli 的 arco-scripts 下："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:C,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"看下这个 index.ts"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:F,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"分别有 build 3 种代码加上 build css 的方法。"}),"\n",(0,n.jsx)(s.p,{children:"我们分别看下："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:R,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"esm 和 cjs 的编译它封装了一个 compileTS 的方法，然后传入不同的 type。"}),"\n",(0,n.jsx)(s.p,{children:"compileTS 里可以用 tsc 或者 babel 编译："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:S,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"tsc 编译就是读取项目下的 tsconfig.json，然后 compile："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:B,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"babel 编译是基于内置配置，修改了下产物 modules 规范，然后编译："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:A,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"babelConfig 里配置了 typescript 和 jsx 的编译："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:_,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"再就是 umd："}),"\n",(0,n.jsx)(s.p,{children:"和我们分析的一样，确实是用 webpack 来打包："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:k,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"webpack 配置里可以看到，确实是为了 unpkg 准备的，用了 ts-loader 和 babel-loader："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:E,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"而 css 部分则是用了 less 编译："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:w,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"gulp 是用来组织编译任务的，可以让任务串行、并行的执行。"}),"\n",(0,n.jsx)(s.p,{children:"这里的 gulp.series 就是串行执行任务，而 gulp.parallel 则是并行。"}),"\n",(0,n.jsx)(s.p,{children:"所以说，那 3 种代码加上 css 文件是怎么打包的就很清晰了："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:u,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"其中用到 gulp 只是用来组织编译任务的，可用可不用。"}),"\n",(0,n.jsx)(s.p,{children:"再来看下 semi-design 的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:o,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"它就没有单独分一个 xx-scripts 包了，直接在 semi-ui 的 scripts 目录下。"}),"\n",(0,n.jsx)(s.p,{children:"它也是用到了 gulp 来组织任务。"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:f,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"看下这个 compileLib 的 gulp task："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:g,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"这里的 compileTSXForESM 和 ForCJS 很明显就是编译组件到 esm 和 cjs 两种代码的。"}),"\n",(0,n.jsx)(s.p,{children:"先用了 tsc 编译再用了 babel 编译："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:m,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"然后是 umd，也是用了 webpack："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:h,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"用了 babel-loader 和 ts-loader："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:x,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"最后是 scss 的编译："}),"\n",(0,n.jsx)(s.p,{children:"semi-design 把所有组件的 scss 都放在了 semi-foundation 这个目录下来维护："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:b,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"所以编译的时候就是这样的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:j,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"就是把 semi-foundation 这个目录下的所有 scss 编译后合并成了一个文件"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"而 arco-design 的样式是在组件目录下维护的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:r,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"这个倒是没啥大的区别，只是编译的时候改下源码目录就好了。"}),"\n",(0,n.jsx)(s.p,{children:"这就是 semi-design 的 esm、cjs、umd、scss 是如何编译打包的。"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:l,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"和 arco-design 的 scripts 区别大么？"}),"\n",(0,n.jsx)(s.p,{children:"不大，只不过没有单独做一个 xxx-scripts 的包，编译出 esm 和 cjs 代码用的是 tsc + babel，而且用的是 scss 不是 less 而已。"}),"\n",(0,n.jsx)(s.p,{children:"再来看看 ant-design 的："}),"\n",(0,n.jsx)(s.p,{children:"它也是单独分了一个包来维护编译打包的 scripts，叫做 @ant-design/tools。"}),"\n",(0,n.jsx)(s.p,{children:"它也有个 gulpfile 定义了很多 task"}),"\n",(0,n.jsx)(s.p,{children:"比如 compile 的 task 是编译出 es 和 cjs 代码的："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:p,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"是不是很熟悉的感觉？"}),"\n",(0,n.jsx)(s.p,{children:"大家都是这么搞的。"}),"\n",(0,n.jsx)(s.p,{children:"它也是先用了 tsc 再用 babel 编译，最后输出到 es 或者 lib 目录："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:a,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"打包 umd 代码的时候也是用了 webpack："}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)("img",{src:d,alt:""})}),"\n",(0,n.jsx)(s.p,{children:"只不过它这个 webpack 配置文件是读取的组件库项目目录下的，而不像 arco-design 那样是内置的。"}),"\n",(0,n.jsx)(s.p,{children:"这就是这三个组件库的编译打包的逻辑。"}),"\n",(0,n.jsx)(s.p,{children:"区别大么？"}),"\n",(0,n.jsx)(s.p,{children:"不大，甚至可以说几乎一模一样。"}),"\n",(0,n.jsxs)(s.h2,{id:"总结",children:["总结",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,n.jsx)(s.p,{children:"我们分析了 ant-design、semi-design、arco-design 组件库的产物和编译打包逻辑。"}),"\n",(0,n.jsx)(s.p,{children:"它们都有 lib、es、dist 目录，分别放着 commonjs、es module、umd 规范的组件代码。"}),"\n",(0,n.jsx)(s.p,{children:"并且在 package.json 里用 main、module、unpkg 来声明了 3 种规范的入口。"}),"\n",(0,n.jsx)(s.p,{children:"从产物上来看，三个组件库都是差不多的。"}),"\n",(0,n.jsx)(s.p,{children:"然后我们分析了下编译打包的逻辑。"}),"\n",(0,n.jsx)(s.p,{children:"ant-design 和 acro-design 都是单独抽了一个放 scripts 的包，而 semi-design 没有。"}),"\n",(0,n.jsx)(s.p,{children:"它们编译 esm 和 cjs 代码都用了 babel 和 tsc 来编译，只不过 arco-design 是用 tsc 或者 babel 二选一，而 ant-design 和 semi-design 是先用 tsc 编译再用 babel 编译。"}),"\n",(0,n.jsx)(s.p,{children:"打包出 umd 的代码，三个组件库都是用的 webpack，只不过有的是把 webpack 配置内置了，有的是放在组件库项目目录下。"}),"\n",(0,n.jsx)(s.p,{children:"而样式部分，ant-design 是用 css-in-js 的运行时方案了，不需要编译，而 arco-design 用的 less，样式放组件目录下维护，semi-design 用的 scss，单独一个目录来放所有组件样式。"}),"\n",(0,n.jsx)(s.p,{children:"并且编译任务都是用的 gulp 来组织的，它可以串行、并行的执行一些任务。"}),"\n",(0,n.jsx)(s.p,{children:"虽然有一些细小的差别，但从整体上来看，这三大组件库的编译打包逻辑可以说是一模一样的。"}),"\n",(0,n.jsx)(s.p,{children:"写这样的 scripts 麻烦么？"}),"\n",(0,n.jsx)(s.p,{children:"并不麻烦，umd 部分的 webpack 打包大家都会，而 esm 和 cjs 用 babel 或者 tsc 编译也不难，至于 scss、less 部分，那个就更简单了。"}),"\n",(0,n.jsx)(s.p,{children:"所以编译打包并不是组件库的难点。"}),"\n",(0,n.jsx)(s.p,{children:"如果你要写一个组件库，也可以这样来写 scripts。"})]})}function X(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(L,{...e})}):L(e)}let z=X;X.__RSPRESS_PAGE_META={},X.__RSPRESS_PAGE_META["React%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F%E7%AC%AC39%E7%AB%A0%E2%80%94React%E7%BB%84%E4%BB%B6%E5%BA%93%E9%83%BD%E6%98%AF%E6%80%8E%E4%B9%88%E6%9E%84%E5%BB%BA%E7%9A%84.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"第39章—React组件库都是怎么构建的",headingTitle:"第39章—React组件库都是怎么构建的",frontmatter:{}}}}]);