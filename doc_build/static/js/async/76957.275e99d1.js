"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["76957"],{146842:function(e,d,n){n.r(d),n.d(d,{default:()=>$});var c=n(552676),i=n(740453);let s=n.p+"static/image/0231a2e8ad8a36212b5c489c34db5a53.9a47858e.webp",a=n.p+"static/image/dd4dafd1cdc2670c8c4a35f3e9c8884e.803023c0.webp",r=n.p+"static/image/15763c3a82d3112f5e4ab03bb060a0c5.08a1a121.webp",l=n.p+"static/image/33fadbf0cc63ea9fa02232a114f8f33d.d728c8ab.webp",p=n.p+"static/image/8276d1df85f3a8f88b7329c55db5c157.241e4d3a.webp",j=n.p+"static/image/898251121995409463cca679cad391fc.5a6208ba.webp",x=n.p+"static/image/aa49e8cb393d60f0140b8b9ee149675d.12f18fb2.webp",h=n.p+"static/image/cbcc5ec97f1d592fcad96c6083b11c4d.482d11fc.webp",t=n.p+"static/image/3f9c8979ca53e2dfa758445e8b75f605.2ace611a.webp",b=n.p+"static/image/636623178b90f4987749b971b0957b02.a4766e75.webp",m=n.p+"static/image/8ca4cb287c9bb219fe2a188000cf1af8.fe6aa770.webp",g=n.p+"static/image/790dc013721a0821002ac4748fb41783.66132f19.webp",f=n.p+"static/image/1e064f2ce915010a20ee32309d584ca6.a54c9502.webp",u=n.p+"static/image/9dd8a0d67d11802ef3420eb177df49fc.9174c37a.webp",E=n.p+"static/image/6d8eb730b8d771c78c8e69c653f90a3d.273151f7.webp",N=n.p+"static/image/485f1e5f2a4d728a689ad3828536ad8c.5f4b4a27.webp",_=n.p+"static/image/2b56fe2c794019d307e89755c67b23df.4100c769.webp",T=n.p+"static/image/0db57f938cd86406c340d2c615e8ad58.51f74a6a.webp",O=n.p+"static/image/daf947a5ad1f48c55afde3ad184dadbe.293f2743.webp",R=n.p+"static/image/42f7b92c3a1066d7bee9aca41ab15f1e.887a08cb.webp",o=n.p+"static/image/f48ad4ae02201866dd42d23c0836974b.52f3a3b0.webp",I=n.p+"static/image/a08927c9f874f05ef7ff57932caf0d38.c13aeab9.webp",w=n.p+"static/image/3cb65e7d15a8c1746d5c7b3b49671fd4.126bd72f.webp",C=n.p+"static/image/fc46a869d3a2844b87d32b4f201374ae.9a1f9b52.webp",A=n.p+"static/image/48cc14ea7eddd598f76b310f7c1d2d15.526e4d13.webp",S=n.p+"static/image/1a8816c550df260e86826d95b35adb73.a3b43d82.webp",L=n.p+"static/image/25fc952f644beb35d10429502b39fb1e.e163423c.webp",M=n.p+"static/image/96b2bfdde8477df38365cd829b599a49.4fe960c5.webp",q=n.p+"static/image/ddfbd37e3e93722cb47c56581fdead3c.8ccf04ad.webp",F=n.p+"static/image/494fe117bfce19c4e35a204bc1e8ff77.e916fd29.webp",J=n.p+"static/image/edc423a137050fadb556306e69607a57.6ffe585c.webp",y=n.p+"static/image/5c573b55dde8c9cf9bb3cd73e326e550.e4650b7a.webp",B=n.p+"static/image/412a625490fc622be0b18679993c2cdb.793ae8cf.webp",U=n.p+"static/image/2bc6f4aeddaad0fc59405be3f93a796a.2d303327.webp",D=n.p+"static/image/e21b629786cc5cfff031c527d390b315.b985baef.webp",Y=n.p+"static/image/73b23f9d85eeec97f60c5bd697053797.b6bdafff.webp",k=n.p+"static/image/7c34567313e36667c3d25a84a4b8ebcb.79a198e4.webp",G=n.p+"static/image/de6638a18c92afd1a0b435137c1b2f67.6046d876.webp",P=n.p+"static/image/c631a29ddcba8fcc155fbaf9087ce118.1b1b3bed.webp",H=n.p+"static/image/f4418425efb6b8683474fa2c5b46ddf9.5832f431.webp",K=n.p+"static/image/ce18d2ce3b66a85e56a7b0429b6af8bb.644f1bc4.webp",v=n.p+"static/image/f127a11ee8bd60dfe87905a4e3c510fc.15372e0e.webp",V=n.p+"static/image/c0deaf6b93f2dabe5a88074aa3060c3e.7a38d76a.webp",X=n.p+"static/image/bedf2d9e2bec6a56d94451e281c3d44b.0d57d347.webp",z=n.p+"static/image/25160a3fbe913c26df8c4236e2f1a460.cc6aded6.webp",Q=n.p+"static/image/2be33cfe778217d41e6320e71b8f3600.74e242dd.webp";function W(e){let d=Object.assign({h1:"h1",a:"a",p:"p",img:"img",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li",h2:"h2"},(0,i.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(d.h1,{id:"47-一对一join-查询级联方式",children:["47. 一对一、join 查询、级联方式",(0,c.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#47-一对一join-查询级联方式",children:"#"})]}),"\n",(0,c.jsx)(d.p,{children:"数据库中会有很多的表，分别存储不同的信息，比如学生表存学生的信息、老师表存老师的信息，班级表存班级的信息。"}),"\n",(0,c.jsx)(d.p,{children:"这些表之间不是孤立的，有着一定的关系。"}),"\n",(0,c.jsx)(d.p,{children:"比如班级和学生之间是一对多的关系，也就是一个班级可以有多个学生。"}),"\n",(0,c.jsx)(d.p,{children:"班级和老师之间是多对多的关系，也就是一个班级可以有多个老师，一个老师也可以教多个班级。"}),"\n",(0,c.jsx)(d.p,{children:"如果存储一对一、一对多、多对多这些关系呢？"}),"\n",(0,c.jsx)(d.p,{children:"这就涉及到外键了。"}),"\n",(0,c.jsx)(d.p,{children:"比如一对一的关系，一个用户只能有一个身份证。"}),"\n",(0,c.jsx)(d.p,{children:"这样两个表，分别存储用户信息，还有身份证信息："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:Q,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"它们之间是一对一的关系，这时就可以用外键来表示。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"user 表的主键是 id、可以通过 id 来唯一标识一个 user。"}),"\n",(0,c.jsx)(d.p,{children:"那 id_card 想查找 user，自然也是通过 id 来查找，多一个列来存储 user id 就可以实现这种一对一的关联。"}),"\n",(0,c.jsx)(d.p,{children:"这个 user_id 的列就是外键。"}),"\n",(0,c.jsx)(d.p,{children:"user 表叫主表，使用外键引用它的 id_card 表是从表。"}),"\n",(0,c.jsx)(d.p,{children:"我们建个表来试试看："}),"\n",(0,c.jsx)(d.p,{children:"选中 hello-mysql 数据库，点击建表按钮："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:z,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"分别添加 id、name 列："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:X,alt:"image.png"})}),"\n",(0,c.jsx)(d.p,{children:"点击 apply，建表 sql 如下："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:V,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"你也可以直接用这个 sql 来建表："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"CREATE TABLE `hello-mysql`.`user` (\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `name` VARCHAR(45) NOT NULL COMMENT '名字',\n  PRIMARY KEY (`id`)\n);\n"})}),"\n",(0,c.jsx)(d.p,{children:"然后再建个 id_card 表："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:v,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"id 为 INT 类型，设置 primary key、not null 的约束，然后设置 auto increment。"}),"\n",(0,c.jsx)(d.p,{children:"card_name 为 VARCHAR(45) 类型，设置 not null 的约束"}),"\n",(0,c.jsx)(d.p,{children:"user_id 为 INT 类型。"}),"\n",(0,c.jsx)(d.p,{children:"然后添加外键："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:K,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"指定外键 user_id 关联 user 表的 id。"}),"\n",(0,c.jsx)(d.p,{children:"这里还要选择主表数据 update 或者 delete 的时候，从表怎么办："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:H,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"我们先用默认的。"}),"\n",(0,c.jsx)(d.p,{children:"点击 apply，生成的建表 sql 是这样的："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:P,alt:""})}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"CREATE TABLE `id_card` (\n  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `card_name` varchar(45) NOT NULL COMMENT '身份证号',\n  `user_id` int DEFAULT NULL COMMENT '用户 id',\n  PRIMARY KEY (`id`),\n  INDEX `card_id_idx` (`user_id`),\n  CONSTRAINT `user_id` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)\n)  CHARSET=utf8mb4\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)(d.strong,{children:"这些建表 sql 的语法了解即可，一般不会自己写。"})}),"\n",(0,c.jsx)(d.p,{children:"前面的三行都比较好理解，就是指定每一列的类型、约束、注释。"}),"\n",(0,c.jsx)(d.p,{children:"PRIMARY KEY 是指定 id 为主键。"}),"\n",(0,c.jsx)(d.p,{children:"INDEX 是建立索引，索引名是 card_id_idex，这个是用于加速 user_id 的访问的。"}),"\n",(0,c.jsx)(d.p,{children:"CONSTRINT user_id FOREIGN KEY 是给 user_id 添加一个外键约束，然后 user_id REFERENCES user id 则是指定 user_id 引用这 user 表的 id 列。"}),"\n",(0,c.jsx)(d.p,{children:"然后就可以看到 user 和 id_card 表了："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:G,alt:""})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:k,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"我们插入几条数据："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"INSERT INTO `user` (`name`)\n	VALUES\n		('张三'),\n		('李四'),\n		('王五'),\n		('赵六'),\n		('孙七'),\n		('周八'),\n		('吴九'),\n		('郑十'),\n		('钱十一'),\n		('陈十二'); \n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:Y,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"查询一下："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT * FROM user;\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:D,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"用户表数据成功插入了。"}),"\n",(0,c.jsx)(d.p,{children:"再插入 id_card 表的数据："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"INSERT INTO id_card (card_name, user_id) \n    VALUES\n        ('110101199001011234',1),\n	('310101199002022345',2),\n	('440101199003033456',3),\n	('440301199004044567',4),\n	('510101199005055678',5),\n	('330101199006066789',6),\n	('320101199007077890',7),\n	('500101199008088901',8),\n	('420101199009099012',9),\n	('610101199010101023',10);\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:U,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"查询一下："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT * FROM id_card;\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:B,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这样，一对一关系的数据就插入成功了。"}),"\n",(0,c.jsx)(d.p,{children:"那怎么关联查出来呢？"}),"\n",(0,c.jsx)(d.p,{children:"这样："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT * FROM user JOIN id_card ON user.id = id_card.user_id;\n"})}),"\n",(0,c.jsx)(d.p,{children:"这里用到了 JOIN ON，也就是连接 user 和 id_card 表，关联方式是 user.id = id_card.user_id，也就是 id_card 表中的外键关联 user 表的主键。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:y,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"点击左上角按钮，新建一条 sql："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:J,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"查询的结果是这样的："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:F,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这里的两个 id 分别是 user 和 card 的 id，而且后面的 user_id 也没必要展示。"}),"\n",(0,c.jsx)(d.p,{children:"我们改下 sql："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT user.id, name, id_card.id as card_id, card_name \n    FROM user\n    JOIN id_card ON user.id = id_card.user_id;\n"})}),"\n",(0,c.jsx)(d.p,{children:"指定显示的列，并给 id_card 表的 id 起个 card_id 的别名。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:q,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这就是多表关联查询，语法是 JOIN ON。"}),"\n",(0,c.jsx)(d.p,{children:"有同学可能问了，那如果 id_card 表里有的没有关联 user 呢？"}),"\n",(0,c.jsx)(d.p,{children:"比如这样："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:M,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"选中单元格，点击 delete 就可以把它置为 null。"}),"\n",(0,c.jsx)(d.p,{children:"我们把 id_card 表的最后两条记录的 user_id 删掉，点击 apply。"}),"\n",(0,c.jsx)(d.p,{children:"这时候再执行上面那条 sql 来查询，就可以看到少了两条记录："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:L,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"因为 JOIN ON 其实默认是 INNER JOIN ON，相当于这么写："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT user.id, name, id_card.id as card_id, card_name \n    FROM user\n    INNER JOIN id_card ON user.id = id_card.user_id;\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:S,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"INNER JOIN 是只返回两个表中能关联上的数据。"}),"\n",(0,c.jsx)(d.p,{children:"你还可以指定其余 2 种 join 类型："}),"\n",(0,c.jsx)(d.p,{children:"LEFT JOIN 是额外返回左表中没有关联上的数据。"}),"\n",(0,c.jsx)(d.p,{children:"RIGHT JOIN 是额外返回右表中没有关联上的数据。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)(d.strong,{children:"在 FROM 后的是左表，JOIN 后的表是右表。"})}),"\n",(0,c.jsx)(d.p,{children:"我们来试一下："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT user.id, name, id_card.id as card_id, card_name \n    FROM user\n    RIGHT JOIN id_card ON user.id = id_card.user_id;\n"})}),"\n",(0,c.jsx)(d.p,{children:"当使用 RIGHT JOIN 时，会额外返回右表中没有关联的数据："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:A,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"可以看到返回了所有 id_card 的数据，没有关联 user 的记录 user 信息为 null。"}),"\n",(0,c.jsx)(d.p,{children:"当时用 LEFT JOIN 时，正好相反："}),"\n",(0,c.jsx)(d.pre,{children:(0,c.jsx)(d.code,{className:"language-sql",children:"SELECT user.id, name, id_card.id as card_id, card_name \n    FROM user\n    LEFT JOIN id_card ON user.id = id_card.user_id;\n"})}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:C,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"一般情况，还是用默认的 JOIN ON 比较多，也就是 INNER JOIN。"}),"\n",(0,c.jsx)(d.p,{children:"前面还讲到了删除和更新时的级联操作。"}),"\n",(0,c.jsx)(d.p,{children:"也就是当 user 删除的时候，关联的 id_card 要不要删除？"}),"\n",(0,c.jsx)(d.p,{children:"当 user 的 id 修改的时候，关联的 id_card 要不要改 user_id？"}),"\n",(0,c.jsx)(d.p,{children:"我们之前设置的是默认的 RESTICT："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:w,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"其实可选的值有 4 种："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:I,alt:""})}),"\n",(0,c.jsxs)(d.ul,{children:["\n",(0,c.jsxs)(d.li,{children:["\n",(0,c.jsx)(d.p,{children:"CASCADE： 主表主键更新，从表关联记录的外键跟着更新，主表记录删除，从表关联记录删除"}),"\n"]}),"\n",(0,c.jsxs)(d.li,{children:["\n",(0,c.jsx)(d.p,{children:"SET NULL：主表主键更新或者主表记录删除，从表关联记录的外键设置为 null"}),"\n"]}),"\n",(0,c.jsxs)(d.li,{children:["\n",(0,c.jsx)(d.p,{children:"RESTRICT：只有没有从表的关联记录时，才允许删除主表记录或者更新主表记录的主键 id"}),"\n"]}),"\n",(0,c.jsxs)(d.li,{children:["\n",(0,c.jsx)(d.p,{children:"NO ACTION： 同 RESTRICT，只是 sql 标准里分了 4 种，但 mysql 里 NO ACTION 等同于 RESTRICT。"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(d.p,{children:"这里不理解不要紧，我们试一下："}),"\n",(0,c.jsx)(d.p,{children:"现在 user 表是这样的："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:o,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"右键选择 delete row："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:R,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这时候会提示你更新失败，因为有外键的约束。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:O,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"点击 revert，回到之前的状态："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:T,alt:""})}),"\n",(0,c.jsxs)(d.p,{children:["然后更新 id 为 11，点击 apply：\n",(0,c.jsx)("img",{src:_,alt:""})]}),"\n",(0,c.jsx)(d.p,{children:"同样会提示你更新失败，因为有外键的约束："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:N,alt:""})}),"\n",(0,c.jsxs)(d.p,{children:["这就是 ",(0,c.jsx)(d.strong,{children:"RESTIRCT 和 NO ACTION 的处理逻辑：只要从表有关联记录，就不能更新 id 或者删除记录。"})]}),"\n",(0,c.jsx)(d.p,{children:"我们手动把从表记录的关联去掉，也就是删除第一条记录的外键（按 delete 键）："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:E,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"点击 apply 应用这次改动。"}),"\n",(0,c.jsx)(d.p,{children:"然后再试下主表的更新："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:u,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这次就更新成功了！"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:f,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"再来试下删除："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:g,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"同样也成功了："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:m,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这就是 RESTRICT 或者 NO ACTION，只有当从表没有关联的记录的时候，才能更新主表记录的 id 或者删除它。"}),"\n",(0,c.jsx)(d.p,{children:"我们再来试试 CASCADE："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:b,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"修改外键级联方式为 CASCADE，点击 apply。"}),"\n",(0,c.jsx)(d.p,{children:"先看一下现在 id_card 表的数据："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:t,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"把 id 为 2 的 user 的 id 改为 22，点击 apply："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:h,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"再看下 id_card 表的数据，你会发现 user_id 跟着改了。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:x,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"然后把 id 为 22 的 user 删除掉，点击 apply："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:j,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"再看下 id_card 表会发现那条 user_id 为 22 的记录也没了。"}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:p,alt:""})}),"\n",(0,c.jsxs)(d.p,{children:["这就是级联方式为 ",(0,c.jsx)(d.strong,{children:"CASCADE 的处理逻辑：主表删除，从表关联记录也级联删除，主表 id 更新，从表关联记录也跟着更新。"})]}),"\n",(0,c.jsx)(d.p,{children:"然后再试下 set null："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:l,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"修改之后点击 apply。"}),"\n",(0,c.jsx)(d.p,{children:"查询下现在的 id_card 表的数据："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:r,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"把 user 表中 id 为 5 的记录 id 改为 55，点击 apply："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:a,alt:""})}),"\n",(0,c.jsx)(d.p,{children:"这时候 id_card 中那条记录的外键被置为 null 了："}),"\n",(0,c.jsx)(d.p,{children:(0,c.jsx)("img",{src:s,alt:""})}),"\n",(0,c.jsxs)(d.p,{children:["这就是 ",(0,c.jsx)(d.strong,{children:"set null 的处理逻辑：主表记录删除或者修改 id，从表关联记录外键置为 null。"})]}),"\n",(0,c.jsxs)(d.h2,{id:"总结",children:["总结",(0,c.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,c.jsx)(d.p,{children:"这节我们学习了一对一的数据表设计，在从表里通过外键来关联主表的主键。"}),"\n",(0,c.jsx)(d.p,{children:"查询的时候需要使用 join on，默认是 inner join 也就是只返回有关联的记录，也可以用 left join、right join 来额外返回没有关联记录的左表或右表的记录。"}),"\n",(0,c.jsx)(d.p,{children:"from 后的是左表，join 后的是右表。"}),"\n",(0,c.jsx)(d.p,{children:"此外，外键还可以设置级联方式，也就是主表修改 id 或者删除的时候，从表怎么做。"}),"\n",(0,c.jsx)(d.p,{children:"有 3 种级联方式：CASCADE（关联删除或更新），SET NULL（关联外键设置为 null），RESTRICT 或者 NO ACTION（没有从表的关联记录才可以删除或更新）"}),"\n",(0,c.jsx)(d.p,{children:"多表的连接是非常常用的操作，下节我们继续学习一对多和多对多的数据表设计。"})]})}function Z(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:d}=Object.assign({},(0,i.ah)(),e.components);return d?(0,c.jsx)(d,{...e,children:(0,c.jsx)(W,{...e})}):W(e)}let $=Z;Z.__RSPRESS_PAGE_META={},Z.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F47.%20%E4%B8%80%E5%AF%B9%E4%B8%80%E3%80%81join%20%E6%9F%A5%E8%AF%A2%E3%80%81%E7%BA%A7%E8%81%94%E6%96%B9%E5%BC%8F.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"47. 一对一、join 查询、级联方式",headingTitle:"47. 一对一、join 查询、级联方式",frontmatter:{}}}}]);