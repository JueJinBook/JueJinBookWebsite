"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["20344"],{92557:function(e,n,r){r.r(n),r.d(n,{default:()=>P});var s=r(552676),t=r(740453);let d=r.p+"static/image/0dfe52d0d895ab4483c49bfa8861061e.97526cb6.webp",a=r.p+"static/image/9ec2e8019bcef9f7285d8470b9a17185.612d7521.webp",i=r.p+"static/image/67ace8c1e6b01d22b33e5cb576586272.001de522.webp",c=r.p+"static/image/405d7ec71cb0feb1de0e7c54156198b7.84ed1786.gif",o=r.p+"static/image/ffd17b76e9fa8684af16b15c4d308913.7493f7bc.webp",l=r.p+"static/image/74a35eb946b1a4e4f12b9e1008c11ed0.b92c3812.webp",h=r.p+"static/image/34a42d3e72665a26ea5d6d38aa2d50cf.001de522.webp",p=r.p+"static/image/0879b0667f94b521211b2b3cdd7f9e18.0be6abb3.gif",j=r.p+"static/image/840f16ccfe3bf18d45ce3404a15dad5c.95d2fb32.webp",x=r.p+"static/image/060d59f7cc598e5a0ced05df0d23aab8.9df066ad.gif",A=r.p+"static/image/d8a0f954b6827182c363190416b7e830.952577ad.webp",b=r.p+"static/image/0fccb8f9f7167c49f71f256f6f444b36.bacd279f.gif",u=r.p+"static/image/1b2ef59298cc70a8215318408d89a643.cb8982ed.webp",g=r.p+"static/image/f680973c1ad0d57a27a8918670c46c88.20ff7722.webp",C=r.p+"static/image/84ec4843fe97328d36d8134a4d0f6c9d.2cfebb24.webp",m=r.p+"static/image/eeb54b831efdbf7c32b7f5258daae7bb.469349a9.webp",f=r.p+"static/image/a39937811cccc037bd5675674632a48c.6c2636e4.webp",D=r.p+"static/image/2b332e6710b459c962e960336cb4d06d.810da7e4.webp",y=r.p+"static/image/78802297fb488f049e0c01af1123e262.849833c5.webp",B=r.p+"static/image/465d770d07c0efce6bda19ea420719f8.acf75f1f.webp",v=r.p+"static/image/81fbc7aab981743cf54576eccca6711f.d3cde2ca.webp",E=r.p+"static/image/6631f936aa6c094e68ad9184ea45d077.c4369462.webp";function L(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",pre:"pre",img:"img",h3:"h3",ul:"ul",li:"li",strong:"strong",h4:"h4",ol:"ol",blockquote:"blockquote"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"3路由篇-_-app-router",children:["3.路由篇 _ App Router",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3路由篇-_-app-router",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"前言",children:["前言",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"路由（Router）是 Next.js 应用的重要组成部分。在 Next.js 中，路由决定了一个页面如何渲染或者一个请求该如何返回。"}),"\n",(0,s.jsx)(n.p,{children:"Next.js 有两套路由解决方案，之前的方案称之为“Pages Router”，目前的方案称之为“App Router”，两套方案目前是兼容的，都可以在 Next.js 中使用。"}),"\n",(0,s.jsx)(n.p,{children:"从 v13.4 起，App Router 已成为默认的路由方案，新的 Next.js 项目建议使用 App Router。"}),"\n",(0,s.jsx)(n.p,{children:"本篇我们会学习 App Router 下路由的定义方式和常见的文件约定。"}),"\n",(0,s.jsxs)(n.h2,{id:"1-文件系统file-system",children:["1. 文件系统（file-system）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-文件系统file-system",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Next.js 的路由基于的是文件系统，也就是说，一个文件就可以是一个路由。举个例子，你在 ",(0,s.jsx)(n.code,{children:"pages"})," 目录下创建一个 ",(0,s.jsx)(n.code,{children:"index.js"})," 文件，它会直接映射到 ",(0,s.jsx)(n.code,{children:"/"})," 路由地址："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// pages/index.js\nimport React from 'react'\nexport default () => <h1>Hello world</h1>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在 ",(0,s.jsx)(n.code,{children:"pages"})," 目录下创建一个 ",(0,s.jsx)(n.code,{children:"about.js"})," 文件，它会直接映射到 ",(0,s.jsx)(n.code,{children:"/about"})," 路由地址："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// pages/about.js\nimport React from 'react'\nexport default () => <h1>About us</h1>\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"2-从-pages-router-到-app-router",children:["2. 从 Pages Router 到 App Router",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-从-pages-router-到-app-router",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["现在你打开使用 ",(0,s.jsx)(n.code,{children:"create-next-app"})," 创建的项目，你会发现默认并没有 ",(0,s.jsx)(n.code,{children:"pages"})," 这个目录。查看 ",(0,s.jsx)(n.code,{children:"packages.json"}),"中的 Next.js 版本，如果版本号大于 ",(0,s.jsx)(n.code,{children:"13.4"}),"，那就对了！"]}),"\n",(0,s.jsx)(n.p,{children:"Next.js 从 v13 起就使用了新的路由模式 —— App Router。之前的路由模式我们称之为“Pages Router”，为保持渐进式更新，依然存在。从 v13.4 起，App Router 正式进入稳定化阶段，App Router 功能更强、性能更好、代码组织更灵活，以后就让我们使用新的路由模式吧！"}),"\n",(0,s.jsxs)(n.p,{children:["可是这俩到底有啥区别呢？Next.js 又为什么升级到 App Router 呢？知其然知其所以然，让我们简单追溯一下。以前我们声明一个路由，只用在 ",(0,s.jsx)(n.code,{children:"pages"})," 目录下创建一个文件就可以了，以前的目录结构类似于："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"└── pages\n    ├── index.js\n    ├── about.js\n    └── more.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这种方式有一个弊端，那就是 ",(0,s.jsx)(n.code,{children:"pages"})," 目录的所有 js 文件都会被当成路由文件，这就导致比如组件不能写在 ",(0,s.jsx)(n.code,{children:"pages"})," 目录下，这就不符合开发者的使用习惯。（当然 Pages Router 还有很多其他的问题，只不过目前我们介绍的内容还太少，为了不增加大家的理解成本，就不多说了）"]}),"\n",(0,s.jsx)(n.p,{children:"升级为新的 App Router 后，现在的目录结构类似于："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"src/\n└── app\n    ├── page.js \n    ├── layout.js\n    ├── template.js\n    ├── loading.js\n    ├── error.js\n    └── not-found.js\n    ├── about\n    │   └── page.js\n    └── more\n        └── page.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["使用新的模式后，你会发现 ",(0,s.jsx)(n.code,{children:"app"})," 下多了很多文件。这些文件的名字并不是我乱起的，而是 Next.js 约定的一些特殊文件。从这些文件的名称中你也可以了解文件实现的功能，比如布局（layout.js）、模板（template.js）、加载状态（loading.js）、错误处理（error.js）、404（not-found.js）等。"]}),"\n",(0,s.jsx)(n.p,{children:"简单的来说，App Router 制定了更加完善的规范，使代码更好被组织和管理。至于这些文件具体的功能和介绍，不要着急，本篇我们会慢慢展开。"}),"\n",(0,s.jsxs)(n.h2,{id:"3-使用-pages-router",children:["3. 使用 Pages Router",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-使用-pages-router",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["当然你也可以继续使用 Pages Router，如果你想使用 Pages Router，只需要在 ",(0,s.jsx)(n.code,{children:"src"})," 目录下创建一个 ",(0,s.jsx)(n.code,{children:"pages"})," 文件夹或者在根目录下创建一个 ",(0,s.jsx)(n.code,{children:"pages"}),"文件夹。其中的 JS 文件会被视为 Pages Router 进行处理。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:E,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"但是要注意，虽然两者可以共存，但 App Router 的优先级要高于 Pages Router。而且如果两者解析为同一个 URL，会导致构建错误。"}),"\n",(0,s.jsx)(n.p,{children:"注意：你在 Next.js 官方文档进行搜索的时候，左上角会有 App 和 Pages 选项，这对应的就是 App Router 和 Pages Router："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:v,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"因为两种路由模式的使用方式有很大不同，所以搜索的时候注意选择正确的的路由模式。"}),"\n",(0,s.jsxs)(n.h2,{id:"4-使用-app-router",children:["4. 使用 App Router",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-使用-app-router",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"41-定义路由routes",children:["4.1. 定义路由（Routes）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-定义路由routes",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"现在让我们开始正式的学习 App Router 吧。"}),"\n",(0,s.jsxs)(n.p,{children:["首先是定义路由，文件夹被用来定义路由。每个文件夹都代表一个对应到 URL 片段的路由片段。创建嵌套的路由，只需要创建嵌套的文件夹。举个例子，下图的 ",(0,s.jsx)(n.code,{children:"app/dashboard/settings"}),"目录对应的路由地址就是 ",(0,s.jsx)(n.code,{children:"/dashboard/settings"}),"："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:B,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h3,{id:"42-定义页面pages",children:["4.2. 定义页面（Pages）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-定义页面pages",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["那如何保证这个路由可以被访问呢？你需要创建一个特殊的名为 ",(0,s.jsx)(n.code,{children:"page.js"})," 的文件。至于为什么叫 ",(0,s.jsx)(n.code,{children:"page.js"}),"呢？除了 ",(0,s.jsx)(n.code,{children:"page"})," 有“页面”这个含义之外，你可以理解为这是一种约定或者规范。（如果你是 Next.js 的开发者，你也可以约定为 ",(0,s.jsx)(n.code,{children:"index.js"}),"甚至 ",(0,s.jsx)(n.code,{children:"yayu.js"}),"！）"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:y,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"在上图这个例子中："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app/page.js"})," 对应路由 ",(0,s.jsx)(n.code,{children:"/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app/dashboard/page.js"})," 对应路由 ",(0,s.jsx)(n.code,{children:"/dashboard"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app/dashboard/settings/page.js"})," 对应路由",(0,s.jsx)(n.code,{children:"/dashboard/settings"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"analytics"})," 目录下因为没有 ",(0,s.jsx)(n.code,{children:"page.js"})," 文件，所以没有对应的路由。这个文件可以被用于存放组件、样式表、图片或者其他文件。"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["当然不止 ",(0,s.jsx)(n.code,{children:".js"}),"文件，Next.js 默认是支持 React、TypeScript 的，所以 ",(0,s.jsx)(n.code,{children:".js"}),"、",(0,s.jsx)(n.code,{children:".jsx"}),"、",(0,s.jsx)(n.code,{children:".tsx"})," 都是可以的。"]})}),"\n",(0,s.jsxs)(n.p,{children:["那 ",(0,s.jsx)(n.code,{children:"page.js"})," 的代码该如何写呢？最常见的是展示 UI，比如："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/page.js\nexport default function Page() {\n  return <h1>Hello, Next.js!</h1>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["访问 ",(0,s.jsx)(n.code,{children:"http://localhost:3000/"}),"，效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:D,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/objective-ellis-ywn8jd?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt475kks00073b6iw2cbcpjg%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt475kkr00023b6ihi25h458%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt475kkr00043b6i9lkjph4n%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt475kks00063b6i9l5o6xnw%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt475kkr00023b6ihi25h458%2522%253A%257B%2522id%2522%253A%2522clt475kkr00023b6ihi25h458%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clt475kks00063b6i9l5o6xnw%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt475kkr00053b6i8y93zpk4%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252F%2522%257D%255D%252C%2522id%2522%253A%2522clt475kks00063b6i9l5o6xnw%2522%252C%2522activeTabId%2522%253A%2522clt475kkr00053b6i8y93zpk4%2522%257D%252C%2522clt475kkr00043b6i9lkjph4n%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt475kkr00033b6i40hrddok%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt475kkr00043b6i9lkjph4n%2522%252C%2522activeTabId%2522%253A%2522clt475kkr00033b6i40hrddok%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Pages"})]}),"\n",(0,s.jsxs)(n.h3,{id:"43-定义布局layouts",children:["4.3. 定义布局（Layouts）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-定义布局layouts",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"布局是指多个页面共享的 UI。在导航的时候，布局会保留状态、保持可交互性并且不会重新渲染，比如用来实现后台管理系统的侧边导航栏。"}),"\n",(0,s.jsxs)(n.p,{children:["定义一个布局，你需要新建一个名为 ",(0,s.jsx)(n.code,{children:"layout.js"}),"的文件，该文件默认导出一个 React 组件，该组件应接收一个 ",(0,s.jsx)(n.code,{children:"children"})," prop，",(0,s.jsx)(n.code,{children:"chidren"})," 表示子布局（如果有的话）或者子页面。"]}),"\n",(0,s.jsx)(n.p,{children:"举个例子，我们新建目录和文件如下图所示："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:f,alt:"image.png"})}),"\n",(0,s.jsx)(n.p,{children:"相关代码如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/layout.js\nexport default function DashboardLayout({\n  children,\n}) {\n  return (\n    <section>\n      <nav>nav</nav>\n      {children}\n    </section>\n  )\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/page.js\nexport default function Page() {\n  return <h1>Hello, Dashboard!</h1>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["当访问 ",(0,s.jsx)(n.code,{children:"/dashboard"}),"的时候，效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["其中，",(0,s.jsx)(n.code,{children:"nav"})," 来自于 ",(0,s.jsx)(n.code,{children:"app/dashboard/layout.js"}),"，",(0,s.jsx)(n.code,{children:"Hello, Dashboard!"})," 来自于 ",(0,s.jsx)(n.code,{children:"app/dashboard/page.js"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"你可以发现：同一文件夹下如果有 layout.js 和 page.js，page 会作为 children 参数传入 layout。换句话说，layout 会包裹同层级的 page。"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"app/dashboard/settings/page.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/settings/page.js\nexport default function Page() {\n  return <h1>Hello, Settings!</h1>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["当访问 ",(0,s.jsx)(n.code,{children:"/dashboard/settings"}),"的时候，效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:C,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["其中，",(0,s.jsx)(n.code,{children:"nav"})," 来自于 ",(0,s.jsx)(n.code,{children:"app/dashboard/layout.js"}),"，",(0,s.jsx)(n.code,{children:"Hello, Settings!"})," 来自于 ",(0,s.jsx)(n.code,{children:"app/dashboard/settings/page.js"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"你可以发现：布局是支持嵌套的"}),"，",(0,s.jsx)(n.code,{children:"app/dashboard/settings/page.js"})," 会使用 ",(0,s.jsx)(n.code,{children:"app/layout.js"})," 和 ",(0,s.jsx)(n.code,{children:"app/dashboard/layout.js"})," 两个布局中的内容，不过因为我们没有在 ",(0,s.jsx)(n.code,{children:"app/layout.js"})," 写入可以展示的内容，所以图中没有体现出来。"]}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/layouts-v3csx2?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt489j2g00073b6h88j62aog%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt489j2g00023b6he9lxbh9s%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt489j2g00043b6h2v7dpi6i%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt489j2g00063b6hmqcdputt%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt489j2g00023b6he9lxbh9s%2522%253A%257B%2522id%2522%253A%2522clt489j2g00023b6he9lxbh9s%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clt489j2g00063b6hmqcdputt%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt489j2g00053b6hi3oec3fe%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fdashboard%252Fsettings%2522%257D%255D%252C%2522id%2522%253A%2522clt489j2g00063b6hmqcdputt%2522%252C%2522activeTabId%2522%253A%2522clt489j2g00053b6hi3oec3fe%2522%257D%252C%2522clt489j2g00043b6h2v7dpi6i%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt489j2g00033b6h5p3d7t5v%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt489j2g00043b6h2v7dpi6i%2522%252C%2522activeTabId%2522%253A%2522clt489j2g00033b6h5p3d7t5v%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Layouts"})]}),"\n",(0,s.jsxs)(n.h4,{id:"根布局root-layout",children:["根布局（Root Layout）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#根布局root-layout",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["布局支持嵌套，最顶层的布局我们称之为根布局（Root Layout），也就是 ",(0,s.jsx)(n.code,{children:"app/layout.js"}),"。它会应用于所有的路由。除此之外，这个布局还有点特殊。"]}),"\n",(0,s.jsxs)(n.p,{children:["使用 ",(0,s.jsx)(n.code,{children:"create-next-app"})," 默认创建的 ",(0,s.jsx)(n.code,{children:"layout.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/layout.js\nimport './globals.css'\nimport { Inter } from 'next/font/google'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata = {\n  title: 'Create Next App',\n  description: 'Generated by create next app',\n}\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>{children}</body>\n    </html>\n  )\n}\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"其中："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app"})," 目录必须包含根布局，也就是 ",(0,s.jsx)(n.code,{children:"app/layout.js"})," 这个文件是必需的。"]}),"\n",(0,s.jsxs)(n.li,{children:["根布局必须包含 ",(0,s.jsx)(n.code,{children:"html"})," 和 ",(0,s.jsx)(n.code,{children:"body"}),"标签，其他布局不能包含这些标签。如果你要更改这些标签，不推荐直接修改，参考",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309079119902277669",target:"_blank",rel:"noopener noreferrer",children:"《Metadata 篇》"}),"。"]}),"\n",(0,s.jsxs)(n.li,{children:["你可以使用",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7308693561648611379#heading-5",target:"_blank",rel:"noopener noreferrer",children:"路由组"}),"创建多个根布局。"]}),"\n",(0,s.jsxs)(n.li,{children:["默认根布局是",(0,s.jsx)(n.a,{href:"https://juejin.cn/book/7307859898316881957/section/7309076661532622885",target:"_blank",rel:"noopener noreferrer",children:"服务端组件"}),"，且不能设置为客户端组件。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"44-定义模板templates",children:["4.4. 定义模板（Templates）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-定义模板templates",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"模板类似于布局，它也会传入每个子布局或者页面。但不会像布局那样维持状态。"}),"\n",(0,s.jsx)(n.p,{children:"模板在路由切换时会为每一个 children  创建一个实例。这就意味着当用户在共享一个模板的路由间跳转的时候，将会重新挂载组件实例，重新创建 DOM 元素，不保留状态。这听起来有点抽象，没有关系，我们先看看模板的写法，再写个 demo 你就明白了。"}),"\n",(0,s.jsxs)(n.p,{children:["定义一个模板，你需要新建一个名为 ",(0,s.jsx)(n.code,{children:"template.js"})," 的文件，该文件默认导出一个 React 组件，该组件接收一个 ",(0,s.jsx)(n.code,{children:"children"})," prop。我们写个示例代码。"]}),"\n",(0,s.jsxs)(n.p,{children:["在 ",(0,s.jsx)(n.code,{children:"app"}),"目录下新建一个 ",(0,s.jsx)(n.code,{children:"template.js"}),"文件："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"template.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/template.js\nexport default function Template({ children }) {\n  return <div>{children}</div>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["你会发现，这用法跟布局一模一样。它们最大的区别就是状态的保持。如果同一目录下既有 ",(0,s.jsx)(n.code,{children:"template.js"})," 也有 ",(0,s.jsx)(n.code,{children:"layout.js"}),"，最后的输出效果如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"<Layout>\n  {/* 模板需要给一个唯一的 key */}\n  <Template key={routeParam}>{children}</Template>\n</Layout>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["也就是说 ",(0,s.jsx)(n.code,{children:"layout"})," 会包裹 ",(0,s.jsx)(n.code,{children:"template"}),"，",(0,s.jsx)(n.code,{children:"template"})," 又会包裹 ",(0,s.jsx)(n.code,{children:"page"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"某些情况下，模板会比布局更适合："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"依赖于 useEffect 和 useState 的功能，比如记录页面访问数（维持状态就不会在路由切换时记录访问数了）、用户反馈表单（每次重新填写）等"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"更改框架的默认行为，举个例子，布局内的 Suspense 只会在布局加载的时候展示一次 fallback UI，当切换页面的时候不会展示。但是使用模板，fallback 会在每次路由切换的时候展示"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["注：关于模板的适用场景，可以参考",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7343569488744300553",target:"_blank",rel:"noopener noreferrer",children:"《Next.js v14 的模板（template.js）到底有啥用？》"}),"，对这两种情况都做了举例说明"]}),"\n",(0,s.jsxs)(n.h4,{id:"布局-vs-模板",children:["布局 VS 模板",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#布局-vs-模板",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"为了帮助大家更好的理解布局和模板，我们写一个 demo，展示下两者的特性。"}),"\n",(0,s.jsx)(n.p,{children:"项目目录如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"app\n└─ dashboard\n   ├─ layout.js\n   ├─ page.js\n   ├─ template.js\n   ├─ about\n   │  └─ page.js\n   └─ settings\n      └─ page.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["其中 ",(0,s.jsx)(n.code,{children:"dashboard/layout.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n\nimport { useState } from 'react'\nimport Link from 'next/link'\n\nexport default function Layout({ children }) {\n  const [count, setCount] = useState(0)\n  return (\n    <>\n      <div>\n        <Link href=\"/dashboard/about\">About</Link>\n        <br/>\n        <Link href=\"/dashboard/settings\">Settings</Link>\n      </div>\n      <h1>Layout {count}</h1>\n      <button onClick={() => setCount(count + 1)}>\n        Increment\n      </button>\n      {children}\n    </>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dashboard/template.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n\nimport { useState } from 'react'\n\nexport default function Template({ children }) {\n  const [count, setCount] = useState(0)\n  return (\n    <>\n      <h1>Template {count}</h1>\n      <button onClick={() => setCount(count + 1)}>\n        Increment\n      </button>\n      {children}\n    </>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dashboard/page.js"}),"代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export default function Page() {\n  return <h1>Hello, Dashboard!</h1>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dashboard/about/page.js"}),"代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export default function Page() {\n  return <h1>Hello, About!</h1>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dashboard/settings/page.js"}),"代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"export default function Page() {\n  return <h1>Hello, Settings!</h1>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"最终展示效果如下（为了方便区分，做了部分样式处理）："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["现在点击两个 ",(0,s.jsx)(n.code,{children:"Increment"})," 按钮，会开始计数。随便点击下数字，然后再点击 ",(0,s.jsx)(n.code,{children:"About"}),"或者 ",(0,s.jsx)(n.code,{children:"Settings"}),"切换路由，你会发现，Layout 后的数字没有发生变化，Template 后的数字重置为 0。这就是所谓的状态保持。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:b,alt:"10.gif"})}),"\n",(0,s.jsx)(n.p,{children:"注：当然如果刷新页面，Layout 和 Template 后的数字肯定都重置为 0。"}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/templates-h25kzz?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt48u2gb00073b6hi8zrj7z5%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt48u2gb00023b6h6qaf1m82%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt48u2gb00043b6hvw4el4sp%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt48u2gb00063b6ht7hvjihq%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt48u2gb00023b6h6qaf1m82%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt48u2ga00013b6hrwr6p06f%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%257D%255D%252C%2522id%2522%253A%2522clt48u2gb00023b6h6qaf1m82%2522%252C%2522activeTabId%2522%253A%2522clt48u2ga00013b6hrwr6p06f%2522%257D%252C%2522clt48u2gb00063b6ht7hvjihq%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt48u2gb00053b6ho6d4dyg7%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fdashboard%2522%257D%255D%252C%2522id%2522%253A%2522clt48u2gb00063b6ht7hvjihq%2522%252C%2522activeTabId%2522%253A%2522clt48u2gb00053b6ho6d4dyg7%2522%257D%252C%2522clt48u2gb00043b6hvw4el4sp%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt48u2gb00033b6hgzgomtf5%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt48u2gb00043b6hvw4el4sp%2522%252C%2522activeTabId%2522%253A%2522clt48u2gb00033b6hgzgomtf5%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Templates VS Layouts"})]}),"\n",(0,s.jsxs)(n.h3,{id:"45-定义加载界面loading-ui",children:["4.5. 定义加载界面（Loading UI）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#45-定义加载界面loading-ui",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["现在我们已经了解了 ",(0,s.jsx)(n.code,{children:"page.js"}),"、",(0,s.jsx)(n.code,{children:"layout.js"}),"、",(0,s.jsx)(n.code,{children:"template.js"}),"的功能，然而特殊文件还不止这些。App Router 提供了用于展示加载界面的 ",(0,s.jsx)(n.code,{children:"loading.js"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["这个功能的实现借助了 React 的",(0,s.jsx)(n.code,{children:"Suspense"})," API。关于 Suspense 的用法，可以查看 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7163934860694781989",target:"_blank",rel:"noopener noreferrer",children:"《React 之 Suspense》"}),"。它实现的效果就是当发生路由变化的时候，立刻展示 fallback UI，等加载完成后，展示数据。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// 在 ProfilePage 组件处于加载阶段时显示 Spinner\n<Suspense fallback={<Spinner />}>\n  <ProfilePage />\n</Suspense>\n"})}),"\n",(0,s.jsx)(n.p,{children:"初次接触 Suspense 这个概念的时候，往往会有一个疑惑，那就是——“在哪里控制关闭 fallback UI 的呢？”"}),"\n",(0,s.jsx)(n.p,{children:"哪怕在 React 官网中，对背后的实现逻辑并无过多提及。但其实实现的逻辑很简单，简单的来说，ProfilePage 会 throw 一个数据加载的 promise，Suspense 会捕获这个 promise，追加一个 then 函数，then 函数中实现替换 fallback UI 。当数据加载完毕，promise 进入 resolve 状态，then 函数执行，于是更新替换 fallback UI。"}),"\n",(0,s.jsxs)(n.p,{children:["了解了原理，那我们来看看如何写这个 ",(0,s.jsx)(n.code,{children:"loading.js"}),"吧。",(0,s.jsx)(n.code,{children:"dashboard"})," 目录下我们新建一个 ",(0,s.jsx)(n.code,{children:"loading.js"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:A,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"loading.js"}),"的代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/loading.js\nexport default function DashboardLoading() {\n  return <>Loading dashboard...</>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["同级的 ",(0,s.jsx)(n.code,{children:"page.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/page.js\nasync function getData() {\n  await new Promise((resolve) => setTimeout(resolve, 3000))\n  return {\n    message: 'Hello, Dashboard!',\n  }\n}\nexport default async function DashboardPage(props) {\n  const { message } = await getData()\n  return <h1>{message}</h1>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"不再需要其他的代码，loading 的效果就实现了："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:x,alt:"11.gif"})}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/loading-yw7zlg?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt4b2khv00073b6hu9pjxkod%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt4b2khv00023b6hl69ez1j6%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt4b2khv00043b6hupnzd9jd%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt4b2khv00063b6his95k772%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt4b2khv00023b6hl69ez1j6%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00013b6hs9i6fr2l%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00023b6hl69ez1j6%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00013b6hs9i6fr2l%2522%257D%252C%2522clt4b2khv00063b6his95k772%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00053b6hmql3m7p5%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fdashboard%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00063b6his95k772%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00053b6hmql3m7p5%2522%257D%252C%2522clt4b2khv00043b6hupnzd9jd%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00033b6h55d7v2oi%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00043b6hupnzd9jd%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00033b6h55d7v2oi%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Loading"})]}),"\n",(0,s.jsxs)(n.p,{children:["就是这么简单。其关键在于 ",(0,s.jsx)(n.code,{children:"page.js"}),"导出了一个 async 函数。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"loading.js"})," 的实现原理是将 ",(0,s.jsx)(n.code,{children:"page.js"}),"和下面的 children 用 ",(0,s.jsx)(n.code,{children:"<Suspense>"})," 包裹。因为",(0,s.jsx)(n.code,{children:"page.js"}),"导出一个 async 函数，Suspense 得以捕获数据加载的 promise，借此实现了 loading 组件的关闭。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:j,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["当然实现 loading 效果，不一定非导出一个 async 函数。也可以借助 React 的 ",(0,s.jsx)(n.code,{children:"use"})," 函数。现在我们在 ",(0,s.jsx)(n.code,{children:"dashboard"}),"下新建一个 ",(0,s.jsx)(n.code,{children:"about"}),"目录，在其中新建 ",(0,s.jsx)(n.code,{children:"page.js"}),"文件。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"/dashboard/about/page.js"})," 代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// /dashboard/about/page.js\nimport { use } from 'react'\n\nasync function getData() {\n  await new Promise((resolve) => setTimeout(resolve, 5000))\n  return {\n    message: 'Hello, About!',\n  }\n}\n\nexport default function Page() {\n  const {message} = use(getData())\n  return <h1>{message}</h1>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"同样实现了 loading  效果："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:p,alt:"12.gif"})}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/loading-yw7zlg?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt4b2khv00073b6hu9pjxkod%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt4b2khv00023b6hl69ez1j6%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt4b2khv00043b6hupnzd9jd%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt4b2khv00063b6his95k772%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt4b2khv00023b6hl69ez1j6%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00013b6hs9i6fr2l%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00023b6hl69ez1j6%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00013b6hs9i6fr2l%2522%257D%252C%2522clt4b2khv00063b6his95k772%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00053b6hmql3m7p5%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fdashboard%252Fabout%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00063b6his95k772%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00053b6hmql3m7p5%2522%257D%252C%2522clt4b2khv00043b6hupnzd9jd%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4b2khv00033b6h55d7v2oi%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt4b2khv00043b6hupnzd9jd%2522%252C%2522activeTabId%2522%253A%2522clt4b2khv00033b6h55d7v2oi%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Loading"})]}),"\n",(0,s.jsxs)(n.p,{children:["如果你想针对 ",(0,s.jsx)(n.code,{children:"/dashboard/about"})," 单独实现一个 loading 效果，那就在 ",(0,s.jsx)(n.code,{children:"about"})," 目录下再写一个 ",(0,s.jsx)(n.code,{children:"loading.js"})," 即可。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果同一文件夹既有 ",(0,s.jsx)(n.code,{children:"layout.js"})," 又有 ",(0,s.jsx)(n.code,{children:"template.js"})," 又有 ",(0,s.jsx)(n.code,{children:"loading.js"})," ，那它们的层级关系是怎样呢？"]}),"\n",(0,s.jsx)(n.p,{children:"对于这些特殊文件的层级问题，直接一张图搞定："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,s.jsxs)(n.h3,{id:"46-定义错误处理error-handling",children:["4.6. 定义错误处理（Error Handling）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#46-定义错误处理error-handling",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["再讲讲特殊文件 ",(0,s.jsx)(n.code,{children:"error.js"}),"。顾名思义，用来创建发生错误时的展示 UI。"]}),"\n",(0,s.jsxs)(n.p,{children:["其实现借助了 React 的 ",(0,s.jsx)(n.a,{href:"https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary",target:"_blank",rel:"noopener noreferrer",children:"Error Boundary"})," 功能。简单来说，就是给 page.js 和 children 包了一层 ",(0,s.jsx)(n.code,{children:"ErrorBoundary"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["我们写一个 demo 演示一下 ",(0,s.jsx)(n.code,{children:"error.js"})," 的效果。",(0,s.jsx)(n.code,{children:"dashboard"})," 目录下新建一个 ",(0,s.jsx)(n.code,{children:"error.js"}),"，目录效果如下："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dashboard/error.js"}),"代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client' // 错误组件必须是客户端组件\n// dashboard/error.js\nimport { useEffect } from 'react'\n \nexport default function Error({ error, reset }) {\n  useEffect(() => {\n    console.error(error)\n  }, [error])\n \n  return (\n    <div>\n      <h2>Something went wrong!</h2>\n      <button\n        onClick={\n          // 尝试恢复\n          () => reset()\n        }\n      >\n        Try again\n      </button>\n    </div>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["为触发 Error 错误，同级 ",(0,s.jsx)(n.code,{children:"page.js"})," 的代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'"use client";\n// dashboard/page.js\nimport React from "react";\n\nexport default function Page() {\n  const [error, setError] = React.useState(false);\n\n  const handleGetError = () => {\n    setError(true);\n  };\n\n  return (\n    <>{error ? Error() : <button onClick={handleGetError}>Get Error</button>}</>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"效果如下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:c,alt:"13.gif"})}),"\n",(0,s.jsxs)(n.p,{children:["有时错误是暂时的，只需要重试就可以解决问题。所以 Next.js 会在 ",(0,s.jsx)(n.code,{children:"error.js"})," 导出的组件中，传入 ",(0,s.jsx)(n.code,{children:"reset"})," 函数，帮助尝试从错误中恢复。该函数会触发重新渲染错误边界里的内容。如果成功，会替换展示重新渲染的内容。"]}),"\n",(0,s.jsxs)(n.p,{children:["线上查看代码和效果：",(0,s.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/error-l6gr2j?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clt4bdci200073b6h91twyt7o%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clt4bdci200023b6h529g4j8y%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clt4bdci200043b6hd7knjpp1%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clt4bdci200063b6h8vy2xj52%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clt4bdci200023b6h529g4j8y%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4bdci100013b6h9h1wm21z%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%257D%255D%252C%2522id%2522%253A%2522clt4bdci200023b6h529g4j8y%2522%252C%2522activeTabId%2522%253A%2522clt4bdci100013b6h9h1wm21z%2522%257D%252C%2522clt4bdci200063b6h8vy2xj52%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4bdci200053b6hxtxruqpi%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3000%252C%2522path%2522%253A%2522%252Fdashboard%2522%257D%255D%252C%2522id%2522%253A%2522clt4bdci200063b6h8vy2xj52%2522%252C%2522activeTabId%2522%253A%2522clt4bdci200053b6hxtxruqpi%2522%257D%252C%2522clt4bdci200043b6hd7knjpp1%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clt4bdci200033b6hwspjksxq%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%255D%252C%2522id%2522%253A%2522clt4bdci200043b6hd7knjpp1%2522%252C%2522activeTabId%2522%253A%2522clt4bdci200033b6hwspjksxq%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D",target:"_blank",rel:"noopener noreferrer",children:"CodeSandbox Error"})]}),"\n",(0,s.jsx)(n.p,{children:"还记得上节讲过的层级问题吗？让我们回顾一下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:i,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["从这张图里你会发现一个问题：因为 ",(0,s.jsx)(n.code,{children:"Layout"})," 和 ",(0,s.jsx)(n.code,{children:"Template"})," 在 ",(0,s.jsx)(n.code,{children:"ErrorBoundary"})," 外面，这说明错误边界不能捕获同级的 ",(0,s.jsx)(n.code,{children:"layout.js"})," 或者 ",(0,s.jsx)(n.code,{children:"template.js"})," 中的错误。如果你想捕获特定布局或者模板中的错误，那就需要在父级的 ",(0,s.jsx)(n.code,{children:"error.js"})," 里进行捕获。"]}),"\n",(0,s.jsxs)(n.p,{children:["那问题来了，如果已经到了顶层，就比如根布局中的错误如何捕获呢？为了解决这个问题，Next.js 提供了 ",(0,s.jsx)(n.code,{children:"global-error.js"}),"文件，使用它时，需要将其放在 ",(0,s.jsx)(n.code,{children:"app"})," 目录下。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"global-error.js"}),"会包裹整个应用，而且当它触发的时候，它会替换掉根布局的内容。所以，",(0,s.jsx)(n.code,{children:"global-error.js"})," 中也要定义 ",(0,s.jsx)(n.code,{children:"<html>"})," 和 ",(0,s.jsx)(n.code,{children:"<body>"})," 标签。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"global-error.js"}),"示例代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"'use client'\n// app/global-error.js\nexport default function GlobalError({ error, reset }) {\n  return (\n    <html>\n      <body>\n        <h2>Something went wrong!</h2>\n        <button onClick={() => reset()}>Try again</button>\n      </body>\n    </html>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["注：",(0,s.jsx)(n.code,{children:"global-error.js"})," 用来处理根布局和根模板中的错误，",(0,s.jsx)(n.code,{children:"app/error.js"})," 建议还是要写的"]}),"\n",(0,s.jsxs)(n.h3,{id:"47-定义-404-页面",children:["4.7. 定义 404 页面",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#47-定义-404-页面",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["最后再讲一个特殊文件 —— ",(0,s.jsx)(n.code,{children:"not-found.js"}),"。顾名思义，当该路由不存在的时候展示的内容。"]}),"\n",(0,s.jsx)(n.p,{children:"Next.js 项目默认的 not-found 效果如下："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:a,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["如果你要替换这个效果，只需要在 ",(0,s.jsx)(n.code,{children:"app"})," 目录下新建一个 ",(0,s.jsx)(n.code,{children:"not-found.js"}),"，代码示例如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import Link from 'next/link'\n \nexport default function NotFound() {\n  return (\n    <div>\n      <h2>Not Found</h2>\n      <p>Could not find requested resource</p>\n      <Link href=\"/\">Return Home</Link>\n    </div>\n  )\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"not-found 的效果就会更改为："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,s.jsxs)(n.p,{children:["关于 ",(0,s.jsx)(n.code,{children:"app/not-found.js"})," 一定要说明一点的是，它只能由两种情况触发："]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"当组件抛出了 notFound 函数的时候"}),"\n",(0,s.jsx)(n.li,{children:"当路由地址不匹配的时候"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["所以 ",(0,s.jsx)(n.code,{children:"app/not-found.js"})," 可以修改默认 404 页面的样式。但是，如果 ",(0,s.jsx)(n.code,{children:"not-found.js"}),"放到了任何子文件夹下，它只能由 ",(0,s.jsx)(n.code,{children:"notFound"}),"函数手动触发。比如这样："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// /dashboard/blog/page.js\nimport { notFound } from 'next/navigation'\n\nexport default function Page() {\n  notFound()\n  return <></>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["执行 notFound 函数时，会由最近的 not-found.js 来处理。但如果直接访问不存在的路由，则都是由 ",(0,s.jsx)(n.code,{children:"app/not-found.js"})," 来处理。"]}),"\n",(0,s.jsxs)(n.p,{children:["对应到实际开发，当我们请求一个用户的数据时或是请求一篇文章的数据时，如果该数据不存在，就可以直接丢出 ",(0,s.jsx)(n.code,{children:"notFound"})," 函数，渲染自定义的 ",(0,s.jsx)(n.code,{children:"not-found.js"})," 界面。示例代码如下："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// app/dashboard/blog/[id]/page.js\nimport { notFound } from 'next/navigation'\n \nasync function fetchUser(id) {\n  const res = await fetch('https://...')\n  if (!res.ok) return undefined\n  return res.json()\n}\n \nexport default async function Profile({ params }) {\n  const user = await fetchUser(params.id)\n \n  if (!user) {\n    notFound()\n  }\n \n  // ...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["注：后面我们还会讲到“路由组”这个概念，当 ",(0,s.jsx)(n.code,{children:"app/not-found.js"})," 和路由组一起使用的时候，可能会出现问题。具体参考 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7351321244125265930",target:"_blank",rel:"noopener noreferrer",children:"《Next.js v14 如何为多个根布局自定义不同的 404 页面？竟然还有些麻烦！欢迎探讨》"})]}),"\n",(0,s.jsxs)(n.h2,{id:"小结",children:["小结",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小结",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"恭喜你，完成了本节内容的学习！"}),"\n",(0,s.jsxs)(n.p,{children:["这一节我们重点讲解了 Next.js 基于文件系统的路由解决方案 App Router，介绍了用于定义页面的",(0,s.jsx)(n.code,{children:"page.js"}),"、定义布局的",(0,s.jsx)(n.code,{children:"layout.js"}),"、定义模板的",(0,s.jsx)(n.code,{children:"template.js"}),"、定义加载界面的",(0,s.jsx)(n.code,{children:"loading.js"}),"、定义错误处理的",(0,s.jsx)(n.code,{children:"error.js"}),"、定义 404 页面的",(0,s.jsx)(n.code,{children:"not-found.js"}),"。现在你再看 App Router 的这个目录结构："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"src/\n└── app\n    ├── page.js \n    ├── layout.js\n    ├── template.js\n    ├── loading.js\n    ├── error.js\n    └── not-found.js\n    ├── about\n    │   └── page.js\n    └── more\n        └── page.js\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"简单的来说，App Router 制定了更加完善的规范，使代码更好被组织和管理。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"对此是不是有了更加深刻的理解呢？然而这还只有 Next.js 强大的路由功能的一小部分。下篇让我们继续学习。"}),"\n",(0,s.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Routers",target:"_blank",rel:"noopener noreferrer",children:"Routers - MDN Web Docs Glossary: Definitions of Web-related terms | MDN"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing",target:"_blank",rel:"noopener noreferrer",children:"Building Your Application: Routing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/defining-routes",target:"_blank",rel:"noopener noreferrer",children:"Routing: Defining Routes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/pages-and-layouts",target:"_blank",rel:"noopener noreferrer",children:"Routing: Pages and Layouts"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming",target:"_blank",rel:"noopener noreferrer",children:"Routing: Loading UI and Streaming"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/routing/error-handling",target:"_blank",rel:"noopener noreferrer",children:"Routing: Error Handling"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/api-reference/file-conventions/not-found",target:"_blank",rel:"noopener noreferrer",children:"File Conventions: not-found.js"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/api-reference/functions/not-found",target:"_blank",rel:"noopener noreferrer",children:"Functions: notFound"})}),"\n"]})]})}function N(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(L,{...e})}):L(e)}let P=N;N.__RSPRESS_PAGE_META={},N.__RSPRESS_PAGE_META["Next.js%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F3.%E8%B7%AF%E7%94%B1%E7%AF%87%20_%20App%20Router.md"]={toc:[{text:"前言",id:"前言",depth:2},{text:"1. 文件系统（file-system）",id:"1-文件系统file-system",depth:2},{text:"2. 从 Pages Router 到 App Router",id:"2-从-pages-router-到-app-router",depth:2},{text:"3. 使用 Pages Router",id:"3-使用-pages-router",depth:2},{text:"4. 使用 App Router",id:"4-使用-app-router",depth:2},{text:"4.1. 定义路由（Routes）",id:"41-定义路由routes",depth:3},{text:"4.2. 定义页面（Pages）",id:"42-定义页面pages",depth:3},{text:"4.3. 定义布局（Layouts）",id:"43-定义布局layouts",depth:3},{text:"根布局（Root Layout）",id:"根布局root-layout",depth:4},{text:"4.4. 定义模板（Templates）",id:"44-定义模板templates",depth:3},{text:"布局 VS 模板",id:"布局-vs-模板",depth:4},{text:"4.5. 定义加载界面（Loading UI）",id:"45-定义加载界面loading-ui",depth:3},{text:"4.6. 定义错误处理（Error Handling）",id:"46-定义错误处理error-handling",depth:3},{text:"4.7. 定义 404 页面",id:"47-定义-404-页面",depth:3},{text:"小结",id:"小结",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"3.路由篇 _ App Router",headingTitle:"3.路由篇 _ App Router",frontmatter:{}}}}]);