"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["27608"],{233938:function(e,n,r){r.r(n),r.d(n,{default:()=>B});var l=r(552676),s=r(740453);let t=r.p+"static/image/0d9bf392c54722d1d97c710e78f46557.cfd1f5f4.webp",d=r.p+"static/image/6a7df93e8f76d6f5397f83f2556f53d0.9aa064fd.webp",c=r.p+"static/image/a439b4f871ebf6c5655ff6c2cba2866e.60b64820.webp",a=r.p+"static/image/402f656a3cca0219e0d99223d2266a15.0d55c217.webp",i=r.p+"static/image/ee130efaae5221a1794249d87853edea.848e0765.webp",o=r.p+"static/image/cda04b62d29af6fcbb58dffc3c888cac.061aceaf.webp",p=r.p+"static/image/f790a31c98c9c8ef55287f68a122cb60.0cad0568.webp",h=r.p+"static/image/4681738f9e96ffb2b2c945821c419409.336b4051.webp",x=r.p+"static/image/1cdf2ca023cea1f6ff0c1e0190a7f33b.6ef886ce.webp",f=r.p+"static/image/e586b9a7b0c28b56dc4aa83fff91fb64.98a6ecef.webp",b=r.p+"static/image/e31aa094150ee58db8959b210007166b.0fa7bf59.webp",j=r.p+"static/image/3f2cee477c50052eaca1e66a1cf2f775.4c015872.webp",u=r.p+"static/image/c12617296c9db713364aadabbe0fba65.291e367f.webp",g=r.p+"static/image/65ba5e5829f554d26effea1c9664e7b3.ad18841d.webp",v=r.p+"static/image/9328cb8f36e9603578d6692eae490689.75689f24.webp",m=r.p+"static/image/e31667981fbc652404557b3a47ee1f96.45acd96e.webp";function y(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",pre:"pre",code:"code",img:"img",h3:"h3"},(0,s.ah)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"6-语法篇--样式",children:["6-语法篇 ❘ 样式",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-语法篇--样式",children:"#"})]}),"\n",(0,l.jsxs)(n.h2,{id:"1-前言",children:["1. 前言",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"本篇推荐学习指数：⭐️⭐⭐️，必学内容️"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"本篇我们来盘点下 Svelte 中样式相关的知识。"}),"\n",(0,l.jsxs)(n.h2,{id:"2-scoped",children:["2. Scoped",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-scoped",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"在第一节，我们讲到组件的样式是 Scoped，也就是说，设置的样式只会影响当前组件元素的样式。我们看个例子："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Child from './Child.svelte'\n<\/script>\n<style>\n  p {\n    color: burlywood;\n  }\n</style>\n\n<p>Text From App</p>\n<Child />\n\n\x3c!-- Child.svelte --\x3e\n<p>Text From Child</p>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/8cf9b54b24ac499792b4574bec64f6f5?version=5.1.12",title:"https://svelte.dev/playground/8cf9b54b24ac499792b4574bec64f6f5?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:m,alt:""})}),"\n",(0,l.jsxs)(n.p,{children:["确实如此，我们在 ",(0,l.jsx)(n.code,{children:"<App>"})," 组件设置的 ",(0,l.jsx)(n.code,{children:"<p>"})," 元素样式不会影响子组件 ",(0,l.jsx)(n.code,{children:"<Child>"})," 中的 ",(0,l.jsx)(n.code,{children:"<p>"})," 元素样式。"]}),"\n",(0,l.jsx)(n.p,{children:"Svelte 是怎么实现的呢？"}),"\n",(0,l.jsx)(n.p,{children:"其实是通过给受影响的组件加了一个带 hash 的类名（下图中 svelte-p412vk）来实现的："}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:v,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"那你可能问，如果是做动画的 keyframes 呢？也是 Scoped："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Child from './Child.svelte'\n<\/script>\n\n<style>\n  p {\n    width: 200px;\n    text-align: center;\n    color: burlywood;\n    display: block;\n    animation: heartbeat 2s infinite;\n  }\n\n@keyframes heartbeat {\n  0% { transform: scale( .75 )}\n  20% { transform: scale( 1 )}\n  40% { transform: scale( .75 )}\n  60% { transform: scale( 1 ) }\n  80% { transform: scale( .75 )}\n  100% { transform: scale( .75 )}\n}\n</style>\n\n<p>Text From App</p>\n<Child />\n\n\x3c!-- Child.svelte --\x3e\n<p>Text From Child</p>\n\n<style>\n  p {\n    width: 200px;\n    text-align: center;\n    color: burlywood;\n    display: block;\n    animation: heartbeat 2s infinite;\n  }\n</style>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/b16e8fc6bb1045b88428618dcea8cd2d?version=5.1.12",title:"https://svelte.dev/playground/b16e8fc6bb1045b88428618dcea8cd2d?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:g,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"这是因为 @keyframes 中的动画名字，Svelte 也做了 hash 值处理："}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:u,alt:""})}),"\n",(0,l.jsxs)(n.h2,{id:"3-global",children:["3. Global",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-global",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"如果我不想要 Scoped，想要影响全局呢？那你需要这样写："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:":global(p) {\n  color: burlywood;\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["有的时候，你迫不得已需要用全局样式，就比如使用了 ",(0,l.jsx)(n.code,{children:"@html"}),"："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  const html = '<p>Text from App</p>'\n<\/script>\n\n<div>\n  {@html html}\n</div>\n\n<style>\n  div p {\n    color: burlywood\n  }\n</style>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["如果这样写，样式是不会生效的，甚至会提示你：",(0,l.jsx)(n.code,{children:'Unused CSS selector "div p"'}),"。如果你需要影响 ",(0,l.jsx)(n.code,{children:"<p>"})," 标签，你可以这样写："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"  :global(div p) {\n    color: burlywood\n  }\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/672e613a7ce24ed39e8b5bea443b006b?version=5.1.12",title:"https://svelte.dev/playground/672e613a7ce24ed39e8b5bea443b006b?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:j,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"有的时候，你会看到一种相近的写法："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"div :global(p) {\n  color: burlywood\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"你会发现，对这个例子而言，同样可以生效。但是差别在哪里呢？"}),"\n",(0,l.jsxs)(n.p,{children:["差别在于 ",(0,l.jsx)(n.code,{children:"div :global(p)"}),"影响的是这个组件的 ",(0,l.jsx)(n.code,{children:"<div>"})," 标签下所有 ",(0,l.jsx)(n.code,{children:"<p>"}),"，我们举个例子："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Child from './Child.svelte'\n  const html = '<p>Text from App</p>'\n<\/script>\n\n<div>\n  {@html html}\n  <Child />\n</div>\n\n<Child />\n\n<style>\n  div :global(p) {\n    color: burlywood\n  }\n</style>\n\n\x3c!-- Child.svelte --\x3e\n<div>\n  <p>Text From Child</p>\n</div>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/95c7a567ab364d0e972281dcae385499?version=5.1.12",title:"https://svelte.dev/playground/95c7a567ab364d0e972281dcae385499?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:b,alt:""})}),"\n",(0,l.jsxs)(n.p,{children:["你会发现只有在 ",(0,l.jsx)(n.code,{children:"<App>"}),"组件 ",(0,l.jsx)(n.code,{children:"<div>"})," 标签下的 ",(0,l.jsx)(n.code,{children:"<Child>"})," 组件，才会应用样式。如果直接引用，则没有效果。这是因为 ",(0,l.jsx)(n.code,{children:"<div>"}),"并没有放入 ",(0,l.jsx)(n.code,{children:":global"})," 中，所以 ",(0,l.jsx)(n.code,{children:"<div>"})," 依然会限定在 App 组件下的 ",(0,l.jsx)(n.code,{children:"<div>"}),"。从编译后的类名也可以看出，",(0,l.jsx)(n.code,{children:"div :global(p)"})," 被编译成了 ",(0,l.jsx)(n.code,{children:"div.svelte-e6xsfw p"}),"。"]}),"\n",(0,l.jsxs)(n.p,{children:["如果想让 ",(0,l.jsx)(n.code,{children:"@keyframes"}),"可以全局访问，需要在关键帧名称前添加 ",(0,l.jsx)(n.code,{children:"-global-"})," 前缀："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<style>\n  @keyframes -global-my-animation-name {\n    /* code goes here */\n  }\n</style>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["以之前的 keframes 例子为例。",(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/f73efbdbee2445ccbd8e2b6b6d160222?version=5.1.12",title:"https://svelte.dev/playground/f73efbdbee2445ccbd8e2b6b6d160222?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:f,alt:""})}),"\n",(0,l.jsxs)(n.h2,{id:"4-style",children:["4. ",(0,l.jsx)(n.code,{children:"<style>"}),(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-style",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["每个组件只能有 1 个顶级 ",(0,l.jsx)(n.code,{children:"<style>"})," 标记。"]}),"\n",(0,l.jsxs)(n.p,{children:["但你依然可以将 ",(0,l.jsx)(n.code,{children:"<style>"}),"标签嵌套在其他元素或逻辑块内："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<div>\n  <style>\n    div {\n      color: red;\n    }\n  </style>\n</div>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["此时会将 ",(0,l.jsx)(n.code,{children:"<style>"})," 标签原样插入到 DOM 中，不会做其他处理。",(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/db3cbcee59d748219ef973052333c92c?version=5.1.12",title:"https://svelte.dev/playground/db3cbcee59d748219ef973052333c92c?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:x,alt:""})}),"\n",(0,l.jsxs)(n.h2,{id:"5-class-语法糖",children:["5. class 语法糖",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-class-语法糖",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"现在我们来实现这样一个效果："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n<\/script>\n\n<button onclick={() => {\n  count += 1;\n}}>\n  Click\n</button>\n\n<p class=\"{count > 5 ? 'danger' : 'safe'}\">{count}</p>\n\n<style>\n  .danger {color: red}\n  .safe {color: green}\n</style>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/c675da8fd6e74379a7d28986413160d5?version=5.1.12",title:"https://svelte.dev/playground/c675da8fd6e74379a7d28986413160d5?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:h,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"Svelte 提供了 Class 语法糖，代码可以简化为："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n<\/script>\n\n<button onclick={() => {\n  count += 1;\n}}>\n  Click\n</button>\n\n<p\n  class:danger={count > 5}\n  class:safe={count <= 5}\n>{count}</p>\n\n<style>\n  .danger {color: red}\n  .safe {color: green}\n</style>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/3f4ad0b9d7284f35a85e66bcf31a6315?version=5.1.12",title:"https://svelte.dev/playground/3f4ad0b9d7284f35a85e66bcf31a6315?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果与之前一致"})}),"\n",(0,l.jsx)(n.p,{children:"如果类名和所依赖的值相同，Svelte 提供了简写形式："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n  let danger = $derived(count > 5)\n  let safe = $derived(count <=5)\n<\/script>\n\n<button onclick={() => {\n  count += 1;\n}}>\n  Click\n</button>\n\n<p\n  class:danger\n  class:safe\n>{count}</p>\n\n<style>\n  .danger {color: red}\n  .safe {color: green}\n</style>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/4db99c9591304b009aef56a15944ad83?version=5.1.12",title:"https://svelte.dev/playground/4db99c9591304b009aef56a15944ad83?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果不变"})}),"\n",(0,l.jsxs)(n.h2,{id:"6-style-语法糖",children:["6. style 语法糖",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-style-语法糖",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"style 也有类似的语法糖："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n<\/script>\n\n<button onclick={() => {\n  count += 1;\n}}>\n  Click\n</button>\n\n<p style=\"color: { count > 5 ? 'red' : 'green'}\">{count}</p>\n"})}),"\n",(0,l.jsx)(n.p,{children:"代码可以简化为："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"<script>\n  let count = $state(0);\n<\/script>\n\n<button onclick={() => {\n  count += 1;\n}}>\n  Click\n</button>\n\n<p style:color={count > 5 ? 'red' : 'green'}>{count}</p>\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/6a37924e9e2a413b89e239250f192c68?version=5.1.12",title:"https://svelte.dev/playground/6a37924e9e2a413b89e239250f192c68?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:p,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"当然这样看语法糖带来的效果一般，当需要修改的样式比较多的时候，代码就会显得比较清晰。"}),"\n",(0,l.jsxs)(n.p,{children:["此外如果要为样式添加 ",(0,l.jsx)(n.code,{children:"!important"}),"，可以使用 ",(0,l.jsx)(n.code,{children:"|important"}),"修饰符："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<div style:color|important="red">...</div>\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/d4e576ebef534f42abab199d2c031487?version=5.1.12",title:"https://svelte.dev/playground/d4e576ebef534f42abab199d2c031487?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:o,alt:""})}),"\n",(0,l.jsxs)(n.p,{children:["Svelte 会在样式中添加 ",(0,l.jsx)(n.code,{children:"!important"}),"。"]}),"\n",(0,l.jsx)(n.p,{children:"当指令和 style 样式冲突的时候，指令会优先："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<div style="color: blue;" style:color="red">This will be red</div>\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/09f199e1d39644dd8a54ba32ffa3a16d?version=5.1.12",title:"https://svelte.dev/playground/09f199e1d39644dd8a54ba32ffa3a16d?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:i,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"可以看到最终的样式里，只有指令的样式而没有 style 中的样式，如此实现了“指令优先”。"}),"\n",(0,l.jsxs)(n.h2,{id:"7---style-props",children:["7. --style-props",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7---style-props",children:"#"})]}),"\n",(0,l.jsxs)(n.h3,{id:"71-自定义组件样式",children:["7.1. 自定义组件样式",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#71-自定义组件样式",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["现在我们有一个 ",(0,l.jsx)(n.code,{children:"<Button>"})," 组件，如果我们想要自定义组件的样式，我们很可能会这样写："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Button from \'./Button.svelte\'\n<\/script>\n\n<Button bgColor="#4096ff" color="#fff">Primary Button</Button>\n<Button bgColor="#fff" color="#000">Default Button</Button>\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  let { bgColor, color, children } = $props();\n<\/script>\n<button\n  style:background-color={bgColor}\n  style:color={color}\n>\n  {@render children?.()}\n</button>\n\n<style>\n  button {\n    border: none;\n    padding: 6px 12px;\n    border-radius: 5px;\n  }\n</style>\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/b458f6eafcd84e8091ce006d4b72cabe?version=5.1.12",title:"https://svelte.dev/playground/b458f6eafcd84e8091ce006d4b72cabe?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:a,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"使用这种方式，组件需要传入多个样式相关的 props，并根据 props 设置样式。"}),"\n",(0,l.jsxs)(n.h3,{id:"72-优化一",children:["7.2. 优化一",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#72-优化一",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"使用 CSS 自定义属性是一种更好的方式，它会将组件的逻辑代码和样式代码拆分开来："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Button from \'./Button.svelte\'\n<\/script>\n\n<div\n  style:--bg-color="#4096ff"\n  style:--color="#fff"\n>\n  <Button>Primary Button</Button>\n</div>\n\n<div\n  style:--bg-color="#fff"\n  style:--color="#000"\n>\n  <Button>Default Button</Button>\n</div>\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  let { children } = $props();\n<\/script>\n\n<button>\n  {@render children?.()}\n</button>\n\n<style>\n  button {\n    background-color: var(--bg-color);\n    color: var(--color);\n    border: none;\n    padding: 6px 12px;\n    border-radius: 5px;\n  }\n</style>\n'})}),"\n",(0,l.jsx)(n.p,{children:"当使用 CSS 自定义属性的时候，组件的代码得以简化，只需要在外层设置自定义属性即可。"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/9651d3dcb8264945b836706c7279dba7?version=5.1.12",title:"https://svelte.dev/playground/9651d3dcb8264945b836706c7279dba7?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:c,alt:""})}),"\n",(0,l.jsxs)(n.h3,{id:"73-优化二",children:["7.3. 优化二",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#73-优化二",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["Svelte 提供了 ",(0,l.jsx)(n.code,{children:"--style-props"})," 可以将这个过程的代码进一步简化："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<script>\n  import Button from \'./Button.svelte\'\n<\/script>\n\n<Button --bg-color="#4096ff" --color="#fff">Primary Button</Button>\n\n<Button --bg-color="#fff" --color="#000">Default Button</Button>\n\n\x3c!-- Button.svelte --\x3e\n<button>\n  <slot />\n</button>\n\n<style>\n  button {\n    background-color: var(--bg-color);\n    color: var(--color);\n    border: none;\n    padding: 6px 12px;\n    border-radius: 5px;\n  }\n</style>\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://svelte.dev/playground/7f8146def1dd4760ae5a8a4fb433dafe?version=5.1.12",title:"https://svelte.dev/playground/7f8146def1dd4760ae5a8a4fb433dafe?version=5.1.12",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:d,alt:""})}),"\n",(0,l.jsx)(n.p,{children:"实际上，Svelte 的这个语法就是一个语法糖："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<Button --bg-color="#4096ff" --color="#fff">Primary Button</Button>\n'})}),"\n",(0,l.jsx)(n.p,{children:"相当于："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<div style="display: contents; --bg-color: #4096ff; --color: #fff">\n  <Button>Primary Button</Button>\n</div>\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Svelte 会在组件外层包裹一层 ",(0,l.jsx)(n.code,{children:"<div>"})," 用于设置自定义样式。注意这里同时设置了 ",(0,l.jsx)(n.code,{children:"display: contents"}),"属性。这个属性大家可能并不熟悉，但支持度还是不错的："]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)("img",{src:t,alt:""})}),"\n",(0,l.jsxs)(n.p,{children:["简单来说，",(0,l.jsx)(n.code,{children:"display:contents"}),"的作用就是当一个“无意义”的元素，子元素会表现的像是它的父元素的直接子元素一样，妥妥的“小透明”。它的作用就是用于无语义的包裹元素。在这个场景就非常适合。"]}),"\n",(0,l.jsxs)(n.h2,{id:"8-最后",children:["8. 最后",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-最后",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"本篇我们介绍了 Svelte 中关于样式使用的各种知识细节，都是 Svelte 中常用的内容，需要重点掌握。"})]})}function k(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(y,{...e})}):y(e)}let B=k;k.__RSPRESS_PAGE_META={},k.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F6-%E8%AF%AD%E6%B3%95%E7%AF%87%20%E2%9D%98%20%E6%A0%B7%E5%BC%8F.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. Scoped",id:"2-scoped",depth:2},{text:"3. Global",id:"3-global",depth:2},{text:"4. `<style>`",id:"4-style",depth:2},{text:"5. class 语法糖",id:"5-class-语法糖",depth:2},{text:"6. style 语法糖",id:"6-style-语法糖",depth:2},{text:"7. --style-props",id:"7---style-props",depth:2},{text:"7.1. 自定义组件样式",id:"71-自定义组件样式",depth:3},{text:"7.2. 优化一",id:"72-优化一",depth:3},{text:"7.3. 优化二",id:"73-优化二",depth:3},{text:"8. 最后",id:"8-最后",depth:2}],title:"6-语法篇 ❘ 样式",headingTitle:"6-语法篇 ❘ 样式",frontmatter:{}}}}]);