"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["51866"],{86765:function(e,r,s){s.r(r),s.d(r,{default:()=>l});var n=s(552676),c=s(740453);let t=s.p+"static/image/9f94688c7ac96b4b82151ef56fb87c4e.3c365190.webp",a=s.p+"static/image/f0de2987f78c9d3429b33bebbb0cb4ed.ebae5209.webp";function d(e){let r=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h2:"h2",ol:"ol",li:"li",code:"code",pre:"pre",img:"img"},(0,c.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"20-sveltekit--错误处理",children:["20-SvelteKit ❘ 错误处理",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#20-sveltekit--错误处理",children:"#"})]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"推荐学习指数：⭐️️，了解即可"}),"\n"]}),"\n",(0,n.jsxs)(r.h2,{id:"1-前言",children:["1. 前言",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,n.jsx)(r.p,{children:"SvelteKit 中有两种错误："}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"预期错误（expected errors）"}),"\n",(0,n.jsx)(r.li,{children:"非预期错误（unexpected errors）"}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["默认情况下，这两种错误都表示为简单的 ",(0,n.jsx)(r.code,{children:"{ message: string }"}),"对象。本篇就来详细讲解下这两种错误。"]}),"\n",(0,n.jsxs)(r.h2,{id:"2-预期错误",children:["2. 预期错误",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#2-预期错误",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["预期错误是指使用 ",(0,n.jsx)(r.code,{children:"@sveltejs/kit"}),"的 ",(0,n.jsx)(r.code,{children:"error"}),"函数创建的错误："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'// src/routes/blog/[slug]/+page.server.js\nimport { error } from "@sveltejs/kit";\nimport * as db from "$lib/server/database";\n\nexport async function load({ params }) {\n  const post = await db.getPost(params.slug);\n\n  if (!post) {\n    error(404, {\n      message: "Not found",\n    });\n  }\n\n  return { post };\n}\n'})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"error()"}),"的第一个参数是 HTTP 状态码，第二个参数是可选消息。如果只有 ",(0,n.jsx)(r.code,{children:"message"})," 字段，也可以为了方便简写为："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'error(404, "Not found");\n'})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"error"})," 会抛出一个 SvelteKit 会捕获的异常，并渲染最近的 ",(0,n.jsx)(r.code,{children:"+error.svelte"}),"，函数的实参分别可以通过 ",(0,n.jsx)(r.code,{children:"$page.status"})," 和 ",(0,n.jsx)(r.code,{children:"{$page.error}"})," 获取："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:"<script>\n  import { page } from '$app/stores';\n<\/script>\n\n<h1>{$page.status}: {$page.error.message}</h1>\n"})}),"\n",(0,n.jsx)(r.p,{children:"当然你也可以为错误添加一些额外的属性（此时就不能简写了）："}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'error(404, {\n  message: "Not found",\n  code: "NOT_FOUND",\n});\n'})}),"\n",(0,n.jsxs)(r.h2,{id:"3-非预期错误",children:["3. 非预期错误",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#3-非预期错误",children:"#"})]}),"\n",(0,n.jsx)(r.p,{children:"非预期错误就是处理请求时发生的其他异常，由于可能包含敏感信息，所以不会暴露给用户。默认情况下，会输出到控制台（或者在生产环境下，输出到服务端日志），向用户公开的是通用的 500 错误，message 为："}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'{ "message": "Internal Error" }\n'})}),"\n",(0,n.jsx)(r.p,{children:"浏览器效果为："}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)("img",{src:a,alt:""})}),"\n",(0,n.jsxs)(r.p,{children:["非预期错误可以通过 ",(0,n.jsx)(r.code,{children:"handleError"})," hook 自定义处理方式 ，比如上报错误日志。"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'// src/hooks.server.js\nimport * as Sentry from "@sentry/sveltekit";\n\nSentry.init({\n  /*...*/\n});\n\nexport async function handleError({ error, event, status, message }) {\n  const errorId = crypto.randomUUID();\n\n  // example integration with https://sentry.io/\n  Sentry.captureException(error, {\n    extra: { event, errorId, status },\n  });\n\n  return {\n    message: "Whoops!",\n    errorId,\n  };\n}\n'})}),"\n",(0,n.jsx)(r.p,{children:"浏览器效果为："}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)("img",{src:t,alt:""})}),"\n",(0,n.jsxs)(r.p,{children:["handleError 返回的自定义信息可以通过 ",(0,n.jsx)(r.code,{children:"$page.error"})," 获取。"]}),"\n",(0,n.jsxs)(r.h2,{id:"4-responses",children:["4. Responses",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#4-responses",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["如果是 ",(0,n.jsx)(r.code,{children:"handle"}),"hook 或 ",(0,n.jsx)(r.code,{children:"+server.js"}),"请求内部出现错误，SveteKit 将根据 ",(0,n.jsx)(r.code,{children:"Accept"}),"标头决定返回错误对象的 JSON 形式还是 fallback 错误页面。"]}),"\n",(0,n.jsxs)(r.p,{children:["添加 ",(0,n.jsx)(r.code,{children:"src/error.html"})," 文件可自定义 fallback 错误页面："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>%sveltekit.error.message%</title>\n  </head>\n  <body>\n    <h1>My custom error page</h1>\n    <p>Status: %sveltekit.status%</p>\n    <p>Message: %sveltekit.error.message%</p>\n  </body>\n</html>\n'})}),"\n",(0,n.jsxs)(r.p,{children:["SvelteKit 会将 ",(0,n.jsx)(r.code,{children:"%sveltekit.status%"})," 和 ",(0,n.jsx)(r.code,{children:"%sveltekit.error.message%"})," 替换为相应的值。"]}),"\n",(0,n.jsxs)(r.p,{children:["如果 load 函数内部发生错误，SveteKit 将会渲染最近的 ",(0,n.jsx)(r.code,{children:"+error.svelte"}),"。"]}),"\n",(0,n.jsxs)(r.p,{children:["注意如果错误发生在 ",(0,n.jsx)(r.code,{children:"+layout(.server).js"})," 的 load 函数，最近的 ",(0,n.jsx)(r.code,{children:"+error.svelte"}),"在布局上级，而非同级。除非如果错误发生在根布局 ",(0,n.jsx)(r.code,{children:"+layout.js"}),"或 ",(0,n.jsx)(r.code,{children:"+layout.server.js"}),"内部，此时 SvelteKit 会使用 fallback 错误页面。"]}),"\n",(0,n.jsxs)(r.h2,{id:"5-类型安全",children:["5. 类型安全",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#5-类型安全",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["如果使用 TypeScript 并且添加了自定义的错误属性，你可以在 ",(0,n.jsx)(r.code,{children:"src/app.d.ts"}),"中进行声明一个 App.Error 接口："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-diff",children:"// src/app.d.ts\ndeclare global {\n  namespace App {\n    interface Error {\n+     code: string;\n+     id: string;\n    }\n  }\n}\n\nexport {};\n"})}),"\n",(0,n.jsxs)(r.p,{children:["该接口始终包含 ",(0,n.jsx)(r.code,{children:"message: string"})," 属性。"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,c.ah)(),e.components);return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F20-SvelteKit%20%E2%9D%98%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. 预期错误",id:"2-预期错误",depth:2},{text:"3. 非预期错误",id:"3-非预期错误",depth:2},{text:"4. Responses",id:"4-responses",depth:2},{text:"5. 类型安全",id:"5-类型安全",depth:2}],title:"20-SvelteKit ❘ 错误处理",headingTitle:"20-SvelteKit ❘ 错误处理",frontmatter:{}}}}]);