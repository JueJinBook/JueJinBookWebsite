"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["24825"],{140759:function(n,e,s){n.exports=s.p+"static/image/9b3c777f272dd46fbc978a40be27224b.b847128c.webp"},871992:function(n,e,s){n.exports=s.p+"static/image/a09f1a71ca79faeb13093475b49eb4d6.1df6de73.gif"},686967:function(n,e,s){n.exports=s.p+"static/image/f6493db57073d6aabe007d703e3cfaec.d1810660.webp"},588203:function(n,e,s){s.r(e),s.d(e,{default:()=>A});var r=s(552676),a=s(740453);let i=s.p+"static/image/bc4e0185bc35a14feecaaad800e9584c.b6dde7c1.gif",c=s.p+"static/image/12db4e546e5b80db06058fe9992d895e.55846e87.webp";var t=s(871992);let d=s.p+"static/image/f2f902cbafcbfd90bceea5774d5bed24.a111b939.webp",l=s.p+"static/image/6a3365226f9b25c3f7715da30c100538.f3d7c074.webp",p=s.p+"static/image/5c1e5d476a1287055f47d0ad78ccaaa3.1ccf3391.webp",o=s.p+"static/image/6d7a5a2b3e50104a7dc3565b69148397.2b635ac9.webp",x=s.p+"static/image/a4ebe3247d6a5e99ee2c188085f9d3b8.c192f205.webp",h=s.p+"static/image/a3cca11eff05c9b5dcdced935ec54674.dd09870b.webp",j=s.p+"static/image/2c4e970464b7831ad3de7f4179023e68.d75ef209.webp",m=s.p+"static/image/11d6ee599a3f048c91e0c46ce289eb4a.3051a51b.webp",g=s.p+"static/image/50aa1bcc491946da372931c94bde0b0d.d5de762d.webp",u=s.p+"static/image/7b472943cdca51f164aa3f879d87ea10.5ca74974.webp",b=s.p+"static/image/581e13b8ca02e7d3c34c3d9364193085.501ad4ef.gif",f=s.p+"static/image/332fb22f057ce8eae114951f243e25ce.44fe65a0.gif",E=s.p+"static/image/8194556ae6dcc37fa3e5b2d182fde7a6.9a35e976.webp",k=s.p+"static/image/7a40de683a3b1efbb93007c87ed67eb5.2b028887.webp",I=s.p+"static/image/833b4600bb40599e1e1f24d64fbcc4b9.4fdcbbf7.webp",w=s.p+"static/image/5a9f5a664335c5959980ce98b7a74c9f.2f823b8d.webp";var y=s(686967),R=s(140759);function v(n){let e=Object.assign({h1:"h1",a:"a",p:"p",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",img:"img",strong:"strong",pre:"pre",code:"code",h2:"h2"},(0,a.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"169-考试系统分析微服务排行榜页面",children:["169. 考试系统：分析微服务、排行榜页面",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#169-考试系统分析微服务排行榜页面",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"这节来写下分析的微服务。"}),"\n",(0,r.jsx)(e.p,{children:"主要是排行榜的接口："}),"\n",(0,r.jsxs)(e.table,{children:["\n",(0,r.jsxs)(e.thead,{children:["\n",(0,r.jsxs)(e.tr,{children:["\n",(0,r.jsx)(e.th,{children:"接口路径"}),"\n",(0,r.jsx)(e.th,{children:"请求方式"}),"\n",(0,r.jsx)(e.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.tbody,{children:["\n",(0,r.jsxs)(e.tr,{children:["\n",(0,r.jsx)(e.td,{children:"/analyse/ranking"}),"\n",(0,r.jsx)(e.td,{children:"GET"}),"\n",(0,r.jsx)(e.td,{children:"成绩排行榜"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"只要涉及到排行榜，一般都是用 redis 的 zset （有序集合）来做。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:R,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"而且 zset 可以用 zuion 取并集来合并。"}),"\n",(0,r.jsx)(e.p,{children:"日榜合并就是周榜，周榜合并就是月榜，月榜合并就是年榜。"}),"\n",(0,r.jsx)(e.p,{children:"简单回顾下 zset 的命令："}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZADD"}),"：往集合中添加成员"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZREM"}),"：从集合中删除成员"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZCARD"}),"：集合中的成员个数"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZSCORE"}),"：某个成员的分数"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZINCRBY"}),"：增加某个成员的分数"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZRANK"}),"：成员在集合中的排名"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZRANGE"}),"：打印某个范围内的成员"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZRANGESTORE"}),"：某个范围内的成员，放入新集合"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZCOUNT"}),"：集合中分数在某个返回的成员个数"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZDIFF"}),"：打印两个集合的差集"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZDIFFSTORE"}),"：两个集合的差集，放入新集合"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZINTER"}),"：打印两个集合的交集"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZINTERSTORE"}),"：两个集合的交集，放入新集合"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZINTERCARD"}),"：两个集合的交集的成员个数"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZUNION"}),"：打印两个集合的并集"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"ZUNIONSTORE"}),"：两个集合的并集，放回新集合"]}),"\n",(0,r.jsx)(e.p,{children:"我们实现分数的排行榜就是用 ZADD 添加成员，然后用 ZRANGE 取前面的成员就好了，zset 会自动排序。"}),"\n",(0,r.jsx)(e.p,{children:"默认是分数从小到大排序，也可以从大到小，加个 REV 就行："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsx)(e.p,{children:"改下 RedisService 添加 zAdd、zRankingList、zScore 方法："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:w,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"zRankingList 查询排行榜成员，加上 REV 是按分数从大到小排。"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"async zRankingList(key: string, start: number = 0, end: number = -1) {\n    return this.redisClient.zRange(key, start, end, {\n        REV: true\n    });\n}\n\nasync zAdd(key: string, members: Record<string, number>) {\n    const mems = [];\n    for(let key in members) {\n        mems.push({\n            value: key,\n            score: members[key]\n        });        \n    }\n    return  await this.redisClient.zAdd(key, mems);\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"然后我们在 analyse 微服务里引入下 RedisModule："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:I,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"顺便引入下 PrismaModule 和 CommonModule。"}),"\n",(0,r.jsx)(e.p,{children:"然后加个路由："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import { BadRequestException, Controller, Get, Query } from '@nestjs/common';\nimport { AnalyseService } from './analyse.service';\n\n@Controller()\nexport class AnalyseController {\n  constructor(private readonly analyseService: AnalyseService) {}\n\n  @Get()\n  getHello(): string {\n    return this.analyseService.getHello();\n  }\n\n  @Get('ranking')\n  async ranking(@Query('examId') examId: string) {\n    if(!examId) {\n      throw new BadRequestException('examId 不能为空')\n    }\n    return this.analyseService.ranking(+examId)\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"然后在 service 里实现下排行榜："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import { PrismaService } from '@app/prisma';\nimport { RedisService } from '@app/redis';\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AnalyseService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  @Inject(PrismaService)\n  prismaService: PrismaService;\n\n  @Inject(RedisService)\n  redisService: RedisService;\n\n  async ranking(examId: number) {\n    const answers = await this.prismaService.answer.findMany({\n      where: {\n        examId\n      }\n    });\n\n    for(let i = 0; i< answers.length; i++) {\n      await this.redisService.zAdd('ranking:' + examId, {\n        [answers[i].id]: answers[i].score\n      })\n    }\n    return this.redisService.zRankingList('ranking:' + examId, 0, 10)\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"查询 examId 对应的答卷数据，用 zAdd 加到对应的榜单里，然后返回榜单前 10 名。"}),"\n",(0,r.jsx)(e.p,{children:"把服务跑起来："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"npm run start:dev analyse\n"})}),"\n",(0,r.jsx)(e.p,{children:"测试下："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:k,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:E,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"当然，现在答卷不多。"}),"\n",(0,r.jsx)(e.p,{children:"我们再登录两个账号做一下试卷："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:f,alt:"2024-08-27 19.32.36.gif"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:b,alt:"2024-08-27 19.33.22.gif"})}),"\n",(0,r.jsx)(e.p,{children:"然后再调用下 ranking 接口："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:u,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"现在只返回了 id，我们返回下详细信息。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:g,alt:"image.png"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"async ranking(examId: number) {\n  const answers = await this.prismaService.answer.findMany({\n    where: {\n      examId\n    }\n  });\n\n  for(let i = 0; i< answers.length; i++) {\n    await this.redisService.zAdd('ranking:' + examId, {\n      [answers[i].id]: answers[i].score\n    })\n  }\n  const ids = await this.redisService.zRankingList('ranking:' + examId, 0, 10);\n\n  const res = [];\n  for(let i = 0; i< ids.length; i++) {\n    const answer = await this.prismaService.answer.findUnique({\n      where: {\n        id: +ids[i]\n      },\n      include: {\n        answerer: true,\n        exam: true\n      }\n    })\n    res.push(answer);\n  }\n  return res;\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"include 关联查询答题者和试卷的信息，一起返回。"}),"\n",(0,r.jsx)(e.p,{children:"测试下："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:m,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"这样就返回了排行榜的详细信息。"}),"\n",(0,r.jsxs)(e.p,{children:["加下前缀：\n",(0,r.jsx)("img",{src:j,alt:"image.png"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:h,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"加一下 AuthGuard 做下登录鉴权："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:x,alt:"image.png"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"{\n  provide: APP_GUARD,\n  useClass: AuthGuard\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"支持下跨域："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:o,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:"然后写下前端页面："}),"\n",(0,r.jsx)(e.p,{children:"在 interfaces/index.tsx 加一下这个接口："}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const analyseServiceInstance = axios.create({\n    baseURL: 'http://localhost:3004/',\n    timeout: 3000\n});\n\nanalyseServiceInstance.interceptors.request.use(requestInterceptor)\n\nanalyseServiceInstance.interceptors.response.use(\n    responseIntercepor, \n    responseErrorIntercepor\n)\n\nexport async function ranking(examId: number) {\n    return await answerServiceInstance.get('/analyse/ranking', {\n        params: {\n            examId\n        }\n    });\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"写个 Modal"}),"\n",(0,r.jsx)(e.p,{children:"pages/ExamList/RankingModal.tsx"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import { Button, Form, Input, Modal, Table, TableColumnsType, message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { ranking } from \"../../interfaces\";\n\n\ninterface RankingModalProps {\n    isOpen: boolean;\n    handleClose: Function\n    examId?: number\n}\n\nexport function RankingModal(props: RankingModalProps) {\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        query();\n    }, [props.examId]);\n\n    async function query(){\n        if(!props.examId) {\n            return;\n        }\n        try{\n            const res = await ranking(props.examId);\n\n            if(res.status === 201 || res.status === 200) {\n                setList(res.data);\n            }\n        } catch(e: any){\n            message.error(e.response?.data?.message || '系统繁忙，请稍后再试');\n        }\n    }\n\n    const columns: TableColumnsType = [\n        {\n            title: '名字',\n            key: 'name',\n            render: (_, record) => (\n                <div>\n                    {record.answerer.username}\n                </div>\n            )\n          },\n          {\n            title: '分数',\n            dataIndex: 'score',\n            key: 'score',\n          }\n    ]\n\n    return <Modal \n        title=\"排行榜\"\n        open={props.isOpen}\n        onOk={() => props.handleClose()}\n        onCancel={() => props.handleClose()}\n        okText={'确认'}\n        cancelText={'取消'}    \n    >\n\n        <Table dataSource={list} columns={columns} />;\n\n    </Modal>\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"传入 examId 参数，查询对应的排行榜信息。"}),"\n",(0,r.jsx)(e.p,{children:"用 table 渲染返回的列表。"}),"\n",(0,r.jsx)(e.p,{children:"引入下："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:p,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:l,alt:"image.png"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:d,alt:"image.png"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const [isRankingModalOpen, setIsRankingModalOpen] = useState(false);\nconst [curExamId, setCurExamId] = useState<number>();\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'<Button className="btn" type="primary" style={{background: \'orange\'}} onClick={() => {\n    setIsRankingModalOpen(true)\n    setCurExamId(item.id);\n}}>\n    排行榜\n</Button>\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"<RankingModal isOpen={isRankingModalOpen} handleClose={() => {\n    setIsRankingModalOpen(false);\n}} examId={curExamId}/>\n"})}),"\n",(0,r.jsx)(e.p,{children:"加一个 curExamId 记录当前的考试 id。"}),"\n",(0,r.jsx)(e.p,{children:"然后加一个 state 来切换弹窗的打开状态。"}),"\n",(0,r.jsx)(e.p,{children:"测试下："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:t,alt:"2024-08-27 20.02.19.gif"})}),"\n",(0,r.jsx)(e.p,{children:"这样，排行榜功能就完成了。"}),"\n",(0,r.jsx)(e.p,{children:"之前还有个下载所有答卷 excel 的功能没有接入。"}),"\n",(0,r.jsx)(e.p,{children:"加个按钮："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:c,alt:"image.png"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'<a href={"http://localhost:3003/answer/export?examId=" + item.id} download>\n    导出所有答卷\n</a>\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)("img",{src:i,alt:"2024-08-27 20.10.40.gif"})}),"\n",(0,r.jsx)(e.p,{children:"案例代码在小册仓库："}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exam-system-frontend",target:"_blank",rel:"noopener noreferrer",children:"前端代码"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/QuarkGluonPlasma/nestjs-course-code/tree/main/exam-system",target:"_blank",rel:"noopener noreferrer",children:"后端代码"})}),"\n",(0,r.jsxs)(e.h2,{id:"总结",children:["总结",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"这节我们实现了排行榜的功能。"}),"\n",(0,r.jsx)(e.p,{children:"排行榜的功能基于 redis 的 zset 实现，用 zadd 往其中添加元素，用 zrang 取排好序的前多少个元素，加上 REV 就是按照分数从大到小排序。"}),"\n",(0,r.jsx)(e.p,{children:"然后加了一个弹窗来展示排行榜。"}),"\n",(0,r.jsx)(e.p,{children:"这样，问卷系统的全部功能就完成了。"})]})}function S(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(v,{...n})}):v(n)}let A=S;S.__RSPRESS_PAGE_META={},S.__RSPRESS_PAGE_META["Nest%20%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%20%20%E6%9C%80%E6%96%B0200%E7%AB%A0%2F169.%20%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F%EF%BC%9A%E5%88%86%E6%9E%90%E5%BE%AE%E6%9C%8D%E5%8A%A1%E3%80%81%E6%8E%92%E8%A1%8C%E6%A6%9C%E9%A1%B5%E9%9D%A2.md"]={toc:[{text:"总结",id:"总结",depth:2}],title:"169. 考试系统：分析微服务、排行榜页面",headingTitle:"169. 考试系统：分析微服务、排行榜页面",frontmatter:{}}}}]);