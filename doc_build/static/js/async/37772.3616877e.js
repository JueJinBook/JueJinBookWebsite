"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["37772"],{354392:function(e,s,c){e.exports=c.p+"static/image/07dd83853ff4b57e074152e59a9f1af4.a4857cda.webp"},524801:function(e,s,c){e.exports=c.p+"static/image/0da9e5ddd2a2a5eaa6a9c8e04080b355.39494ab4.webp"},539120:function(e,s,c){e.exports=c.p+"static/image/605df5f246ab02d18d547b7cf9de98c0.1a18e462.webp"},905019:function(e,s,c){e.exports=c.p+"static/image/be260a43b94975315c29851bcf342513.a5572207.webp"},393680:function(e,s,c){c.r(s),c.d(s,{default:()=>I});var r=c(552676),n=c(740453);let i=c.p+"static/image/e78413b116dc6ed6e41fc776d0251c0c.36601cf1.webp",a=c.p+"static/image/a2f0fa400bbff6ab90bd0c1387044e74.0ca8c567.webp",d=c.p+"static/image/4c37665888637418737a112720317543.352c8583.webp",l=c.p+"static/image/ca84aa05b10a318a2cecc2bf4ec5f013.f6e3fcc1.webp",h=c.p+"static/image/5c10747ef9214bc97e5eba1d08dd3f81.4451b3c9.webp",t=c.p+"static/image/cfdab425a9722fc1ab1d7edf6aee49d2.a0c19ded.webp",p=c.p+"static/image/95e4f4cb223d4a23d991289d684c080e.bd6f84c1.webp",x=c.p+"static/image/b9552db9256b26a1c429e27f9bf3fd18.24bcb6af.webp";var j=c(354392),o=c(524801);let b=c.p+"static/image/ab7fd634a6928d781e7a825cb24de65f.fdb28abe.webp",m=c.p+"static/image/32345421ecb8a53e366331fb5031ece1.a847317c.webp";var f=c(905019);let g=c.p+"static/image/54b03cfd27974df1a3d712576a121323.bbcbb28b.webp",u=c.p+"static/image/9b480909b6eec5a7150c4b0bc9935280.7adf2f34.webp",w=c.p+"static/image/104b841bc3ad17e2c37ffc741ffac3c9.ce62a30b.webp",k=c.p+"static/image/5c4ae6cd85d266f30cf6586973c6c79e.504880bb.webp",v=c.p+"static/image/c2064bf277e00f56493bb5a42c62ad60.f89b0a02.webp",E=c.p+"static/image/62daee025cac9ebfda4d4d81371aac5a.b2a036df.webp";var y=c(539120);let N=c.p+"static/image/b779ea3b709d2e67388fff8bbd290dd2.732bb6d2.webp",C=c.p+"static/image/4a467ed76264f68bcb02cc0868b75fff.b695135b.webp",T=c.p+"static/image/a6c1c6b025180452e8a0d3f1dd0202c7.1b941a60.webp",_=c.p+"static/image/3a3cf56e3a41ddcd87beb419e68b1f6e.b72edda9.webp",S=c.p+"static/image/1c4afca87d716969d304ddcc01c4f9dd.df8f931b.webp",A=c.p+"static/image/1efbe055c79d1e5247c655396ee71839.23b2072a.webp",D=c.p+"static/image/18d9f7bd20b3321677b603f937f5a575.5f7494e2.webp",R=c.p+"static/image/23e84067c93bd59f06c031262305e75b.39d8014f.webp",B=c.p+"static/image/3994417646a5d99434bb30524b65190a.a7b78807.webp",F=c.p+"static/image/18eb35753dec77b84edb2867e5312fbf.7cdd3249.webp",P=c.p+"static/image/fd8554200c4cf08a93cacb429bfec0aa.75b23e01.webp",M=c.p+"static/image/43a23fb8e6af5d8e3ae0bf6b8ec7a606.947e9425.webp",G=c.p+"static/image/f8c04f998d4e517fe3435fa3b040551c.52610058.webp",H=c.p+"static/image/df9d3a7d74ae9a818645737fd9ae44df.8111ca8c.webp",O=c.p+"static/image/bcc900f662bb1f082d790e3a46682ef6.d7483997.webp",X=c.p+"static/image/fe791bd55791ffff1369c62a2b82d586.c69432fd.webp";function q(e){let s=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",img:"img",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"35chrome-devtools-小功能集锦",children:["35.Chrome DevTools 小功能集锦",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#35chrome-devtools-小功能集锦",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"Chrome DevTools 有很多有用的小功能，这节就专门梳理一下这个："}),"\n",(0,r.jsxs)(s.h2,{id:"reply-xhr",children:["reply XHR",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#reply-xhr",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"当你想重新发送一次 XHR 请求的时候，不用刷新页面，直接点击 replay XHR 即可："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:X,alt:""})}),"\n",(0,r.jsxs)(s.h2,{id:"请求定位到源码",children:["请求定位到源码",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#请求定位到源码",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"当你想知道某个请求是在哪里发的，可以打开 Network 面板，在每个网络请求的 initiator 部分可以看到发请求代码的调用栈，点击可以快速定位到对应代码。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:O,alt:"image.png"})}),"\n",(0,r.jsxs)(s.h2,{id:"元素定位到创建的源码",children:["元素定位到创建的源码",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#元素定位到创建的源码",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"当你想知道某个元素的创建流程，可以通过 Elements 面板选中某个元素，点击 Stack Trace，就会展示出元素创建流程的调用栈。这可以帮你理清前端框架的运行流程。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:H,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"这个功能是实验性的，需要手动开启下：在 settings 的 expriments 功能里，勾选 “Capture node creation stacks”。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:G,alt:""})}),"\n",(0,r.jsxs)(s.h2,{id:"group-by-folder",children:["group by folder",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#group-by-folder",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"网页加载的文件默认是按照域名和目录组织的，找文件时一层层找起来比较麻烦。"}),"\n",(0,r.jsx)(s.p,{children:"这时候可以切换为平铺的，会按照 js、css、图片的顺序列出来，找某个文件就容易多了："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:M,alt:""})}),"\n",(0,r.jsxs)(s.h2,{id:"network-自定义展示列",children:["Network 自定义展示列",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#network-自定义展示列",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"Network 是可以修改展示的列的，比如我勾选 Cookie 和 Set-Cookie："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:P,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"就会在 Network 列表里展示这两列："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:F,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"这两列啥意思呢？"}),"\n",(0,r.jsx)(s.p,{children:"Set-Cookie 的意思就是这个请求的响应会设置几个 cookie。"}),"\n",(0,r.jsx)(s.p,{children:"点开请求的详情确实是这样的："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:B,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"Cookies 的意思就是说这个请求会携带几个 cookie："}),"\n",(0,r.jsx)(s.p,{children:"比如那个携带 17 个 cookie 的请求："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:R,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"不用数，肯定是 17 个。"}),"\n",(0,r.jsx)(s.p,{children:"除此以外，你还可以自定义展示的响应 header："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:D,alt:""})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:A,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"我比较常用的是 Cache Control："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:S,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"可以快速查看每个文件的缓存策略："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:_,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"请求列表右边有个 waterfall，默认是展示请求的时间，但我觉得这个没啥用，我更喜欢看请求响应的耗时："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:T,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"所以我会把它换成 total duration："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:C,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"这样 waterfall 展示的就是耗时了："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:N,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"可以直观的看到请求的耗时，还可以排序。我觉得这个数据有用的多。"}),"\n",(0,r.jsxs)(s.h2,{id:"代码手动关联-sourcemap",children:["代码手动关联 sourcemap",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#代码手动关联-sourcemap",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"sources 面板可以右键点击 add soruce map，输入 sourcemap 的 url 就可以关联上 sourcemap，当调试线上代码的时候可以用这种方式关联源码。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:y,alt:""})}),"\n",(0,r.jsxs)(s.h2,{id:"filter",children:["filter",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#filter",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"一个网站会有很多的请求，当你想查找某个请求的时候，是怎么过滤的呢？"}),"\n",(0,r.jsx)(s.p,{children:"关键词搜索么？"}),"\n",(0,r.jsx)(s.p,{children:"但是关键词搜索只能根据 url 来过滤。"}),"\n",(0,r.jsx)(s.p,{children:"很多时候这样不太够。"}),"\n",(0,r.jsx)(s.p,{children:"比如我想搜索视频类型的请求，根据 url 怎么过滤？比如我想搜索大于 1M 的请求，根据 url 怎么过滤？"}),"\n",(0,r.jsx)(s.p,{children:"这时候就可以用过滤器功能了。"}),"\n",(0,r.jsx)(s.p,{children:"输入 mime-type，加个冒号，Chrome DevTools 就会列出当前网页的请求的所有 mime type，选择某一种，就会过滤出那种 mime type 的请求。"}),"\n",(0,r.jsx)(s.p,{children:"比如过滤 mp4 请求："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:E,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"过滤 webp 请求："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:v,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"或者不根据 mime-type，根据资源的大致分类来过滤："}),"\n",(0,r.jsx)(s.p,{children:"输入 resource-type，加个冒号或者按右方向键，会展示出所有的资源分类，包括 document、stylesheet、image 等："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:k,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"其实这就是 Network 的这部分："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:w,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"而且还可以按住 command 键多选。"}),"\n",(0,r.jsx)(s.p,{children:"除了资源类型外，还可以根据状态码过滤："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:u,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"比如 200、404、500 等，只是我测试的这个页面没有 404 之类的请求。"}),"\n",(0,r.jsx)(s.p,{children:"状态码 0 代表被删除或取消的请求，网络请求是可以被取消的，这种就可以通过状态码 0 来过滤。"}),"\n",(0,r.jsx)(s.p,{children:"此外还可以根据资源的大小来过滤："}),"\n",(0,r.jsx)(s.p,{children:"通过 larger-than 指定 100、300k、2M 等大小的限制，就可以过滤出大小大于这个值的请求。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:g,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"还可以根据请求方式，是 GET、POST 等来过滤："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:f,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"根据是否包含某个响应 header 来过滤："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:m,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"has-response-header:Set-Cookie 过滤出来的就是有设置 cookie 的响应的请求"}),"\n",(0,r.jsx)(s.p,{children:"has-response-header:access-control-allow-origin 过滤出来的就是支持跨域的请求"}),"\n",(0,r.jsx)(s.p,{children:"根据是否包含某个 cookie 来过滤："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:b,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"常用的过滤器主要有这些："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"has-response-header：过滤响应包含某个 header 的请求"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"method：根据 GET、POST 等请求方式过滤请求"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"domain: 根据域名过滤"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"status-code：过滤响应码是 xxx 的请求，比如 404、500 等"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"larger-than：过滤大小超过多少的请求，比如 100k，1M"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"mime-type：过滤某种 mime 类型的请求，比如 png、mp4、json、html 等"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"is：过滤某种状态的请求，比如 from cache 从缓存拿的，比如 running 还在运行的"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"resource-type：根据请求分类来过滤，比如 document 文档请求，stylesheet 样式请求、fetch 请求，xhr 请求，preflight 预检请求"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"cookie-name：过滤带有某个名字的 cookie 的请求"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"当然，这些不需要记，输入一个 - 就会提示所有的过滤器："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:o,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"但是这个减号之后要去掉，它是非的意思："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:j,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"和右边的 invert 选项功能一样。"}),"\n",(0,r.jsx)(s.p,{children:"而且，这些过滤器都可以组合，只要中间加个空格就行。"}),"\n",(0,r.jsx)(s.p,{children:"但是有同学会问了，这些过滤器里好像不支持根据内容过滤呀。"}),"\n",(0,r.jsx)(s.p,{children:"确实，过滤器不支持这个，但是可以自己搜："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:x,alt:""})}),"\n",(0,r.jsxs)(s.h2,{id:"developer-resources",children:["developer resources",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#developer-resources",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"看到 sourcemap 有的同学可能会问，对了，sourcemap 文件为啥在 Network 里看不到呢？"}),"\n",(0,r.jsx)(s.p,{children:"明明会下载 sourcemap 文件，为啥我从来没看到过呢？"}),"\n",(0,r.jsx)(s.p,{children:"其实这个被 Network 过滤掉了，想看到这些文件的请求在另一个地方："}),"\n",(0,r.jsx)(s.p,{children:"点击 show console drawer："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:p,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"打开 developer resources:"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:t,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"就可以看到所有的 sourcemap 请求了："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:h,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"只不过这部分做的很简陋，只能看 sourcemap 文件请求成功、失败之类的。"}),"\n",(0,r.jsxs)(s.h2,{id:"remove-event-listeners",children:["remove event listeners",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#remove-event-listeners",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"element 面板选中元素可以看到这个元素和它的父元素的所有事件监听器："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:l,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"可以手动 remove。"}),"\n",(0,r.jsx)(s.p,{children:"比如你想看下拉菜单的样式，但是鼠标一移开就消失了"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:d,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"这时候你可以删掉这个按钮的 mouseleave 事件的监听器："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:a,alt:""})}),"\n",(0,r.jsx)(s.p,{children:"这样移开鼠标也不会消失了："}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)("img",{src:i,alt:""})}),"\n",(0,r.jsx)(s.h2,{id:"",children:(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#",children:"#"})}),"\n",(0,r.jsxs)(s.h2,{id:"总结",children:["总结",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"这节梳理了比较有用的 Chrome DevTools 小功能，学会这些小功能的使用能提升调试网页的效率。"})]})}function z(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,n.ah)(),e.components);return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(q,{...e})}):q(e)}let I=z;z.__RSPRESS_PAGE_META={},z.__RSPRESS_PAGE_META["%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D%2F35.Chrome%20DevTools%20%E5%B0%8F%E5%8A%9F%E8%83%BD%E9%9B%86%E9%94%A6.md"]={toc:[{text:"reply XHR",id:"reply-xhr",depth:2},{text:"请求定位到源码",id:"请求定位到源码",depth:2},{text:"元素定位到创建的源码",id:"元素定位到创建的源码",depth:2},{text:"group by folder",id:"group-by-folder",depth:2},{text:"Network 自定义展示列",id:"network-自定义展示列",depth:2},{text:"代码手动关联 sourcemap",id:"代码手动关联-sourcemap",depth:2},{text:"filter",id:"filter",depth:2},{text:"developer resources",id:"developer-resources",depth:2},{text:"remove event listeners",id:"remove-event-listeners",depth:2},{text:"",id:"",depth:2},{text:"总结",id:"总结",depth:2}],title:"35.Chrome DevTools 小功能集锦",headingTitle:"35.Chrome DevTools 小功能集锦",frontmatter:{}}}}]);