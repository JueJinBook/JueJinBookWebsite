"use strict";(self.webpackChunkjue_jin_book_press=self.webpackChunkjue_jin_book_press||[]).push([["26216"],{821741:function(e,n,s){s.r(n),s.d(n,{default:()=>g});var t=s(552676),i=s(740453);let l=s.p+"static/image/72d025382173079204cf87b12a06fd99.d7128636.webp",r=s.p+"static/image/37a03fb28191f7181d02ebf5c0ce9a23.25309270.webp",d=s.p+"static/image/c97b323cdc1f09c37ef888a3d9b8e164.4096f295.webp",c=s.p+"static/image/00b4cd0215ac598cfbe80040c75c5194.9ccd6cea.webp",a=s.p+"static/image/92b0908c87b028312cc4fa2998916c47.3b8069fe.webp",p=s.p+"static/image/4c644926dffc425d798f02b2a463877c.2cdc55c8.webp",h=s.p+"static/image/313c562685fced3d9ca7eb35057d0e81.793fc1ca.webp",o=s.p+"static/image/01707ff65d2bb13a10e19e3da3369c50.9ae07d0b.webp",x=s.p+"static/image/2292af62d4afd199266bebe0cd0d67e2.168f3e76.webp",j=s.p+"static/image/f8f8b560a9b0f80d55d0d81c399d5569.6a8725c8.webp",m=s.p+"static/image/46ba8790b95ec9ab5eba1c9c910f423b.e9be352f.webp",v=s.p+"static/image/4404181c897bd9adff2ef9d64da243b5.4951e00d.webp";function f(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",h2:"h2",code:"code",h3:"h3",pre:"pre",img:"img",strong:"strong",ol:"ol",li:"li",ul:"ul"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"10-语法篇--snippets-与-specail-elements",children:["10-语法篇 ❘ Snippets 与 Specail elements",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#10-语法篇--snippets-与-specail-elements",children:"#"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"推荐学习指数：⭐⭐⭐"}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"1-前言",children:["1. 前言",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"本篇我们介绍 Svelte 5 新增的 Snippets 功能，它可以替代 Svelte 4 中原本的插槽功能。"}),"\n",(0,t.jsxs)(n.p,{children:["此外，我们还会介绍 Svelte 中的 Special elements。为什么叫 Specail elements 呢？因为它们的写法类似于普通的 elements，但实现的功能却比较特殊，比如可以修改 HTML ",(0,t.jsx)(n.code,{children:"<head>"})," 的 ",(0,t.jsx)(n.code,{children:"<svelte:head>"}),"、为 HTML ",(0,t.jsx)(n.code,{children:"<body>"})," 添加事件的",(0,t.jsx)(n.code,{children:"<svelte:head>"})," 等等。"]}),"\n",(0,t.jsx)(n.p,{children:"这些也是 Svlete 项目开发中常用的内容。就让我们一起看看如何使用吧！"}),"\n",(0,t.jsxs)(n.h2,{id:"2-snippets",children:["2. Snippets",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-snippets",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Snippets 用于在组件内部创建可复用的代码块。"}),"\n",(0,t.jsxs)(n.h3,{id:"21-使用方法",children:["2.1. 使用方法",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-使用方法",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"假设原本的代码是："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#each images as image}\n  {#if image.href}\n    <a href={image.href}>\n      <figure>\n        <img\n          src={image.src}\n          alt={image.caption}\n          width={image.width}\n          height={image.height}\n        />\n        <figcaption>{image.caption}</figcaption>\n      </figure>\n    </a>\n  {:else}\n    <figure>\n      <img\n        src={image.src}\n        alt={image.caption}\n        width={image.width}\n        height={image.height}\n      />\n      <figcaption>{image.caption}</figcaption>\n    </figure>\n  {/if}\n{/each}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["先通过 ",(0,t.jsx)(n.code,{children:"#snippet"})," 声明可复用的代码片段："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#snippet figure({ src, caption, width, height })}\n  <figure>\n    <img alt={caption} {src} {width} {height} />\n    <figcaption>{caption}</figcaption>\n  </figure>\n{/snippet}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["再通过 ",(0,t.jsx)(n.code,{children:"@render"})," 标签指定渲染的位置和依赖值："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#each images as image}\n  {#if image.href}\n    <a href={image.href}>\n      {@render figure(image)}\n    </a>\n  {:else}\n    {@render figure(image)}\n  {/if}\n{/each}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte-5-preview.vercel.app/#H4sIAAAAAAAAE5VTYW-bMBD9KyeiKYlEY4jWfSAk2n5H6QcXDmwVbMs2SzuL_z6DTRqp2rQJ2Ycfd_ced2eXtLxHkxRPLhF0wKRIfiiVpIl9V_PB_MTeoj8bOep6RkpTa67spRKV7dECH2iHBs7wNCOVdcFU1ui6gC2zVpmCEMVrMw4HxaSVhnzLMnLMsm26Ol95Y1kBHr9BDHnHbAHHO6ymynIpfF7LuAncwKgBCj0Xrx_5mMb2jh3f6KB6PNRy2AaXKf1fuY__KPfxj3KlQGikL5aQdpUxm-dTJUryUVdRsvwSqEviX2fIbYzgSvmCt7wbNe4ceMUpRIoUFkkpBBkw7ZfMZXC-BLKSDx3Q3p5djJrA-SR-X4K9DdHT6u-jo-flFlKSO3ThIDcSR6LIKUhGWrN1QGhs16LLbXgbjoe5U1PkozCfzu7uy2WtpfuuUTSo1_9ffPZrJKGLoyuwNxjBv0Q4wmdSR2aFi9jS2Pc-FIrlEKeilcI-GP4LfVtxOM1gyO1XSLp6vtD6tdNyFE0BV8YtngKuaNNw0RWQx_jKDlR33M9E5h-PQhZxfxEt6gIaLdWDYbSR191RvcFXv_LMb7p7obssXZ5Dvt_f9HgzdzZKibOZZ9mXmHkdTTpaefqsd4OIay4_hksd_I0fZMNbjk1SWD3i9Dz9BpdEPu8sBAAA",title:"https://svelte-5-preview.vercel.app/#H4sIAAAAAAAAE5VTYW-bMBD9KyeiKYlEY4jWfSAk2n5H6QcXDmwVbMs2SzuL_z6DTRqp2rQJ2Ycfd_ced2eXtLxHkxRPLhF0wKRIfiiVpIl9V_PB_MTeoj8bOep6RkpTa67spRKV7dECH2iHBs7wNCOVdcFU1ui6gC2zVpmCEMVrMw4HxaSVhnzLMnLMsm26Ol95Y1kBHr9BDHnHbAHHO6ymynIpfF7LuAncwKgBCj0Xrx_5mMb2jh3f6KB6PNRy2AaXKf1fuY__KPfxj3KlQGikL5aQdpUxm-dTJUryUVdRsvwSqEviX2fIbYzgSvmCt7wbNe4ceMUpRIoUFkkpBBkw7ZfMZXC-BLKSDx3Q3p5djJrA-SR-X4K9DdHT6u-jo-flFlKSO3ThIDcSR6LIKUhGWrN1QGhs16LLbXgbjoe5U1PkozCfzu7uy2WtpfuuUTSo1_9ffPZrJKGLoyuwNxjBv0Q4wmdSR2aFi9jS2Pc-FIrlEKeilcI-GP4LfVtxOM1gyO1XSLp6vtD6tdNyFE0BV8YtngKuaNNw0RWQx_jKDlR33M9E5h-PQhZxfxEt6gIaLdWDYbSR191RvcFXv_LMb7p7obssXZ5Dvt_f9HgzdzZKibOZZ9mXmHkdTTpaefqsd4OIay4_hksd_I0fZMNbjk1SWD3i9Dz9BpdEPu8sBAAA",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:v,alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"注意：与函数声明一样，snippets 可以具有任意数量的参数，参数可以有默认值。但不能使用剩余参数（rest parameters）。"})}),"\n",(0,t.jsxs)(n.h3,{id:"22-使用范围",children:["2.2. 使用范围",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-使用范围",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Snippets 可以声明在组件的任何位置，且可以引用 Snippets 之外的值，比如在 ",(0,t.jsx)(n.code,{children:"<script>"})," 或 ",(0,t.jsx)(n.code,{children:"{#each ...}"}),"中的值："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n  let { message = `it's great to see you!` } = $props();\n<\/script>\n\n{#snippet hello(name)}\n  <p>hello {name}! {message}!</p>\n{/snippet}\n\n{@render hello('alice')}\n{@render hello('bob')}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Snippets 的引用遵循词法规则。所谓词法规则，以 JavaScript 为例："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"(function () {\n  function a() {\n    function b() {}\n    // ✅\n    b();\n  }\n  // ❌\n  b();\n})();\n\n// ❌\na();\n"})}),"\n",(0,t.jsx)(n.p,{children:"换成 Snippts 也是一样的："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<div>\n  {#snippet x()}\n    {#snippet y()}...{/snippet}\n\n    \x3c!-- ✅ --\x3e\n    {@render y()}\n  {/snippet}\n\n  \x3c!-- ❌ --\x3e\n  {@render y()}\n</div>\n\n\x3c!-- ❌ --\x3e\n{@render x()}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["简单来说，",(0,t.jsx)(n.code,{children:"#snippet"})," 相当于函数声明，",(0,t.jsx)(n.code,{children:"@render"})," 相当于调用。Snippets 只对同级兄弟姐妹以及同级兄弟姐妹的子级们可见。"]}),"\n",(0,t.jsx)(n.p,{children:"Snippets 可以相互引用，甚至可以引用自己："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#snippet blastoff()}\n  <span>\uD83D\uDE80</span>\n{/snippet}\n\n{#snippet countdown(n)}\n  {#if n > 0}\n    <span>{n}...</span>\n    {@render countdown(n - 1)}\n  {:else}\n    {@render blastoff()}\n  {/if}\n{/snippet}\n\n{@render countdown(10)}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte-5-preview.vercel.app/#H4sIAAAAAAAAE2WPTQqDMBCFrxLiRqH1Zysi7TlqF1YnENBJSGJLCYGeo5tesUeosfYH3c2bee_jjaWMd6BpfrAU6x5oTvdS0g01V-mFPkNnYNRaDKrxGxto5FKCIaeu1kYwFkauwsoUWtZYPh_3W5FMY4U2mb3egL9kIwY0rbhgiO-sDTgjSEqSTvIDs-jiOP7i_MHuFGAL6p9BtiSbOTl0GtzCuihqE87cqtyam6WRGz_vRcsZh5bmRg3gju4Fptq_kzQBAAA=",title:"https://svelte-5-preview.vercel.app/#H4sIAAAAAAAAE2WPTQqDMBCFrxLiRqH1Zysi7TlqF1YnENBJSGJLCYGeo5tesUeosfYH3c2bee_jjaWMd6BpfrAU6x5oTvdS0g01V-mFPkNnYNRaDKrxGxto5FKCIaeu1kYwFkauwsoUWtZYPh_3W5FMY4U2mb3egL9kIwY0rbhgiO-sDTgjSEqSTvIDs-jiOP7i_MHuFGAL6p9BtiSbOTl0GtzCuihqE87cqtyam6WRGz_vRcsZh5bmRg3gju4Fptq_kzQBAAA=",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:m,alt:""})}),"\n",(0,t.jsxs)(n.h3,{id:"23-取代插槽",children:["2.3. 取代插槽",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23-取代插槽",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"在模板中，Snippets 和其他值其实是一样的，所以 Snippets 也可以作为值传给组件："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Button from './Button.svelte'\n<\/script>\n\n{#snippet blastoff()}\n  <span>\uD83D\uDE80</span>\n{/snippet}\n\n<Button {blastoff} />\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  let { blastoff } = $props();\n<\/script>\n\n{@render blastoff()}\n"})}),"\n",(0,t.jsx)(n.p,{children:"我们看下编译后的内容就明白了："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:j,alt:""})}),"\n",(0,t.jsxs)(n.p,{children:["为了方便，",(0,t.jsx)(n.strong,{children:"声明在组件内部的 snippets 会隐式作为 props 传给组件"}),"。所以："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#snippet blastoff()}\n  <span>\uD83D\uDE80</span>\n{/snippet}\n\n<Button {blastoff} />\n\n\x3c!-- 等同于 --\x3e\n\n<Button>\n  {#snippet blastoff()}\n    <span>\uD83D\uDE80</span>\n  {/snippet}\n</Button>\n"})}),"\n",(0,t.jsx)(n.p,{children:"可以看出，Snippets 用在组件内部的时候，作用类似于 Svelte 4 的命名插槽功能。"}),"\n",(0,t.jsx)(n.p,{children:"Snippets 用在组件内部的时候，也可以不进行 snippets 声明。如果不进行声明，会隐式成为 children 代码段的一部分："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Button from './Button.svelte'\n<\/script>\n\n<Button>\n  <span>\uD83D\uDE80</span>\n</Button>\n\n\x3c!-- Button.svelte --\x3e\n<script>\n  let { children } = $props();\n<\/script>\n\n{#if children}\n  {@render children()}\n{/if}\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"注意：组件的 props 避免命名为 children。倒不是不能用，只是可能会发生冲突。"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"24-type",children:["2.4. Type",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24-type",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Svelte 提供了 Snippets 类型："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script lang=\"ts\">\n  import type { Snippet } from 'svelte';\n\n  let { children } : { children: Snippet } = $props();\n<\/script>\n"})}),"\n",(0,t.jsx)(n.p,{children:"总结一下：Snippets 通过复用代码片段，可以完全替代 Svelte 4 的插槽和命名插槽等功能。Snippets 功能更加强大、使用更加灵活。在 Svelte 5 中，插槽已被弃用，但依然可以继续工作。"}),"\n",(0,t.jsxs)(n.h2,{id:"3-特殊元素",children:["3. 特殊元素",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-特殊元素",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"31-sveltecomponentlegacy",children:["3.1. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:component"}),"（Legacy）",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-sveltecomponentlegacy",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:component>"}),"解决的是动态组件的问题，根据条件渲染不同的组件："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"\x3c!-- App.svelte --\x3e\n<script>\n  import Foo from './Foo.svelte'\n  import Bar from './Bar.svelte'\n\n  let count = 0;\n<\/script>\n\n<button on:click={() => {\n  count += 1;\n}}>\n  Clicked {count}\n</button>\n\n{#if count > 3}\n  <Foo {count} />\n{:else}\n  <Bar {count} />\n{/if}\n\n\x3c!-- Foo.svelte --\x3e\n<script>\n  export let count\n<\/script>\n\nFoo {count}\n\n\x3c!-- Bar.svelte --\x3e\n<script>\n  export let count\n<\/script>\n\nBar {count}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["使用 ",(0,t.jsx)(n.code,{children:"<svelte:component>"}),"，原本的："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"{#if count > 3}\n  <Foo {count} />\n{:else}\n  <Bar {count} />\n{/if}\n"})}),"\n",(0,t.jsx)(n.p,{children:"可以简化为："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<svelte:component this={count > 3 ? Foo : Bar} {count} />\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/6c470fdfce8643da866afe437aae7922?version=4.2.18",title:"https://svelte.dev/repl/6c470fdfce8643da866afe437aae7922?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:x,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"使用时注意："}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"当 this 的值为假值（false、null、undefined 等）时，组件不会渲染"}),"\n",(0,t.jsx)(n.li,{children:"当属性值更改的时候，组件会销毁重建"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"注：在 Svelte 5 中，这个例子可以写成："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n    import Foo from './Foo.svelte'\n    import Bar from './Bar.svelte'\n\n    let count = $state(0);\n\n    let Component = $derived(count > 3 ? Foo : Bar)\n<\/script>\n\n<button onclick={() => {\n    count += 1;\n}}>\n    Clicked {count}\n</button>\n\n<Component {count} />\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://svelte.dev/playground/2e4ce15d36d44109aa87f1d1338935f0?version=5.1.3",title:"https://svelte.dev/playground/2e4ce15d36d44109aa87f1d1338935f0?version=5.1.3",target:"_blank",rel:"noopener noreferrer",children:"点击查看浏览器效果"}),"。"]}),"\n",(0,t.jsx)(n.p,{children:"因此虽然可以继续使用，但在 Svelte 5 中该语法被认为是过时的。"}),"\n",(0,t.jsxs)(n.h3,{id:"32-svelteelement",children:["3.2. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:element"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-svelteelement",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:element>"}),"与 ",(0,t.jsx)(n.code,{children:"<svelte:component>"}),"类似，只不过解决的是动态元素的问题："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<script>\n  let count = 0;\n<\/script>\n\n<button on:click={() => {\n  count += 1;\n}}>\n  Clicked {count}\n</button>\n\n<svelte:element this={count > 3 ? "h1" : "p"}>{count}</svelte:element>\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/b38580c52b88469fbab7435190920c08?version=4.2.18",title:"https://svelte.dev/repl/b38580c52b88469fbab7435190920c08?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:o,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"使用时注意："}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"当 this 的值为假值（false、null、undefined 等）时，元素及其子元素都不会渲染"}),"\n",(0,t.jsxs)(n.li,{children:["不能使用 bind:value 等绑定，因为 Svelte 并不知道你最终渲染的元素是什么，如果是 input 还好，万一只是一个普通的 div 呢，所以唯一支持的绑定是 ",(0,t.jsx)(n.code,{children:"bind:this"})]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"33-sveltewindow",children:["3.3. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:window"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-sveltewindow",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:window>"})," 用于在 window 对象上添加事件监听器。"]}),"\n",(0,t.jsx)(n.p,{children:"通常我们需要这样写代码："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n  import { onMount } from 'svelte';\n\n  let innerWidth = window.innerWidth;\n\n  onMount(() => {\n    function onResize() {\n      innerWidth = window.innerWidth;\n    }\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  });\n<\/script>\n\n<div>\n  Width: {innerWidth}\n</div>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["这里一段监听浏览器窗口宽度的代码。",(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/930a0ce858564a6da1c4dff978b5d6bf?version=4.2.18",title:"https://svelte.dev/repl/930a0ce858564a6da1c4dff978b5d6bf?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:h,alt:""})}),"\n",(0,t.jsxs)(n.p,{children:["我们需要在组件挂载的时候添加监听器，在组件卸载的时候移除监听器。使用 ",(0,t.jsx)(n.code,{children:"<svelte:window>"}),"后，代码简化为："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n  import { onMount } from 'svelte';\n\n  let innerWidth = window.innerWidth;\n\n  function onResize() {\n    innerWidth = window.innerWidth;\n  }\n<\/script>\n\n<svelte:window on:resize={onResize} />\n\n<div>\n  Width: {innerWidth}\n</div>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:window>"})," 会自动进行处理监听器的添加和移除。"]}),"\n",(0,t.jsxs)(n.p,{children:["Svelte 甚至提供了 ",(0,t.jsx)(n.code,{children:"<svelte:window bind:prop={value} />"}),"的方式，可以将代码进一步简化为："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n  import { onMount } from 'svelte';\n\n  let innerWidth = window.innerWidth;\n\n<\/script>\n\n<svelte:window bind:innerWidth={innerWidth} />\n\n<div>\n  Width: {innerWidth}\n</div>\n"})}),"\n",(0,t.jsx)(n.p,{children:"具体能够绑定获取哪些属性的值，Tutorial 中也有介绍："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:p,alt:""})}),"\n",(0,t.jsxs)(n.h3,{id:"34-sveltebody",children:["3.4. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:body"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-sveltebody",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"svelte:body 与 svelte:window 类似，用于在 document.body 上添加事件监听器。因为像比如 mouseenter 和 mouseleave 事件在 window 上就不能添加。"}),"\n",(0,t.jsxs)(n.h3,{id:"35-sveltedocument",children:["3.5. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:document"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#35-sveltedocument",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"svelte:document 与 svelte:window 类似，用于在 document 上添加事件监听器。因为像比如 visibilitychange 不能在 window 上触发。"}),"\n",(0,t.jsxs)(n.h3,{id:"36-sveltehead",children:["3.6. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:head"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#36-sveltehead",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["svelte:head 用于将元素插入到 ",(0,t.jsx)(n.code,{children:"document.head"}),"中："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<svelte:head>\n  <title>Hello world!</title>\n\n  <meta name="description" content="This is where the description goes for SEO" />\n</svelte:head>\n'})}),"\n",(0,t.jsx)(n.p,{children:"你可以在其中正常使用变量："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<script>\n  let value = \'world\'\n<\/script>\n\n<input bind:value />\n\n<svelte:head>\n  <title>Hello {value}!</title>\n\n  <meta name="description" content="This is where the description goes for SEO" />\n  {@html `<style>\n    input {\n      color: red\n    }\n  </style>`}\n</svelte:head>\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/5d329da2f8d54c5696b354459052b8fd?version=4.2.18",title:"https://svelte.dev/repl/5d329da2f8d54c5696b354459052b8fd?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:a,alt:""})}),"\n",(0,t.jsxs)(n.p,{children:["与 ",(0,t.jsx)(n.code,{children:"<svelte:window>"})," 一样，该元素只能出现在组件的顶层，绝不能位于块或元素内。"]}),"\n",(0,t.jsxs)(n.h3,{id:"37-svelteoptions",children:["3.7. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:options"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#37-svelteoptions",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/",children:"svelte:options"})," 提供了组件的编译选项，将决定 Svelte 如何编译组件。完整的选项查看 ",(0,t.jsx)(n.a,{href:"https://svelte.dev/docs/svelte/svelte-options",title:"https://svelte.dev/docs/svelte/svelte-options",target:"_blank",rel:"noopener noreferrer",children:"Svelte Options"}),"。"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"runes={true}"}),"：强制进入符文模式"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"runes={false}"}),"：强制进入 legacy 模式"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'namespace="..."'}),"：组件命名空间，值有 ",(0,t.jsx)(n.code,{children:"html"}),"、",(0,t.jsx)(n.code,{children:"svg"}),"、",(0,t.jsx)(n.code,{children:"mathml"}),"，默认是 ",(0,t.jsx)(n.code,{children:"html"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customElement={...}"}),"：将此组件编译为",(0,t.jsx)(n.a,{href:"https://svelte.dev/docs/svelte/custom-elements",title:"https://svelte.dev/docs/svelte/custom-elements",target:"_blank",rel:"noopener noreferrer",children:"自定义元素"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'css="injected"'}),"：组件会将样式内联注入，在服务端渲染时，作为 ",(0,t.jsx)(n.code,{children:"<style>"})," 标签注入 head 中，在客户端渲染时，将通过 JavaScript 渲染"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["关于 ",(0,t.jsx)(n.code,{children:"namespace"}),"，其实就是告诉 Svelte 应该编译成什么。默认是 html，也就是说告诉 Svelte 我写的是 HTML，但也可以告诉 Svelte 我写的是 svg："]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:c,alt:""})}),"\n",(0,t.jsxs)(n.p,{children:["当使用 ",(0,t.jsx)(n.code,{children:'<svelte:options namespace="svg" />'}),"时："]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:d,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"Svelte 会改为创建 Svg 元素。"}),"\n",(0,t.jsxs)(n.p,{children:["关于 ",(0,t.jsx)(n.code,{children:"customElement"}),"，用于将组件编译为自定义的元素："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<svelte:options customElement="my-custom-element" />\n'})}),"\n",(0,t.jsx)(n.p,{children:"这个时候就可以使用："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"document.body.innerHTML = `\n  <my-element>\n    <p>This is some slotted content</p>\n  </my-element>\n`;\n"})}),"\n",(0,t.jsx)(n.p,{children:"不算是常用的功能，但展示了编译器的强大功能。"}),"\n",(0,t.jsxs)(n.h3,{id:"38-sveltefragmentlegacy",children:["3.8. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:fragment"}),"（Legacy）",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#38-sveltefragmentlegacy",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:fragment>"})," 用于将内容放置在命名插槽中，而无须包装在 DOM 元素中，类似于 React 的 ",(0,t.jsx)(n.code,{children:"<></>"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'\x3c!-- App.svelte --\x3e\n<Widget>\n  <h1 slot="header">Hello</h1>\n\n  <svelte:fragment slot="footer">\n    <p>All rights reserved.</p>\n\n    <p>Copyright (c) 2019 Svelte Industries</p>\n\n  </svelte:fragment>\n\n</Widget>\n\n\x3c!-- Widget.svelte --\x3e\n<div>\n  <slot name="header">No header was provided</slot>\n\n  <p>Some content between header and footer</p>\n\n  <slot name="footer" />\n</div>\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/b2152b8d753b4c87824d4132a6387346?version=4.2.19",title:"https://svelte.dev/repl/b2152b8d753b4c87824d4132a6387346?version=4.2.19",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:r,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"注：在 Svelte 5 中使用 Snippets 即可，因此该语法虽然可以继续使用，但被认为是过时的"}),"\n",(0,t.jsxs)(n.h3,{id:"39-svelteselflegacy",children:["3.9. ",(0,t.jsx)(n.a,{href:"/",children:"svelte:self"}),"（Legacy）",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#39-svelteselflegacy",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<svelte:self>"})," 允许组件以递归的方式包含自身，主要是用来处理递归。场景倒很多，就是一不小心容易写成无限循环。就比如渲染城市数据："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n  export let data = [\n    { type: 'city', value: '北京'},\n    {\n      type: 'province',\n      value: '浙江',\n      children: [\n        { type: 'city', value: '杭州'},\n        { type: 'city', value: '宁波'}\n      ]\n    }\n  ];\n<\/script>\n\n  <ul>\n    {#each data as item}\n      <li>\n        {#if item.type === 'province'}\n          {item.value}\n          <svelte:self data={item.children} />\n        {:else if item.type === 'city'}\n          <span>{item.value}</span>\n\n        {/if}\n      </li>\n\n    {/each}\n  </ul>\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://svelte.dev/repl/2fca66addb9348da8f78ea995415cf78?version=4.2.18",title:"https://svelte.dev/repl/2fca66addb9348da8f78ea995415cf78?version=4.2.18",target:"_blank",rel:"noopener noreferrer",children:"浏览器效果如下："})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)("img",{src:l,alt:""})}),"\n",(0,t.jsx)(n.p,{children:"使用时注意："}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"不能用在顶层，只能用在 IF、Each 块或者组件插槽中，这都是为了防止无限循环"}),"\n",(0,t.jsx)(n.li,{children:"注意使用 export 才能在递归的时候获取数据"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"注：在 Svelte 5 中，这个例子可以写成："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<script>\n    import Self from './App.svelte'\n  export let data = [\n    { type: 'city', value: '北京'},\n    {\n      type: 'province',\n      value: '浙江',\n      children: [\n        { type: 'city', value: '杭州'},\n        { type: 'city', value: '宁波'}\n      ]\n    }\n  ];\n<\/script>\n\n<ul>\n    {#each data as item}\n    <li>\n        {#if item.type === 'province'}\n            {item.value}\n            <Self data={item.children} />\n        {:else if item.type === 'city'}\n            <span>{item.value}</span>\n\n        {/if}\n    </li>\n\n    {/each}\n</ul>\n"})}),"\n",(0,t.jsx)(n.p,{children:"因此虽然可以继续使用，但在 Svelte 5 中该语法被认为是过时的。"}),"\n",(0,t.jsxs)(n.h2,{id:"4-最后",children:["4. 最后",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-最后",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"本篇我们介绍了 Snippets 和特殊元素的用法，插槽在 Svelte 5 中可被 Snippets 替代。特殊元素不算常用，但有时很有必要，所以了解即可，用到的时候再细查用法。"})]})}function u(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}let g=u;u.__RSPRESS_PAGE_META={},u.__RSPRESS_PAGE_META["Svelte%20%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%2F10-%E8%AF%AD%E6%B3%95%E7%AF%87%20%E2%9D%98%20Snippets%20%E4%B8%8E%20Specail%20elements.md"]={toc:[{text:"1. 前言",id:"1-前言",depth:2},{text:"2. Snippets",id:"2-snippets",depth:2},{text:"2.1. 使用方法",id:"21-使用方法",depth:3},{text:"2.2. 使用范围",id:"22-使用范围",depth:3},{text:"2.3. 取代插槽",id:"23-取代插槽",depth:3},{text:"2.4. Type",id:"24-type",depth:3},{text:"3. 特殊元素",id:"3-特殊元素",depth:2},{text:"3.1. svelte:component（Legacy）",id:"31-sveltecomponentlegacy",depth:3},{text:"3.2. svelte:element",id:"32-svelteelement",depth:3},{text:"3.3. svelte:window",id:"33-sveltewindow",depth:3},{text:"3.4. svelte:body",id:"34-sveltebody",depth:3},{text:"3.5. svelte:document",id:"35-sveltedocument",depth:3},{text:"3.6. svelte:head",id:"36-sveltehead",depth:3},{text:"3.7. svelte:options",id:"37-svelteoptions",depth:3},{text:"3.8. svelte:fragment（Legacy）",id:"38-sveltefragmentlegacy",depth:3},{text:"3.9. svelte:self（Legacy）",id:"39-svelteselflegacy",depth:3},{text:"4. 最后",id:"4-最后",depth:2}],title:"10-语法篇 ❘ Snippets 与 Specail elements",headingTitle:"10-语法篇 ❘ Snippets 与 Specail elements",frontmatter:{}}}}]);